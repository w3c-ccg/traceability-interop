{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "37d060db-a251-4840-92d8-9ab46eadd723",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6983df41-40aa-4a05-b8ce-70f57fdebedb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4672eb6-7ad0-44af-a361-83aa4eb066b8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3bdaf628-c753-45a2-a449-d58e96e4292f"
                }
              }
            ]
          },
          {
            "id": "3d256017-3c2f-482f-9c0d-e8752af09e39",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "328fe3a2-fd90-49b3-88ec-32031be76dd9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9ab73be1-81a0-4768-adf2-3089adc542d3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "14d8bfe3-3de6-4470-bd87-661165844a9e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "793eebfd-4258-419d-a97e-d45d2f51c7fa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d967b1e8-0a86-4fdd-b825-9bd69c550187",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07d5cb2b-baba-46ea-9d5e-496292333379",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2dc1b14-7490-4b35-8439-aec2f0203a5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf3edc98-69e2-4992-aab2-5fceb9ea36cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "847e3227-f371-40fc-a42e-7dd470028422"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b53f879-d385-46bf-9b3c-7a80348d25c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbd3a79e-bda9-4a6b-bb58-e06992acf38e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1c7d0b5-ce86-490a-91d4-6e6eaa57c0ac",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e45f1e6a-6554-4533-a601-59ba9e395920"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c121fde-0145-4bda-8bbe-41e6dbd77b0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebfab58a-d1ee-4cb6-959e-8582539a7773"
            }
          }
        ]
      },
      {
        "id": "4dc00db4-91ed-4f6e-8cbe-de7014cea473",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6d3438b5-0687-41c5-a48d-67870965294f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c4c39d0-bda9-44fc-ac00-a38d57e34996",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "92288998-eaef-45e2-9278-f1d6303c97a4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b48195a-0ef3-4513-9ae3-dd3620aab068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91117530-6005-4019-a0d2-dd341c706e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233f77e8-d564-4d91-b10b-cee05ef8ceb9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9c65f9-ee8e-4715-86d8-38f37cd48137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a118018e-b5bc-404b-9309-e7f1b3324c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43fb56f-acbd-40df-98f0-682462b0c4f1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb3ee87-0542-47f3-993b-f1db0650621b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30835da9-f789-4656-b9d2-7a080c7d8ff5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "63ca862e-f773-43eb-95ce-c75deca40657",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72f19436-fc68-437f-af28-bfc70029a5f1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bf2f57-8316-4dcb-b47b-ab319f542f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5be5ce9c-7b3f-427b-acf4-e7ea5ffa8f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009bc509-e231-45d4-b455-df63c4da0660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d671057f-ae76-4599-82f6-1335d1406a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bdcad0-3aab-4645-87e0-abf4c01bdfa2",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d834b1de-7cf2-4b21-ac89-d2e370a30c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5945fca1-9104-45ed-916e-dfcb377e30d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47615189-da0c-4c66-894c-1d813ccf8c18",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "77f60a39-09bc-455c-8647-49e6d93e4c58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c71c0422-490a-4451-b6e1-885a9a66cd5f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c18d9199-6a34-4046-90d2-e1228f1ce98a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a800d11a-18d1-4bf0-80cb-afd9fa936d57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b11315f4-79b8-48ea-b5bc-53fa970ecb41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f689646-247a-46f7-8439-d2e1793c5a28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "808618f9-b1c7-4397-b6be-b30e7b9aaa35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43fe8dd5-0096-4993-ba08-c21eefe7fad1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2713d1b0-ee30-4ab2-9bf4-3a41ba66c5cb"
            }
          }
        ]
      },
      {
        "id": "a66ae00c-c935-4316-a9d5-2b9a6fdeec14",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "55887634-7dc6-41d5-b84e-3ec8967cb032",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f207efdd-b655-46ca-89e6-7b3d35542029",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "35e36f97-4e03-4f06-b9c0-6e1e343cec72",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e22eca6-9691-48f4-b323-ad0b0e60a9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31e581b-41ab-4084-80e3-6b2a238d836f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2f4dfc-bf36-4ec2-8439-b58d2c9bfaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "200745a8-5391-4675-abd1-6f8899d2af84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad4cfd-9fae-49e1-856d-bce5084137c7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5392713d-499d-4fa9-9c70-a3132e0ffe0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5500fc-a331-4689-9dc5-abd68d4f05bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccb7c39-6eae-4c26-aa72-009c70e20992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be075ed5-dd29-4633-9f50-64a381319d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3af0c3-6acb-48c7-899b-7fb126136539",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cec9de3-bd34-4683-843a-ada452869f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9232c93-f091-45bd-adc2-6ab360714963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0096596-62f9-4589-b58e-d81747738d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2aba791c-5056-4a6b-9030-356d3c991834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6b8648-7051-42b7-8e0e-d5f2a6dfbc8c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d60cd81-0c20-4118-a157-29c45b227c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92749da-b87a-4314-aa6c-4c0376833812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb007ec4-6a2e-4164-90bc-91ec23ab4672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b0670c4-24fb-4f81-840e-7734382be9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92ed49c-2b62-4c2c-bf28-3f17ad848942",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc7e0de-8d3b-4195-a607-527651d17c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ccc98d-4e47-4c8e-b745-3bc91fc04842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26c51ca-46f5-4bc6-a23e-fdb82e9d7ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17b37f04-6654-4db4-9621-a986222e9877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c3c437-2756-4c9b-b5a9-3d621c1875ed",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09011987-392b-472d-9e08-87d52af9b720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e8e2be-9e1e-4b02-baf0-4568c3b3b6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758d6d74-99a4-44cf-9b56-6f05c5601fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8b56137-782f-4c0d-939e-872bd87977d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895ebcaa-e560-4975-a4e2-d3a76b8a202e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dac2f9-e7ba-45b5-9c27-f0d47d2baa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc47c4d-df9f-414e-b52b-603808998194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36dc681-8732-4487-a393-bb1a09fd280c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45346c4a-3804-4998-a499-7b92dbd99a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9efe4d-e271-479c-81af-24f7b47af3b4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36628679-7a08-4abf-8e24-cb47bb86e524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a315e584-37da-43ff-9c18-02d41470b751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32747147-e3d4-4f74-95bd-54b5cabc784e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a5d7384-ee3c-4f8c-91e8-77afc33515c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734b86a7-9720-47d9-9276-64db21def691",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df4a933-4ab2-421d-9a95-111bd0bc5711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a20d705-8c3f-4112-bb00-08cff3f7e8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f14fbf9-6780-4024-8070-feab7ee23f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebcf3413-70fa-4a7c-9780-febdd42819ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde02030-9938-40ae-b646-44c822291504",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8f4022-c8a1-4b81-845c-729e65c6daf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571aec16-4841-4d99-8f97-f9ee5811443e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53d95bf-2d45-4abc-b6eb-4fc0e4fe9926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06c3641d-7d9e-4336-98f9-fab815d770fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05abb09-b538-418d-8ab0-df21a9951dc3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c78575-5d1a-434c-9817-31f27293766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632b6dfe-acd4-4c1e-9af0-e22d644b64b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3553b0d7-5cca-4f8c-9822-12e44824299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9b8aa2a-ecc4-4b21-bcaa-b7082271517c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385c9649-2328-4fab-94c5-995b48b083fd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bfee97-15f5-46e8-a92a-9e4684ceb692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e0cab2-3f2c-4866-89d5-8eaf4bf88421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab73cd19-9e08-4236-815a-179c91fcb9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d29e88e-044f-437e-b948-b5f7eecee76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83339748-9778-4f3a-b1ea-b26d9ee5a12b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63b17bf-d10a-436a-b99b-4000e5c5c1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a18223-3eb8-4c0b-be72-4ac7f3de85e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0395ba55-0a23-48d9-930d-11684e09b091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7888673-45be-45ce-8e26-13c2525843a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f8a2a3-1054-4e64-944b-97e07e09bdf1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7be38fb-e5f3-461f-8439-075d294f2b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a6d697-088d-4465-bf97-79915956ce58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ced39ab-51a5-4a6c-b75c-15bba1717337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4738985-9f62-47de-a41f-f795bbfae9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23632f58-4e0a-4827-ae56-2d81f4f96a19",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5605d2dd-5744-425f-b5d8-d83ab62efc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16d3340-c5ce-4d0f-a8ae-4ec0cc1d686a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f4fa4a-18b6-4fe3-bd30-524e6257c41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c19b5d0-91c5-44ef-b0aa-66d2d7e187b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0747fd49-ae0f-4dde-a6b8-50a6abafe5a3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0cc8fd-e658-423a-8c6b-d038d1b13be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd9a9c7-60ee-46ca-89ae-9eb2715510a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fd0073-fdbc-48ea-b552-b6663ce4d089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "075e400f-a21f-46d4-97f4-1d9a3bc4a636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b76ea7-8bbe-44e9-9a48-a4d81d4027e8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8ffcd4-a4da-425c-a8d3-bf30673f5241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ae8c26-7887-4e4a-a276-95be31f4c0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b185ece-5ff6-4449-95cd-2c9995841ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad053c7e-c083-43d1-bc24-70b122886106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa8312a-3ee5-41a8-89cd-863b0d43d672",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48ae68e-94f7-4ee5-8234-a1933fe73f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519c1e99-ab79-449e-899e-d72006784600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fccde58-7b42-430b-a3e7-f17e0b68ee97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "95598b95-4581-4916-906f-4b6b8ab9f899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec415ac4-0106-4ea7-a77a-682f79b7b09c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f2b253-09ae-4729-939c-9f25e7947a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ea1a5b-36b6-4580-8f1b-58929322204d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a64984-9aac-4f25-b24c-9446f02953c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf570043-b830-4d39-a4bb-c5ba373bf00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df705ac-dbf1-4157-af26-c6da02bb4f5a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4775cbb-637f-4b81-ba67-4e6466218504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb3e4f8-42aa-45f8-b9ef-1a0cfd4af19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec47f4ad-bf18-49b9-8c9a-3ed37a0c91ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c08dd143-3081-485e-befe-9a6e07a0b0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc82106a-aac2-4161-9093-7575aebb4ecc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca6200b-6f78-4e9d-b652-32add27173a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba833d0-271c-46ff-bd4f-0ffb226f5d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495b90c7-0330-459c-8924-3be018bfd7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef97b2d-c82c-438b-8aab-1e55c01895de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181aff69-e653-4ca0-a740-95e669bd7510",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a9342a-3764-4641-9f67-7e1a8ca78c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397c10f5-6773-41b2-8340-c6c063371e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cc7cf6-8d65-4e55-9c4f-b4f7abb7c356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a73c6b57-c7bd-4e19-a6aa-2b577bf4553a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78012bf6-968b-462b-9ffb-9776015354a1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cdb1be-cdb9-4929-948b-645466ce830d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ba418d-1970-4ddf-b4af-80b1f4d1c363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6e8897-46a9-42b8-948e-b5fd8c8d87be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a38e1ec-6da1-4c04-90b6-1e674a586db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb35d9f-f8b7-4d3e-b66e-72c5aa4fbed6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e055c6-9fe4-473e-9e32-8387cca9eb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f291e70-b7a5-491d-aa53-720fcce03705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bd3246-4851-4298-8db0-552feb7ae0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "766de2a3-5394-4c27-b31d-af5749702fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42f7d43-7339-40fb-92c0-e1d535e3d462",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aadc88e-6331-4757-9ba2-e54794c8c997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7759b55a-4c0e-452c-851d-701a136a0b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a3b8a2-6382-45b9-816f-3ec36cb7172b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b380e940-4afa-416f-9d00-0fd1cf64b333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f56deb-4717-4971-b4ce-30e5eb536cd0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f05362b-fcaf-4dc6-880c-93dca528db1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217b4b04-57a8-4d88-a3a8-b75cfeeb6fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb030c30-2db9-4967-a419-de73cc36acb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4a97e0-184d-4f00-875a-0d46d65946b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843ea51d-15aa-45aa-bce2-e7b3824daf08",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33552ef-39a8-45e0-88b4-45ba73e959a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d19d1b-0d7e-4c6a-83e5-4e1b8111e515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cb719a-1636-4a07-a866-18dccd4eba9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca3d3f9-5383-4a69-997b-fc953b41942f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c138d434-7292-405d-b6f2-4c49f96577fe",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a22f65f-a06e-4040-8fb7-bd1961164d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2be642-8531-4185-ac12-44d0b3378c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ac5207-4358-429d-8d46-edc05afcfd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e23d790c-a14d-4ae5-9b21-ebb44aaf2108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24046309-37a8-42e9-b318-c9a1a1320f89",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50759750-852e-45cf-8643-d221772d821b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080d6bf4-084c-46a8-85b5-cf67ec5419e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ec1658-d338-4a18-bc0a-6240e4f6f608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f036df33-19da-4175-83e9-edebfb664c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ac1b12-2013-4712-bc33-5682f4011c0f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81524be-ae3b-484e-9783-c778d4790178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71871f11-8b76-4d4b-9fd9-92a0414d903e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab331ae-b17c-4fc0-bea7-1115976b0dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fe4ab0-f071-45f7-8edf-50aed7bcefdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355bcbaa-7a7f-4912-94ab-60724a776fd5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07e33af-e857-44b8-b3b7-5a7ba137d09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bf1634-56e4-48f1-8823-fcb3c05cf745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda69ce2-0fd9-445d-bef6-71407030df61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1023e152-a5c6-4239-9741-2dab3cf62092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ef468a-b13f-4f05-bf7d-9d3bca3604b3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c410dd2d-05b3-451c-930b-d08d4ec88924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cae5ff3-c275-466d-894d-79b14edbffc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5778cb1-687d-412a-987d-efd5e6817814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2a651e-aa14-4de9-8cfb-20425e52c54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bbdf6d-ed3e-4f74-beaa-ee7be226b9a9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5215cfe-ae24-4544-ad7d-a7240ee902f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733856b6-f80f-4cf8-acc4-6fd1744a7d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27fa3d0-c971-4c13-b8ed-8627c097a8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5da4cd8-45ba-4f66-945f-5365c401a25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ac65d0-bf62-4c91-ba5c-14eac51ee854",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd8d506-ae30-44cb-9af2-2129a97b17a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03c8046-dee4-4790-aa0f-853789742edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee617fe5-5e60-4f7f-904b-d007d8842b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "138a56c6-a541-489e-9437-c4fda8d711a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8681d3db-93de-48ee-90f2-3dc4d13c0147",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe2fa12-68fe-4e75-a487-861c613cc18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d27c1fd-0cc8-4877-957f-f1413ac2150a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a13537-1b45-412d-913a-5b14d63a838a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e623d6e0-ace9-4581-88c9-e37622276c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df064c9-619f-4457-82f3-8c36b10a73d5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632ad552-ab02-47fd-9c3d-f51f71ea7055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0b414a5-30e3-48bb-8910-47e2fba5e0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2f463c-a326-4e5f-aced-04c10106d8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8f957e-184f-4a33-9bf4-498d908f4c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b028cc3-4d99-4731-b281-e2cf8e00c0c5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675f254a-70d4-40bb-b07b-1ddd32897aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf182666-3669-4dbb-918f-2526a433352a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f3e79e-78a8-4d23-a0a2-313f87760258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6c5b1a-5bdf-4c6b-bf6e-b7f753c88887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0316edf8-3a61-4ed9-b1cf-efddc548318a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fc7670-7469-472b-8150-55004b23ab3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da2651b-edf5-46a4-b3de-d4b4cdf4d1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb111c6-5352-4210-80d9-142d6d3ffb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1132242-29a1-4efd-9803-bc3530b679dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe63665-d63f-4444-9144-a8a0d52dd66f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b8a7e6-d212-4682-914d-edd40a1d920b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca38d716-2988-4b2c-933d-070f29c4c371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fcd777-74cd-40b8-ab02-2eaa3d3844c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7b2b5c-0e5a-45ac-a108-44ebf1227f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5336782-9dec-4473-9fd6-5d6ac20ef5be",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e96138d-db83-4a82-81b6-55f71a3c44ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb55b25-3e99-45a3-ba05-d2468d9f8527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62265e33-7514-4b6a-bd1d-59e60c67d793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "570ef9b0-818d-41b9-b7c4-1e437c28ff11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795f06c7-4fe6-47eb-9d2b-5b47f80622c9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f815a80-c344-41df-b20f-96828b79d726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca30425-0a59-4111-9541-f86796570814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886d260d-80da-4c68-aa7f-eb4031a408de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78b497a9-5476-426f-92f3-9ec65cf1a633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef8b55b-884f-4dd6-8eea-9180414af007",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f1484b-f9bf-4299-82a9-aa60a197759d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73599c6-e2bc-4163-b314-c41e7d1e1925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d70f581-b8dd-4edb-8ded-6491305c312b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0409596a-0088-4447-88d5-7658f8e8cb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608754ed-bac2-43ba-9508-46556a087a83",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c96b6a-c45e-4b69-ba26-6a7ff44d9403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b534a7-760b-4652-9955-bbcc44492dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21266849-d472-4397-9db2-191fb9a3fb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "41c1d81f-4a23-4b03-88d7-3a8d27846bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bbea20-6003-4e28-9410-e03f1e976e12",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13289aa7-0d69-48f4-8006-3522e895b1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551a2696-dbaa-4632-9231-6fedd90fd0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57decc9f-dafb-4dfe-9d2a-be3feaaa9f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad836b6-9fad-451b-a368-0c70292e5b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2fd8da-c8d3-4b8b-a16d-42fa98f32e62",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767bf8be-996f-4b01-9fbf-8fee42fd0573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9965b1ea-b2e3-4f2c-8834-5dbf3c8a2c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f6f02d-6d0e-4069-9fbd-a4292cc27df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4267ab87-2e76-41e0-94b2-76a4d2ddbd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040cddb4-45bb-4bca-9dcf-6e393f32c507",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdcfe91-93b3-4469-baf8-e9187b956a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ddfa8f-e47c-4b20-a654-e02e6d8960c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d26dd02-8036-4bd6-b79d-ac3f72eb9e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d8106c-6b4e-4ca9-9b3d-28cb98b62aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbadf760-000f-43f7-827a-794fd74d2d23",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319f18e2-1391-418b-a02b-072b6dead8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d71cf4-80f5-42c8-b08e-3cf2361ac6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a14dc2d-5709-4503-82df-91404448211d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a40c8548-0a3f-493f-b655-7871c46347a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa5d2f2-f3db-4609-a699-765383137c99",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a52d95-b41b-45d2-95aa-b42f8fc50b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de77231d-e546-47f5-8434-e3cdd911a52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bdff42-4c30-4f16-852c-ca80cbc97711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4bd909-0277-49fc-811f-7f87eab660eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29c4727-9793-4870-a36e-bd70eaf66471",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc0d3ed-d3de-4364-b63d-e7f2d1bde0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bdf6d97-4875-4ecc-bfe6-f29bf2d06190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89159a1-cdf4-4776-8f86-71e48f48cc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "154a695f-7cac-43bb-bce7-6285fbeb9f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9106b8-742c-4181-a658-5c83c9853847",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a63308f-1158-48ac-999d-d01173cec9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b8570e-a434-40cf-b910-91ddb1ff6611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d74b59-ca5c-4c65-b31e-12ec091caef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fc18a1-8ea1-4579-85fc-82c371b0d3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cce87f-fc18-456e-8dc3-3eb18160ed99",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c11a70-9d19-47a7-8111-c60bca6bf0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3659c558-3651-4526-a91f-e70aa5c81b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a9fc79-ba15-45fe-a8f6-22a5d358953c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "921c5fb2-eb80-4031-ad62-e73f9c595f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6939841-b04a-4029-b3be-fa5220465a81",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7586e64-d412-4abf-ac8c-5ab9142551b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c139e4-86d2-42ac-a566-5c7eaa4acceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbab91f-6ab8-42a8-ab90-30bfcf266ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ce499b-23d0-4cc3-bb7f-9f64217535a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275d38c4-e343-4e7d-8b21-78aae471fb33",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f69710-850a-4d05-873d-bdfc4801eb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de392205-ce42-4ad0-bb62-434d800eda1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdc0fb6-ddf4-4962-8a5d-e2c090916d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37a730c2-0ca4-48ec-96fb-324e5659f4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a188280-4f96-43d0-9a13-b03cd5dd85ca",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4737f6f-21ac-4b9d-81a5-a4a5bbcb7526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2573460-2de3-4dd8-8d44-2b1ad1d6720d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31328a5e-a802-4c25-9e4b-c0ac0802c2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41b5b874-860b-4372-ac5c-1ae546388556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce265fc-1622-40cd-896a-812edf5222d3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1df64b4-857a-4965-be3d-c32498e212c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dca49f-4f25-470d-ab6d-3574a9ae871f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46958a87-e34f-40d3-9e99-106cb380b372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aadd4ed9-2604-4886-af0c-53608d55bf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a55feab-f32b-428f-9fef-d7d645424c4b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb48f2f-5451-4a92-9309-a9ee620b5650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a7ec11-c205-4e15-b8ae-2f04e61ff2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeefc46b-8966-40a4-bafe-f70a153cbb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2cbcd3-1016-424d-96f6-d157009f6248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4de9678-c1d5-4f13-b2ef-c469a7a8df01",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c3e19d-6b01-4c15-8a19-07e6b7db03ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f55f910-99bc-48ad-87c0-6ce2bf069a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06e08e0-240c-47d8-a9dc-e292d8d263b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6892af79-b3d7-4f9b-bf2d-69e5ca00d120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6933cda-5bd9-4b94-94b2-72b3fbb1fa87",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7a6a1a-3d05-45e7-a1b6-73ac33b33493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9c8d23-a004-429c-9a8c-67a4671494ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a226a57d-988d-4940-8257-9a345ce7aabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c60380-f276-4ce4-a5fe-b682e6d961f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ebac4d-d800-4bd2-8a82-f96ae346296d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76620cda-b5da-406c-b381-84b24adb7ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f6fea5-d01c-40e6-ab0e-b519dad8e43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80552aa-d584-4761-85e8-f798aab2bf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "78e02f0a-c1a0-4532-8635-0e2bed3d990c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ea7b31-6f31-47d1-8b8a-7bc309dca0f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404897cc-7356-4b06-96ff-08249026a541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00e8f30-39a6-44e4-ae6b-d05813dce1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd50bf7-ea52-4910-9019-748a5e66c944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dba1bd9-fa53-41f1-93e6-7ceb7899bab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063f1697-445b-4051-9a33-4eb642abb4db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f2327d-39aa-42f3-9c00-8a84f4a1f983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5ebc73-85b2-4546-b9d2-ae7566e5be7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c459844-0321-4abc-8045-5a1b908093f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bda0aa0-960c-4341-a3d8-85d61d65f839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d335f96-5e9f-4308-8397-58607ad4104a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef5c3ce-ace5-4187-b9f8-5210a0b080f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621395a2-23dc-4135-b09b-ffcda7c2aab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca08cec-f662-43fc-bed6-a558c986e989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c85e2e2c-2737-4711-8104-a4c9895294a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e99e8d-5046-43d8-9795-ef8eb8b13f9e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534d5f5c-224c-499b-b8a4-b7ba0356ac9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9de92e2-4ef7-4857-b7ac-d93f8c7fa995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15448aa5-7576-4d62-a1b0-ab31b96331b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d95f68-d2ab-43ae-901b-a975b1898deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c938237-8f62-4ecb-9a68-2f2acc994f2d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d669e153-d016-4b09-b4da-520fa8cdaf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c823cfe7-0443-493e-a9ea-8834f654ce5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a1e1c8-6c05-470c-9e8d-2d6c62f47eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc826c15-ed3d-4116-9b72-af2089ed9a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050167a4-fa04-4d12-9822-7484a0f6cc58",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6d3d55-d4b2-4f39-8826-8e43e191a300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87f3f3b-60b1-473e-bca8-c0ea0b883470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74f7897-2a66-42f4-8d84-a45ee7d48047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "993fbb16-39f1-443f-9966-ebb0005d74fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eea34d3-2da2-44d0-885a-e0f6c29800dc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6850c5-1adc-41d4-862f-c2d99d8fe5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b97e996-6859-46e5-8660-a43300f02de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b9e9dd-aa52-4af2-b612-e682f0105b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef9551a-7b18-4def-9f79-28e1c5443fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2196215a-54cd-4ce8-b66f-493c26786b3d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608d6bc5-2ae1-42d3-bc8e-6290dbd13aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770bd868-abf1-4f21-9c3d-3fbcf576c38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a79341-a5d6-419e-9de5-49678f800d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75a7b1b1-c123-4f86-ae1b-ff590a851d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab69ab2-78b7-42b1-9c66-15684a4211c1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409b71de-f616-4a8f-8a83-9f182a582822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7321b1d-645b-4de8-9117-1130eb4cb5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e495c525-f33d-42f0-843a-c0fcfa6198d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f770ef-992a-407c-a11b-408c345b184c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d680c0da-2e68-4870-a322-8ba8e65face1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d939c7-6029-4908-8830-1cc33077a510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef89d55-05d8-4da3-af80-582fa598d5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce37f28e-8347-475f-aed3-32f8ec8be3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6651445-ee23-4d13-8cd0-dadd69c7246a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fd53c8-c751-4f9f-b479-290331610dec",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579772d3-6451-4bb9-aa3c-ecfdca2a3357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b017b4df-1d7c-46db-b20f-9061da696122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c821d43-3190-479c-adc2-1b7cb0cb4bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e018eb1e-6617-46ad-9cb6-bb818f382792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e06b8ba-da93-4047-842e-2bd02f4ad6a2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd698586-a179-4a50-a581-644a1760ed46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12b7bee-3316-42d6-aad8-e31a6266bf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3732ad3c-1934-4734-a2ae-324679aa2335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4922bd6d-8b55-4c68-913b-87248d5831c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13962af-e38c-4461-858a-6d645e72820c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59750d37-b65f-45fc-aafd-f7296ece1fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83df3f94-5749-4e28-aa9a-f284ae7525ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a4a496-0d96-4dbe-8a28-c93ada88eea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff9bd07-77d7-4c58-b034-ca8667eacc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7042ac8-1710-4833-9827-247138c2962f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ae2baf-89ba-4546-991f-d6c2c99a714d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d929490-442a-4acf-9b6f-4a68ae51d1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c746b0ad-16ab-4b39-b918-c4297792bb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be98b58d-1884-4ec8-8487-1734abd069d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a265fda6-a238-498f-9584-195c381ff4d7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa56fd2-0efa-46b5-b525-43d996655bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f848a4d7-01fa-4402-ab53-5437d6ca90d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be7b388-3520-4ce1-8f7f-f58409e97a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51505b41-a868-44b6-8384-61744bc64a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06553ba4-b258-473c-abaf-96908b04b300",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39c032c-04b6-4e25-a510-92d5310c3679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d79634e-ca8e-439a-a2a1-ca735f096f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df85e62f-9645-427c-b806-4dcde20ccde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a78e0ed-ee31-47b3-82cc-4fe632bc1663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09701dd-5680-475e-9417-a82f02202750",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4fa695-6c9d-4a1d-8f06-4305acbda154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c2f132-e757-4415-9c73-ec670c95b578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845831ef-c737-43df-95de-5ad0a31a0720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1953b083-34f7-4aad-b082-dd560cced426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ae8411-73c8-48ae-aed9-a1edf8011c86",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017255d1-fc4d-40fa-9c0e-0d4cc0287fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26f8c01-ec8f-4d23-9438-5ca4dcbb88c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33673b52-c006-4f2a-85d2-3e832c59c286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07d9fe99-b26f-4513-a8d5-41b7a68d130d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8309ec72-0793-4433-9039-e08bbb79f395",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e78e7f-a0ef-4d95-bae5-ebb2b346ea23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255795cf-6b8d-47d0-96aa-f3a32be0832a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fef6be-6b0d-41c0-879f-c4479eab981e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65cf7f06-ae1a-4f46-acd4-2591059bbd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2656a8-5d0d-49b5-8220-3044cda97f37",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180d351b-a759-4743-b94c-889832ef471c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5292d8c5-3162-4260-8061-877f13b1ba65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283e1af9-fa9e-4398-bf1c-6b6b57cd0ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ebc1850-5786-48c6-8056-4fc731717fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062f3b54-68cb-45ca-8738-3bf8bc00d003",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1872c5-e2b5-4a10-b95c-35920d78366d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee48dbeb-0f49-47bc-a40b-9639552e700c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b32b2c-d668-47fe-b130-dfa223a55548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8d139e-acc8-4815-9fd4-c3c2d73d9e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbe311e-a546-4be7-88c8-93998e448636",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad6ede2-4f79-4bcc-82c3-5c78b4ff4c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14db8074-e576-47b1-9aef-d00b1af3cc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474ec953-57e2-4be2-997a-3c96c3859466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3056c776-cff2-4b0e-a937-df89eb7910cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7495f5-226f-455d-bf42-60a54dcc17b5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a66eb30-1e1f-4523-9a43-89d32e4afde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b92177-7c76-4425-a7a9-3e28207abbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9888ba8a-3816-4216-ad0e-351cb187fea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "833f2cac-30c7-4b62-8125-89c5a398d19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb2a7c9-09fb-4495-b6c1-2f6881a62845",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81aed80-cbcf-4d92-927b-c45aef170365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b818d1b-4e07-453f-994d-0146f256a413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbd5a61-8862-41b5-a4f0-b34d529a16d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "011c64c3-61f7-44aa-869d-62429a60266d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c021b16-a9e5-4761-adfd-8ddb8796e1e0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ccc7da-8336-4651-abca-442363b04587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba5a1fd-4449-4149-bb74-0764c11c347f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e96f6e-3232-4287-b679-6e1a643a19d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "129fcfd3-f86c-4099-98d0-85fca58d03f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c26a08-bb4a-4c37-ae54-663bf18d4d48",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32eb0adf-dfe6-4c63-83d4-19a8f5cbd919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28df160-2217-4618-a5be-afd1a15a4693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb37e860-5df2-4bc8-8c49-309f564e16d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c62bcce-1b8e-470c-a21b-93cd06de4624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3378b6b5-7f41-4763-a93e-595737fdf7bf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5572b2c7-be15-48df-9da9-90a5a97006a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850a8f4f-e26c-45c4-a301-146002eb99c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4419381-0410-433d-9e59-f561d2e41639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc8a14c-2800-4afc-b834-9154c5227cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b4e59d-2fb2-4b37-aeb6-542979fc9600",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d60198b-4624-48fc-88a5-acecc0f5154f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b62dd7c-fdce-409f-bc3e-b2cd48805265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb29d56-4434-42eb-bfe0-2a376e7aee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c142a328-b807-499f-b58b-d9dcdc7f8a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e054f8c-03b6-4579-81c4-b42ec124bdac",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3aeb26b-8f2b-42b4-abff-7f9ff4f6b800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5deea33-49f6-4900-ba8b-697b91f5c833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072a65e8-5b27-48c5-a59b-bd225e7ec789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "181984e8-2d27-458d-8a73-cebeb06ece1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09eaab95-a775-415f-9095-4be5bc9491ab",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7146588d-c36b-4252-900e-88e29f2f8ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5105fe44-76df-4480-a388-c8f08e131217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c1f9c3-6588-441f-b395-a5bf6afaae2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9dcae9-45b2-41a0-bf92-9ea0ae22895f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66651bb8-1322-4e7a-be8d-9a000411a41b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e588a9-4d29-4651-b972-743f9f01b8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6df705-6781-4c20-833c-b4ebb23d39a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f120c50c-dfcb-470d-b632-01c2d1cbbaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5f9b89-d8fa-407b-a095-016af42badbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bf489b-a22a-444d-af3c-2720a1bd741c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585a7482-d0c2-47f3-aaf1-3d7a3dc7aced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9e5ba4-b6ef-4499-877c-09244e224634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92a116a-15f2-4682-9275-931c4368839d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "97b105e9-df95-47e4-a296-66f27e4f82a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f91833a-c4b0-4acd-aec4-715c166ca309",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb484fb2-257b-4f65-ab18-fb1520833079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "047f038a-77d7-4d4b-98e8-fb092ef98518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ace4d98-2c45-46ae-85bb-9d921371e361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb662915-ca60-4aa2-bfb1-7410e56e02a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e7006c7-5088-4025-9f36-39c4a1bb00d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd41fa24-5fbf-42b1-9e2a-3e034273cf86",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b5dc9d-45f2-4d74-8419-3bc01f794586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b60203be-360a-493e-8d3d-e2631b68e4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b181a8-ff05-4cdc-be0f-ee075e917b52",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cfeba08-2036-4204-8698-323c59742689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d2f5a4-ca40-49a4-829d-04bfeb522fc5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e2eebc-a18d-4b9a-aeda-d7aa8d23c40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f357b4fe-6a0d-412e-a286-2eb3112ab97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98bb24b-36c9-494e-bc5b-fe836bde5a53",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdfffab9-d10a-4fa2-83c8-e2e5182ff347"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9d82171-dc03-40ec-b749-9b21480760df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a37866b8-1fdd-4f40-9ba3-6a968f3e4fa2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d4bfa20-77de-4e06-b222-f480de0d454f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2091c35-cbd4-4ea9-a8c0-dde39b9f7e25"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "680b85ce-a560-49d4-9137-e039af813a60",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "182f1c18-2854-40ca-a327-69e19690f773"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0718992f-d173-4c35-8446-89fb2e4f9b48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb1caf99-577f-4623-89e1-6f2acf65d23d"
                }
              }
            ]
          },
          {
            "id": "16cba6c3-8523-4c62-97e2-bf2f8a7e63c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "768053e3-0966-40bc-b53b-62b3b4f74c05",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a7626fd-a4ec-4105-aeaf-6d574ef20f47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f02e23ab-ef3d-4f77-a191-de8b93eaeff0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3e92801-398b-4526-9bc2-80c034f4c30a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84148bde-00b3-47f9-af24-63e2b853dbb6"
                    }
                  }
                ]
              },
              {
                "id": "81e8ed3f-6e81-4f30-bf16-4fe2c0eeb513",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a3d5b15-d6ab-4b2e-a2dc-1b842d9dd8d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e45d7efb-bdf2-47a4-ae0e-359e2eee28cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c54df4b6-824c-4037-9240-6055a8224504",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f020951a-6677-4e8c-a61e-5a73d20749ea"
                    }
                  }
                ]
              },
              {
                "id": "4a3a6882-c1c6-408b-b36e-b7fb09000786",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "618050fc-6fff-4265-a561-a881cc41f555",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cff0074c-0723-4c01-9d2c-ed70424b4e42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72c87c52-361e-40ab-ba36-a95029153ea5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8f95a806-15f4-4c06-abe4-954b302cee0f"
                    }
                  }
                ]
              },
              {
                "id": "b569bf3d-ea54-418a-9340-b50dd8fad91c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1b24f3a-9cc3-4f3a-8a26-bd4f1dec1ca6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b72188be-561f-4f84-b8ce-15efbe448eae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5f4b59d-22c2-415d-aee0-60ba5e163c03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dc869d21-dca9-4a48-a2a8-11cac7a9a700"
                    }
                  }
                ]
              },
              {
                "id": "e3183f18-e003-4a7e-80cf-6d9480c06640",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14f23a7e-7c2c-4de1-a190-6bc9887f1a10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e426608-fbcf-446b-b012-f509bad5bb7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4ba50d9-8a41-40c5-a7ac-3e365598ceb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2f06b63d-872a-4e80-9fe8-654b88badf45"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a0e33ba2-1a85-42d7-ba8c-1827441caeba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00f9c44f-c898-476e-9765-253195c3c6f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c003f743-5bb4-411f-8a4c-21bd49164463",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e6d8577-7610-4c69-8760-b2f3d3f162fc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e2b4f32-ac69-43ea-a29f-d3dd6a9f9e62",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3a31a9d7-7636-4420-a0dc-1409af2d2bb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e93c884-281f-4090-97ab-d275c4dc46b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9a70643-a3f1-4944-b96d-583cd91ffb73"
            }
          }
        ]
      },
      {
        "id": "38edace9-0751-45c3-942c-ba4eaff73c1e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7d0c7309-c684-468e-8338-64370b5249d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c3b29cc-e410-4838-9d28-5e8f8f50cf1d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a31b9fbb-1d70-4cac-a47a-7b37a701202b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab303b3f-fb9a-4a8a-9653-0e615eee244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2f9fb3-3d1a-4005-8e39-155ae5f88959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899f4ab7-0797-4451-be8d-5759212d6631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c70646-a98d-45b9-8f4f-addfc90d5b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7492c3d-2ed8-42c4-93d8-fab3f1ee7b93",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150741fb-b14f-493b-bc21-2aeaea7f1dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66ac985-3ba8-41b9-98fb-19bba739258e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac866e7-31f3-4ef9-b680-9a5e6343c3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94682e79-6429-4ea4-bebe-4b70280b9394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a6eaf2-c513-4156-aea4-3e466fe44982",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c5631d-f3e6-47a3-9078-bbe58b3f5d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e071f10b-777a-472a-b817-b1c2ec51874f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef05472-0791-49fe-8f34-ffebf5bcffea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b51474-30b8-449e-add1-92b86d8adafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81d5ddf-46ca-4957-b605-e251b5194f95",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34185e4-f27b-44ec-b5fa-b7cc976a86d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d2cbb1-30f7-4d88-af29-5b1d006b3841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3c3006-e995-4584-b4c6-ba3159601bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e2fd51-a2fe-4939-bb34-7e99b8e6193c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb133a1-0331-49c4-a784-e4c168ae0aa5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93c9fc4-c1ce-4604-9008-4f45562780ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024bf3e4-af11-4080-8372-48f7e53df643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2958ae1f-a9fc-485d-b038-cef005647fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36c3ae39-6c5b-4978-a96f-6371c11e6342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f82577-2719-4290-bb2d-fa11fd64a3ca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47f6912-16fb-4594-a05f-ac73702d69d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5e77e9-eeb2-4bb1-bcde-7da8f381b769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b47afaf-4d95-41bb-a5a2-c92f1a01d7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6152cf88-2f4b-4eb7-953c-90fb1744578c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8038e9-5d24-44a7-9bd6-844876c7afdc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1e1beb-8ed3-47c6-a1a8-d1e9c4761db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de958df8-71a3-4324-bc43-fccef026ebc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba74e957-da7c-4a6b-8f73-1056b648f312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6107c9c7-f1f4-448e-8b1d-0642dc0bccaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d278d290-3ebf-42c2-8c34-9661fc145742",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b92531-558e-466b-9357-144cc74d8143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb00e67-b783-467c-84d7-387afe897f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4277b1-8c25-49dc-9881-1480ab937440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2257fe-9112-41ed-97fa-41aad88be0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8191948-dbcb-4ed4-aca7-f4699d0fd672",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9e884a-8ad8-447c-a9da-649cb334afd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26ba797-5139-4a51-a02c-5e3cc00d048d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8e46c3-bfec-4d9f-bed8-d6ca0b3b3540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c27aafc-0b35-404b-bcda-cfd1483e55bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9701184-2837-41b7-afbc-13bf544c51e9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6bca08-d423-47de-8f42-e4fad823359d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51401d9-63a5-4245-8b3b-6e0b1bd68be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec743974-48ca-4830-8cd5-8702f8f02f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d0a1ae-c24b-44de-8c9f-11d7bba57316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1235be-6a5c-46e3-8097-8dadcc9d1be6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9195c097-8a7b-413d-a403-fb84b177ade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d469172-caea-4a11-a654-da51622f9bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd0b693-9274-4843-bea9-d3c53481decf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f94096e5-1acc-4361-85be-2181767c1574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e4a567-009e-43c3-9ea2-e9e7c3b9e3b8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6442694-14a6-4128-8def-4ca32fd8da28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ae43d3-9ae7-4952-a641-5ee20f2190e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689bc6ec-7bf2-4f58-8c65-ad7b102c1246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11dbb770-ce54-4583-b5ea-2816c07423a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa41b6a-486c-4fcf-ac7a-9a12b9d526b7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d568659-e3ea-41ca-abbd-49a83cf7b5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f77acf9-f276-4681-80fd-7820264b8670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699dcd8f-88e4-4e8f-8ca8-ed44f996bda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1405999-bb1e-4e76-8326-393b0dd969c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78434dc-3ef5-4fcf-9d51-51334de6b67b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ff68f2-841b-499f-84bc-2f720e113c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bae213-e0b6-4e8f-a851-a8ae3b2e3ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a68fcd-fdff-4a97-952b-9ad78f745411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "48ba715e-819f-4163-bb6c-f53480ccde91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ef82dc-f694-434d-8656-fdb64a723e29",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08253e7-edda-4ff5-b8f0-c0a88022ebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a974eac3-129d-4dc2-a8a3-606a4f63dd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79edf087-a3fc-4dc2-b823-0582ec3a8625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "709cd45c-7327-45f0-a2a0-3a177d3a0a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7877b2c8-03bf-4cb2-b16d-5e9fa2d76137",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579e7778-dc72-4bd4-b039-d37e26a52bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7456dd40-5f2f-411b-add8-4aeeeda69d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc1dcfe-1260-4570-b7d5-529f1167a7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "58cbb838-df77-4553-8ba2-0714c62a7751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356b9188-4d81-4003-9a88-80cc0dcea10c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e57772-ea41-4523-9411-78af9c22cf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbe844b-8a5f-455b-995d-faafcb826181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f292e540-f0f7-4f62-b983-87dc21f6c046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c165a3f8-8bcf-4728-85a1-f13dbcf2d311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edf138a-4fda-40fc-ae96-36b28c8c59ef",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1e7775-f1a2-48e5-94c7-a1472d3261a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667c2bab-4f7e-41bb-b479-fa377e44401a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fec0b0-661d-49e6-acda-bf7047d07b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bad3f7de-aa0e-49ab-957c-1fd1ac5f25ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89879dbf-2c64-439e-9b1e-2f824fa676b3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9db427-d6ee-47d3-825c-c0ac5a428a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f210fd2-31ec-4bb8-b485-187d2a5f944e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74a7754-5b00-40b2-a6fe-e22560303ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f579d64-eb85-44a0-903f-e969d6751cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faa267a-473f-4303-8715-e17971b8f283",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256dd99e-52e6-4465-ac95-8858ce782eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc56d2d-13cb-4341-84c9-7ec57ff4f414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f4b139-7e58-4908-bfb9-5a5bc5840df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90f80c68-561d-4ec7-86b5-f786d3f5ea28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b50b07-66f1-4722-a525-b6dbd60c21ca",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c18490a-ab11-4dda-be03-22a3562d1e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6390ab5a-6c45-4752-8a0f-40303904bbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b413bdaf-ec92-43b0-be4a-68be395e43d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8559ea-c14e-441c-8e36-e6fc96bd0663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d622d0-131a-4ca8-bd1f-433cd8a417d9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b977c48-5446-431f-a9d9-42d9a8c428fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29539851-d77e-4d5f-bcbf-593b737b5ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23649ef-424f-481a-861b-4b48ad2c34bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec3e34e-6df7-4cc8-bcf6-fa88f459b523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b005d1b8-a0a8-442d-bb0f-110230ae7ba9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc886505-ab32-42fd-9fb7-b1e03521fc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b804e367-3bce-4daa-8f54-2f79791854ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47c3180-0a7a-4245-b613-65f736d35a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99ffcfe1-5a37-410e-aa0c-dfc89fb17da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145274ec-6422-413b-9530-d048b951344b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327bd8a1-1c2d-476b-bd8e-43037e6fa507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adda11a5-4d8e-4560-9fb3-6b28118f238f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0877d855-3bbd-48ad-8135-0416128dcc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "600a7d38-dccc-4936-b4b1-ea75f95c2f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b34ee60-5cdc-4ebf-a8bc-1a5f90607d85",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae6d22f-7f9e-40d8-a522-535f908ff457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67d6a61-8f66-422d-a1fb-8af1efaec22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21aa9939-44ff-4ad2-83a5-694d7248ad19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97faabec-1f40-469a-8b58-8392c719581b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f847dcc-098c-472b-a368-b0361f96d54b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842535fd-72c1-4371-821b-50519cf91822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60905d51-feb3-45f8-b799-0401c17094be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc3bb62-a5ed-4409-9d81-f43eb33bbb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf86cab7-f741-4799-9e13-53919ce3ca16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e52d46-2084-4980-a235-c15c7a92b1c0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e20ca4-f081-4188-a90d-35dba46090e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2688324a-adf1-42e9-926c-dc685fa2c342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb869f4-7d8f-49ed-8cd5-23d20adfce99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d874294b-e0e6-4b0c-8b96-ae510c194f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eab507-b7c1-4e7e-989e-826695491da6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9561830-6e3b-425d-8b84-e786f2a926a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bd67d0-0b08-40ad-ba3c-c84ad36bd75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d287ea8-4031-485c-8246-bcf1e564c089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44675997-f4d5-488b-a414-54680f8a0022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e46861a-e2df-4a1c-9c86-b40d519850c6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3064ca09-41f5-417b-abe5-43ec64c63d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758841cb-6c7b-4d92-ac59-5a927a5dc25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b676e448-e755-419a-a780-3596d3d47e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e6267b-3821-44cd-b3ac-84434d078c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79522766-43d8-4156-8451-312681bbf17c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d066be06-92a0-4947-a4f9-a13635a57626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80a4cb4-6d40-4835-978e-929ae211be0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91102eb0-6d1d-495e-a19d-be426358e7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6591f12f-7c38-457d-bba2-cf148a7d6ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3033c5-cb4c-4cf3-a673-76a8fc724328",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6300c3-fb60-4e9f-820f-d7a25904f0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84697ab-93ce-48a0-a69e-e413ec9083e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5bb648-4200-48be-9eb4-2711c0a47bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e76d417d-e2ee-4b03-8cc8-6d5ed2a37897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743921b9-cf5d-4693-9873-02177cbcd274",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a00abe-c04f-402e-8200-661a0a1f96ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4725b32d-ef29-4794-8b75-ce021f7a7214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c90484-ad58-4913-8315-be26aa05443b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01f21427-5ad6-45d0-89c2-3a6ac8f3a9de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "97a2a34a-7cb0-46c4-88fb-04ba67ca9ddc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e7e1bd6-890e-4710-a193-7c26856c56db",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424373df-3c42-4ed0-9393-4fdbb8175fc4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb12a29-7f59-412c-bd96-81d4931bcdae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2041257-8166-4de2-9c6a-39a4d9884068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "738e3318-3916-462f-998c-513af2d5de36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd37ae9-aca9-4341-b4df-94a4b8b16c1d",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e22310b-477d-4e92-8cbc-3e5fd71dbcad",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a13ca9cc-c6ea-4950-b963-203e75b561ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af7e07b-a4e5-495b-b951-7228c29761be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78478f29-7fbc-4431-9f30-5335598714c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a5fd443-7f99-4553-86fd-0a7345825b63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f74149f-62e4-45c7-b204-fd451517d86f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60f0a186-a600-4f8d-96bf-e9a99e8350ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07b99464-3c43-4abd-b1a5-1501393fcf3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac1e9dc2-b519-427a-a68d-a791933e559b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eef84ab3-e7f2-4250-b0e9-fc0c297d43c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11d78ca4-f02b-4830-bace-146b6db0eb0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73d11508-705a-4f01-9255-1f9489b0ec69"
            }
          }
        ]
      },
      {
        "id": "6d0ab0d0-ca3a-486a-8cc8-b701ab9539f0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6cabc2e9-05af-4b34-8466-2b91f08e004a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1aa89d9d-211e-4f90-ae70-242ae835bf2d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e81f5483-1f25-40ea-a189-4929dbcdfd73",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4231404e-1476-4f5e-9ff1-91801eb6637d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef004cea-b7fb-452f-9d2c-ddeb79a5516f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8c3030-63ca-4964-800c-ca1bf72792a0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c954996b-c3f2-41d5-a2ef-5813d47db18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f94492-6ff9-455c-b170-8c578f9da0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ebdc4a-8ea3-4a68-89b4-23221ef0c88d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603f73ea-4f2d-412d-8021-5e02a3118101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8012a4-142a-45ed-be6e-6b341ff62307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba93d25-714b-456b-b62b-7b0251af75de",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476cc5f9-f064-42bb-8115-42528f7e1480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9acfa8-7977-4740-beab-548165219fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec2ba7f-7a85-4ad2-a34c-5561957e2e04",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f196020-f363-47e7-b64c-14da2765f56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bda659-bede-4937-946c-584503303a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e05e593-8033-47a0-9724-e0efe0b430b4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd710a97-07c6-4e45-b33f-2e9ee69c8a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc84d5ae-22fa-43d0-9b2d-fb3f21fb2460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a6af58-b5b3-47db-ad9a-5d7f99c59310",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c396b64d-ea65-4098-bed0-64c05f8393aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c7a8c7-1508-49f3-b1f3-19d234db3f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b335ffc1-2db5-46c3-8333-c35f5aaebc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232893e4-ca94-427b-8055-b67f59f57383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68ae9fa-c8bf-487b-89cc-182cb4f3c259",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cc6a97-5039-4d09-837e-0661eda038ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed021072-0e3e-47b6-a5e9-55fdb9795958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02be9526-5f98-4765-a5f7-90c1ea36c97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fea418-80d2-49e3-bad4-e69602a716b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0676851d-a70e-44db-b252-9d264caafb8e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b6b096-a84a-4cd7-8815-1a72cae90816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94925696-2c3b-4092-8366-940a5a61c600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06f5338-228a-40b7-a0cb-13cd794b79e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de50781f-be5b-409f-b851-88ea6b5aff0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc7cbec-516d-45c4-a446-f595efa8d654",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4033cb3-7add-4444-9424-44eb19b7074c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb752cf1-2364-4d74-9d3b-5b2bd9a2dd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ddf77b-35f5-488f-9192-d2c18db5b695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639320f7-3e7d-4f4a-8cee-c227c8085374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6686d1-0ebc-4f38-8462-f2591ad28f4e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8db4415-0c1a-44c4-b9c0-7c5ca56ea90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249af278-3815-4e68-94e9-142c6c86486c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e790a8a-26b4-4e98-ab9c-a0904aa7adc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e215e1a-e64d-4029-b7f1-796f204a1fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da95b771-4424-4618-a716-3d1d3dc157c2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693484a3-2401-45e2-9a04-ffa4fe32772f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d835cfe-970c-4869-a216-74c89ba8f699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded9b467-8745-418d-9595-0b4d59d31106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f2d930-ed83-47be-8aa0-0f2468116737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84472710-98e9-4d9f-848e-d5596b693517",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e07c04-5de1-4179-a740-0595ff7fecbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87b4c726-62d1-4c7a-a8ff-24df0e5a3f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f176f4-575b-45a0-8788-49bf8c4c2d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc530c77-ab75-456d-bfe9-13d28e214534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d21ad53-bfc8-4381-a847-2a9808e51d2c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9435571-0741-4a78-b251-945b9c1cd8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26230c44-8bec-4780-b034-9f4755f7b280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990fe9b2-d493-4be5-8527-9228390f4d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e76760-13dd-4132-90bc-d1b530b72ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e379455-7348-46cd-814c-d00bd79160b9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c603b64e-d99c-4daf-b11d-d82f7a244491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b1b6fa-4e66-4d66-9c90-6c36f602c7cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a2d43f-fb23-4952-943b-3e81d723e279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd9070f-1735-425f-aba7-9c27bf1e1b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421c1d46-68f8-44a0-9740-478320817c2b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca5d445-4826-4530-a242-81970ade08de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edab3594-a3ac-4718-afbb-2b9bf12bf55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d15034-d4b1-4e38-a83a-47026c2fb32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4db5d84-d7c8-45ed-9fb1-f8060d17ccfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0ef3a1-26f4-4e42-a33f-97b0f4a73753",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341c68fd-13ca-496c-89be-d89ff8517034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21f8e69-90d4-4036-987c-cfcd05973302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50faffe6-bc99-4dc8-a8ae-44ccf52e2a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2337e1fd-f3bb-474f-8bc4-a3fe40faf455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bb171b-24c3-4343-a63e-9a956ccc2031",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10940ca0-2b9e-4279-ad29-4043a280ba70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44634dea-96d7-4c90-94fb-74ae1dc809ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbb2931-424a-468a-8e47-45ee9fb5ceed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7882ea9d-e7f5-40fe-86d9-55164b8333a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4eaaca-d9a6-4145-b9cc-b361dc85ff5c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f057835-240f-4cb1-a0be-5ad339ae16eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8f14e6-ce70-4f3a-ba1a-794871d1a8f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add16000-8c83-4e62-9cd4-b665cceef3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260e064c-60f5-4144-a0ff-8dbfc7350173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc921c91-a7f4-431e-a5a1-d245e11a5e3f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d358636-2e9e-49cc-ac00-1a8fb526a3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f53ea2-856a-48b6-857a-14472c3f9569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014cb91d-c991-4cc6-8ed2-bc5e156aeec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb8e9ac-803a-4e26-8b04-33299884ffa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689132a8-535d-4093-a023-65d42c920e77",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa521d8-78c9-4bea-8c13-84136118ec0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1db121f-5c58-49d2-aea1-a698cf4815d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca72bc59-7c1f-44a3-9265-aa9686424e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc42d7aa-1e35-4259-8e13-4d31bcff1453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08af7eda-03ae-4e5e-9df1-49e74c3a98a9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5145796e-59e2-4d2f-8b9d-f479edcc7881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60223e8-3f08-459f-817a-1821677889df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9fb70e-1f7d-41c3-82af-8efd8b0d3c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b536a572-82e7-4bb9-9a19-94b3ba754a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3235cfc-6bac-4a53-938b-66a27ae99177",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee718b6-ef72-452a-8e9a-e7d6189594ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a25d01-cf37-41f4-900f-dc70758e10f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484d034c-a69e-48ed-9063-73aea21f7480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f74cdef-f2a2-452e-b1f9-59dbfe11929e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d888646-fe06-4220-98be-2821b6952884",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2f568e-6b67-4eef-a004-a1b93e548ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4729ee1d-117c-4349-8c2f-f8c7257063aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3573934-fee6-47a3-985d-cce34a122730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7aaa2c-7554-4155-97d5-a74463393556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728cedcd-6987-4179-af0f-26cfa8f0144d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f7b1ed-8ebc-49c9-b7de-72ad1cc3306e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40404919-fe83-4c5c-87d8-1ba577070f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58892807-9d0c-437c-94dc-4980adbe4785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8bb9d9-c2cd-47d9-868c-bf61fa574198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95555471-6269-4249-807e-16d99306e9c5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5b3d06-f8be-4f90-b53e-6ebc927816a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d11d31a0-98db-4392-8f7f-ca016d0a4a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29894857-2ab0-4051-b846-61d9c381d22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b693ae25-a87b-48c1-ac21-5d68a86e29cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e37391-d832-492d-8892-35df3e43ca2e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6305baeb-b103-452a-9624-1e405caf3c63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a05a77d1-71a7-4964-a818-437455e00085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bbb203-ab89-4f5d-8f49-7a2b66ac35b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4baf236a-599a-41b1-9ba4-d8d04a4bd624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d418aed9-2ce1-4b95-9d69-f599ad9cab5b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b498eff5-5eca-405f-a7f7-8578f4c58b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36661702-55fe-4bb7-a2d8-d2fd5586f063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a01aa0-2828-40ae-a51e-707ae230c562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb1fb4c-29d4-48c3-85d9-7fa9fca4a76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad50dcd-6cc2-4ce9-a070-fd2069796bba",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a7ae42-4e21-41b2-b47c-92a6ea6f91ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82e2b40-75ac-47cc-ad32-c73725bad3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9226d87a-089c-4342-aeed-43181d2e9670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ac8929-2fb4-4900-92d5-595ba0658d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89de564-4432-4915-aa76-09aa47b5f67b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5fc604-a759-4692-8819-df03482a0a62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677b9ee3-a2aa-41b1-8604-d5622a87609c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951cc844-722c-4772-8aa8-4d07eb3faef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe747233-a702-4247-b04d-929cb5256b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4d393d-6fe3-4cb0-887d-72971d7c76b8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e524420e-6ce8-43a0-9c33-d1b8b4f290bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d6cb26e-ed0c-4bd4-a345-78d509c0908b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1c30c4-66f9-4362-bc9e-dd5789faa8aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19e5fd3-0d2c-4560-80ea-e06dba0165db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c1615c-219b-4de9-a073-545d1985986a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdc2e4a-37bf-498d-a9d7-b8684058b867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbc9e36-2cfa-40dd-baa1-94c5f4c80312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b985b4-797a-48e1-ae1e-ddb66dd1e845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bae995e-3c0f-4cf3-910f-bf2a6f7d3cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199dc274-3183-49f4-856f-a50b02f50694",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c5ec37-f6d7-493a-8587-d105c64b0f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83db938e-dcdb-4d86-99ff-19c22898b29e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796f5b64-7d55-4d7c-87ea-260dc8f4c9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b0b1a1-931f-4aa8-b25b-862c9e316aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801b2a2c-1b0a-4a4d-b034-4760f199f076",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a393c504-9aa1-4a3c-8932-e5df78ea6cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9deb82d1-4f3a-4831-8389-1c8ad782823a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf48a11-90d6-41c1-9313-c2ebaf8549dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a965d552-7566-45e8-8ec1-3260a97b9b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fdc9f2-e358-44a1-be3b-7b2b3bd08204",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf7b641-8c3a-42fd-8d74-349ad26a4085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb7488a-7b91-464a-a676-d80c3fba3f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d77421-87df-4ec2-b228-35e7fa83b6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c38d8e-b6f1-4c55-9586-ea7fc23c3b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93c12c1-1191-48b5-89b2-8f2babb839f0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fb3bba-92b0-47e3-9343-a98bc26c651e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e1b403-23a2-4414-a477-e08acd351d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421e1783-25d5-4b80-b012-cd2eeaa47930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03349f6b-a983-44e4-b89f-5e3e9e652f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be03224-5c60-4d37-8515-072b12a125ec",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678a2984-be8a-40b4-991f-821ef9e758eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8bc643-a25b-43ca-aa20-edc896f4fe1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3a356c-96b8-4c29-988b-096f95329c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7226439-ca05-4183-b736-34e5dfc1d0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92ba0f3-8986-4174-8162-1a52e4aa214f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a160a7-5bb8-4cac-aa88-86b1264aa472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b6f8f8-6191-4592-b2b7-8ce219e57d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be780d38-904b-4a94-963f-5174b488cdb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b5742f-7da7-4ef7-bc2e-ece56db19cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446ced3c-067b-4275-b204-278daf5b903b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe400f4-7839-4c7f-b6c9-de81987c6fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a6bcc4-fa84-4939-9030-da96030198db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15615c2e-ed04-4b35-8f2c-18ebf52731fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9c5fc1-969d-4de3-9582-b08772bcfb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20668647-f486-4b89-8dba-e69d32eff782",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc2243f-8b43-4206-91b6-8ddd6c97c4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9850f6-bd00-4cf5-b574-084298745723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9055f94-c1ac-4f03-a65c-43cc219ce87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8dc3551-b9c4-4a40-9e6e-920c17e818c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1238184d-9799-460b-aea9-2595f29fe7d4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57584dbd-ea69-4d86-8aa3-29322b4b235b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8966eef2-3866-4570-92bc-fce905568626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02a6142-2094-4073-88e3-17a427c222f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa92b6e7-bd2b-41a1-a551-9b4e437e7498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a762b8e-d15f-4fe9-bd4a-59b9353a20a7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12f1653-c794-40b2-ab71-bca280837734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8edc60-cab2-4600-b089-e4575c856ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48f08cc-d6de-4967-bf43-709bc59d51e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4074293-efb7-4b3c-8fff-b6612d6724a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47338e03-9e9f-4e9e-bedb-7d2b5d8976f6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91245f81-17a0-4590-9819-fcfe0bc34abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900050e8-5244-480e-aa20-29d865564dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6a2a15-d72d-4de9-8fe4-b042af2bf5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a48ff7-1aa6-459b-8972-c2cde44cf30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab0a741-1bdf-445e-95ce-f8e399e253c9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180edc29-0d44-4f94-bfe9-036aa3799337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c798d02-07b7-4d77-9525-c66af9f91376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f433fa-b6e8-4e0a-9f7f-584eddb8ff91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a3d39f-b595-40f1-96cc-88df13b24230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab64772-0450-438c-975e-df0f8a8d3fe3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48634d3c-0540-4596-921d-9f73729ca34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0cea18-23f9-41f4-924b-020ac6bdfe9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8db17d2-efb3-4d65-bc55-559304451a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a4261c-2438-4f8a-b34e-9ca582c3be4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e67dfcb-b4db-4258-85c5-209d7b215ab1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da931ace-4872-4116-bd06-7b409f58f1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b301e1fd-58c4-4a05-ba4f-a624e1784787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5748c775-7fd3-42b5-abff-0f60e02d9dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd12694-873c-4618-b901-4dca10bf4c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59abc315-4a24-4008-aa8e-d23d2680f328",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48620840-49bb-47cb-be81-96b267ffa408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07242a3-81d9-4fe8-a43e-fca7471da7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fece6000-8a38-4ec1-b7a3-4fc2a6d9e80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef2a057-8283-4ab1-b46e-e980b9f22530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fd1846-d2a7-43d2-ac8e-205ff555a66a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3e9c78-dbc6-463e-9442-886e9f4fd0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855e3e53-429d-4190-88a2-23f5e27a3cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280de934-d5b0-457c-9eda-e6d1b831bf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a469e285-178c-4386-9009-a0d9570f6984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ec599e-a4b3-4957-88ca-33e57b09b497",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1843cf3-2020-4a58-8ba2-ac9f06997d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d3c89d-38ae-4c2f-9874-47727b748ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e235aef1-da45-488d-8042-055ed2e7b823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c1608c-b328-4c5a-949a-6d4622230129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16c5350-a793-4d29-86fe-eebcaa2a4261",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d794b6-1831-43bd-866d-13fc62b5d560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e1e871-d01f-44bd-87a2-2150554c97a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06a0cbc-a909-4682-8c2c-f29a65a4bd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bc2efe-73e4-4dcb-b0a4-8df06cdce22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a1cf16-c41d-401c-8a55-d75ea9dc383f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b628126c-c62d-4733-9fca-132195e5bacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ecf7ce-9e0a-415d-a540-2380a5cddf92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b720d6-d1ed-4160-a7e6-9874520888e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d195f53-32ce-486f-a902-7ad2a416ecb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91791fc-61e7-4a14-8056-a09b287e17ad",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a308d818-ad81-4bc3-91b8-086294faddae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3416e206-bdaf-4075-8c1f-3ca9fe972909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a656c945-1fc5-473e-9b42-046fb2f1116a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07abb655-0b70-4d66-83ea-3f1e2d3193ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a2fc07-1579-46ab-b02e-d10fe12fba44",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f24bcfb-b611-4b6e-8cdc-4e034430129f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b4becc-561c-41d0-9342-8a60cebd79ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bf966d-58f5-4029-8449-bd452b356aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6beea1-b1d1-4a91-aeec-43f24d55e61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25028169-f303-456b-bd51-4ff03b4a3f37",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6de6a5-8b0c-4758-b282-22aff415a19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cf6d85-75b5-4aa0-94ad-26e39239e01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a34dd0c-f4a8-40db-938f-deecdedd11e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7886e873-b8f7-4d80-9110-8fd7f349bf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f23107-d6cc-4538-8d07-1bfe20b4b9e5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501cad4b-fc4d-4da2-bbfe-caca13eab295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0883764-a514-4043-9375-0257a6555dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549f7f4d-5702-4852-9511-f63b890a2a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1f3697-fd07-420c-acf6-273bddbcf733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f68969-3bd2-479d-985b-494076835655",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f0966c-8a7b-422e-baa6-521426847e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c523aead-0881-4082-8068-13664e3a35d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785177e4-9b09-48db-a5c2-b36a8364324f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d49016-c5af-4443-bc4f-46486a46290c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5c14dd-ef40-417b-b4b6-47130b9bd1c1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68803ae3-3396-444c-b6b7-436402895b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3be7967-3c22-4a7e-9718-4855d92e04e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4958c07a-2120-4f53-88d9-977fda685002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b144f99-5c53-4ffd-8e56-0a9a552ac8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3797e7dd-e4db-4b95-8d52-967ac621b465",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9adae9ac-a5ba-4d35-9a25-8b334de1f3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd39896-56d0-40ad-a0cc-65266da8dbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d680a00-7635-4d6f-94da-c9b609480a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6cd4da0-c6f8-49e0-918a-bbf0412a2deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d15d74-a103-4e71-9393-02702b1b2d63",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f094b79e-72a6-4eed-be8c-57b7c384fc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c98e2db-a8ac-4ba7-9ad1-c8b11eb79566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f387c4ae-98be-4e13-9d79-fbb7497d1c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374060dd-a448-4fa0-b878-2a7708699001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4469874-f80d-496a-bc9f-d9db01486329",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1a8f41-9d04-4829-af60-3d8a2ead1e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f2c8de-8f1e-4d9a-8d17-adf8e397a312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d821312-ae58-47c3-a624-1566d345fd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c91583-5459-41d9-a3af-3de2a8200fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b95f5b-fe96-4642-ba48-4ccc77bc30b0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88828f6-85e9-4166-b2e0-dd2f86093530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2538dc1-d03c-4bc1-bbfe-54f65ea03f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87f8bf4-b6ee-4b7e-9c1c-744bf3e0a5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abfc4cf-5ac0-4ed1-838c-e3d99eb065d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29984606-a584-401d-aeac-33c5a181599a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793a13f7-29b7-432b-80ba-521d245055e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec597175-be1c-4cc5-9f6f-954891a22954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75e3b8f-ee9d-4564-b5af-0b58a73e826e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee59cf95-47ef-4a02-aff1-1f3d73c8d70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fcf0b9-5d58-43fb-92a4-d2362e7e3ff2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040e45e9-2eba-4643-ab40-dfd6d50e2cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fc78a1-1365-4370-ab03-194bf91dea64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b8c87e-9b18-45db-8358-67db996c1751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31e1920-def5-44da-9a84-fe266c942875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c48d9d-45f3-4d30-adea-4e1dc7bde13e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093db121-bdbd-484c-adf0-3e031f6a7d05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c6a5165-ce16-43b6-9cd9-0c4038029727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9694dd72-819c-4a9a-8f94-85dc01b6bd92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c1f6a1-f07f-459e-9f91-8d53aed623fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89c9122-c10d-4561-870a-f1fcee8fd268",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f14432-391d-4343-9a57-c9cc00623226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a15e1c32-c26c-4e98-8319-acde1333896a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d23e9f-d00d-4434-94de-ff000913a5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802bf85a-d1e9-4bc8-8d02-f9c224aaaefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8daafa01-d990-4ec3-bfde-6ca98727cae5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c85d96-91dd-4e6e-b963-1eea89634802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242813d6-1808-436a-a327-770948905152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480ff770-f6f5-43f7-9846-1780e415a9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe976d5-2d71-403f-a57d-95bc275457a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f230680c-ebcd-427c-8728-4c249809a57a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e610cb6-0915-4e6c-982b-1b2bbafda179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99258171-e3fd-4fdb-ba84-9a505958ebaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e99abc-98cd-4294-9ceb-6a4f4b0571ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a106cee5-f118-4bd3-a14e-77a4a48abe1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a08e09-321c-40ad-9e39-37d66244f2da",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832afe1b-2f15-4c2a-968e-42c8a7cad5c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "027b7f8c-9126-4927-8660-efdedacdf616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751b4b02-a1ad-4a32-957b-345521080cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78f9e11-4514-4ec9-aced-a30bc9b8e975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d42127-d085-4314-93f4-04a2cb5e0ec4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93736df-5670-42e6-b6ec-c6bef80de299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "932dbbc9-c27b-4163-8eed-c3642c56cd7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78439559-c3e9-4124-88b3-489d4565921c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200d80df-73b5-4162-b203-09faeec46623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a867b6-954e-4545-83ba-3a3758d3b9a7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6df4e5-fcd0-4743-81cb-ff70ed84b807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c3683c-dc50-4907-8d82-0a6028fd957a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcc3b54-da7e-4176-bfae-78632e45989e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4294514f-de2a-4765-9b9c-a9fd556f3d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6738f6-8f78-40a9-ac92-eb0922d0fd9f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bee6a2-0696-4e2b-b187-aad2c11ddc81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40de4525-4ab4-439e-8b21-df907f750954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a43d74-83b5-4d0c-a6b6-807a7b11dd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0e490e-42a7-489f-a174-19a9f33bd749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c430832-0d34-4c10-89fb-ff05a375ce1b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06bb8c4-524f-41f4-a9c4-d66ea37bba97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1daa5cc-6fe0-471c-ae2e-97cc78e70e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4136e9-1564-4f26-92e0-d9fa1d42cb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227c598f-53fc-4344-81ad-775a662aef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99e485b-efd5-4599-841c-3919e9ef8c1c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4428816c-c9eb-4436-93c3-3c1b443834f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a99331-0704-4535-bd7d-5b4b787cd846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f2b8cd-ed58-45ad-80b9-3e87793cd224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbe3b4f-a22b-4878-bfad-68c2ce7ddd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00f2c86-5838-4a4b-b680-b9b0193f37ea",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77624930-ca9f-4c8e-991e-0b9fee7e8baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6c58eb0-2703-413b-8f04-cff00aef55b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a76d6c-73d8-4682-97f3-036580256f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2296fa-4a7d-4897-bcac-026dfed50695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a300a8-65e9-4444-b69d-60eba1cfaa6c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e026f4-4311-4e77-bb75-55918db4a384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d064913-52bc-4718-a6bf-5a05d0b9e5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3ab732-e587-44a5-ba12-4ec32d29fb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0604420-a225-4c59-bfaa-9fe4b6104a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1042bb1-f98c-4f3e-97a7-034c41d306fc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f671dd99-7a00-4033-8c85-97a16e4a0122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b061f02-3940-43fb-8084-b2cd0cf6b9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb5a4d3-6cdf-450a-86dc-cc58edc66e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7897d38d-3603-4f4a-94ba-90108a27597f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7e8cdf-ecfb-4634-85b9-e0c1541017a2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71dfa938-a899-4fcb-8eb8-0b04dfddfcf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88df28eb-cc26-4c62-baee-d24641714a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48faf9b-8efa-4e57-83f9-f63abbdaedbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b4c960-be34-4e56-892a-91dd0b7ddab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090097d2-5ca3-4014-af2d-6e808589d8b2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1697c89c-5ae6-42a3-915f-40a7b7340cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb98a86-889c-4d55-bdfd-e925e0f04d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45959387-7969-4d4c-9d1a-0cd4c6c8f737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ec0acb-55aa-4313-882d-5c56c4e23e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddfd983-7e99-4611-93e5-1d623d129fa1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c7098a-9757-4284-b4ef-f0406acade86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "396c2276-2d8d-4cc8-8607-87dd17bf1fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fcabcd-4950-4abd-b435-84df0f9cac2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f57e253-058b-4c45-ab85-6d4968a5c8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b521edb-d693-43d9-b8eb-10e0049f1bfa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8500dfc1-8f41-43e4-a525-fe08aaecd991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f23d953f-d64b-4711-8a35-02260e3937f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7abd8fa-4f4a-4f93-846d-66911656e153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2dbcb93-7af5-4608-8567-26dea2fdb848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dffc3d2-2c0b-427e-9d4e-54bc71c5e4e5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6cb3d0-1a57-4060-88d8-473b7b3f2ab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9c0bc4a-1b6f-48ab-a370-c08843fb55fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcc0588-2865-46b8-94ee-a56d70a56ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee75dcbb-a954-4466-a872-86615fd094a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e3c9d1-a7b5-4c39-8808-e0a769724a33",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0186ca0c-7404-4583-9b29-8a9eb5ac6f0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9edcc362-cad2-4a6e-830f-8f7de36ebdfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e152472-fd3f-425b-8474-c27a38000360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8bf576-5bc0-47c8-a6f0-3c3fdfc7a9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a743ce-efb1-4b98-88d4-4d968a8f8994",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d782e29-61ad-4993-b9a9-a89f0b4a5e09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef5898a-0655-4c66-a594-d4f25e318d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d28871c-97cd-4f94-a62b-baeae7cd83c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d757c20-0f46-4e24-834f-98ca442821a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed774aa2-0ebb-4fb1-8e4a-85540ea53e3b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3a3b5f-0c73-4b2e-89c5-f4549ef52a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12feb1a9-0179-45fe-a6f1-2192d0e0b10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f3eb51-2891-4043-8b7d-468f72afc7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8171d28f-50ba-4357-af53-9e068f8f0971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c29d6a-d121-440c-be13-0ea158408345",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d75a6e8-6feb-455d-9111-5975b618f28c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6b256fd-a947-4620-b88e-39a1ba6fe97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b44fdb1-b2c9-4854-bea2-883eb78162b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b70892b-eb5f-4a7a-8d6d-9174caea9492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5dbea3-ae96-4947-8467-91f4aaa1d7d2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09b4aa6-b5ac-4634-8e42-e30edfc0da60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4128d79-089b-4ee5-8365-5fc123958426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a975d74-682d-4a43-a93d-6b0608db0274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d01c57a-ff93-44ea-a273-0574cfd2ce63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ddabfe-682b-41ec-b4b8-1f106a9aa5f2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85f9471-7347-4a63-bd12-092fb0423281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5261d78d-208b-4627-b80c-f184d340b8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fe42d9-ee67-4f2f-8333-60de03731638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408a2bf0-03d4-48ad-b589-5af850a9d0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84ccb21-9134-4113-a629-c0b41b399c5c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e20aae-fcc2-4ceb-8057-3ee992934896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7970d5bf-0099-4d14-a264-769f76137449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02722a15-18c5-42ea-89b9-6f28cf4ed24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c925f1-6a12-4c3a-a7f4-91a2d3dbb7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63962ffc-ca58-4572-8ba3-39bf4cde4390",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae6503e-87cf-4191-8f34-32b44adbef02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0fed994-3d19-449b-9aac-c5a02bc0825b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "869dd1f0-ae22-4459-803e-23283bea423b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b0b68f-f24f-455b-9e86-387809e60c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaddbcc6-7537-4ec6-84c0-e2a57269c91c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eedc89-05b9-479c-ba3f-9951112011c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7504ea5e-fdfe-4da0-bcb1-989fd1a7273d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbe9b98-72f4-4f44-9f94-ab9ef237a603",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16f49d9-f151-4cad-ae80-49b1d99bb1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6d1095-0d02-4494-88e5-320a1a354851",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc8c4fb-8c47-4ade-9288-b7376a8023c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c19344a-957b-4f06-afcb-927dec5e6418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54371cd5-39d7-440c-b69d-43d40df5fad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ad9434-ddde-4c10-aeec-c1bd0efbbcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c28694a-caac-4cce-b626-02b907f88333",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d59d047-d3b5-4416-a56d-980156cbc0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e9bca3-ea67-41ea-9f57-b470f1efcaa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5d3554-26e6-496d-bca0-cb8ccd36329e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeec9870-faab-4b02-a7cd-8fa2753c20d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a847de-d498-46ca-9cf1-5b7991605857",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42ead3e-08fd-49f2-95b9-11c91b52779c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26711e98-229e-4fe2-b2e6-9bf623deac27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3b226c-3207-4d2f-b87e-2b8b66951e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7f9b70-c879-40c9-af57-c52e0d412c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f8c376-ef83-4599-b809-b24f8b41ba34",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e41cbf-b67a-4dae-86f4-641be5aeae31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b397be2b-065c-425f-83fa-bfdc5ccd9ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57aabb4-f976-4def-9072-edd7e53491ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35748328-f160-43ec-b0e7-b6cb86c290ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f43c387-8c6e-4bd4-ade8-142a6d173778",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53764491-954a-4fba-8e8a-a06968709763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48320377-e4f1-41fc-a9d8-bc6e687baaa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5d2ee5-074c-4a34-bf9e-df46a654a515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ef399d-48d3-444a-ae46-a9e266bab408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3727a82f-346d-4402-b651-5e3b9297114c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322975f7-bc66-488f-bcde-10f0745f7675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d34f6579-3352-4292-9b19-fe975a438485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6785ac9-7c9e-46d0-a485-9310ef8a996f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb1031e-678d-4136-9462-84933bc090d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0fcc86-ef0c-4d08-8418-4bf91ea83289",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ccdeec-4d9e-4ddc-8494-4b032919a038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d8bd99e-8f67-4c10-8081-0e4b5e350384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f80b174-c9e0-4c5a-88bc-1e9cca9661f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54ae0c9-4f34-4eec-8fc9-9a0b61382f1e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d421b86-87c2-41e6-acef-e621796654d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ff86b85-f0e7-47d0-8746-711fda6f0617"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8778910e-f441-44aa-9ab4-2256bb64438f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52b6478d-3373-4085-b5d1-f6242f496577"
                    }
                  }
                ]
              },
              {
                "id": "ae996352-3e38-4703-89af-db5ed7feb16b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a536238d-4237-41a1-81f7-55a51c280b3b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a196e4-9baf-4469-9c7a-f51827539851",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "914f5936-fc47-47b1-a9e7-52fe39a4bafe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38709d21-4eac-49f7-a825-eae8f3bbeb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ceba456-98eb-4824-a2e9-282cbe28e1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2093ea3e-73d7-4448-8702-4f7f6ea48e72",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d17ac1-3494-4b74-b8f1-9b5e7d351e6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e835fc91-0077-45d5-be66-c48036d57ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592fc037-27c3-4ea5-bd39-45716e65864b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8ef2ba7-0346-4395-911d-0e9c13ef1357"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f24a81d7-c78f-4eae-aa10-b3926c1ad258",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6ff5de2-dea5-4869-93e8-9ac3b39c4fc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f995123-f0f7-43fe-883a-d0125035f74f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2dfcc94-d638-41ec-bed5-7f69c5fbfe8c"
                    }
                  }
                ]
              },
              {
                "id": "fe7cfbd7-8912-4e36-ad29-1f9685df2e1d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1caacbe6-737f-47ff-8701-d35ee2d09387",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f419e447-076b-4f0b-ad4f-20806c1f2b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "37ea5af4-2e11-436c-86d1-e928c1a8f238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa6483d-e775-45d6-9f46-a9d6ba2e5a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84715fed-b568-400a-9b2f-9cd3cba4bfa7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d2f15ec2-678e-498f-9904-1b8ba857b935",
            "name": "Positive Testing",
            "item": [
              {
                "id": "24a92750-0f8b-4c2e-aa47-f228ea7f411a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9a12c9e-3801-44b1-8e55-d3c33dde850b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cf67526a-140e-4c87-92d4-538fb4b346b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87e8b568-9aad-4ea4-9dd6-ab260a77dc03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c95d7f7f-6d28-47c3-8fd3-155db2e89e59"
                    }
                  }
                ]
              },
              {
                "id": "da2b9333-2f55-4f86-853b-812013439cdc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a498d052-89c1-455f-87d8-78d81e6ec81a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd1387b4-5612-42a5-9a3d-b8a301b35f80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30f2c643-15e7-4a29-a1a6-dd3d45f589e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7a0cb36-cac5-4180-a589-1b3a3e08d0c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f68389df-c97c-4791-af1b-9c824097143e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "995de6ad-99f8-49f2-b5ae-4076229f5ef0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e106de6-560d-48e5-ab30-f1c87c43f1b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd65b818-563f-4fe3-b4c6-3d347ebdeeed"
            }
          }
        ]
      },
      {
        "id": "0a31a5fd-49f0-4027-a588-acf1210dc06b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7c8d3f92-566e-4365-8ffb-fd52a2518a19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6611e277-ce9d-400e-8a86-b0abafc880dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3023dbc8-c009-42ff-b061-10112bd3b519",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c87ee2a-a482-4fff-b820-cbf42f29df8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "10c65a13-35c4-4b7d-8647-bb267ab92517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54810bf4-85d7-47c3-969e-d5c676d24437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81f015cb-369b-4b1c-83cd-3ead1769778e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08aa66ed-0e5b-4001-8300-3960d8b1e862",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d84b675-2291-40d7-b279-bcc90172fd36",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e243bf25-edd8-43b0-b41a-d358e1369c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e08613-e8ee-4f49-b1ae-8f0702ec7a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21416ec8-9734-419f-bd12-78a19cbd5a05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b4b0ec2-90cc-4b9c-a15f-a18c36f36cd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9345368b-dce7-4bba-ac38-18654de2177b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9348ffb9-18fc-4470-8f65-9c2a8f54c0b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "736aac1d-e701-421f-8e40-b09f223d685a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84ef2fcb-255b-40d0-9106-18cdc6043e91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "286da2cc-859e-4366-842f-0e48b48290ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fd6ad2f-73cc-46f8-a090-aa8d3bc94bb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dcac3e17-46de-46ad-abd5-9d1b2066012b"
            }
          }
        ]
      },
      {
        "id": "3caa73c2-939a-4b3f-b425-1a6120ffab84",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d4d50cba-a87b-410c-9b25-3e23539d9df0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95beac47-26ac-4e23-9298-55861b6f87a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3517a4df-2d34-484d-bfc2-bb50c48b6924",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0f9b0e-9139-45c4-8574-f7b81b3d5c65",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e60f4db2-c7a9-480e-a94b-85479bfec981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf16268a-4638-4ebf-ae4f-85fc077ee9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2928e42d-e636-4a2b-a064-f685326c450d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d42ec7-5dac-4a1d-867d-73e1d4dfb877",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afaf1f1-0c4c-4800-b4c0-b49fe6a2515a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e68bb082-40fb-494a-8e9e-519f75b79723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb508feb-ad24-4273-b73f-0b7b2aca56d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb4b863d-be4f-43c9-bc55-27a4d09baaca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97735a27-f450-4a28-8931-bde10a1be8d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4686939c-081f-495e-ac37-8e91272f187b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10db6ea9-e1c7-4521-a212-2676ab3b087b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9eb7abf3-f024-43de-abcb-89a3bfda05a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cecb201-8e58-44da-ac57-920b7b4036b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13ef1736-617b-40fd-802f-d3a2139b6761"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52b7bec3-a0a6-4dcc-94c0-de07488cfc2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9b050e3-15e5-435c-970e-82ec2829800a"
            }
          }
        ]
      },
      {
        "id": "db4aa064-a5c2-4083-b1b0-df463d337570",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c136b401-afbb-42c9-a6c3-39dc603ed653",
            "name": "Negative Testing",
            "item": [
              {
                "id": "829b8361-2339-4900-91c7-f062e3b4cc52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "537e3174-4678-4c71-9194-fa5436f4b5fb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af35dd34-6e6a-4b01-9dec-ff235aeeaf90",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4185536f-88ba-4ce5-b093-5729953bbb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd0e887-15b7-4765-a57a-5fe72324797c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9238e0cc-355f-41b6-a21c-9c9c9d5a2d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7e1597-3407-4f6a-bf1c-75c594350255",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a1e0c1-becb-4f85-a01f-c820cc456c7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "20e631f9-6104-4c08-83d9-62ec6bb8815a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f1a8e3-8226-4a0a-ad69-e4f1ab61f261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "552cabec-c865-4b4a-81be-f06a342d72b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e0df1b1-3dbf-4a91-9afb-46f177b86398",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12109b04-58bc-4bda-83d6-785bed303bcc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "233ade45-d61f-41c1-b70a-f198356baa33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d918726-6c2d-428e-b4cc-518a3e4e90a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36072a3e-f8e3-48f4-8ebd-d59dabd44370",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6b0d6393-1a03-4ef2-81ff-9345e1cf3929"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a4bf231-6130-481f-949c-0fa2a33f778c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be102093-d211-4065-a25e-29d68b878bad"
            }
          }
        ]
      },
      {
        "id": "1d47197b-38f6-45de-a9de-79c23536a624",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75d16225-4b27-469c-aae1-394435dffe6d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6d5406b-9724-4a47-9b5c-5884d2a744b1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c2d3fa4b-43b1-460b-93a0-6bd71d6839ba",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5817ed0a-a77d-4f7c-bc58-8ae830a320ee",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9c0885b-bcb7-459f-8f08-7d6949f46ec2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 640.4749034749037,
      "responseMin": 10,
      "responseMax": 6807,
      "responseSd": 744.185166548942,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677860694667,
      "completed": 1677860871382
    },
    "executions": [
      {
        "id": "6983df41-40aa-4a05-b8ce-70f57fdebedb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b40096fe-b2b7-4f24-980c-5364f4d6b351",
          "httpRequestId": "8cb3a881-d089-4abc-a913-641876651396"
        },
        "item": {
          "id": "6983df41-40aa-4a05-b8ce-70f57fdebedb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b17a9674-ddd6-41f9-a88f-6ae72d791fac",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "3d256017-3c2f-482f-9c0d-e8752af09e39",
        "cursor": {
          "ref": "fd090899-536e-4486-83cd-92d6fb784334",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "72a3c70e-d29a-4dbc-bc85-67f7b0f80e95"
        },
        "item": {
          "id": "3d256017-3c2f-482f-9c0d-e8752af09e39",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "974b9da3-2e06-4638-aa35-8be4d94b2b50",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "d967b1e8-0a86-4fdd-b825-9bd69c550187",
        "cursor": {
          "ref": "699d6d5e-1238-45e4-b72f-ea3c0543fa82",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a400f33e-a555-4a12-928c-69ea14e74ffe"
        },
        "item": {
          "id": "d967b1e8-0a86-4fdd-b825-9bd69c550187",
          "name": "did_json"
        },
        "response": {
          "id": "5a4a2cac-cce0-4ecb-838b-983b0ec2c374",
          "status": "OK",
          "code": 200,
          "responseTime": 858,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92288998-eaef-45e2-9278-f1d6303c97a4",
        "cursor": {
          "ref": "b27300b6-9bf0-4435-a411-5d2acec35d89",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "27f3fb49-9419-439f-867a-a93e3d0b0583"
        },
        "item": {
          "id": "92288998-eaef-45e2-9278-f1d6303c97a4",
          "name": "did:invalid"
        },
        "response": {
          "id": "8cb4e73b-83e6-4173-828c-dbc5b01b211f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92288998-eaef-45e2-9278-f1d6303c97a4",
        "cursor": {
          "ref": "b27300b6-9bf0-4435-a411-5d2acec35d89",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "27f3fb49-9419-439f-867a-a93e3d0b0583"
        },
        "item": {
          "id": "92288998-eaef-45e2-9278-f1d6303c97a4",
          "name": "did:invalid"
        },
        "response": {
          "id": "8cb4e73b-83e6-4173-828c-dbc5b01b211f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233f77e8-d564-4d91-b10b-cee05ef8ceb9",
        "cursor": {
          "ref": "a4967571-ef27-49ca-9620-4a3ad6451680",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a1f8bfe7-38d1-4e43-9842-8c9864271ab2"
        },
        "item": {
          "id": "233f77e8-d564-4d91-b10b-cee05ef8ceb9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0c456976-0362-4677-8039-1ad5296c9302",
          "status": "Not Found",
          "code": 404,
          "responseTime": 608,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43fb56f-acbd-40df-98f0-682462b0c4f1",
        "cursor": {
          "ref": "ed79324a-8fe6-486d-80fd-bfe427c8f672",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c4adac74-2a43-4d01-838f-b1c6b54b8b86"
        },
        "item": {
          "id": "f43fb56f-acbd-40df-98f0-682462b0c4f1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1ddc7c86-8a3e-4b0f-aea9-df019ef61f70",
          "status": "Not Found",
          "code": 404,
          "responseTime": 586,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f19436-fc68-437f-af28-bfc70029a5f1",
        "cursor": {
          "ref": "560caf10-cfcd-4cb3-92af-20d8e4d44bed",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0fd35b47-b837-4333-a881-4ef318c04b9e"
        },
        "item": {
          "id": "72f19436-fc68-437f-af28-bfc70029a5f1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "20ed175d-77ab-4b2b-bb70-c026b1eb05f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bdcad0-3aab-4645-87e0-abf4c01bdfa2",
        "cursor": {
          "ref": "4746f1e0-6a06-4c6c-bd72-2bc0d8c88b32",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e043e68f-c3d9-41a9-ae8b-a2951a555536"
        },
        "item": {
          "id": "c9bdcad0-3aab-4645-87e0-abf4c01bdfa2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "63ade351-09e7-463a-adfb-364709a1dc04",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 748,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bdcad0-3aab-4645-87e0-abf4c01bdfa2",
        "cursor": {
          "ref": "4746f1e0-6a06-4c6c-bd72-2bc0d8c88b32",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e043e68f-c3d9-41a9-ae8b-a2951a555536"
        },
        "item": {
          "id": "c9bdcad0-3aab-4645-87e0-abf4c01bdfa2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "63ade351-09e7-463a-adfb-364709a1dc04",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 748,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18d9199-6a34-4046-90d2-e1228f1ce98a",
        "cursor": {
          "ref": "ecf82c96-3fed-44e6-88e1-0b6fa703e7e3",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "35001bed-fec4-4fd9-9c7d-40ec329590ef"
        },
        "item": {
          "id": "c18d9199-6a34-4046-90d2-e1228f1ce98a",
          "name": "identifiers"
        },
        "response": {
          "id": "ea299a9d-d38d-435d-8e6e-7ab9c00ddc8c",
          "status": "OK",
          "code": 200,
          "responseTime": 1050,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e36f97-4e03-4f06-b9c0-6e1e343cec72",
        "cursor": {
          "ref": "87da9496-3e04-4eaf-a598-8f4a0c9e1882",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a3c4c9d6-ff00-4136-807e-060a562a3a70"
        },
        "item": {
          "id": "35e36f97-4e03-4f06-b9c0-6e1e343cec72",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fb75316e-92bb-46db-b6dd-4701a028bec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e36f97-4e03-4f06-b9c0-6e1e343cec72",
        "cursor": {
          "ref": "87da9496-3e04-4eaf-a598-8f4a0c9e1882",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a3c4c9d6-ff00-4136-807e-060a562a3a70"
        },
        "item": {
          "id": "35e36f97-4e03-4f06-b9c0-6e1e343cec72",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fb75316e-92bb-46db-b6dd-4701a028bec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad4cfd-9fae-49e1-856d-bce5084137c7",
        "cursor": {
          "ref": "515a7646-876f-4774-a3d1-c99adedb1998",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "711bc211-7839-49c5-a6be-f6d3fa0b206f"
        },
        "item": {
          "id": "99ad4cfd-9fae-49e1-856d-bce5084137c7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "beb09830-3a98-4694-a652-b3a7ef86ef26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3af0c3-6acb-48c7-899b-7fb126136539",
        "cursor": {
          "ref": "b00bd962-d48d-4551-8daa-c6d8c6d4e6d1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5c4baa7c-c9c0-4639-ba52-a2ef1b9c3798"
        },
        "item": {
          "id": "ad3af0c3-6acb-48c7-899b-7fb126136539",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "04b3243f-6419-421c-8880-359abc771a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6b8648-7051-42b7-8e0e-d5f2a6dfbc8c",
        "cursor": {
          "ref": "924956c7-7914-41b7-8f07-4d179b444e8e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "086b426a-10ae-465d-885c-6903abbd9fc0"
        },
        "item": {
          "id": "eb6b8648-7051-42b7-8e0e-d5f2a6dfbc8c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3cd08e53-4f2d-4db1-9eca-d1abe2b9052a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92ed49c-2b62-4c2c-bf28-3f17ad848942",
        "cursor": {
          "ref": "84fdedb2-aaa0-4191-850c-3a60ba1d83ac",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b50a7ca0-0375-4cc5-af1d-3db5dcd062b8"
        },
        "item": {
          "id": "f92ed49c-2b62-4c2c-bf28-3f17ad848942",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b0bbc9a3-eb95-41f8-8cd1-2e9f85fd4d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c3c437-2756-4c9b-b5a9-3d621c1875ed",
        "cursor": {
          "ref": "7f05de99-722c-4393-8402-794d602537ae",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5df09c24-f552-4ca4-ae18-751838e4a656"
        },
        "item": {
          "id": "30c3c437-2756-4c9b-b5a9-3d621c1875ed",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0d6433e4-5d91-4e70-b5ca-13a930abeb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895ebcaa-e560-4975-a4e2-d3a76b8a202e",
        "cursor": {
          "ref": "c71ca3c4-b45a-40a5-ad83-554bb1163397",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "14458e97-52a5-41db-8c32-254320113d1d"
        },
        "item": {
          "id": "895ebcaa-e560-4975-a4e2-d3a76b8a202e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b06cfefb-d1a8-4044-8e50-5db6ec9a20ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9efe4d-e271-479c-81af-24f7b47af3b4",
        "cursor": {
          "ref": "1ecb3e06-1a77-4b0d-842d-5345fb5d9340",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1797d693-4275-49ed-a005-16fe36519e0f"
        },
        "item": {
          "id": "ac9efe4d-e271-479c-81af-24f7b47af3b4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3cbac5aa-4fda-495a-a892-186196c34d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734b86a7-9720-47d9-9276-64db21def691",
        "cursor": {
          "ref": "5823f5e4-c4a0-4fa8-bf6e-0c68a8115311",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3a867958-9da4-4b32-a275-f3c8e28ba5a7"
        },
        "item": {
          "id": "734b86a7-9720-47d9-9276-64db21def691",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7c355781-881a-4d12-a7b2-6320eb2f3bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde02030-9938-40ae-b646-44c822291504",
        "cursor": {
          "ref": "cde7bf4d-bce0-4912-8844-9153b0904834",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "22e06efa-0d74-4a4c-af61-52f0468bae35"
        },
        "item": {
          "id": "bde02030-9938-40ae-b646-44c822291504",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c4b465d9-484f-45b5-8f58-dd9e7aa60c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05abb09-b538-418d-8ab0-df21a9951dc3",
        "cursor": {
          "ref": "dc0e7990-a174-4e79-b015-cba3d3f6d0b6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "50436c02-2cc5-445f-8244-c000b715a6aa"
        },
        "item": {
          "id": "b05abb09-b538-418d-8ab0-df21a9951dc3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "76120a77-0a9b-4a3f-b238-f1dc4ae2cf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385c9649-2328-4fab-94c5-995b48b083fd",
        "cursor": {
          "ref": "24863962-a9a9-487e-99d4-95da5ed5b83e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "81c94a15-e996-4b36-8dbf-8ffce97dc171"
        },
        "item": {
          "id": "385c9649-2328-4fab-94c5-995b48b083fd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "012c4548-031d-4b95-a5b0-fe2a9df7d4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83339748-9778-4f3a-b1ea-b26d9ee5a12b",
        "cursor": {
          "ref": "4d4359ec-5c0d-42d3-a6ac-c7009d4d33bf",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fd0577f4-7d04-455b-afe9-511bd8b38443"
        },
        "item": {
          "id": "83339748-9778-4f3a-b1ea-b26d9ee5a12b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7e87649a-31b0-4d4f-b8aa-4c4df1d05144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f8a2a3-1054-4e64-944b-97e07e09bdf1",
        "cursor": {
          "ref": "69eb7eb6-b0f7-430c-bdb9-e08bdf59d221",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "48bb0870-e119-4729-a8fe-3755f47d9125"
        },
        "item": {
          "id": "91f8a2a3-1054-4e64-944b-97e07e09bdf1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "08a5e306-b0f4-4604-a3eb-1a187a01391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23632f58-4e0a-4827-ae56-2d81f4f96a19",
        "cursor": {
          "ref": "078aa1be-c1ca-48a2-8f6e-671877a0f6af",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "52696eda-56ee-47be-8985-b9439bd01913"
        },
        "item": {
          "id": "23632f58-4e0a-4827-ae56-2d81f4f96a19",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "33f5196c-a789-46b5-b8c8-dedcc61c9d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0747fd49-ae0f-4dde-a6b8-50a6abafe5a3",
        "cursor": {
          "ref": "37ae19d1-8a0b-4166-9837-840b503e2f17",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e11d7d63-be95-4e15-b525-1e0cacfb464b"
        },
        "item": {
          "id": "0747fd49-ae0f-4dde-a6b8-50a6abafe5a3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "871c0972-8dec-4625-94ef-3630c61140e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b76ea7-8bbe-44e9-9a48-a4d81d4027e8",
        "cursor": {
          "ref": "87120686-419f-476b-98dc-6e240d0b844f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "34299ab9-208f-44a8-8261-52685afc30d3"
        },
        "item": {
          "id": "d6b76ea7-8bbe-44e9-9a48-a4d81d4027e8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c017a13a-bf87-4e39-b40f-cc190e37658f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa8312a-3ee5-41a8-89cd-863b0d43d672",
        "cursor": {
          "ref": "a3062b38-2b15-4263-be27-be31395b5ada",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "158535da-b164-443a-be7e-b83ca29e2c61"
        },
        "item": {
          "id": "2fa8312a-3ee5-41a8-89cd-863b0d43d672",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "07aa8e28-c753-46fe-ba05-1d8011a65457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec415ac4-0106-4ea7-a77a-682f79b7b09c",
        "cursor": {
          "ref": "59ea14e4-3ee4-477b-a24c-67497eb19514",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "425457ee-5016-4933-9f82-e9c00f14e1f3"
        },
        "item": {
          "id": "ec415ac4-0106-4ea7-a77a-682f79b7b09c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "00b35a98-0cf7-42ab-932b-e7c4a710de4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df705ac-dbf1-4157-af26-c6da02bb4f5a",
        "cursor": {
          "ref": "e24caca9-6b96-45be-b7d7-10f026b09ecc",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3a358b57-776d-4367-9b8f-019d96dee2c6"
        },
        "item": {
          "id": "3df705ac-dbf1-4157-af26-c6da02bb4f5a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f91db758-71ba-41f1-8641-124faf2e5489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc82106a-aac2-4161-9093-7575aebb4ecc",
        "cursor": {
          "ref": "cec061f7-f48b-4183-a7a3-ac1baf73cacb",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a8d869c6-33f0-4522-8b65-e1af164531d5"
        },
        "item": {
          "id": "fc82106a-aac2-4161-9093-7575aebb4ecc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f8703f65-498e-40e8-b0a0-048e231be780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181aff69-e653-4ca0-a740-95e669bd7510",
        "cursor": {
          "ref": "2adee16d-0c18-4892-9261-755c63d0f15c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5d02ee83-9216-431b-a0b5-8e29aad41515"
        },
        "item": {
          "id": "181aff69-e653-4ca0-a740-95e669bd7510",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ed0d73f3-6f29-4c4c-9c6a-f7d0afd00370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78012bf6-968b-462b-9ffb-9776015354a1",
        "cursor": {
          "ref": "fc3b3605-a51c-4f27-a8d6-69eae7877571",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "31a0a894-0969-4281-a115-b9d5d403ebc3"
        },
        "item": {
          "id": "78012bf6-968b-462b-9ffb-9776015354a1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fd8df70a-0dcc-4752-9697-3bf1ffc018f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb35d9f-f8b7-4d3e-b66e-72c5aa4fbed6",
        "cursor": {
          "ref": "1de5c8d9-3b68-400d-91b9-a6154d7a5d73",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f1728f47-a944-445b-b432-4181887f3f4a"
        },
        "item": {
          "id": "acb35d9f-f8b7-4d3e-b66e-72c5aa4fbed6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dd55fae0-0b62-43c4-8c67-1f0f15483841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42f7d43-7339-40fb-92c0-e1d535e3d462",
        "cursor": {
          "ref": "db2e28f7-bf8a-4c1c-a636-963177877c4d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "88e5af51-a200-481c-8f9d-fa353a57f308"
        },
        "item": {
          "id": "d42f7d43-7339-40fb-92c0-e1d535e3d462",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b0b1ecdb-304e-4757-9a54-722769621ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f56deb-4717-4971-b4ce-30e5eb536cd0",
        "cursor": {
          "ref": "1765a772-a2c1-4bcc-b7a4-2c9cc47a5590",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "618aee38-a4be-4dad-bbfd-f95d47d4d9d0"
        },
        "item": {
          "id": "f1f56deb-4717-4971-b4ce-30e5eb536cd0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f5f5f282-d9ab-4b8c-af40-3ffe15dc452b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843ea51d-15aa-45aa-bce2-e7b3824daf08",
        "cursor": {
          "ref": "539e80d8-b6d5-4039-8805-24485e4f6f3e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0552277d-6c14-481e-a773-79bf25e6b911"
        },
        "item": {
          "id": "843ea51d-15aa-45aa-bce2-e7b3824daf08",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4f900969-d456-4544-aa2f-e784ad16eed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c138d434-7292-405d-b6f2-4c49f96577fe",
        "cursor": {
          "ref": "963125f4-ec71-4aec-849b-d3607d8ce36b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1a43f19c-180f-4f01-9cde-d383e9f84e78"
        },
        "item": {
          "id": "c138d434-7292-405d-b6f2-4c49f96577fe",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d871a154-4776-41aa-89bb-5ca7dfb2e286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24046309-37a8-42e9-b318-c9a1a1320f89",
        "cursor": {
          "ref": "9396fdaa-4678-4f7b-9889-48135e96736b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "43c59ddc-f66e-4d78-9eb3-19a605ab9195"
        },
        "item": {
          "id": "24046309-37a8-42e9-b318-c9a1a1320f89",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "68d90605-d6eb-434e-a114-6aeead444833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ac1b12-2013-4712-bc33-5682f4011c0f",
        "cursor": {
          "ref": "16484472-ac69-4dd6-a6d0-f8f4a61b00b4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b1a38387-ad4b-4ab0-82e6-f7e476bf9cc3"
        },
        "item": {
          "id": "f4ac1b12-2013-4712-bc33-5682f4011c0f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fc7510dd-053d-43bd-9b1a-a19f6edba4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355bcbaa-7a7f-4912-94ab-60724a776fd5",
        "cursor": {
          "ref": "6a453b96-cbd2-4e03-840e-6baa3eae4be4",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "90cdf637-1fc5-492f-8ca9-873f52472f94"
        },
        "item": {
          "id": "355bcbaa-7a7f-4912-94ab-60724a776fd5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "96e400d9-25b9-404b-be9d-a1534f8dc5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ef468a-b13f-4f05-bf7d-9d3bca3604b3",
        "cursor": {
          "ref": "af4a6a46-fdf4-4408-a031-649f9f89aa53",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "66c461e9-71d2-486a-9096-f7bae03f25fc"
        },
        "item": {
          "id": "58ef468a-b13f-4f05-bf7d-9d3bca3604b3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "231d78d1-7196-4bd6-a2f0-a116df8697ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bbdf6d-ed3e-4f74-beaa-ee7be226b9a9",
        "cursor": {
          "ref": "102710de-43bd-4b9b-8d91-e0a9bf3fa346",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "19cefd29-a84f-40c6-91ca-4381587672f6"
        },
        "item": {
          "id": "e3bbdf6d-ed3e-4f74-beaa-ee7be226b9a9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c1ac8eb0-f7f4-488a-a26e-445c463e281a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ac65d0-bf62-4c91-ba5c-14eac51ee854",
        "cursor": {
          "ref": "7c2674bc-74bf-4279-b622-f54105aacd95",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2db533bb-71e0-43a1-bcb6-2096b98f77b1"
        },
        "item": {
          "id": "86ac65d0-bf62-4c91-ba5c-14eac51ee854",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5278b0c6-a566-468c-b372-fd1519139257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8681d3db-93de-48ee-90f2-3dc4d13c0147",
        "cursor": {
          "ref": "5d0459c3-f2e9-45be-bcb8-425e5e4e6104",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4f34681a-a0a1-40f4-84d3-0d9337d96e31"
        },
        "item": {
          "id": "8681d3db-93de-48ee-90f2-3dc4d13c0147",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "71d40a9b-a37b-4a15-adfe-5c5adc4eb807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df064c9-619f-4457-82f3-8c36b10a73d5",
        "cursor": {
          "ref": "4f6ef543-c862-4ae1-a64e-199c07a3621e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "30bef94a-ebec-4f5e-ae16-823086792cdb"
        },
        "item": {
          "id": "0df064c9-619f-4457-82f3-8c36b10a73d5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e3dde15a-fdef-453a-9d27-9455ab8b1938",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1393,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b028cc3-4d99-4731-b281-e2cf8e00c0c5",
        "cursor": {
          "ref": "f6f4e457-8af9-427e-b215-93c2efd6b654",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d4336f13-b15c-48b0-8365-93dfa0494d08"
        },
        "item": {
          "id": "6b028cc3-4d99-4731-b281-e2cf8e00c0c5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2ad14c5d-1100-433f-9924-9abe3472bdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1146,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0316edf8-3a61-4ed9-b1cf-efddc548318a",
        "cursor": {
          "ref": "1885512c-2e32-4023-b92f-2a7baf2b1c6f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0c0555f8-ab55-4725-9dcc-626edc5bd509"
        },
        "item": {
          "id": "0316edf8-3a61-4ed9-b1cf-efddc548318a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a891a47b-db51-4268-a7ec-4ecff61414f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1009,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe63665-d63f-4444-9144-a8a0d52dd66f",
        "cursor": {
          "ref": "3266c146-e2fe-4780-a10f-c4a020121721",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c211c3a5-ac3c-4f08-b492-554299835dfe"
        },
        "item": {
          "id": "0fe63665-d63f-4444-9144-a8a0d52dd66f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "edae2567-d75e-4f4d-b16e-1aa1bb3ae6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5336782-9dec-4473-9fd6-5d6ac20ef5be",
        "cursor": {
          "ref": "f81ef220-d150-4a36-8846-94f1bb18fb7c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f931dd9c-20ca-4c5e-a72c-c594ef49f4ed"
        },
        "item": {
          "id": "f5336782-9dec-4473-9fd6-5d6ac20ef5be",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aeaf02e0-89fc-4614-8f3f-5678b690301e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795f06c7-4fe6-47eb-9d2b-5b47f80622c9",
        "cursor": {
          "ref": "0171becb-3dd8-4d17-8318-ab11c982fc23",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "345e4fda-ba1d-46c2-a814-f9d47dd767cf"
        },
        "item": {
          "id": "795f06c7-4fe6-47eb-9d2b-5b47f80622c9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e888a1f3-ea77-4a89-a745-a3dbc74fc923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef8b55b-884f-4dd6-8eea-9180414af007",
        "cursor": {
          "ref": "148ce5e6-9056-4fd5-baec-786d23a2a8f9",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4827c2b9-e763-4bb6-b78e-b26065f10129"
        },
        "item": {
          "id": "6ef8b55b-884f-4dd6-8eea-9180414af007",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "47e441c9-798f-4a2f-b627-0d82ad59756b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608754ed-bac2-43ba-9508-46556a087a83",
        "cursor": {
          "ref": "c6608cab-1948-4ef0-9122-b1b9f6a3c7c3",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9648ccd1-3e54-4265-bbf3-bd9b3d7cbcb3"
        },
        "item": {
          "id": "608754ed-bac2-43ba-9508-46556a087a83",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "add497e6-2229-4065-b441-96d69502f43a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 674,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bbea20-6003-4e28-9410-e03f1e976e12",
        "cursor": {
          "ref": "4b0ef439-08df-460e-8465-a3a63ba426c9",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "93817e2d-50b3-4f57-9aa3-73d919c84ddd"
        },
        "item": {
          "id": "68bbea20-6003-4e28-9410-e03f1e976e12",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f487fbff-1c65-4317-88f6-3cdd84b44815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2fd8da-c8d3-4b8b-a16d-42fa98f32e62",
        "cursor": {
          "ref": "6844e4eb-b518-43af-bc1b-f86b03d72474",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5c45113f-feaa-453d-8efa-cd6a7e2a8e0e"
        },
        "item": {
          "id": "8d2fd8da-c8d3-4b8b-a16d-42fa98f32e62",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ac574c7f-ffdb-4276-8f80-ced2aa8f2eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040cddb4-45bb-4bca-9dcf-6e393f32c507",
        "cursor": {
          "ref": "6018d29d-9699-4b78-b414-0cdc2e37f07e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c1d52152-e0d3-4ba4-95b7-aca4879bcb46"
        },
        "item": {
          "id": "040cddb4-45bb-4bca-9dcf-6e393f32c507",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d87f9901-1303-4c95-9aab-d958aebca8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbadf760-000f-43f7-827a-794fd74d2d23",
        "cursor": {
          "ref": "59d161dd-0599-4623-a64b-82955338ea57",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "99c17c29-047b-40e5-96d8-499c7d199e99"
        },
        "item": {
          "id": "fbadf760-000f-43f7-827a-794fd74d2d23",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "19d0df45-534e-4bbe-a370-0069d2d21ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa5d2f2-f3db-4609-a699-765383137c99",
        "cursor": {
          "ref": "06c1a0e6-efb7-4a3d-ade9-a74923635a62",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8faa0a20-81de-41b6-9f8b-515ae0e1be95"
        },
        "item": {
          "id": "6fa5d2f2-f3db-4609-a699-765383137c99",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "18623c38-179d-4d62-ab80-8ddbdb6fa52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29c4727-9793-4870-a36e-bd70eaf66471",
        "cursor": {
          "ref": "088db2aa-fd92-4084-aa6a-81ceae070124",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2bfcf6b4-88d7-4c04-af97-b5c574ade2b6"
        },
        "item": {
          "id": "f29c4727-9793-4870-a36e-bd70eaf66471",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0f26a9ad-2864-44ea-92d0-8e07a381b881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9106b8-742c-4181-a658-5c83c9853847",
        "cursor": {
          "ref": "ab8499ce-e8e9-4da3-a5e7-b51e73462d4d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "61e3dc95-f193-485a-a1c1-cb588066cdbc"
        },
        "item": {
          "id": "1c9106b8-742c-4181-a658-5c83c9853847",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f269ee93-3a9b-4571-8945-d5d19f6ebb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cce87f-fc18-456e-8dc3-3eb18160ed99",
        "cursor": {
          "ref": "9afd53aa-b88a-4386-806d-363d7b68e669",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "956b1858-510b-4b23-8cfc-d29567e1bf0e"
        },
        "item": {
          "id": "88cce87f-fc18-456e-8dc3-3eb18160ed99",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c9b470b6-7032-4265-a1f0-a73220896a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6939841-b04a-4029-b3be-fa5220465a81",
        "cursor": {
          "ref": "f4ff7529-285f-4131-97fb-9a1dcb161244",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7830f44c-8b36-4267-bd2d-aa4d38b961c7"
        },
        "item": {
          "id": "d6939841-b04a-4029-b3be-fa5220465a81",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f7cdfffb-6707-46c6-a0aa-2c533f3ddee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275d38c4-e343-4e7d-8b21-78aae471fb33",
        "cursor": {
          "ref": "cb24de7a-7173-4906-a2bb-147da9b02c01",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "41c2dd70-f953-4ba0-8a3b-243da10d8a08"
        },
        "item": {
          "id": "275d38c4-e343-4e7d-8b21-78aae471fb33",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fbb0b4da-6b78-42c7-a5eb-feeb11808f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a188280-4f96-43d0-9a13-b03cd5dd85ca",
        "cursor": {
          "ref": "18db0810-ca99-4d57-9bde-31d402ec0931",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "79a552be-57f1-4f53-810c-37f4e8bcb9a2"
        },
        "item": {
          "id": "3a188280-4f96-43d0-9a13-b03cd5dd85ca",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "26701cb9-52c7-48cc-a285-46104479389a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce265fc-1622-40cd-896a-812edf5222d3",
        "cursor": {
          "ref": "1d1f1fc4-4823-4639-9967-b3d9269b7e0e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "999f7a6d-2d75-4c80-a2fe-50fe211796bf"
        },
        "item": {
          "id": "9ce265fc-1622-40cd-896a-812edf5222d3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9d1c8588-6a02-428c-9264-29ebeffb40cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a55feab-f32b-428f-9fef-d7d645424c4b",
        "cursor": {
          "ref": "95625cc8-3851-4cd6-91aa-e25d8660119d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fa7359cc-5e98-46af-8571-2a4234df6357"
        },
        "item": {
          "id": "0a55feab-f32b-428f-9fef-d7d645424c4b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c775c2d8-ae4a-41d7-b59b-5a1e483fb1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4de9678-c1d5-4f13-b2ef-c469a7a8df01",
        "cursor": {
          "ref": "e8f00fbd-fe5a-4763-87de-08053e3daa92",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8895553d-0425-41f0-af9e-e67b6bc530fe"
        },
        "item": {
          "id": "f4de9678-c1d5-4f13-b2ef-c469a7a8df01",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dc84bcb6-3e06-4936-b89b-b3f2d5973f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6933cda-5bd9-4b94-94b2-72b3fbb1fa87",
        "cursor": {
          "ref": "ffe20c85-0a27-429c-b6c1-1e4aff53f828",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c3277a3b-337f-45f0-bda2-5babe84debc0"
        },
        "item": {
          "id": "e6933cda-5bd9-4b94-94b2-72b3fbb1fa87",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "86ecef92-091b-45b7-a6d9-092e6df8daf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ebac4d-d800-4bd2-8a82-f96ae346296d",
        "cursor": {
          "ref": "ba62565f-2bf3-458f-9580-cf8071842ba2",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2fc8d9e8-c77b-4bf9-980a-d638f19b95bb"
        },
        "item": {
          "id": "e4ebac4d-d800-4bd2-8a82-f96ae346296d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6f47b244-2986-435c-93ce-0180518ef23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ea7b31-6f31-47d1-8b8a-7bc309dca0f0",
        "cursor": {
          "ref": "af10aad0-163e-4668-94ac-8b57fdd0d633",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "19ee03f9-2686-44c5-814a-4ff18e96dde2"
        },
        "item": {
          "id": "b4ea7b31-6f31-47d1-8b8a-7bc309dca0f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "92fa89f9-0d77-477a-92b3-30dc166c549f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063f1697-445b-4051-9a33-4eb642abb4db",
        "cursor": {
          "ref": "59220b4b-f55e-4f5f-bff5-6d222d297727",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d9b091f6-7d96-499c-9d0d-54e23f692720"
        },
        "item": {
          "id": "063f1697-445b-4051-9a33-4eb642abb4db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b13f0564-1c54-4f36-be32-1bb06ed0d5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d335f96-5e9f-4308-8397-58607ad4104a",
        "cursor": {
          "ref": "f297c2a9-432d-4b0c-b522-3c83a3adb620",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0cd33c8f-cc77-4a9c-813d-296e3d72cbd6"
        },
        "item": {
          "id": "9d335f96-5e9f-4308-8397-58607ad4104a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5bfd6dba-c0ca-481a-a61c-4f7d4c3662a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e99e8d-5046-43d8-9795-ef8eb8b13f9e",
        "cursor": {
          "ref": "bd62e0f4-407c-4a6d-bbbd-2bc23865d69c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d2365e0f-8a6c-4445-bc88-20d86bdf2bfb"
        },
        "item": {
          "id": "20e99e8d-5046-43d8-9795-ef8eb8b13f9e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8f735417-f74d-4b7e-be75-c11590d92ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c938237-8f62-4ecb-9a68-2f2acc994f2d",
        "cursor": {
          "ref": "e9429a82-31c7-4867-9ce3-b3f03f6efe95",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "70e1c89f-3ea8-492e-802f-10a7e5a61586"
        },
        "item": {
          "id": "1c938237-8f62-4ecb-9a68-2f2acc994f2d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3775a459-5582-4f0b-ab67-77bb4e1cd4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050167a4-fa04-4d12-9822-7484a0f6cc58",
        "cursor": {
          "ref": "84435d11-d64a-4536-ab5f-fda39b43cfdd",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f03853ea-ccfb-4ebc-ba05-74eb01f497a4"
        },
        "item": {
          "id": "050167a4-fa04-4d12-9822-7484a0f6cc58",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7ccb512c-6d7b-4df1-bb4a-17662f42d7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eea34d3-2da2-44d0-885a-e0f6c29800dc",
        "cursor": {
          "ref": "d4cbb6a2-e069-43ae-b6a9-fa5cfc92d752",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5bfd191d-b95a-4246-ad08-dfcd9b3f4aa3"
        },
        "item": {
          "id": "4eea34d3-2da2-44d0-885a-e0f6c29800dc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "26411b9b-af33-457e-9709-e53ea3da784e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2196215a-54cd-4ce8-b66f-493c26786b3d",
        "cursor": {
          "ref": "cb6503b3-1ed5-4bdb-a322-2275712e2904",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "55b8be26-404c-4b62-a90c-6cabb0fb76d4"
        },
        "item": {
          "id": "2196215a-54cd-4ce8-b66f-493c26786b3d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4d8fdbc8-c254-462c-b4fe-87f22d1d8488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab69ab2-78b7-42b1-9c66-15684a4211c1",
        "cursor": {
          "ref": "183e1549-539e-4e03-8503-206cb2b9f1ba",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bb976e7c-4906-44ad-b50e-fe3f1d92870e"
        },
        "item": {
          "id": "0ab69ab2-78b7-42b1-9c66-15684a4211c1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5bfe299f-27ec-4cad-8282-754959e4d2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d680c0da-2e68-4870-a322-8ba8e65face1",
        "cursor": {
          "ref": "5c9c03af-c2d4-473a-b16c-d0a081d88695",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "63828727-6e0e-453b-8985-f9cc29583166"
        },
        "item": {
          "id": "d680c0da-2e68-4870-a322-8ba8e65face1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2e7eb84a-b21b-4fea-a7fa-d955b5e47547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fd53c8-c751-4f9f-b479-290331610dec",
        "cursor": {
          "ref": "3d09e2d0-f603-45af-8086-ec452a50e27a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "099aa4bf-4a16-46db-b9bf-13d02e6441f0"
        },
        "item": {
          "id": "07fd53c8-c751-4f9f-b479-290331610dec",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dabd2b5f-2ac3-47bf-bde4-5647985f2c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e06b8ba-da93-4047-842e-2bd02f4ad6a2",
        "cursor": {
          "ref": "ef36d56e-8cd2-4b97-9bf1-0beafa4691fc",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f51bf6ec-07c9-4da0-88d2-4c466d961a9c"
        },
        "item": {
          "id": "6e06b8ba-da93-4047-842e-2bd02f4ad6a2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0161f728-f481-45da-87be-938f6815afe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13962af-e38c-4461-858a-6d645e72820c",
        "cursor": {
          "ref": "37c3a27a-8802-49b3-8f81-3dc777e25e68",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "94043cd4-a789-4a02-8c51-31ac6115402b"
        },
        "item": {
          "id": "f13962af-e38c-4461-858a-6d645e72820c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d6888af1-3ec1-478c-b026-7eb30c30a6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7042ac8-1710-4833-9827-247138c2962f",
        "cursor": {
          "ref": "86e336fa-2d0e-440e-ab6b-c3b50d36faba",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "894c71d1-d640-4e0d-8f34-6aab430d4126"
        },
        "item": {
          "id": "e7042ac8-1710-4833-9827-247138c2962f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1e6aa8df-7a2e-41ab-ba0c-d69d9d5fe9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a265fda6-a238-498f-9584-195c381ff4d7",
        "cursor": {
          "ref": "c7aac665-1967-4b31-9b1e-172dfaac0149",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2b2c596b-18cd-4236-83ad-31d23b021938"
        },
        "item": {
          "id": "a265fda6-a238-498f-9584-195c381ff4d7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7ceefdbc-5978-43e5-91fd-8715a552d66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06553ba4-b258-473c-abaf-96908b04b300",
        "cursor": {
          "ref": "fd4cca61-e37f-4514-84fe-a336259a306c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4eeb1608-4454-409a-a03e-d970888ace50"
        },
        "item": {
          "id": "06553ba4-b258-473c-abaf-96908b04b300",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1a49db2d-fcb4-456a-9e54-5a70602209e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09701dd-5680-475e-9417-a82f02202750",
        "cursor": {
          "ref": "197d68b2-c04a-4051-8e41-500b005a1705",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cbc6a732-ab2f-463d-b409-bfce5309e74e"
        },
        "item": {
          "id": "b09701dd-5680-475e-9417-a82f02202750",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "20a889d2-fba4-42b6-8f50-725bca595da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ae8411-73c8-48ae-aed9-a1edf8011c86",
        "cursor": {
          "ref": "2e3c8950-ee57-4845-842a-b1ea4fed286e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "79ae65bb-3e77-45a3-ba24-1e517bb60eed"
        },
        "item": {
          "id": "28ae8411-73c8-48ae-aed9-a1edf8011c86",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "59a5af08-028d-4dbf-b8b5-33f61e278ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8309ec72-0793-4433-9039-e08bbb79f395",
        "cursor": {
          "ref": "24cd68f0-b616-4041-9b09-affd066f18e9",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "46512418-78a8-4bab-8ae0-4e5cade82f3a"
        },
        "item": {
          "id": "8309ec72-0793-4433-9039-e08bbb79f395",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e8503f3b-df54-4dfb-abc8-71195333e1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2656a8-5d0d-49b5-8220-3044cda97f37",
        "cursor": {
          "ref": "c20f386f-30f9-43cc-9e1d-d368a38ca7a4",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1f1d292e-67dc-4e7c-b418-4577166b4b17"
        },
        "item": {
          "id": "ef2656a8-5d0d-49b5-8220-3044cda97f37",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9f259321-963a-49cf-a674-5dcb22969ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062f3b54-68cb-45ca-8738-3bf8bc00d003",
        "cursor": {
          "ref": "a2545797-0138-4fe9-a12c-95114355b08c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bd2d8d3f-b8e6-4330-a1b5-5d5dc3d5ca34"
        },
        "item": {
          "id": "062f3b54-68cb-45ca-8738-3bf8bc00d003",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fd2651f6-883f-4071-b8b2-a0e5e35b45c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbe311e-a546-4be7-88c8-93998e448636",
        "cursor": {
          "ref": "ee333fa7-ec84-4efb-ad03-7ada558d7eb0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bf9f698b-b78c-4b56-8df2-78b83b5a565f"
        },
        "item": {
          "id": "8fbe311e-a546-4be7-88c8-93998e448636",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d6a56686-9240-4a84-9705-dd3ec6a864d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7495f5-226f-455d-bf42-60a54dcc17b5",
        "cursor": {
          "ref": "5589b077-b16b-4ead-a086-801f9a2c4431",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3d1f0d51-7bf7-4e5c-94ff-642777dc59cf"
        },
        "item": {
          "id": "bb7495f5-226f-455d-bf42-60a54dcc17b5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b6bfb9b8-04d6-49e7-9076-02a8d76a607d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb2a7c9-09fb-4495-b6c1-2f6881a62845",
        "cursor": {
          "ref": "45480609-df45-4b9b-8b3a-2f18f982d20d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c68f9da6-c7d6-4236-b3b0-f7018fbe36ff"
        },
        "item": {
          "id": "1fb2a7c9-09fb-4495-b6c1-2f6881a62845",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e4e3177a-a45a-4e68-95f4-d330aa2b0f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c021b16-a9e5-4761-adfd-8ddb8796e1e0",
        "cursor": {
          "ref": "baa9d913-0ee3-4ba9-8d60-68e608311773",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "88bd25ac-3d3f-4450-996a-93b27ed18e8a"
        },
        "item": {
          "id": "1c021b16-a9e5-4761-adfd-8ddb8796e1e0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2778728d-2040-4f4a-b792-9786d444ece9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c26a08-bb4a-4c37-ae54-663bf18d4d48",
        "cursor": {
          "ref": "fa32509f-240d-403c-988a-2d0cb49779af",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f990c1ce-860a-4b46-85bc-f8fcd002df39"
        },
        "item": {
          "id": "c6c26a08-bb4a-4c37-ae54-663bf18d4d48",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c1b657f4-f6db-4bba-a0e2-a190f23554f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3378b6b5-7f41-4763-a93e-595737fdf7bf",
        "cursor": {
          "ref": "7e801195-55bc-4a70-9aa0-049f96e40740",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3ac9acc9-e2a5-4a97-bedb-ff85ca5273cf"
        },
        "item": {
          "id": "3378b6b5-7f41-4763-a93e-595737fdf7bf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a48583b6-b8ba-450c-94bd-f3460e5d2a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b4e59d-2fb2-4b37-aeb6-542979fc9600",
        "cursor": {
          "ref": "034471b0-705d-40e4-8ff5-1bd0f95c49a4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "39884125-6928-40ea-a473-6e49a5a02cf1"
        },
        "item": {
          "id": "36b4e59d-2fb2-4b37-aeb6-542979fc9600",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c13d465c-09b7-4179-9c3d-8f3a357c0e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e054f8c-03b6-4579-81c4-b42ec124bdac",
        "cursor": {
          "ref": "c291b6d0-9084-480a-bc19-ed83240c552d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c007e73b-eb30-4543-be63-e1f7d4a8308a"
        },
        "item": {
          "id": "9e054f8c-03b6-4579-81c4-b42ec124bdac",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c5592274-9ff7-4c96-85e6-f7edefcc19b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 916,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09eaab95-a775-415f-9095-4be5bc9491ab",
        "cursor": {
          "ref": "0372ffba-7452-4ce6-b7e4-735edebf15bc",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e78bf6e3-6a4a-4136-baf0-f646c5498a44"
        },
        "item": {
          "id": "09eaab95-a775-415f-9095-4be5bc9491ab",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6c4c535a-37ee-48c1-a33e-a64d54c1b170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1023,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66651bb8-1322-4e7a-be8d-9a000411a41b",
        "cursor": {
          "ref": "1a9cac7c-28fd-4307-9488-c242fd8baf0d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a738745f-3269-4db4-ad5f-e3d6cba1380b"
        },
        "item": {
          "id": "66651bb8-1322-4e7a-be8d-9a000411a41b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dba6cf64-4412-4243-828e-3bacd9546858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bf489b-a22a-444d-af3c-2720a1bd741c",
        "cursor": {
          "ref": "b78cd640-0f44-4a51-b7c0-1d31e572f0fe",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "95b89426-d862-42a5-b641-6ec9145264a2"
        },
        "item": {
          "id": "77bf489b-a22a-444d-af3c-2720a1bd741c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "95cde285-7755-4b4f-a2be-db94afd09ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 969,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f91833a-c4b0-4acd-aec4-715c166ca309",
        "cursor": {
          "ref": "df22dfce-dd22-4b2c-8310-9104287dfdd6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4882d090-996d-4401-ab14-083eb642dcfc"
        },
        "item": {
          "id": "1f91833a-c4b0-4acd-aec4-715c166ca309",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8910f02b-d3a4-4a7b-88e6-461642d8f4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd41fa24-5fbf-42b1-9e2a-3e034273cf86",
        "cursor": {
          "ref": "cc72ad90-e753-4e69-a630-ebb757ea7d3f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "26e92935-3f80-4677-a009-759015398de4"
        },
        "item": {
          "id": "dd41fa24-5fbf-42b1-9e2a-3e034273cf86",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6fab57b3-7185-4b51-9e1f-d97d270493d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d2f5a4-ca40-49a4-829d-04bfeb522fc5",
        "cursor": {
          "ref": "8c7661b9-5adc-4757-8937-ab2346dc7023",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "efd0fe40-2770-4ea9-8cf9-7a75c954abff"
        },
        "item": {
          "id": "95d2f5a4-ca40-49a4-829d-04bfeb522fc5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "4ec71f81-197c-4238-ad2d-5fae37cf7f0d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 880,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768053e3-0966-40bc-b53b-62b3b4f74c05",
        "cursor": {
          "ref": "319274e2-c0fb-4b20-9b40-7b9185f60c85",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fef6b0e3-34c6-4c50-92de-241101b69bfd"
        },
        "item": {
          "id": "768053e3-0966-40bc-b53b-62b3b4f74c05",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b1845966-e246-4a13-98d1-a3972ab303c1",
          "status": "Created",
          "code": 201,
          "responseTime": 6724,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e8ed3f-6e81-4f30-bf16-4fe2c0eeb513",
        "cursor": {
          "ref": "bc36f71d-a97b-4345-aa57-2667c6f71148",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4b660862-0855-4798-bea5-343e4b8fafbb"
        },
        "item": {
          "id": "81e8ed3f-6e81-4f30-bf16-4fe2c0eeb513",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "de20f55a-f195-48a3-88e3-4bd41cd0f3fe",
          "status": "Created",
          "code": 201,
          "responseTime": 6807,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3a6882-c1c6-408b-b36e-b7fb09000786",
        "cursor": {
          "ref": "03da8cc0-9289-41a2-a4d3-787466df77a2",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "523148ad-3046-4995-b2c2-0b24a3c418f2"
        },
        "item": {
          "id": "4a3a6882-c1c6-408b-b36e-b7fb09000786",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6676e1be-0fc4-4260-a97d-727083a0ca82",
          "status": "Created",
          "code": 201,
          "responseTime": 4127,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b569bf3d-ea54-418a-9340-b50dd8fad91c",
        "cursor": {
          "ref": "0c20976d-9294-42de-b1de-0089c4ce3cd6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6fef2039-dd0a-4333-8ae4-80d256cebd96"
        },
        "item": {
          "id": "b569bf3d-ea54-418a-9340-b50dd8fad91c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "32a01f79-467e-4d8d-a165-ef9f5dc19070",
          "status": "Created",
          "code": 201,
          "responseTime": 4356,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3183f18-e003-4a7e-80cf-6d9480c06640",
        "cursor": {
          "ref": "67b7ce24-631b-4d59-ae23-1e01613fa193",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b9e0f939-94c8-44ba-8d13-be03cdba6b6b"
        },
        "item": {
          "id": "e3183f18-e003-4a7e-80cf-6d9480c06640",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2cc862e1-e271-49e0-8840-2626740a83bb",
          "status": "Created",
          "code": 201,
          "responseTime": 5681,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31b9fbb-1d70-4cac-a47a-7b37a701202b",
        "cursor": {
          "ref": "aad1b852-4584-446e-b2de-96877b21abe2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2fbf5187-fc89-4859-9962-4d7ffe10066b"
        },
        "item": {
          "id": "a31b9fbb-1d70-4cac-a47a-7b37a701202b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8159d189-c80e-4f0f-8484-5aaf6669ba10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31b9fbb-1d70-4cac-a47a-7b37a701202b",
        "cursor": {
          "ref": "aad1b852-4584-446e-b2de-96877b21abe2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2fbf5187-fc89-4859-9962-4d7ffe10066b"
        },
        "item": {
          "id": "a31b9fbb-1d70-4cac-a47a-7b37a701202b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8159d189-c80e-4f0f-8484-5aaf6669ba10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7492c3d-2ed8-42c4-93d8-fab3f1ee7b93",
        "cursor": {
          "ref": "40aae87c-89af-467b-87a1-f4357df0bbee",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ced63f07-b885-4b36-ad71-1b781673e3b7"
        },
        "item": {
          "id": "b7492c3d-2ed8-42c4-93d8-fab3f1ee7b93",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1ada5ff3-3437-491b-9b49-b2752203fddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a6eaf2-c513-4156-aea4-3e466fe44982",
        "cursor": {
          "ref": "2e64a20f-3cf4-498f-88cc-2ee291546f6e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9ee76944-2e45-4de1-a79f-2623bd03d9e5"
        },
        "item": {
          "id": "40a6eaf2-c513-4156-aea4-3e466fe44982",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "76a16cbf-3299-4498-b683-ab089ebdf41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81d5ddf-46ca-4957-b605-e251b5194f95",
        "cursor": {
          "ref": "76a97123-1396-47ea-9218-ae5b77d19bc1",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "63611435-efa9-4f1d-a739-78f18fa0edd8"
        },
        "item": {
          "id": "f81d5ddf-46ca-4957-b605-e251b5194f95",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2c3e1c6d-f079-4a94-96bc-34b5c85f78e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 913,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb133a1-0331-49c4-a784-e4c168ae0aa5",
        "cursor": {
          "ref": "887a12a5-67db-495a-be86-bf3f12848526",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "28d03bcd-7213-4ff1-ba5d-67a2c728c74f"
        },
        "item": {
          "id": "3bb133a1-0331-49c4-a784-e4c168ae0aa5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9caa2db6-9b9f-4be3-8aaa-1a71cb8fb86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f82577-2719-4290-bb2d-fa11fd64a3ca",
        "cursor": {
          "ref": "76238165-18ae-468f-8794-364511a8dbcc",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c163d8fb-d378-46d8-be2f-b73fdeabc0b2"
        },
        "item": {
          "id": "64f82577-2719-4290-bb2d-fa11fd64a3ca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8c6cc788-60b0-43c1-af1b-4bdc4e0f27e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8038e9-5d24-44a7-9bd6-844876c7afdc",
        "cursor": {
          "ref": "d3d588d3-f9a9-4075-b30c-aaa8215dda72",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ce08edf3-91bc-4f38-811d-5d4a1dda5f4b"
        },
        "item": {
          "id": "3f8038e9-5d24-44a7-9bd6-844876c7afdc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f96150d0-158b-4bfd-b409-8786d7c386e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d278d290-3ebf-42c2-8c34-9661fc145742",
        "cursor": {
          "ref": "da48f450-46e5-40dc-a21b-e16e28a285d7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d0b98429-e134-409a-a93f-01089c32419f"
        },
        "item": {
          "id": "d278d290-3ebf-42c2-8c34-9661fc145742",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "128a130f-f642-4ec7-a05d-b141f4e1d483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8191948-dbcb-4ed4-aca7-f4699d0fd672",
        "cursor": {
          "ref": "d097be49-ef9c-47fd-a4f6-d05ede39384d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7ff08168-ffa7-4a13-95aa-ca75e00b6a85"
        },
        "item": {
          "id": "a8191948-dbcb-4ed4-aca7-f4699d0fd672",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "60f2a11d-ab40-4240-8969-36ac94d6c068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9701184-2837-41b7-afbc-13bf544c51e9",
        "cursor": {
          "ref": "2f517957-80a2-45e5-a991-4f5737276ffa",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "91a796cb-0aad-47de-be7e-91828c2f3040"
        },
        "item": {
          "id": "c9701184-2837-41b7-afbc-13bf544c51e9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "04ae4324-89a6-4b3a-b0a1-679c2e53c5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1235be-6a5c-46e3-8097-8dadcc9d1be6",
        "cursor": {
          "ref": "60cc93e9-0305-4186-8e7b-5c26d1add8f2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "45f063c5-bf8c-4fb7-b9b2-817cbd5713bc"
        },
        "item": {
          "id": "1d1235be-6a5c-46e3-8097-8dadcc9d1be6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b28bb035-3acd-40b6-9947-da6171eb5694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e4a567-009e-43c3-9ea2-e9e7c3b9e3b8",
        "cursor": {
          "ref": "65c394e7-33a5-4f05-85e7-86d246f2c710",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f535505a-0b2e-47ca-a9c6-7eafdc6df37e"
        },
        "item": {
          "id": "b1e4a567-009e-43c3-9ea2-e9e7c3b9e3b8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d5dd63b3-6408-4e6f-9edc-3431aaa11e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa41b6a-486c-4fcf-ac7a-9a12b9d526b7",
        "cursor": {
          "ref": "08e8ecb0-e8d1-40b4-a34b-4e595ab93a4c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "15813af9-bab7-428b-af0a-79027e6e6803"
        },
        "item": {
          "id": "caa41b6a-486c-4fcf-ac7a-9a12b9d526b7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0801bfa2-fefd-4f1c-b8c3-befd3ff1bab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78434dc-3ef5-4fcf-9d51-51334de6b67b",
        "cursor": {
          "ref": "03ffd640-fee8-4187-a222-24a1d8e35028",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1497e9a5-fd0b-4910-94fb-cbb946acdc37"
        },
        "item": {
          "id": "c78434dc-3ef5-4fcf-9d51-51334de6b67b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "51918f4d-f169-4d97-ba23-4d09dc09b44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ef82dc-f694-434d-8656-fdb64a723e29",
        "cursor": {
          "ref": "6e3d147b-698a-43c0-bfb2-966792cfa62b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c31f2ac6-6cef-45b0-8012-bb9c41565702"
        },
        "item": {
          "id": "66ef82dc-f694-434d-8656-fdb64a723e29",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4b8d1d7f-cb52-48d7-9dbd-40c68778ffbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7877b2c8-03bf-4cb2-b16d-5e9fa2d76137",
        "cursor": {
          "ref": "9d7f7fa4-1519-482b-a1db-1e7e7b0ea165",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "eb0df329-81ee-4010-ab2b-d2f3cc9fadab"
        },
        "item": {
          "id": "7877b2c8-03bf-4cb2-b16d-5e9fa2d76137",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dab8138d-1fd7-4c1f-a817-b098742d1efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356b9188-4d81-4003-9a88-80cc0dcea10c",
        "cursor": {
          "ref": "186edba7-e5e3-48c8-9cb1-5c0713db6cf2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fc0beecc-1f9f-41b8-a22a-fd4e935194be"
        },
        "item": {
          "id": "356b9188-4d81-4003-9a88-80cc0dcea10c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2bce2122-90b0-45a6-86e4-e49c76ff22dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edf138a-4fda-40fc-ae96-36b28c8c59ef",
        "cursor": {
          "ref": "04c332e1-831f-4659-8ced-97cdd1d860eb",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ce4177f9-d752-47f8-8329-a887532b41cc"
        },
        "item": {
          "id": "2edf138a-4fda-40fc-ae96-36b28c8c59ef",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "531d3569-be79-4170-af18-def66b7ea656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89879dbf-2c64-439e-9b1e-2f824fa676b3",
        "cursor": {
          "ref": "e910ec48-3e72-418e-8bc1-8878f5f33326",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "60b5e0f2-a150-40c0-8b8b-85a4646580d3"
        },
        "item": {
          "id": "89879dbf-2c64-439e-9b1e-2f824fa676b3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "89141b72-995b-4d1f-8fce-9a13562947b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faa267a-473f-4303-8715-e17971b8f283",
        "cursor": {
          "ref": "d7a035aa-8f43-4ae9-ac14-bcdcf5b985ad",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "aa5807d8-446d-41b4-80cd-35df82d3c615"
        },
        "item": {
          "id": "0faa267a-473f-4303-8715-e17971b8f283",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1f30466e-b67c-45bb-84ab-15c3ec624d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b50b07-66f1-4722-a525-b6dbd60c21ca",
        "cursor": {
          "ref": "7396fd68-5aa5-41d0-a40f-ed80b685998e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cffae8b8-5dfb-4190-a04f-f3bf8f80d511"
        },
        "item": {
          "id": "38b50b07-66f1-4722-a525-b6dbd60c21ca",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ff462df1-d197-4890-a8a6-7ba6c67176bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d622d0-131a-4ca8-bd1f-433cd8a417d9",
        "cursor": {
          "ref": "c4462378-0ba5-47f5-a0ba-bd4dbe47e09e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "73896ed2-e0d6-4883-af78-c828a23e07af"
        },
        "item": {
          "id": "06d622d0-131a-4ca8-bd1f-433cd8a417d9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "684fb231-e811-4e8c-a1b6-0b79000b1177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b005d1b8-a0a8-442d-bb0f-110230ae7ba9",
        "cursor": {
          "ref": "baf2dd48-e92b-4ef3-bd34-0103275e2335",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "aa9195aa-c076-4530-b4ce-944bfb6f2b61"
        },
        "item": {
          "id": "b005d1b8-a0a8-442d-bb0f-110230ae7ba9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "03cd273d-ee16-4183-8613-0f94060ffd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145274ec-6422-413b-9530-d048b951344b",
        "cursor": {
          "ref": "ffc1f43e-8e5c-49de-bb39-ae628807eabf",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ea2bb4a6-c858-40f0-b3c4-99bea97bb42c"
        },
        "item": {
          "id": "145274ec-6422-413b-9530-d048b951344b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9afd2f43-d81c-4f8a-8f77-c06d3d7874da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b34ee60-5cdc-4ebf-a8bc-1a5f90607d85",
        "cursor": {
          "ref": "ff734fe4-8570-4c8c-91c4-f21d531c47fd",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5d5224cf-377a-4c6e-863d-0bd72780b3a5"
        },
        "item": {
          "id": "6b34ee60-5cdc-4ebf-a8bc-1a5f90607d85",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c1fecce7-43a1-495c-9ac6-bf0d3cf59d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f847dcc-098c-472b-a368-b0361f96d54b",
        "cursor": {
          "ref": "30dbd13e-3c6d-4db4-8547-da19e7087bc3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "91eccd92-30ce-4513-9ebe-2ee90e635d73"
        },
        "item": {
          "id": "1f847dcc-098c-472b-a368-b0361f96d54b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "88b94e54-e835-4aa2-8776-25899feed086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e52d46-2084-4980-a235-c15c7a92b1c0",
        "cursor": {
          "ref": "4004163a-46d9-45ec-9dcf-2fe47687818b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0c5460a1-ea55-47dc-ad46-e4bc9fe066b2"
        },
        "item": {
          "id": "10e52d46-2084-4980-a235-c15c7a92b1c0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d59c49a3-9891-4f07-be41-e591591cb7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 913,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eab507-b7c1-4e7e-989e-826695491da6",
        "cursor": {
          "ref": "81f9e443-80a8-4c8a-9886-599449e013c5",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2a1f4562-ace4-4404-84a9-77d68655f85c"
        },
        "item": {
          "id": "59eab507-b7c1-4e7e-989e-826695491da6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "de4ee191-ed67-4f6b-a7bd-d65f633fa752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1047,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e46861a-e2df-4a1c-9c86-b40d519850c6",
        "cursor": {
          "ref": "bd1706f3-cc18-4284-a5e9-b8ddc4cf6450",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "919b5252-d441-4526-821e-cb90eace4cc8"
        },
        "item": {
          "id": "1e46861a-e2df-4a1c-9c86-b40d519850c6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0f6c2003-1680-41d9-acfb-61105fc6ad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79522766-43d8-4156-8451-312681bbf17c",
        "cursor": {
          "ref": "e1ed8d2d-7de8-4a6f-90f9-7dabc950a9af",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4077bada-2c71-40c9-96c6-b0cd93d2862b"
        },
        "item": {
          "id": "79522766-43d8-4156-8451-312681bbf17c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c0599da-b63b-4898-b00e-dda937004692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3033c5-cb4c-4cf3-a673-76a8fc724328",
        "cursor": {
          "ref": "fe34fcc0-8589-4e1e-8468-bf28d832fbd4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "17fb6f4b-2728-448a-9cd1-307df2e19629"
        },
        "item": {
          "id": "1c3033c5-cb4c-4cf3-a673-76a8fc724328",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d0cb0009-edf2-4a14-bbd1-567d5dfb2876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743921b9-cf5d-4693-9873-02177cbcd274",
        "cursor": {
          "ref": "236748fc-e59f-443b-9342-046ff343e7c6",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e2b79097-5625-4411-bb32-75eb69d37f68"
        },
        "item": {
          "id": "743921b9-cf5d-4693-9873-02177cbcd274",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1c283ef4-5e23-450b-a3ac-fec5b2419a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7e1bd6-890e-4710-a193-7c26856c56db",
        "cursor": {
          "ref": "620ef6ba-8289-4acf-aad8-e01b80f3aab7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3c3fc59f-c97f-4bea-86e3-6d89beb94a4c"
        },
        "item": {
          "id": "8e7e1bd6-890e-4710-a193-7c26856c56db",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ae1b5d60-b70b-401a-86ae-8c479f086cdc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd37ae9-aca9-4341-b4df-94a4b8b16c1d",
        "cursor": {
          "ref": "4dfa983b-74d3-42e7-8dd0-bf6184ab1921",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "afccd034-c7e8-48ae-b1e4-3df8102453ae"
        },
        "item": {
          "id": "6dd37ae9-aca9-4341-b4df-94a4b8b16c1d",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "37922b56-a5dc-4688-a3bd-8b44c9192e7b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 634,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81f5483-1f25-40ea-a189-4929dbcdfd73",
        "cursor": {
          "ref": "75359b4f-b990-4f21-a599-56814042addd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2e255ce2-dc7c-4d7f-8bfe-f90b1d96ea05"
        },
        "item": {
          "id": "e81f5483-1f25-40ea-a189-4929dbcdfd73",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6de5656e-5842-4f06-b294-baed548942b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81f5483-1f25-40ea-a189-4929dbcdfd73",
        "cursor": {
          "ref": "75359b4f-b990-4f21-a599-56814042addd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2e255ce2-dc7c-4d7f-8bfe-f90b1d96ea05"
        },
        "item": {
          "id": "e81f5483-1f25-40ea-a189-4929dbcdfd73",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6de5656e-5842-4f06-b294-baed548942b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8c3030-63ca-4964-800c-ca1bf72792a0",
        "cursor": {
          "ref": "2340d0ad-553f-4987-9579-18425484526b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "63204a22-bd11-49e3-8ad4-5a2f495e20f9"
        },
        "item": {
          "id": "9e8c3030-63ca-4964-800c-ca1bf72792a0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6c3a41bd-16b1-4abd-b286-9b29a7fa1d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ebdc4a-8ea3-4a68-89b4-23221ef0c88d",
        "cursor": {
          "ref": "e2489917-1d41-48b4-9e20-d8c4bc83dba3",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "380ce34d-3184-437a-a2e2-dca5d1eb7320"
        },
        "item": {
          "id": "17ebdc4a-8ea3-4a68-89b4-23221ef0c88d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2b129c03-0734-427f-ba4d-40c21208c867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba93d25-714b-456b-b62b-7b0251af75de",
        "cursor": {
          "ref": "eca7eb89-6e5a-40fc-bb89-12a30de053f6",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6a744729-1c1f-4f7b-8f83-5ba6d19d492a"
        },
        "item": {
          "id": "4ba93d25-714b-456b-b62b-7b0251af75de",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "52d0a184-1dbe-46be-bfd2-cf5a83b64329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec2ba7f-7a85-4ad2-a34c-5561957e2e04",
        "cursor": {
          "ref": "3a464e4b-ae78-43b0-a646-04d757422cd2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "639993d8-fb6a-4cfe-81f3-b5ededa01d87"
        },
        "item": {
          "id": "8ec2ba7f-7a85-4ad2-a34c-5561957e2e04",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4239fdc1-e8b2-4f0f-9742-8b37816105e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e05e593-8033-47a0-9724-e0efe0b430b4",
        "cursor": {
          "ref": "4272e6de-7d3a-46c2-8a4b-28d6c029421f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "77977a59-7e2a-4fd2-8fa7-11be87586f21"
        },
        "item": {
          "id": "5e05e593-8033-47a0-9724-e0efe0b430b4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fc3e5489-b4f2-4962-9cdc-10121864af01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a6af58-b5b3-47db-ad9a-5d7f99c59310",
        "cursor": {
          "ref": "758fa3da-4646-49b7-8673-e4916fe88f33",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a045ca84-340d-4919-af6c-b492bbc0d71b"
        },
        "item": {
          "id": "b6a6af58-b5b3-47db-ad9a-5d7f99c59310",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "82582deb-eb8a-4edb-b2ab-14ac77b1553d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68ae9fa-c8bf-487b-89cc-182cb4f3c259",
        "cursor": {
          "ref": "333c5bf6-24f8-4290-881f-a6cbe4e2b843",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bb59bacc-00cf-4eae-8050-5ad87f5128f1"
        },
        "item": {
          "id": "e68ae9fa-c8bf-487b-89cc-182cb4f3c259",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0d26e568-94da-42fe-898c-0ab76a353b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0676851d-a70e-44db-b252-9d264caafb8e",
        "cursor": {
          "ref": "809a0f6a-f818-4c34-8252-2444f0d13d2f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d56ae956-820e-4105-963d-2024cd881608"
        },
        "item": {
          "id": "0676851d-a70e-44db-b252-9d264caafb8e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b8b69378-5777-4858-b3e4-b0c7dc16ff0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc7cbec-516d-45c4-a446-f595efa8d654",
        "cursor": {
          "ref": "9d35d607-2550-4e68-89a2-707d07b4935f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ce59d6e1-66fa-4829-b412-ef7adc7bb5a7"
        },
        "item": {
          "id": "0cc7cbec-516d-45c4-a446-f595efa8d654",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "716e1403-8029-409b-aaa1-0d94e4ea8b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6686d1-0ebc-4f38-8462-f2591ad28f4e",
        "cursor": {
          "ref": "4b417382-13c8-48cf-a4bf-c03c2ca71e93",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5337c9a9-373b-4593-8995-aff824df0208"
        },
        "item": {
          "id": "8a6686d1-0ebc-4f38-8462-f2591ad28f4e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e229f925-eddb-496f-a8f6-713a82285aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da95b771-4424-4618-a716-3d1d3dc157c2",
        "cursor": {
          "ref": "7dec4e94-1936-498a-a8d9-b9a7088b6c4f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "90f05937-8ebe-4b99-b532-e8e2f0270f08"
        },
        "item": {
          "id": "da95b771-4424-4618-a716-3d1d3dc157c2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9854b757-2bac-4443-a8bb-56ffb2fa701f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84472710-98e9-4d9f-848e-d5596b693517",
        "cursor": {
          "ref": "6e457452-9153-4ab7-af5c-4e08664a49be",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bfecc1e4-4faf-493e-93d3-978abbb6420f"
        },
        "item": {
          "id": "84472710-98e9-4d9f-848e-d5596b693517",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c7533818-e285-4978-b228-668831de0975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d21ad53-bfc8-4381-a847-2a9808e51d2c",
        "cursor": {
          "ref": "ef18e920-3f0c-4452-be52-9f7c2fcc274d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "75541d6c-5d5d-4827-af5e-159cf72fa16b"
        },
        "item": {
          "id": "6d21ad53-bfc8-4381-a847-2a9808e51d2c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f52980d4-c9f9-4630-b0c9-a908a7a3fc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e379455-7348-46cd-814c-d00bd79160b9",
        "cursor": {
          "ref": "334b28cb-0df2-415d-872f-ad7f6ff0d0c6",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d483c7ed-4295-4a58-a12c-98cb5c1e5a72"
        },
        "item": {
          "id": "0e379455-7348-46cd-814c-d00bd79160b9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "993dddb9-e008-4bd9-87c9-88b446884971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421c1d46-68f8-44a0-9740-478320817c2b",
        "cursor": {
          "ref": "ac1f70bc-bb89-4f92-97de-e1b3f1f66ecd",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "75460386-5cf3-4a2a-a513-79636475ff41"
        },
        "item": {
          "id": "421c1d46-68f8-44a0-9740-478320817c2b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5f9253e8-5d7e-4fd4-8267-a584abe38a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0ef3a1-26f4-4e42-a33f-97b0f4a73753",
        "cursor": {
          "ref": "ee5cc1c3-c64d-4875-a50e-468e7d06f16f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8e5c2c5b-1c92-46ef-9f26-223ccd39499e"
        },
        "item": {
          "id": "9d0ef3a1-26f4-4e42-a33f-97b0f4a73753",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2c8a2fe3-59ec-417e-92e7-5ff663709112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bb171b-24c3-4343-a63e-9a956ccc2031",
        "cursor": {
          "ref": "e06b8ee2-c100-4ec3-8b64-ab1af95aa607",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a2ed3852-b357-49a3-b87c-31d50170f4fe"
        },
        "item": {
          "id": "90bb171b-24c3-4343-a63e-9a956ccc2031",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a8bd3b6f-76f0-4f74-9de9-8e4590872dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4eaaca-d9a6-4145-b9cc-b361dc85ff5c",
        "cursor": {
          "ref": "374231de-2980-423e-8e19-b96b46298d42",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f10ad369-5060-4309-b457-a110d6d3f7b3"
        },
        "item": {
          "id": "be4eaaca-d9a6-4145-b9cc-b361dc85ff5c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fc6a5369-b6bb-433e-9771-082f2fbeafc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc921c91-a7f4-431e-a5a1-d245e11a5e3f",
        "cursor": {
          "ref": "b89fc87d-2880-4451-b23b-12e0de699c71",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "311f9c8c-b81d-4edf-abcf-7e03a5d71b8f"
        },
        "item": {
          "id": "bc921c91-a7f4-431e-a5a1-d245e11a5e3f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "90ee7148-add8-400d-9a78-98c255584c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689132a8-535d-4093-a023-65d42c920e77",
        "cursor": {
          "ref": "1b1e5ab6-0f06-48ad-a89e-96482d193e6e",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ea0cf62f-4741-4e3b-89c9-6395cafa7911"
        },
        "item": {
          "id": "689132a8-535d-4093-a023-65d42c920e77",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "71b0d326-510d-4d3b-af72-089b91954796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08af7eda-03ae-4e5e-9df1-49e74c3a98a9",
        "cursor": {
          "ref": "a1861776-e848-4663-aec5-6ed61a17749d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "570aeddf-e34e-4825-b163-8c707c6155d1"
        },
        "item": {
          "id": "08af7eda-03ae-4e5e-9df1-49e74c3a98a9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9dba6b85-fdbc-464e-b076-1adfe37c47bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3235cfc-6bac-4a53-938b-66a27ae99177",
        "cursor": {
          "ref": "2a1c2b4c-7c3d-4860-af7e-a6041f754213",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b4bd39f8-370c-466f-8266-2262c515e693"
        },
        "item": {
          "id": "f3235cfc-6bac-4a53-938b-66a27ae99177",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d42bc43b-c291-4763-82ff-4cc890e801b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d888646-fe06-4220-98be-2821b6952884",
        "cursor": {
          "ref": "ee71be8b-137e-4772-a0ef-36b92b63d352",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cafc807a-9985-49f1-b178-61af6929e527"
        },
        "item": {
          "id": "4d888646-fe06-4220-98be-2821b6952884",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a98a3efa-273e-400a-9f9a-8fb203c25186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728cedcd-6987-4179-af0f-26cfa8f0144d",
        "cursor": {
          "ref": "f1759b95-cf61-4686-9474-30a07151791e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d190f1ba-3057-486c-8870-fa5648acc015"
        },
        "item": {
          "id": "728cedcd-6987-4179-af0f-26cfa8f0144d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4b3dca7e-7c3a-4ee6-8d69-4ccb4059d5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95555471-6269-4249-807e-16d99306e9c5",
        "cursor": {
          "ref": "42ba8f9b-c9e2-4801-a5ee-7b262531ad86",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "57e38bea-c20d-49c9-b5dc-52d9ddbb90ea"
        },
        "item": {
          "id": "95555471-6269-4249-807e-16d99306e9c5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "711aa1de-0bec-46cd-be29-b3488f679e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e37391-d832-492d-8892-35df3e43ca2e",
        "cursor": {
          "ref": "f74c3798-d547-4fe0-bc1f-7701f1b8fe6f",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "be9c7e63-ce9d-4f54-b7bc-da38037c646f"
        },
        "item": {
          "id": "d8e37391-d832-492d-8892-35df3e43ca2e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ebcda920-ab1d-45aa-af59-cff4b1243f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d418aed9-2ce1-4b95-9d69-f599ad9cab5b",
        "cursor": {
          "ref": "ca3f1fcb-8c8f-4360-b1fe-4af94086d12c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d71b3922-3cdd-42de-b045-e3ea1387f230"
        },
        "item": {
          "id": "d418aed9-2ce1-4b95-9d69-f599ad9cab5b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "eeef23ec-92ab-4657-a6d9-c78da84e53a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad50dcd-6cc2-4ce9-a070-fd2069796bba",
        "cursor": {
          "ref": "bff7b2d8-ff7e-448c-835d-2e83364cb4ae",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "191e8416-2eba-4566-b7c7-ccabf37ba908"
        },
        "item": {
          "id": "5ad50dcd-6cc2-4ce9-a070-fd2069796bba",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "79746c61-766b-44e6-be6b-62c45561b522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89de564-4432-4915-aa76-09aa47b5f67b",
        "cursor": {
          "ref": "7b929a82-c419-4585-ac33-7aa0d19bd9ca",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8ca34f82-81ef-476b-92ef-0d57e40bd76f"
        },
        "item": {
          "id": "a89de564-4432-4915-aa76-09aa47b5f67b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ba2bf619-4a55-4135-8b5a-a442e08dcbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4d393d-6fe3-4cb0-887d-72971d7c76b8",
        "cursor": {
          "ref": "e28c4324-6b77-4c52-ab28-bc7aae5bdf2e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2916f90c-d567-41d9-a244-f0ba30d0813b"
        },
        "item": {
          "id": "ba4d393d-6fe3-4cb0-887d-72971d7c76b8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8c866633-cbed-4d2b-8ba3-aa14bc97a09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c1615c-219b-4de9-a073-545d1985986a",
        "cursor": {
          "ref": "fb0470cf-992c-4234-ac18-8dd1ae494edb",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a80fb7be-f146-4027-b54d-bf18e5ad53f1"
        },
        "item": {
          "id": "f6c1615c-219b-4de9-a073-545d1985986a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c491be74-5053-408f-9e9f-dc52e582e87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199dc274-3183-49f4-856f-a50b02f50694",
        "cursor": {
          "ref": "ed7ffc5c-516d-4ae9-9702-901347fc7a07",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "02b28180-9d13-44fd-97fa-62dc3c4526e5"
        },
        "item": {
          "id": "199dc274-3183-49f4-856f-a50b02f50694",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1a125d87-4d8a-49c0-8c8b-83b986db0d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801b2a2c-1b0a-4a4d-b034-4760f199f076",
        "cursor": {
          "ref": "8ba10f28-bd5c-48da-a34a-3f04749e0d9a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5a2baf92-f097-4301-99c9-12a876569e34"
        },
        "item": {
          "id": "801b2a2c-1b0a-4a4d-b034-4760f199f076",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "24f80403-5df6-4bfa-9e18-796a7d28ef6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fdc9f2-e358-44a1-be3b-7b2b3bd08204",
        "cursor": {
          "ref": "f1d161d0-33b3-47c4-9675-b9313b1c9df2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9bc00700-afdf-4fb1-a1d6-87bb70404b73"
        },
        "item": {
          "id": "d9fdc9f2-e358-44a1-be3b-7b2b3bd08204",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "638d7d08-cd4a-44d4-a3b1-abc97b15159c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93c12c1-1191-48b5-89b2-8f2babb839f0",
        "cursor": {
          "ref": "2c33945b-705d-483c-89d0-5f20df6b7be0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e34b5a58-4a29-433c-90e6-29ba71f67f6b"
        },
        "item": {
          "id": "b93c12c1-1191-48b5-89b2-8f2babb839f0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6c1cb1f5-be3a-4b31-84c2-26f0e901422c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be03224-5c60-4d37-8515-072b12a125ec",
        "cursor": {
          "ref": "faed67b0-41b8-416f-b96d-6625aeb45678",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7fc7b8aa-e1dc-4987-803c-5a330538de41"
        },
        "item": {
          "id": "5be03224-5c60-4d37-8515-072b12a125ec",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "414dc85a-e07a-4b10-92d7-de952c20c2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92ba0f3-8986-4174-8162-1a52e4aa214f",
        "cursor": {
          "ref": "a7eb5225-2826-4c6a-bf0a-126b32f7bfe8",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3c7207de-2f25-43de-8d23-9b341e5ce4f4"
        },
        "item": {
          "id": "a92ba0f3-8986-4174-8162-1a52e4aa214f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "989d6678-01ca-44de-be9f-bf038f63b823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446ced3c-067b-4275-b204-278daf5b903b",
        "cursor": {
          "ref": "3946bdb1-e6f7-4c6c-be1a-60aed0ec96b2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0eb32a6b-3dec-42f8-8d1d-5df5fb6f0a69"
        },
        "item": {
          "id": "446ced3c-067b-4275-b204-278daf5b903b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2ea4fd51-6ea1-4d8e-91da-2df74b5761e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20668647-f486-4b89-8dba-e69d32eff782",
        "cursor": {
          "ref": "e097cc81-b1e9-4b88-9aef-06b38d0f377c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "391f52e5-0c32-4b75-82ba-0c6775124288"
        },
        "item": {
          "id": "20668647-f486-4b89-8dba-e69d32eff782",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "97f465df-dfdd-4d1a-8f2d-d1577c950be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1238184d-9799-460b-aea9-2595f29fe7d4",
        "cursor": {
          "ref": "e18ae1f3-14e6-41e8-9731-4a26833fd0c3",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "081f79ab-e9fa-4d78-a09a-f4d240e3e2ff"
        },
        "item": {
          "id": "1238184d-9799-460b-aea9-2595f29fe7d4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "42b0b83d-52ab-4c92-8755-b8c991629278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a762b8e-d15f-4fe9-bd4a-59b9353a20a7",
        "cursor": {
          "ref": "cfee0ca2-d881-45b2-81a0-9e6731ab2501",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ed57971b-25a5-4103-9022-034a6d4b83cc"
        },
        "item": {
          "id": "8a762b8e-d15f-4fe9-bd4a-59b9353a20a7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d1719a99-e0a3-4d7a-b28c-6ee1c1ddfbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47338e03-9e9f-4e9e-bedb-7d2b5d8976f6",
        "cursor": {
          "ref": "8cec5517-30df-4b7b-abbf-9300ef217bd7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c58398aa-4d97-4790-9e6f-d7e41a318d56"
        },
        "item": {
          "id": "47338e03-9e9f-4e9e-bedb-7d2b5d8976f6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0000e6be-5a9f-43a1-94f8-723d2a70d0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab0a741-1bdf-445e-95ce-f8e399e253c9",
        "cursor": {
          "ref": "547cb989-b12d-448c-b38e-4cf48fcd0a38",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "108a1514-b441-412e-9710-96991979d696"
        },
        "item": {
          "id": "0ab0a741-1bdf-445e-95ce-f8e399e253c9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d673436e-9bed-4864-a405-a9f5d2ea0245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab64772-0450-438c-975e-df0f8a8d3fe3",
        "cursor": {
          "ref": "a3732bcb-c5ca-4d37-b0eb-94d9cd74a29f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3a83972b-a646-43b3-897b-f691670d8b69"
        },
        "item": {
          "id": "bab64772-0450-438c-975e-df0f8a8d3fe3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f7c1aeff-8a71-481c-8768-2bbc698e084e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e67dfcb-b4db-4258-85c5-209d7b215ab1",
        "cursor": {
          "ref": "20eb2791-9470-4581-945c-fd040322d0f6",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "73a49793-450a-424b-a45b-a3f632503403"
        },
        "item": {
          "id": "2e67dfcb-b4db-4258-85c5-209d7b215ab1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a659277d-c4bf-4ceb-ab7c-768f7c2b0b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59abc315-4a24-4008-aa8e-d23d2680f328",
        "cursor": {
          "ref": "1d2453e8-bbf0-4632-9cee-c8b7e7d0c199",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c3a4b2a4-675d-4bf1-8f86-56b98cca6d6e"
        },
        "item": {
          "id": "59abc315-4a24-4008-aa8e-d23d2680f328",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e0b74033-153b-4f69-9cbc-a22047548d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fd1846-d2a7-43d2-ac8e-205ff555a66a",
        "cursor": {
          "ref": "f5636349-917a-4ea0-93ab-99473079e7ec",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b45e1320-0214-41a6-b1bc-de1a11c68998"
        },
        "item": {
          "id": "c4fd1846-d2a7-43d2-ac8e-205ff555a66a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ce352765-4edc-4a84-8830-a1b4e9d738b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ec599e-a4b3-4957-88ca-33e57b09b497",
        "cursor": {
          "ref": "a4d80d91-d155-442e-9a8b-b4a4e9c03cc4",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8aa285f6-15ce-4614-810d-218d2e9f5230"
        },
        "item": {
          "id": "f0ec599e-a4b3-4957-88ca-33e57b09b497",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "32b40958-db90-49ad-8c4d-2c2c885616dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16c5350-a793-4d29-86fe-eebcaa2a4261",
        "cursor": {
          "ref": "4f91870a-768a-498c-bf4e-4c350ddcf730",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7fdbc592-7435-4607-be64-c2a3b2fbfea6"
        },
        "item": {
          "id": "f16c5350-a793-4d29-86fe-eebcaa2a4261",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "99796b40-dbb2-4797-a453-d595c3b5c509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a1cf16-c41d-401c-8a55-d75ea9dc383f",
        "cursor": {
          "ref": "03d003fa-8cb9-4142-ad74-af79ae01b337",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3f5a3ee0-743a-413d-92f1-ea2479a709ee"
        },
        "item": {
          "id": "37a1cf16-c41d-401c-8a55-d75ea9dc383f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "673fdc52-1561-46cc-8d9b-fcfc81b41047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91791fc-61e7-4a14-8056-a09b287e17ad",
        "cursor": {
          "ref": "b34969b0-e6c6-42e3-bf97-2d1bdc9f6d90",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ae9ae6c2-d73b-4941-a631-7f364a99a7ac"
        },
        "item": {
          "id": "e91791fc-61e7-4a14-8056-a09b287e17ad",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e854dc2d-4f10-4498-b742-7778ce7ad485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a2fc07-1579-46ab-b02e-d10fe12fba44",
        "cursor": {
          "ref": "d8c0484a-e88f-49f1-8b99-fdb2e0221d44",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bf5f30c5-bd88-4355-a255-1b96b795e178"
        },
        "item": {
          "id": "a2a2fc07-1579-46ab-b02e-d10fe12fba44",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "09b1363b-cb90-4a9f-8e8b-54313930cf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25028169-f303-456b-bd51-4ff03b4a3f37",
        "cursor": {
          "ref": "78275a95-ecca-4be8-81a7-c8fa033a2a6e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6fcdc577-2c29-4bd1-9ea7-e7fc59d5fe97"
        },
        "item": {
          "id": "25028169-f303-456b-bd51-4ff03b4a3f37",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fdbe2655-a08e-4c79-9381-d9afeecf4c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f23107-d6cc-4538-8d07-1bfe20b4b9e5",
        "cursor": {
          "ref": "b1074014-f74f-4b6e-95bb-06bdce72a76d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f76f9994-a90c-446c-8c49-2dccf37ab50c"
        },
        "item": {
          "id": "c3f23107-d6cc-4538-8d07-1bfe20b4b9e5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "969fefab-6a38-4955-820b-2aff299c9244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f68969-3bd2-479d-985b-494076835655",
        "cursor": {
          "ref": "1a065cce-79e8-4258-b67e-503ef73d04b8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0f670f7e-2268-4eff-95dd-7c77cbae9d11"
        },
        "item": {
          "id": "06f68969-3bd2-479d-985b-494076835655",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "23a3189f-7e67-4118-a728-1bbb4babde81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5c14dd-ef40-417b-b4b6-47130b9bd1c1",
        "cursor": {
          "ref": "6c8bfdd3-6d06-4869-9d2a-e3080cb290e4",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ac082847-ed46-4c3d-99c7-aeee58a969f2"
        },
        "item": {
          "id": "df5c14dd-ef40-417b-b4b6-47130b9bd1c1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "da3dad5b-8356-4613-81fa-1091b098fa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3797e7dd-e4db-4b95-8d52-967ac621b465",
        "cursor": {
          "ref": "7e3e731b-3707-4897-b0f6-f8210c04b2fb",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6f2f696b-aaba-442b-83e6-945e4342a92e"
        },
        "item": {
          "id": "3797e7dd-e4db-4b95-8d52-967ac621b465",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4f3390cd-d645-4368-b175-fbba3c908d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d15d74-a103-4e71-9393-02702b1b2d63",
        "cursor": {
          "ref": "bf9a0fd6-9cce-4a6e-bf70-b29e3431ffc8",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f5929ec3-2fac-42ea-ab2b-d0dccb72eade"
        },
        "item": {
          "id": "b3d15d74-a103-4e71-9393-02702b1b2d63",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d837d177-07ee-4afd-8165-c82313b6ed2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4469874-f80d-496a-bc9f-d9db01486329",
        "cursor": {
          "ref": "20115562-5cef-47ae-9521-e049209d8bec",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "beca8f34-8418-4b34-90c4-225900ad7f36"
        },
        "item": {
          "id": "e4469874-f80d-496a-bc9f-d9db01486329",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a7f0db4c-3973-4d99-aec9-09778bd3900b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b95f5b-fe96-4642-ba48-4ccc77bc30b0",
        "cursor": {
          "ref": "39e33671-7f02-4e36-82c8-3cf56d340bb0",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b282a57c-c2d8-4910-ad68-656fa6bdc937"
        },
        "item": {
          "id": "60b95f5b-fe96-4642-ba48-4ccc77bc30b0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2e8f0111-6b90-4f7d-b509-0c927fd43daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29984606-a584-401d-aeac-33c5a181599a",
        "cursor": {
          "ref": "68dd3554-0e95-47b9-9a34-03ca4999c134",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4d273ffd-d069-469e-bdd7-b4616b300639"
        },
        "item": {
          "id": "29984606-a584-401d-aeac-33c5a181599a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ac838349-9232-4ce0-8e19-dbb362fa0e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fcf0b9-5d58-43fb-92a4-d2362e7e3ff2",
        "cursor": {
          "ref": "5bfd12a6-70de-489a-927a-b958702f0ae9",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "408b425a-c6f1-4a77-9850-92795dbb826e"
        },
        "item": {
          "id": "d9fcf0b9-5d58-43fb-92a4-d2362e7e3ff2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1c2922a6-3620-45f7-b557-d3e416f6cf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c48d9d-45f3-4d30-adea-4e1dc7bde13e",
        "cursor": {
          "ref": "b82f2681-d11d-4b5e-a16d-d3a62bbeb14b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6d3a6ed9-8e96-4713-9781-9524b078304f"
        },
        "item": {
          "id": "58c48d9d-45f3-4d30-adea-4e1dc7bde13e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ecc813e2-8bb3-445e-b2ce-6387241f83aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89c9122-c10d-4561-870a-f1fcee8fd268",
        "cursor": {
          "ref": "e636f4e1-6256-4769-8610-b8c1705d4e89",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "965f82cb-0923-4175-b5ed-ddbf99e0938a"
        },
        "item": {
          "id": "a89c9122-c10d-4561-870a-f1fcee8fd268",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4437d6a3-a6d4-4bc0-8bef-5f5a8004f889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daafa01-d990-4ec3-bfde-6ca98727cae5",
        "cursor": {
          "ref": "2ff87c87-5870-450a-ae36-c5a3c17ef5ae",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "831bcb80-8770-45f5-aa48-32cadc1d085a"
        },
        "item": {
          "id": "8daafa01-d990-4ec3-bfde-6ca98727cae5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "86169b9e-2a88-4732-ac37-9a6827db49a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f230680c-ebcd-427c-8728-4c249809a57a",
        "cursor": {
          "ref": "35e6a6a7-4763-44eb-b1f1-64ea87bc19d6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6ff8fa2f-8737-44f8-852c-31c43405e737"
        },
        "item": {
          "id": "f230680c-ebcd-427c-8728-4c249809a57a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cf32635d-b329-4f2f-88ec-fcadd5ef6edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a08e09-321c-40ad-9e39-37d66244f2da",
        "cursor": {
          "ref": "d5b29348-dba7-44f3-9504-085b6854009c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "564f6d12-944c-4f47-b781-a78467284a87"
        },
        "item": {
          "id": "06a08e09-321c-40ad-9e39-37d66244f2da",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1462edf0-3896-4ad0-9f88-c1f158c67c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d42127-d085-4314-93f4-04a2cb5e0ec4",
        "cursor": {
          "ref": "60824f58-64a7-4fd4-ac64-156d0cc75236",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "944305c9-adc8-420e-941d-72cf57a23e9e"
        },
        "item": {
          "id": "64d42127-d085-4314-93f4-04a2cb5e0ec4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "46a2cf28-a2b1-4208-a5b4-40564640028d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a867b6-954e-4545-83ba-3a3758d3b9a7",
        "cursor": {
          "ref": "26eeaeca-512f-4ab7-ad0d-bf4075fde5fb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "37a48445-3597-4d19-87ad-660007eba6a5"
        },
        "item": {
          "id": "f9a867b6-954e-4545-83ba-3a3758d3b9a7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "33896163-3972-4eda-a22f-106165f54dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6738f6-8f78-40a9-ac92-eb0922d0fd9f",
        "cursor": {
          "ref": "d78db30c-d406-4052-b890-d056e52f8f6b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f8d7c14e-b147-4558-862e-d6527b988007"
        },
        "item": {
          "id": "fe6738f6-8f78-40a9-ac92-eb0922d0fd9f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "627c1b2e-207e-4db7-8a82-2b2fbd037c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c430832-0d34-4c10-89fb-ff05a375ce1b",
        "cursor": {
          "ref": "e877a21a-da64-4d84-bd57-771636fb78d0",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dcecee30-b575-4d01-8ee0-003b95930229"
        },
        "item": {
          "id": "7c430832-0d34-4c10-89fb-ff05a375ce1b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c48e8bc0-45e8-412b-b263-5622bb58f19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99e485b-efd5-4599-841c-3919e9ef8c1c",
        "cursor": {
          "ref": "0dce8f2d-0205-4e54-abfa-32e0dafd646a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9cae0da4-be0e-4a1a-8c99-fd03659076b3"
        },
        "item": {
          "id": "f99e485b-efd5-4599-841c-3919e9ef8c1c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ff139717-fba4-4638-b655-3a5794335daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00f2c86-5838-4a4b-b680-b9b0193f37ea",
        "cursor": {
          "ref": "0315db82-ed58-4850-a461-ffff69aff9b9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c673c2f6-f11b-4f71-a7a6-a73197d5cbcb"
        },
        "item": {
          "id": "b00f2c86-5838-4a4b-b680-b9b0193f37ea",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1648341c-0c9e-4545-8a92-b89c2d3304e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a300a8-65e9-4444-b69d-60eba1cfaa6c",
        "cursor": {
          "ref": "7325ee28-6974-416e-a964-c44d66a27b92",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1abe557a-db0e-4070-8192-4fac0f5d472e"
        },
        "item": {
          "id": "02a300a8-65e9-4444-b69d-60eba1cfaa6c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "96d77541-75c3-4a6a-b115-1256709e41f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1042bb1-f98c-4f3e-97a7-034c41d306fc",
        "cursor": {
          "ref": "56de9845-9dc8-4df6-8d24-b236d9c635df",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8228da79-1dd2-41c5-a45f-98c3ab459bdc"
        },
        "item": {
          "id": "c1042bb1-f98c-4f3e-97a7-034c41d306fc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9a155787-26a6-40f5-8105-f9567ebd49b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7e8cdf-ecfb-4634-85b9-e0c1541017a2",
        "cursor": {
          "ref": "70469756-7d17-4332-859f-7426becf3eca",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "61a9a4b4-657b-498a-9567-d11b908e8528"
        },
        "item": {
          "id": "da7e8cdf-ecfb-4634-85b9-e0c1541017a2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "09481883-549f-4722-af9c-3d3fccae0a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090097d2-5ca3-4014-af2d-6e808589d8b2",
        "cursor": {
          "ref": "f00e7a37-4e3e-446d-81c9-1c7531326e2d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "98355083-b646-49e3-9588-de9d555a19f4"
        },
        "item": {
          "id": "090097d2-5ca3-4014-af2d-6e808589d8b2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "218499bd-9975-4b81-97d1-56a344a1c331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddfd983-7e99-4611-93e5-1d623d129fa1",
        "cursor": {
          "ref": "8d0715b3-56f5-49b1-b035-a2d6fb9e9b3e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "76c08f47-b0c0-48a5-8d3a-e13b94f8c5ae"
        },
        "item": {
          "id": "eddfd983-7e99-4611-93e5-1d623d129fa1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "730679e5-2455-4414-a022-4faafeea39e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b521edb-d693-43d9-b8eb-10e0049f1bfa",
        "cursor": {
          "ref": "3e7c3e29-8c24-4f0d-909e-1656aa3b6d15",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "827d6dd2-5a8d-48ba-bca9-9037992014cb"
        },
        "item": {
          "id": "1b521edb-d693-43d9-b8eb-10e0049f1bfa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3abcb775-f1b6-4bb5-93df-72ae06174b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dffc3d2-2c0b-427e-9d4e-54bc71c5e4e5",
        "cursor": {
          "ref": "39b6820b-7f46-4e16-96b1-86f818bf27a2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e9537fb2-cbd6-4153-81e2-922c27dafb7e"
        },
        "item": {
          "id": "7dffc3d2-2c0b-427e-9d4e-54bc71c5e4e5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "46eb5b37-9e39-429c-82e5-11d6d82fcd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e3c9d1-a7b5-4c39-8808-e0a769724a33",
        "cursor": {
          "ref": "a9a3d0fc-13f8-4bd4-a78d-943ccef199c2",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7301e1bc-97c0-42ae-a38a-cd876f2a0c99"
        },
        "item": {
          "id": "30e3c9d1-a7b5-4c39-8808-e0a769724a33",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "35d73851-82e7-4b89-a037-287185f5fae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a743ce-efb1-4b98-88d4-4d968a8f8994",
        "cursor": {
          "ref": "2c8ebfbe-a1f0-4c90-a14b-ae35d8b2d930",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e1db5c47-215f-45ce-9e7e-6655e7157716"
        },
        "item": {
          "id": "82a743ce-efb1-4b98-88d4-4d968a8f8994",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3b3d596e-a971-4925-8a75-06effff115ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed774aa2-0ebb-4fb1-8e4a-85540ea53e3b",
        "cursor": {
          "ref": "bc5d39b1-884e-4c04-ad26-11fa3af37bba",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "30eacfaf-7154-4470-bb23-8d15212dcca2"
        },
        "item": {
          "id": "ed774aa2-0ebb-4fb1-8e4a-85540ea53e3b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f722d7c1-e27a-4884-8807-b946793974f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c29d6a-d121-440c-be13-0ea158408345",
        "cursor": {
          "ref": "fef951ec-5144-4591-a84b-1904b738dfae",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "db87d5e2-4efd-47e6-97f0-a5338a2dc60e"
        },
        "item": {
          "id": "07c29d6a-d121-440c-be13-0ea158408345",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e02ae964-0de6-48c8-b326-624c97571073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5dbea3-ae96-4947-8467-91f4aaa1d7d2",
        "cursor": {
          "ref": "b5767d62-ef6a-4f37-8c4d-46c6d7565d32",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "08f6fddf-1cec-4e3c-b2a4-06be12a58aee"
        },
        "item": {
          "id": "ad5dbea3-ae96-4947-8467-91f4aaa1d7d2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b0e8f658-f6fa-4e3b-8ba6-714415546f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ddabfe-682b-41ec-b4b8-1f106a9aa5f2",
        "cursor": {
          "ref": "ce0288d1-da5f-4032-a0d1-f320986f4d65",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "28f01bcb-e5a1-4c0a-990f-945c9a33ee96"
        },
        "item": {
          "id": "a4ddabfe-682b-41ec-b4b8-1f106a9aa5f2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "65ccfc91-92ec-449f-b9e7-06a91c832071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84ccb21-9134-4113-a629-c0b41b399c5c",
        "cursor": {
          "ref": "88b384d9-a7b1-40e7-8f05-c0dcfbe646c0",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "93cede42-c321-4cc1-a007-f236bb737c3d"
        },
        "item": {
          "id": "a84ccb21-9134-4113-a629-c0b41b399c5c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "98064db7-cabb-4b42-b4d1-ce0a7ad51c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63962ffc-ca58-4572-8ba3-39bf4cde4390",
        "cursor": {
          "ref": "c92e617e-c4aa-4ad2-80a8-5f288535c1eb",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "46ec09e2-615f-4080-93ba-72797eff6b43"
        },
        "item": {
          "id": "63962ffc-ca58-4572-8ba3-39bf4cde4390",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "30c76b56-6e0f-4bae-a2ae-7c73a567edb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaddbcc6-7537-4ec6-84c0-e2a57269c91c",
        "cursor": {
          "ref": "ed61a752-6556-4893-b776-846028276fef",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "46ac61f5-4374-4940-9163-11be3b7a0680"
        },
        "item": {
          "id": "aaddbcc6-7537-4ec6-84c0-e2a57269c91c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e26951ef-1f93-4615-88a3-f2c2d13dc008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6d1095-0d02-4494-88e5-320a1a354851",
        "cursor": {
          "ref": "f78f0a1d-e1f3-43a5-b201-b89dd8fae845",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ead188f1-ab85-47d3-b927-083d57d57662"
        },
        "item": {
          "id": "ed6d1095-0d02-4494-88e5-320a1a354851",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b498e1ed-2c6f-4758-ac4c-91b2b34b5a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c28694a-caac-4cce-b626-02b907f88333",
        "cursor": {
          "ref": "25b8f41b-4fd0-406b-aee9-fec1c997739e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5bf225b7-d906-4c14-b2f8-a767f7a91391"
        },
        "item": {
          "id": "6c28694a-caac-4cce-b626-02b907f88333",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cdcc12b2-9147-4625-9f37-0d4622d939cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a847de-d498-46ca-9cf1-5b7991605857",
        "cursor": {
          "ref": "06c06de1-de05-4170-a6df-625da2059396",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "21bdd770-6711-4f2b-b33c-d89d35ec256f"
        },
        "item": {
          "id": "b6a847de-d498-46ca-9cf1-5b7991605857",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0500365a-d1e1-431f-bbe9-8cbec345391f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f8c376-ef83-4599-b809-b24f8b41ba34",
        "cursor": {
          "ref": "3f4d4bae-6938-4c17-9f57-06816755b9b8",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "82909c44-ad72-40b2-98e1-a63629463283"
        },
        "item": {
          "id": "c0f8c376-ef83-4599-b809-b24f8b41ba34",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "50385f29-381b-4509-91b6-bfbac7809143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f43c387-8c6e-4bd4-ade8-142a6d173778",
        "cursor": {
          "ref": "be22ebed-a79d-4fbf-830e-a36449798501",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4a44c43c-876b-4798-8257-882da9dde042"
        },
        "item": {
          "id": "6f43c387-8c6e-4bd4-ade8-142a6d173778",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a71890be-b98e-4a5f-92c7-b4347d5317b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3727a82f-346d-4402-b651-5e3b9297114c",
        "cursor": {
          "ref": "816242de-9cf8-41b6-abdf-2362bee8a047",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cb92534f-8a37-4b27-a176-aea670a8ee00"
        },
        "item": {
          "id": "3727a82f-346d-4402-b651-5e3b9297114c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cb56b2ee-f7a7-46fb-a665-6189bb16e51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0fcc86-ef0c-4d08-8418-4bf91ea83289",
        "cursor": {
          "ref": "28a2ed7a-1afc-4ad3-9e38-0d84883f6bd6",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c0c0814f-7e14-4c41-b88c-729f231b175a"
        },
        "item": {
          "id": "9b0fcc86-ef0c-4d08-8418-4bf91ea83289",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "29577b73-3021-4878-8195-a5507ac94a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a536238d-4237-41a1-81f7-55a51c280b3b",
        "cursor": {
          "ref": "6bb6a999-505c-4a17-a9de-495841ff5f9f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5932a8cd-52cb-408a-8680-c6d3d999b5e3"
        },
        "item": {
          "id": "a536238d-4237-41a1-81f7-55a51c280b3b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a170d5d2-3c9b-4558-b06f-e7bb61605605",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2093ea3e-73d7-4448-8702-4f7f6ea48e72",
        "cursor": {
          "ref": "6d4f95b9-be56-4764-8073-386e08adfa31",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0c1ff945-95fe-4fe3-82d2-75f1bd6147ae"
        },
        "item": {
          "id": "2093ea3e-73d7-4448-8702-4f7f6ea48e72",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a9037793-b709-4e64-ba93-e487f7d499bf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 426,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caacbe6-737f-47ff-8701-d35ee2d09387",
        "cursor": {
          "ref": "dfeedfa5-74eb-4113-9159-4002d84672ae",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7f9a8201-2ad9-4b97-8995-560f20257d0e"
        },
        "item": {
          "id": "1caacbe6-737f-47ff-8701-d35ee2d09387",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "884e012d-10c6-465d-b90b-63e7d25e7c52",
          "status": "OK",
          "code": 200,
          "responseTime": 409,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a92750-0f8b-4c2e-aa47-f228ea7f411a",
        "cursor": {
          "ref": "226ac807-dddf-4789-8432-4c6b5c751c54",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d26e3a3b-2936-4b10-bc9f-04da7bc41fe9"
        },
        "item": {
          "id": "24a92750-0f8b-4c2e-aa47-f228ea7f411a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d3a4c8b8-6a61-41ff-8978-993be0e6b1b7",
          "status": "OK",
          "code": 200,
          "responseTime": 1836,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2b9333-2f55-4f86-853b-812013439cdc",
        "cursor": {
          "ref": "33193c7c-e653-4059-a11a-5e1236a2017f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d9f622cf-8c55-46b7-a528-d1f8be321f3a"
        },
        "item": {
          "id": "da2b9333-2f55-4f86-853b-812013439cdc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f7355b78-a6f0-492d-888a-b876d80ee3fb",
          "status": "OK",
          "code": 200,
          "responseTime": 2134,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3023dbc8-c009-42ff-b061-10112bd3b519",
        "cursor": {
          "ref": "b64a919f-119f-4bdd-ab00-da6c72ac8d0b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "73aa3daa-a267-450e-be3e-9e034aa5ec81"
        },
        "item": {
          "id": "3023dbc8-c009-42ff-b061-10112bd3b519",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b7173786-6f56-4537-9218-9cf3f4f4b367",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3023dbc8-c009-42ff-b061-10112bd3b519",
        "cursor": {
          "ref": "b64a919f-119f-4bdd-ab00-da6c72ac8d0b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "73aa3daa-a267-450e-be3e-9e034aa5ec81"
        },
        "item": {
          "id": "3023dbc8-c009-42ff-b061-10112bd3b519",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b7173786-6f56-4537-9218-9cf3f4f4b367",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3023dbc8-c009-42ff-b061-10112bd3b519",
        "cursor": {
          "ref": "b64a919f-119f-4bdd-ab00-da6c72ac8d0b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "73aa3daa-a267-450e-be3e-9e034aa5ec81"
        },
        "item": {
          "id": "3023dbc8-c009-42ff-b061-10112bd3b519",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b7173786-6f56-4537-9218-9cf3f4f4b367",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08aa66ed-0e5b-4001-8300-3960d8b1e862",
        "cursor": {
          "ref": "ce3676c6-f3a2-45fe-80a7-c112a7afab7b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d17eb8b4-0b50-4a91-8bb4-47f3ff649818"
        },
        "item": {
          "id": "08aa66ed-0e5b-4001-8300-3960d8b1e862",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "5331e80e-53eb-4016-a355-e6b72a2a1048",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 366,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3517a4df-2d34-484d-bfc2-bb50c48b6924",
        "cursor": {
          "ref": "03b11059-8dfc-4cb9-90dd-98c739172038",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "12e79918-df32-422c-b84c-0fcf1eb64589"
        },
        "item": {
          "id": "3517a4df-2d34-484d-bfc2-bb50c48b6924",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d40f43b6-820f-45e0-81df-1b143d65e2ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3517a4df-2d34-484d-bfc2-bb50c48b6924",
        "cursor": {
          "ref": "03b11059-8dfc-4cb9-90dd-98c739172038",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "12e79918-df32-422c-b84c-0fcf1eb64589"
        },
        "item": {
          "id": "3517a4df-2d34-484d-bfc2-bb50c48b6924",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d40f43b6-820f-45e0-81df-1b143d65e2ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d42ec7-5dac-4a1d-867d-73e1d4dfb877",
        "cursor": {
          "ref": "45ad8b88-37ad-4037-9e5f-1b5adcd3a18b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d815ad98-0d07-4d0f-bfad-730897c8be3b"
        },
        "item": {
          "id": "f0d42ec7-5dac-4a1d-867d-73e1d4dfb877",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "db9d8972-6562-40d4-90b7-381e8bef084c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 597,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537e3174-4678-4c71-9194-fa5436f4b5fb",
        "cursor": {
          "ref": "48477c55-8cbc-44d9-9ec5-54dbe0844507",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dd1c37a4-5a26-4b60-9a70-89d3535f209a"
        },
        "item": {
          "id": "537e3174-4678-4c71-9194-fa5436f4b5fb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9331a286-21f9-4291-9f19-23588eda43f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537e3174-4678-4c71-9194-fa5436f4b5fb",
        "cursor": {
          "ref": "48477c55-8cbc-44d9-9ec5-54dbe0844507",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dd1c37a4-5a26-4b60-9a70-89d3535f209a"
        },
        "item": {
          "id": "537e3174-4678-4c71-9194-fa5436f4b5fb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9331a286-21f9-4291-9f19-23588eda43f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7e1597-3407-4f6a-bf1c-75c594350255",
        "cursor": {
          "ref": "184d8eac-ec47-4052-a519-0fa49d5d511c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c3587445-0c94-4660-9153-2405e84be2d6"
        },
        "item": {
          "id": "df7e1597-3407-4f6a-bf1c-75c594350255",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "72538256-6bf4-4089-9e7e-4d0c7b0fd67a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 728,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}