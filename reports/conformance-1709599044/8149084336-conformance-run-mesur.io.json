{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bc6de7f7-da22-4bb7-af00-b502b997986f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "acbcc02b-93d0-4161-8a2a-fbcee8aad128",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3687bd87-996e-4180-adab-118bbd851718",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8222bc19-9797-4b65-90c0-ad26548a51b5"
                }
              }
            ]
          },
          {
            "id": "095ad817-fa88-4b70-8a8b-0289091707d4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d3224d4-7b92-4041-9902-46648c9d640a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0e2e14f7-b250-4bbb-ae88-25b220b588b3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8e040099-1515-47c2-a48c-660947a23b50",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ae8045e1-55ca-4355-afe3-53b8b621ff52",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad5b4546-d8cf-42ee-87be-9d841610c63e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "156b22c1-a5e6-48e1-8840-c4f1ffd4136b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "702563a5-6abc-4881-b004-490d4fa02b24"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7acf0038-51a7-4ae3-8c97-6c274f0fbe87",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d1eb14d-22b7-4a50-8d4b-c361a8ff43c0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "59ee9ebf-7b1f-4253-bc58-a827947d5b00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a94785c-6eac-459d-85c3-e86e26b73370"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4040214-6f91-4f09-8196-5bc5b18e4253",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3352f044-b12a-4725-ae1e-ac84470c1a12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f60cda4-f792-4528-b54c-fdf84501386c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a606b2d9-0205-4974-8372-fb9ddc6fbdb2"
            }
          }
        ]
      },
      {
        "id": "b50dd23e-23e8-4962-bfbf-842fd8ebaf23",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f37fc1c3-1c6a-4fa1-a478-142e56dc3bb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa6412b6-4080-47a3-82a4-5bb705b27480",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38a1c203-c185-4cd6-bb41-c470d143fd89",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717cec87-987c-4616-b96c-958a438021d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d269a11-6ee7-4382-8f2c-6e5743ed1d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606c0939-18db-47e6-949a-aaa0eaddbc0e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad089ef-e894-4f02-84be-3f640dc2153a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d30ddf90-aa1b-4bbb-8f56-9f2289253bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3084560-4fe0-4221-93ce-d15471340c79",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62f6863-d580-409e-a03c-b47cc9bfe490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ffb3ef1-9ec4-4ec8-b5d9-cb69662de791"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b0418f5e-e9ff-4aac-8073-c6c7b16d61ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df3214f5-5232-4993-9a3a-cf6713762320",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448143b1-6d0e-4bdb-bba1-eb4842f96994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63c5efdf-258a-461c-b490-bef1e92828ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52273a5e-06e1-442a-8984-6da89a46197c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d15730-98a3-4eed-820d-16e0078815c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f9e444cc-321f-4846-aac2-7a2cb705086e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6923588-01fd-408e-ab23-dd676c8fcf6e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa05cb16-5b35-42d7-b85b-00a86c8e8e53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f105e507-f9a8-4e1a-b6a3-bff0abf94e52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd1166cc-b8be-4038-a848-124764e645b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7db8c9ef-431b-46b6-b328-e0af06aa46d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2b84da9-774f-444f-8c1a-f92849d5a812",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fce88d3f-beaa-4393-9b3d-9a9342286f0a"
            }
          }
        ]
      },
      {
        "id": "9c5e092f-ecae-4d77-87d5-93aac54d7484",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9e0f21ee-00d7-496e-b6ef-85a06725dfbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7dcc8060-ee10-42b2-9832-4cfa84c5d3e2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "12245e4a-b4ba-4f7e-b038-db77c20864da",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f85d32-c861-4db5-b01c-d3f510467814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc75f81e-aae3-47c6-b97a-9294b0b90f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403fa729-d528-4206-839b-2be2e6e8bef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4549a44d-6212-4643-8e5b-a1eccd0b829a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1e6608-8c1c-4988-8d11-001963ce0cf8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca7cb01-c804-42c8-becb-051fec3ef105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ffe3b0-5fa4-4080-897e-54688256118f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3398a100-187f-4f91-8458-417e61106af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deab1923-07a6-4d71-9d17-145136a3576d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e49d8c9-995c-42b5-aedd-cf213ccad4a8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21610de3-016e-4e96-b0e6-68512be32fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03ead09-0c0b-4e94-b51d-de3f8c835dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79413b95-0f3c-412c-87c1-33269f7c21df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d93bd24-475b-4108-a83a-2d5bbcd4faa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff992ee0-4915-4918-9f1c-158debe928a4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d553b543-cded-4493-8500-3e6c2219ed39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76853cf1-7707-4303-9385-0b305660f912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655c82a7-5b78-4ff4-9c8a-3cd061aa7a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b5323f2-2dd5-4aef-ad0a-bee58c793831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429f9b47-881c-484e-99dd-c212ed696c0d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca484ed9-53f1-4886-b63b-3b8f001f6724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c999a19-c61a-4888-8f94-2cce2b126cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6303e9af-ee39-4d60-875f-85b429a652da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f25a1356-a2a6-45dd-8bfc-0605f249a500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19b5d3f-380a-4ea9-8fb4-50462fd20504",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa9c383-77bc-4964-9360-bfdcde84fd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ada6e37-162c-4f25-a4dd-fddbf146521a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e739345-7f87-43a0-a177-e6ccef85ca23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddc67a3d-b6da-4bd2-a283-d0c0f26e8816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fe7987-9e1e-4238-9075-155d544ce6b9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4454ae-9aac-4a64-b3ae-d7c6e6b00f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62c8acb-3248-493d-bf82-ec7a51df0609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3905992-3e94-46df-b5fd-aae8f0e116a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52a0c0a0-1dc8-47b4-81a9-d8a65405da05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f82f3e0-2b62-4d31-960b-97c29fe83508",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa16b94-a149-472c-a133-5458ec3ab20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93ebd77-fef1-4b79-97e2-6808751823f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3049af-95bc-433f-9e59-28ccc25bb312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a402caa2-af78-44f1-8c29-12ad5fc99645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8226928b-ca2a-4afa-b21f-41f1af8330d6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e3ecf1-f9ed-41e7-acbd-b1a463d2761f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a001c68-deae-4f1f-9dba-2af390431581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af493d65-5189-44b8-aaf4-11c5444fbefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b05b3f12-ab2d-4023-bb3f-78cd87e578b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e43848b-f22d-448d-8b57-0500d7baac34",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e00efeb-7a31-4814-b89c-bdcc04bc9cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab22a6e-27de-4d57-9dfa-17ea1e96c96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d4a7b7-5c2e-4c5c-aab1-0ae9b17add34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "745599a2-cb76-4eaa-8456-c0c94761177e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3cc9e0-9a0f-4897-9447-9981b04514a6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99bef10-aeb2-49b7-96c7-982a4d146aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77548dbe-c156-4d41-9e26-ecaa3ee40b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b2ec4b-7de2-4cf7-876b-90d9376b85a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51681a36-2301-456b-9a84-bf1ea19a0811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3b788e-f7a5-4552-aa8a-e14265d3bb07",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c6d465-a6e4-4099-b41b-4c88ba36698e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b9c6b8-fd60-480f-8170-07d10fdeac56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b383c10-abfc-49d7-bbee-e9ff760ba7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60238553-0237-457b-8412-85fba56db5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1d9e1d-6498-4119-9a16-b994dbc758d6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6551ac-6265-46e1-949b-dc8d0c608a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf05bd1-723b-4e75-8730-89e10a8b7bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb9460d-5300-4c4c-8818-0200dcf61a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b92e7403-8803-4a4a-986b-96aafdf9e34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e600418b-91cb-489d-b779-f431658c0465",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7ee9ef-faeb-4f58-a21b-6a3a0b267045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e6f982-7cd2-4e8a-a426-5089643bf8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba26e19-1aac-4aa0-b2d8-68dac951ff97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa97c04b-05e0-46be-9d9d-f1787ec24de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fe6206-4c47-4d7e-9dce-7688b24cd47d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090461b4-703b-4fa0-8136-d7d16e9db4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086df64e-c212-4a13-af8b-9a22e0a425ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596025e1-3ed8-46d3-8a85-03cc9efeb531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "730992c6-4606-4600-a8c1-2dd895534f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a04415-15b1-43b5-bb42-0f05560e82c4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034b6482-a68b-45fb-a8b5-d75057067f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef90a934-36f3-4992-8b94-31399180df9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff80ae6-b178-4a61-a060-e2b89843ea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "864f4cfa-57d8-45c2-aef1-a861d91c4a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc99173-82e9-4e49-92bb-b78ca0bdb39c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc2860b-6c5a-46d4-8b0c-9df68a9088b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d3d635-847b-4dc8-a501-1adddae97137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945d1644-8f89-4257-918e-c73b9f3e24ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62abf40c-3e09-4078-b84c-29260813315c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1dc787-e898-4659-a6b8-0f92f2ada4c4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9b520b-a4d3-41bd-bab4-a9033959b6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5867315-6873-4e4c-b5fc-a7fff58d8925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73acff1f-54ba-444b-b7d8-8f7add852ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbc3a2d-a2eb-4416-b3e0-f7ce0f6c893b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6037bf15-03f2-45cb-a196-74a2d796d93b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d049bf-9311-4eec-ba06-1613f26791f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d058045-8794-45d7-903d-2ae0dc3a4e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0933f2-4f98-4df5-a06b-a26541b4cf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b132a269-57c4-4ea8-b785-90b344055fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db01d8c2-9e81-4b31-88e7-b6745d7ddbff",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f0fa0d-6912-4b11-98ba-201837576d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d628f1-0a05-4cf3-8c31-f3006d34df7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03239ef6-7cc1-45a4-a64b-b13d67931c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8bbcb9-12de-484f-9a20-2a9c24efe6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a649162-fa55-48f0-9850-75caaae84bef",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ecc9d8-b950-4fdc-b7fb-1b469d23a254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a2c37c-d2da-4245-925a-951856e3aa65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4328ac-87e5-4f8c-a49d-73502e2cfcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7607bfda-586c-4d54-b0a5-133ce749b871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b32a822-c3d9-45b0-92f2-1e211eb0fd92",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68632b1-b8d5-444a-9682-35febceddf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c0f3aa-a1e2-4ca0-9282-75d17614fd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dda291f-2e61-4c49-97f6-75adf1a0695b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2de82dcb-3743-41ea-92e4-a5663535135b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97f6daf-7221-4e77-834c-0de10ef470c4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c7b1e1-c2f9-4b67-8083-d2b02edaa0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ba95df-3c47-45fc-b2dd-5935d2d28c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0465e700-42b7-48d1-b661-59e2f2dd6ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "702ef538-f658-4d25-8634-80a570709abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c03e1f8-6ac2-4996-9339-d821509a5a2a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f40931-2c9b-4166-840b-2b64294d7b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cef1d44-6921-49ac-b3e9-8b8bfe7f978a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4022b5-63f4-4d05-bd32-b9370340d0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f2428a-4b8a-40b2-873a-8707ab4089a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10883c4e-317c-4e72-a47b-10d7ef23300c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2049574-2a73-405b-8f82-31489d50de1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d310b248-e106-4945-83ce-ed479b115e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce26bbd-bb5d-4d39-b2c1-a3c521b14b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1566e8d9-8079-4d8b-a9ad-fa0d5221b92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd670ecf-e8fa-49bb-a11b-028b35b3f62a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f0feb7-f15e-48cb-b478-18c2b1ef589d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161fd522-7176-4f89-9394-e1d5dc5adae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8752ca4d-5764-4d32-a306-36fe43808bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "652f19f5-7d45-4872-be86-d553da24db6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302a8726-5470-447a-96e3-9757a182094c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712cf5e4-3a14-4f16-aeca-d368414dfb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536acaeb-168e-4489-b1a3-05268349f74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e982853a-4a39-4f3a-9fb3-862663cdfa9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79af949a-56af-47bb-bb82-3d1d4d036339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822c4506-431a-4bca-84de-71c57c5f2ef6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5de135a-5a74-4848-a829-cebe659551c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25df80dc-2358-4b7e-96ef-67b2dd835d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f290696c-b11d-42a0-afb8-5aeec5d22ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80c5e6f9-cee5-4ffd-954c-5e1c39492b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f28fc63-4342-45b6-a413-8735b6b37886",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871460a4-a3af-4a6c-ad83-0363546724f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46151238-57fa-43d3-b4b4-48b3a90bebde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207c90ec-756d-41b2-99e2-070ae969b3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a8f502-164f-46bf-9fef-f7d0f2955f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52659c31-cadb-4384-9cc0-77d82ed3ae4d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77feedb9-7538-4ed0-ac50-850ed89a3809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cede4bc9-cec3-4833-ad08-73564fcfd78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cca6fcc-0bc8-4491-b766-0dad402859b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "51368494-4363-46f3-b6b0-5158433e7ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3225eb8b-7e79-4741-8f25-9b8a71f14565",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80fec49-2092-4a4b-8f8c-a82852e7e9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965a7048-5e63-489c-ba35-477a8ea8491c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad35cbd1-8106-4a42-8a92-eeb8ff70a9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8acf9ce-67de-4ccf-b1e2-b5be71ed6f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a35606-0a08-44e1-a72d-4869f539a6eb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61849ed1-e075-4b41-ac6e-85d543b66941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ce0c82-3462-426b-9de7-b0346f1d0966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43bcb4b-3e4e-4e8f-88f6-052cd4369181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49fefd24-9ffe-45e6-959f-f8ee59cfecae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b19003-ccc7-4082-b528-74f4e29a42ca",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233f6853-2fea-420d-a922-e41477cd2ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bc9e18-af3b-4a18-ab81-558bd374492c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f62869-0f25-4863-bb7e-fa5a66865a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "becb5529-be08-4a04-8517-b84ea028bf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cfb0bb-841e-48e1-baf8-a6d7f2fd08b7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654c6245-bf0e-404b-811e-41d0bdf64af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e90017a-0817-48e8-bfca-3dda3753db5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0474e34-c35e-4c2b-a185-cf8e8e8ee55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1df34885-9d9f-41f2-818c-d859bb8e5f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2cf2a4-0e77-43cc-a45e-221d315cd103",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192f98af-c17a-4bae-982d-b42dbfad0246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d6df7e-3f00-4126-b070-529671e8e83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5d2e02-af4e-45a9-a004-d78b987e9ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "161dc420-f76a-40fb-904e-621c5402935b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d31eabb-e5c2-474e-a609-4cd25e0fe34d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff58163-9a24-4d0b-aa55-31d71faef052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f702c20a-7c2e-4292-8826-9672b10b8912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1227412b-14c7-41f5-bfaa-5ea8bcd11998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12935467-2e23-443a-bb4e-be0ee3e7046a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7116b4c3-9004-41b2-9b59-1d6c8aab952c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25576eaf-b662-436e-ba11-d2a3ec7ddbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca87f983-0040-4dda-91b2-b032e943a7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd08c3e-a843-47e7-94c0-0efb6fc33bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "322ee7c2-2412-4049-814e-70bda214ed71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca17610a-d435-4ad7-945e-5ab8e2f72b4d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ef9803-69e3-495d-8e2a-107967b93a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbadefdc-0706-4afd-a6ab-3c4412c26ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc4692b-b71d-4ffb-af0b-fa596a55312b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88e5ade7-4858-40b1-affb-d9a2515732e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24063c29-7df7-401c-9887-a215e63aa54a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73539ade-2d36-496a-bead-f55d889518e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adf910a-523c-4cb3-84f7-5ef9004a8ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65576362-618a-42eb-83f2-53e4aefd5e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d4b82d-1bd0-474d-a052-324d1fa0068b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722f00e7-5766-46ef-ba67-7d249f3f648e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea00611-8c6f-428e-8331-fd3aa99e4104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce9ea09-462a-4edf-a225-2c294ecb2a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64549f1-114a-4174-8a20-f7b71d198854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6ae3f6-eaac-4da2-a6d2-da0d7cb3975e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47af3b5b-5b71-4597-9cd9-ef73cc5041b4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b59d6ba-5d80-4697-b732-16455b4c94d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bc9d97-446f-4ee9-b90f-bd6e2e5d4212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde8f834-caaf-4b50-90f1-66e1f4547e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "54fa3019-170a-46bd-a4c3-8d4449cfebf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11829bf7-e35c-400f-a839-56deab36f787",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8163ee-a317-42bf-a30f-2dee1ac1d16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44829eed-1688-4c94-b395-49d3f8f07068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f534683b-8c69-4ac8-af78-b6dbe28b482c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f925056d-c209-46c8-8e55-00d0933748ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaff8ed-724e-403e-869f-942debcafe75",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd015f5-ebc2-40f1-a509-61f3966de656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4001bee8-5135-4d1a-aa3c-1c168d60a490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ae08d1-84ee-4f23-bcfc-b86c6ecbe57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "74c13b01-9ba3-4c9d-8e93-aed306a98bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3964fa72-3939-4907-80ad-f6ed7a998b46",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057d350a-07cc-4503-b6eb-d2a0853b1b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69695cd4-1f18-480e-bc8c-cab8f53d2e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d27d47c-55ea-4186-9e4b-1723fff150ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e29e2b6-9190-473c-aad3-9540c0d0ff4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8ec9e2-5b4b-4e87-a3e0-de0d2eae7fc1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16173039-0928-4f98-b1e5-a907815a3833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e09ab1-e565-4663-98d9-9dcc8848ee92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f4a4dc-e112-4907-b06d-e679ce011be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e17624-bcd4-4ed0-b448-ae9e65bdfef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510d367d-b46c-409e-a571-2a2e5d9cb4d3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef3a19d-920f-4e50-a8e9-550276383cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8420cafc-d52b-4bba-9eb7-21ad29d63589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358b8430-f092-45b8-9e0a-32fc20eb37aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "425abfa1-a68c-46fc-ba5d-e638c4b89f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ccf3b4-a7e6-4071-b7c2-fde7897b0e53",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8bc978-0e78-4936-9386-e0b9e4811a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17038df-66ec-4430-809b-33a71ea4e868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc83e38-18a3-46c7-a174-05d5126d089d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f05fcbeb-1622-4eaa-9a64-3f9fb2143cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e988659-9c26-41ec-b852-edb2515bb2b4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb5f937-d21f-4fd0-947a-689326e9923e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f872ca-6565-471f-961b-a06164bd4e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b006f8f4-e7c4-4039-ba83-e04e18dcd019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1146deb8-da95-4814-bacd-2adc102c3d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c69c526-5335-48f4-9ab8-f67c4fca19bd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ecfd06-0468-4ba5-a23d-e3e887016a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2876c537-a9d7-4908-90b7-40be40751bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53f937f-2868-4a6f-8d84-1dfaaa954e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21af3bd6-4c44-41f7-8602-90480c7beeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf8ffa3-c35b-4b9d-9b65-5b942b9422a5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1653115-0861-413a-ae26-d4dd596e33bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd1b36e-4e23-4943-ac22-c140187c0a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7ed56a-9151-4873-9ec7-cceeeb51bdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dde01d7b-c64d-4715-92f0-31a5d9b7043c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a09ea7-54fb-4818-88c5-9c329be70d34",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bcdb08-f6d2-416d-a945-815384a7cd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b98147-7c10-4399-8cad-469f5843ee52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1fb7b5-3f61-46b0-8220-429227c0f4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6ae441-f627-4f26-85ed-6a78c12c2927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c7f59d-955e-41f6-8bf4-eb326ec43d14",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d779d0-54ff-4d6a-919e-984cf6dc17dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5082d397-06da-4e71-8b57-7d9dc052c065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4551bbc4-6825-4e01-bbbd-4fc390c321f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d12aee-9d60-4cba-a98c-df27ef2a9961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed59e8b-9b6f-4cf8-852b-493f668a50db",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073d74ef-e423-4ea3-9348-93e49faf3549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f92ee52-2399-4bc7-bb32-a52f959c8cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f257a955-57d9-49c4-933d-08f48ceb99c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93f6d83b-762d-44d8-8a7e-4975699a1b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3209f65-51ed-429c-ac73-2e8af0773240",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c91e36d-1265-4ee3-bf2e-2dff6667be05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bade9ba-c803-4eff-8337-ab20ee121b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641a3cad-f986-428b-a3af-7155a848de6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec4a6c4-12f7-44fa-a397-23c7037b7c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfddea3-63df-4d57-bb5e-18eef3e00edb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143ef8a3-61ab-452e-99a1-84cd96433176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c482a2f4-7f40-44c7-9a4a-d0b57e8092e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13425268-2e2f-44dd-9efe-dd4fd6d28993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13e597be-3764-41a1-9d0f-d948e08a05b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e52690f-5978-433b-b284-b0cb45c8dacc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13be08d-87fb-4c8a-8aa7-005078b652db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329e70ac-0168-4d6f-a1a6-30f118a7bbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48657a07-424d-4af3-930d-94b793dd4f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fefe1845-71f5-4caa-b614-4208372160ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176328fc-b2a7-4225-ac0e-31ea4e12acee",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9053de72-1fe3-43c3-93a5-35bdb748b5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033c0200-804d-4f9a-a4cc-ff872c7732c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4beed9b3-3290-40b1-8639-2240363cbf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee600159-b2c8-4782-b8c7-81ea0ead801b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef60936-0397-4cfb-9796-03fe91143fbb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd12b82-6384-4141-8c50-45a15c4f7fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7148c4a-27f6-4074-813e-1c9f9b866efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9556ddce-c0b2-45b9-866b-b73051b48f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0687d593-354c-4774-866d-91bd08889e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faad18a-82e1-4258-8a38-ed27878f7d1c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dae19a-0eba-423f-8745-b46019bc2d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c14972-4ddf-476c-a86e-4c3fe5891d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199fb7ff-6d49-4ae9-aa9a-b9ea0999b860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "80c06434-0543-49b2-9d65-0263b7ea1eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c594df-12de-4ffe-95b3-6c89fde67e7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec75f73-2dd6-4061-8f34-a628c49a7e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94be884-cb5a-4139-b001-3cd197d5b0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd940c26-24e3-4244-8719-ad8f35f54353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f86d905f-fc86-4f21-844c-6192661cf3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1ee871-33cb-4938-a8e6-e9beec960e7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080abe1c-9236-403e-8ee2-b85991d248ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6497b9d-2a05-4c79-9dc9-3c58419354a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488e39c2-0d67-4304-b905-34fa59f82d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f58b274f-4ebb-482a-aea8-bd7d05af5c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d212f0-7b8a-4dd8-8274-1b9ebf29befc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686d0750-8f19-4a9a-a14c-e90b86752f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc417df0-6b3c-4b8e-a184-6f388e54bd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c558ecd-81d6-4cbb-b35a-b192ad3610b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8b20de-9c3c-427f-b5e0-8386f3d10d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520c5986-83e9-4d04-8f8d-78df94363a7d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f2387f-2358-4629-9181-318d182201bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5546aa9a-69d9-4a94-bcef-ab051219ea65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47548cbf-4bb3-456f-907f-c7f9f82daa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c37ecec-ff12-486b-8895-97ba1f6a6438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d3576a-c77c-4486-84f3-2d95e6bb9927",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8888df39-2634-4fc8-b096-003c454e6e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2248a27-9beb-4a77-b6a0-90c810a1c003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755f19fe-e11c-4e8b-971a-a204fd35a2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c2e222-a2bd-4045-a3bb-76e7a819ed3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bfd1a9-4c0a-4ef2-8b01-22802ac544c4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a36308-2090-4686-bbfa-ed05937ff2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2eeac96-4e9c-4471-aa52-a3c35bb3a518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e66a6b-167a-4818-9adf-5c1c5f6ae1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bfa2904-6e3e-40e9-ba43-2c29d7212ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f4a675-08ec-4f8e-8412-b0a760ff8d73",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ca90e8-c59d-4729-ad2d-57f343fb0412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415cd098-d982-4f0d-91c9-b67ef84a3321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dbc59f-6056-4441-87c9-16b6df13f2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86dd3649-0fdb-43bc-9b34-bee5b1cbb1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c66875c-0150-40ff-ae6b-a6f8888ca039",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2aa710-cf72-4be7-9111-e9445cc8b498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56eff98-745e-4c59-922d-760819bc83e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09816bc6-c0f1-4ece-b816-43f3cf0d2d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d535ad48-6b89-40e8-ba20-b49cf04d175c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d80d66a-d61f-4ee0-913f-018b73e94f8f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcf4778-535f-4503-a74f-26fc9c08507c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37779d20-7898-4b8a-8381-00146ed13ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3093b6-6f81-4ac2-9973-b4c8fa470bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3b123d-1c37-4897-9db4-062307f82e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c8858a-c675-4a14-a001-fccef2242b7d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7058433-8d66-4f73-a354-2899d186f557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79155a76-d0d0-49ad-9ca1-b653c896f662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c948a46-2b9b-442a-86ff-4a54468bd581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d98907c5-3f2a-4b10-82af-2ea820dae5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138c6418-00ca-4de3-bfd2-c038fe142938",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b3fdd0-033d-4961-882d-748b11410d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814a489a-9814-456e-998b-473aada85047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f730c11-1088-4a16-a153-67735ddea9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f26c99-4344-4a73-976d-ebe6dc045f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda95dd1-29c1-40ff-a180-656abf41de5c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7c0e3a-1069-4a4c-bcd9-0f1369182cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de6c922-7a8b-4e42-97ea-778a85521d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2427af-a722-4e30-852a-f02acf404b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aaffe29-d132-4a8d-96f6-d2714b1a8524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ada011e-ccbf-4bb6-9172-58aad2ff603d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbc15b8-f652-4ec6-9419-fcfa00fa01e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30ffbb5-7f26-4157-b6d9-c32bb5a75b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6c8906-81a6-45e4-aa3e-dd7f6c4ac656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c562b0eb-0b17-460f-9c8c-59323087f997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f58f0eb-1c69-454a-a803-1e13620fb43d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21288617-b111-40ac-9a11-9256eeabb819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bfc5d7-756a-41d3-8f1d-ec81279a3778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59976e7-023b-41b2-96f2-fa3aa8dded66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "060dce72-468d-4db0-8a10-4438aacb1e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08d0b07-b3bc-4ece-9328-e2e7e505915f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048709d3-4458-485a-80ae-ca39b29e0100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fd5e4a-2b24-4e23-9f6b-c5e3ef29821d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794743fb-b44c-4a5f-8bc7-5dbdff08d100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8ab5cf-910b-4959-928a-5a9d6c396e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6b33f8-3dad-48e6-8816-8d5bfa24a310",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb0f459-94c0-4a77-82d3-fa0d38736afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5026cccc-4592-4f01-9f3f-2150f4e58491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbb1021-50ce-4310-b745-0c1aaadda30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75426865-2644-4a31-97d3-1534292b1511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a883c0ed-da73-4914-b5ad-49d8daa371ac",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2e5fbc-87e7-4439-8280-f33973b1d978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7f902c-4320-43b2-8a6e-e75bd7575cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d003da6-0feb-43aa-9037-888a4dfd345e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c03b79ab-66cf-4074-910a-bf96778cc430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f272d85-229f-40d4-9426-ce7120fc6e10",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b3aac1-5b13-417c-9854-8c0d6498eba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ebda60-e455-4ab4-bfd1-5f700af2341c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c265068-1b32-4be2-b879-ca1f4163d95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71b4e4b2-4ca9-447e-b871-3caea2a23229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6325a5-0636-4012-9af4-d2fa65420474",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4774b2-cc39-4a34-a894-6fcb77c9ac35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2da41d0-8c49-4c71-8f65-45ebfb3d68fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769faf5d-fcf0-4fc4-b5a8-835ebe832c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bce09c44-22d3-4026-8008-87691e9a289a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f00c18-7083-43ce-bd54-5f5671b7bcf8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e74be5-d9ea-4498-a6d6-ef78ed03088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6515ff-dd2a-4553-8c8e-c4098ad28a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3ea7c4-c39d-4e16-a689-3155c4c088cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa26665f-db27-4471-8f8b-b4b3667b8c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2c6001-24dc-4449-af7e-d8a63dc5ba82",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e32d55-f514-4064-b3cf-032310eafa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a0a106-f370-4d64-b119-64a45e3a808d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eddfeb1-5e2a-4f2f-985f-2ca8b41ee294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84f7bde2-e81f-471d-bb5a-2d306465b028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46931f36-9251-499d-b138-c085f2d2095e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f273bd7a-6efe-400d-9454-67e804d8ea45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e368821-933f-4e93-924a-5c4eb1e9d05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdeb81b6-8e8f-46c4-b977-c3facac1dda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7258eeb-b8ba-4d68-94c2-16496a4efe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378c4e3c-a602-4794-9ebb-57ff1b0195e3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607e0954-6550-402d-b54a-59430cfeacf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df49b085-13ba-4197-b254-5ace95bffb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4228bcf6-0125-465b-a976-e5743f3b5ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90f1425a-cc48-45a5-aea9-f27aab738541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1ea686-3411-4430-9891-e4c30d887240",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b27855-4451-46e6-a934-dbf0c0ca978f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5a18d2-f314-4896-a471-79ca22457e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d198dd2-108a-43f3-b380-754ad6bfd7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11b2a9fd-c2fa-48e9-aaff-0b71e4d2604f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efa6b8b-1599-4df3-8c68-ff0a7f6df494",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f761eea1-4285-4504-a2dd-eca57d4aeda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5016f561-0b74-4396-89be-8ab813f924f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2d57fb-66bf-4efe-ba2c-c7116dbbf984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fee0638b-1d17-4fb4-83f6-009277fdc346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dbb4bd-2f9d-4e5d-bc6d-b40a03bd5cb4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9715f5-df6f-4ef0-84fd-a5b37f1f9f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b76a8b3-ae78-4157-8969-22d1e7127944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a86638-aa74-4988-b882-983c42511c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7762440-a53c-4a7a-bcc6-839091709b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8189c1b6-dc2a-4000-9671-adaef5b96d17",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fa5bde-cf0d-409d-95bb-1e8f12769d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86e6c8d-eb66-46fc-a7b4-f852fedbb473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a7ddfa-8d62-42f9-ad3d-eb9f0735fd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cbc0e3-2c86-419c-b3d3-df5fc937f2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6307d0ec-d974-419c-a127-13f851297404",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef857c1b-d2a0-43f1-ad8a-af6392bbf7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1273acb9-2700-49df-bdb6-ea99c79d1ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7c7759-64e4-4262-ab0f-e450ed682493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "de35eb8b-5f12-4e98-80d7-4f650310fa29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6d08ce-c1fd-4767-94c8-c9bc9c567a6b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7048bba-c7ae-4c2d-a2f4-b1519f1b20e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a9db67-a0cd-4a3b-b480-4aa50344362c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0097058-3e80-453b-ad22-d6ad5651812f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb1eb85-1926-4cfa-bfc8-b499c803b733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414ae7d8-c92d-4fcc-bb01-c527c6ab13b7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f26ba11-655e-4d49-be2a-f2a917ba5f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa137797-5664-4e15-83a5-211b64de4b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdf00a5-81ca-425a-a0d3-499b4456c6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91254e26-7c3c-431d-bccf-0e5c59323cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54573fc7-0dcd-46fa-b010-3cc7b42c828d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a64392-0722-4b44-85e0-4be408fa5475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbf04d5-4260-4cf0-b835-8e0726963bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b99c270-975b-4c75-9ba9-075dc508f8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d854fd02-aa7c-47e0-9bbd-47a5b031ee39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ba80e2-e156-41d1-8b3c-123647ac311d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd49b953-befc-487d-ab92-c44b2c1a5b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c448fbcc-67bf-4d96-8be3-47d85f73f176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fd7a8e-70ca-4720-a494-78e47ce998bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffcf14e7-6093-4366-ac16-4447d70f903c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6334df0-a578-4f83-af53-4f5b70fb662b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be113bb9-ac5c-4547-91e5-ee00e4746727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9c17c950-2fdc-499a-8420-679b8cc6aa1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017ab0dc-88d7-427f-8eda-62d626c67687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b365327f-7e6a-4dc3-9a0c-ea65b8d2c9c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a10d0e76-f5db-49a6-a7bc-59136446db14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1dc1b774-a270-45bf-b7de-e0eaecd5d89f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb612f5-670e-4bca-9d68-0848dd7a5edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dc4006e-cef3-4048-b30b-3bc979cc55cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10781ebb-d643-49fd-9cd7-2a628263d070",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63dbb48b-75fa-42ba-a66c-b6c4d30f4f5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72122c3a-86fa-4171-b74b-781b4712f654",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76531fb1-ec59-4125-b8c1-01c202e0dd7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2f7c224-efa3-436b-a882-2899d6894643",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ed06a07-4eb2-458f-8206-4b474ec42a93"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bcbbe697-e054-41ec-980d-b07f21d4b948",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a7afb2a-03d7-477a-9a94-d5da718184dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0aa58429-d29c-43de-a530-70e53c9a674b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eaba468c-fd80-4c0f-a689-a80e1c56543b"
                }
              }
            ]
          },
          {
            "id": "1ceeb46b-c9f6-41fb-b8a8-74c78f1bb30b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1cde5f39-af42-43cb-ae63-cb81c4b33bfb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bdadab39-5932-4936-9799-69a7ef340ca8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7de259-27e7-46a3-bf18-3b4fa325c110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1afd63da-6142-4ac5-b09f-13de0735aa1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0417ff5-891c-4da3-bdc6-8b41d1465a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb445ed7-f409-45de-bd85-9d44127dac88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7beef348-015c-4373-91d7-7eabd294e668",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "150f4a15-7b45-40da-bccc-0af173fbcfd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27c41af8-8265-454a-b5bc-8b154b2c76d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35e5f070-7d90-4c46-920f-6d23decbd855",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb99db5d-7cbe-4fa5-b383-e9796a0a489e"
                    }
                  }
                ]
              },
              {
                "id": "39701e0f-19fa-4f9f-a317-544d893d5586",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef287fe2-d0e5-491b-8e71-9612a9d22301",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b141f758-76fe-40db-93b8-fe674a66d53c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34a5f8cd-7f49-4ba1-bc19-3e20aab827c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83571448-0f6a-4c8a-bb2d-1f4d49c2d372"
                    }
                  }
                ]
              },
              {
                "id": "68c4ea40-c3a6-42cf-80ff-954b512847d8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bebfc0c0-322f-45ad-807f-f15f04e38ac0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d01fe929-13a3-4119-bc29-cecfcc614d39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f97575f9-4f17-4b29-b020-889893665ed9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2f1eaa73-2775-45fc-a3b0-3b6bbde50793"
                    }
                  }
                ]
              },
              {
                "id": "69683973-512f-4e0e-839e-7dbed4864976",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "619a769f-783f-4349-909a-c826cc18b5f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c610b576-32ae-414c-9de0-e63004f5e466"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "035a85c3-f61c-497b-9f91-ddeb1ec356f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1e8f498d-5418-4555-8bc1-88f1249c7edb"
                    }
                  }
                ]
              },
              {
                "id": "bf52ad16-c48d-4976-85da-90649b7c99f9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0ca2fb4-df58-4872-a20b-d97d3a3cf5bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "542a0009-0a5c-4c0b-816c-505762b24286"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60e3e6d2-2a53-481b-9a30-1214a3a0202a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "efdc6400-a4b5-4435-881f-9e67b1927ca7"
                    }
                  }
                ]
              },
              {
                "id": "89970612-c02c-426d-be16-cdbff48e4738",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f11a714-2df9-44ff-9f03-5e837fb1f5fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cb4e1c2-603b-4f88-a6e9-0d370142e8f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71df51bf-69d0-4890-a74f-c414cef8ee37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60c42c3a-f66b-4861-a2c7-075f818da11a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c82e1846-c6de-47d4-bf74-195bfc3ea219",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55bef5e8-01ad-451a-8103-903ac587137b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "84917841-5a52-4a37-91fa-09465394fe88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c55ff21-214c-446d-b6ad-06c636aece64"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af85babd-d707-440d-8ab2-54e62dc4abbc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2295c77b-bac0-42e4-9466-cc35ca7a9a6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4f15d9b-39ba-4761-9d85-5167bf23c251",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "831cfd82-6136-475f-b3c8-358423582df5"
            }
          }
        ]
      },
      {
        "id": "38ce6c9f-740a-4c43-820f-174d6ff6e5c6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "68075463-33c1-4521-9625-e1797f0a69d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1a6324a-ea9e-4c5b-a80b-f43cabd15536",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f2ee419-b79d-4632-955f-3fe24b0b3207",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8938111a-1fca-4fda-a684-30ffacacec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb69738-0221-4dd2-9e02-a65e8f8e896f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e327c05-0287-4a07-a169-3bd880db199d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "621b47c1-ac6e-4aaa-a402-20b902c6318f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2020eddd-d63c-4bd6-b680-4952e07d8cfa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0842947-beb5-4b2d-afe9-754e9aa193fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c36d0c-277b-4691-9e60-6069ee6d3bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40326f2-172d-4534-bd0e-4f87cd35452a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da65c4f7-5490-4455-9345-0b874bff1ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a03a0ca-d515-4275-9572-7786e5264338",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19322f1a-8066-4635-a5dd-407667c58ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acb9959-94c6-46dc-8eab-7a1bc3bc163a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611845d8-ecec-4e8e-9328-6207cc177336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63d571e1-fac6-4cf5-86f5-83909fd60caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e91ba2-edcb-437b-bd20-501eef61af6f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfcf190-fb40-4855-8c32-6c1b7a1dca21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd7f404-4262-44f4-881a-760c966f86e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133ab60f-6cd0-497f-b765-046c33a346d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6e0d40-b6f6-4dc2-9362-c738389899c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dbd9b1-0628-442a-b87c-9aa1e5713c47",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c17bad7-fb77-41f8-9877-219cf59d17b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fe4aea-245d-4139-94fd-81899cef5082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85b32e3-f962-4777-8631-22c38973807e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4987e8f-b0aa-43d1-898a-9f71e7feae5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0a492e-552e-43f3-aa28-4b6d32258bc9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991ff3ae-9c1a-4f6a-a769-c2dec483c06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8589317e-3d3e-416f-8349-688c79d15ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b4cb5b-96dd-43c4-947b-76e4b14b514e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c815ae49-6a26-4866-be68-81db715e8d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2130536-9327-4da5-bb0c-7a5784ed0aa0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a970ee5a-c8bc-44c1-8c2d-7df8ebab771b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab950e42-dd15-45eb-85bf-ce662ea1610a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e323fc-7127-4a5f-8abe-abb4080caf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb849d6-126c-45e7-8168-7f5535590d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9103cf71-0a4c-4c9c-bf21-29c2a6e7048c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315304d0-f647-44e7-a054-7cb62c771082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b8c979-0a61-4b38-9a33-d51d19906d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a710cec-2fb0-4016-bb4d-334b502aaeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac934a01-9c99-409d-aabf-09b32e162202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2281e219-3027-4f0a-80db-cb47c2596c96",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4294d28e-749a-4be4-ae1d-02617c9ae298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a080ac79-08f3-4f5e-bb7e-63bcf82d6a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f01090-5a53-4267-ad29-724b1ec3c8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7c06a4-81c6-46aa-99fc-de7861692b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a62cb68-9fe5-4c04-be7f-d8670a26f3cb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98937624-54fd-4bcb-987d-c2b67c84e395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d5c1cc-9062-4136-8a57-f3d8acdf704a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf3994c-750e-4623-9748-b8e3157d02f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf71d0e-4c93-44d4-aec2-12882a7966cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbbf0af-1785-4eb2-9134-00de28396fc6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be8b7a0-6866-4a64-8bd8-49b8d8bfd60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef82d33a-cf11-4ab9-ac5b-d485bedb35f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90188802-6344-40bc-8579-ae3ab3078a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c58b7be1-bf03-4cef-b513-7910626f15c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271421a1-a3ae-4468-8a8c-70539a69d36c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b5e622-f71d-498b-9289-e792c31ee76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a08910-8ba1-4b81-9541-819a30a83e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cac53b-cb20-422a-a5a4-89de52144ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2883a9bb-4e71-46ac-a850-f6611f77ea9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b24d2bf-becd-4dc3-a778-c3966457c804",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc90db01-61b1-4365-b401-ce53c05e2930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafcf8a7-dec2-4d80-abf6-155387658817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb30c276-fe05-43a1-90ea-718857737782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc8462b-f545-4f47-b686-cc750da4fdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1327eb78-5298-4f0f-be32-2da9ff30d950",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d806026f-7b32-4534-bb66-97f3a49a1feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0baf1395-6ce5-4de2-b437-5f0d2b124ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0a0927-2e0c-4e06-bd02-fdea522255e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1786ca94-ab42-4662-b6c5-419a4564b60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18c167d-f531-4e89-adae-f97887ee2d63",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d6b3c5-6fbf-4ffd-9f45-d1137d7c81a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf9cbba-2283-4bbd-9389-3606ac03f78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d69efce-d1d5-4a69-8ae5-53b4279d0171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "927e8231-720b-4583-8171-1ae941e0aaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17e3929-5a2c-4d26-9b55-962c0b2db456",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fd6ff8-ff4f-40f9-9747-f109b52bd2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15183e8b-32e7-4ac8-a9bf-1a29e1d48250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cabf88e-47b8-41a0-bf2a-2b3e40ca39f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d82c083-07ed-4311-b88d-f391d5b850b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d7dee6-258f-4611-bf8a-ad0f1aac103b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df7bd50-8bea-432b-9093-75e9e56ebec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f56084-ac37-4df1-9a28-dd73deac146c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bd7d96-4aa1-425e-b458-e3d1fc1f371a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d73788-f970-48fd-9859-7f113dd19855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53764a58-b065-43f4-9c53-e14afa9612f8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2025a74-d5de-4ea5-b37a-00ac3f29c4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c3b3a6-33f2-4791-bd04-dce41553cd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ac5cc9-6a8a-4a20-98ce-453d957e30c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c19acbb-a413-400f-8657-46dbe44b6bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518aac11-5b0d-4714-be8c-29d7251d99bf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9272af6c-cf05-4058-94cb-9c08128855eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d4c5f1-0bf9-4dd6-a331-c849abfad48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897ea9fc-d9ef-44d9-b535-d3b18d0acc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae9a2fe-fae1-4f29-9cf5-0d8d0abcc578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923dd501-b3d1-483e-9d0b-96d41e97466d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4537c3-84a0-4d65-9f35-419be89f0f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6316eb42-f3bf-46a7-9843-83880b0a56db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44da6632-1333-4d2e-97d7-53e51d2c2495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd09b93-d931-42ab-8741-422657d6966a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ff6212-4437-4ab9-a52d-7ee0772379f6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4835b3a-9aa8-4089-a07a-7eba946f36e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d755da-fe69-4cc5-ade4-796b882ee2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82272e1d-5fd0-4bd2-981f-147f44019449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc858708-b744-4422-96c1-ef43329cb3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a3cb78-915e-4c54-aa3c-286a99b21786",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e50d91-0209-4485-9207-babfb1ae4d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2507198-756c-4692-a49d-f403a9e2779d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc34384-a3bb-4972-afa3-1b18de62828d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "accfecb6-8c94-46e1-a2f1-ed8f99b5393b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21c07f3-af69-4813-84be-31c54e53b6ac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdfab46-2b52-40d0-993c-5150ff450e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97371d4a-7250-4553-8eec-ab6c64b0e591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88561f0-13b1-4abb-aad4-5ddf05bf7f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44efb73f-aa9d-46c1-b566-63fe41080829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95d9ae0-5aac-44e5-bd54-a1a28a697120",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050bc672-c3fa-4e35-bd37-8ce355354e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f8efa1-1e20-4b93-ac69-0daec87b42c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9c3ad3-1f98-463e-bb4d-2cb9ea47aff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe965b1f-bf5a-4525-a1a9-6d06c26e4a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9224d6-dc46-4f44-9d34-9efe2a18c115",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a99afa-13e2-40c2-9f3e-a176aebe5120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c93bd1-c5cf-485e-9af8-0d8544945ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fded96-9c59-45f3-b628-2b9595e01a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "553f7b0d-eb69-40cd-b86f-783e3080a9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fd979e-212b-4865-90ba-821827aca266",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c6acb7-c8f7-4841-ae0a-615a29a20d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65f1f84-f7d1-4915-8e71-6e50b49eb261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1269790c-077a-4c52-b94a-0a2ff5a79fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f719b9-ee7e-420a-a020-c15b3266dc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cecc60-57aa-434d-a765-9d24e5f20c4f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e10abac-ec30-42d1-ac50-283a06319416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49083cdd-9cc8-4e9d-823c-2789c526c1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725c9a11-010c-4c19-a526-60aebd07f835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c270c650-86ec-40d3-bd81-bede20ca8392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98ca513-43d7-48e3-a3e2-37b809161bc1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d168d7d0-6d84-42ef-b687-f6bad600d78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb5c8a9-60ff-48f6-8f2c-c3fbad7116b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0559f9-da42-4c77-bd85-4024b85ce6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c10563-8d7b-4cff-94be-57fdd3a06f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23f903f-7d19-4e96-95bb-a6f728a23505",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ce6499-5ab6-4451-b981-5dc6508d5267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc63213-a383-4c81-975c-66d1347f4d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7222e3-5fdf-46ea-ade9-83b46188dc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5825e68-7f24-4179-8d24-a057c7e9cae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d64886e-a04e-4e9a-9f84-379da1856b59",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309b83ed-5d1e-4363-b25a-b7160796f9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e562e992-7cf9-467f-9ced-b43a37f0811d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eed9f82-a266-4d7a-a2bd-68bec8ec7f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65dbe4e0-51ac-4ae2-8a63-68a48263a29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b877be2-4ad8-4ce4-a751-2cd7e3a952d8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a05692-d4f5-49b6-a390-3ada87abd1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15ac871-d467-46a8-b390-6346160b492d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73841cde-af8b-4515-91ac-02fa7f215af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec256b63-cfe8-4dc9-9382-bdbcdb5a52c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b58335-9e43-4d7f-b374-ba90f9d0a763",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58901cb9-8962-4acf-91e5-e3316972c72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58fa392-3804-4633-a72c-615d4b9ecc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c03de09-a317-469b-987d-679cde437356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee4aea2-4393-496e-8630-7ae599e95e70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c03ded4a-ed36-4dc2-bc72-bf772ee33f6f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b2a2dee-d330-4dd2-bf04-5b39383fbd25",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa436f2-726c-4f01-afa6-37542025c67a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "afad2bb2-5d57-48b8-a279-8327eb6c3472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057f2a95-c559-4032-b5bb-c05822fc6184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bd42f64-8508-4e52-8bdc-5bc678d7b953"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0773a36-80b1-4e83-affd-4d2feacc0fd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "156807f5-fd7b-4571-8c6e-a6818c3fa472"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1b72905-33f6-400d-b1e9-d704efbd7355",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10d3d231-368f-4c48-ae28-a860ee3bb24e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f104244-86a3-470c-8981-934582adcefc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65495b59-255c-4b58-9e37-1664009b17da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9e7368d-f107-4d7f-af35-54b52eff1187",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23d8ec76-e747-482b-ade5-a728039a73aa"
            }
          }
        ]
      },
      {
        "id": "e0afda5e-625e-4090-8cb3-afa5e702e031",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e40dffb6-6e5c-4593-9c2b-062be059df71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbf4c063-e2e2-44ea-accb-3289c8ad9402",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ee9a958-3fe7-4870-b3e5-e2675b5fd172",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a86d27-75e2-446e-8246-56e2d77cbf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375f675a-d4df-4276-80b7-e11b96304ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d533e8c2-1061-409a-90b8-fbdc24f07250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a3a083-a1c1-4d04-b56a-2e42dc4bf7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca651fe3-a001-409d-8df3-b4e7d9e6d91e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c622e4ff-781f-482a-b15b-231ba4ef0867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18efb0ed-a01c-4ed7-a82c-142286cef0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bea9ad9-7a1d-40e3-8f6d-d566826e74fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df81d6d-8370-4b13-84f5-a6fc516b553f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d92dd4-6c23-4c82-bd1a-df1dbb20932f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54a5389-b161-4413-a601-669dd9d5d920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe1de69-2873-494a-9089-4b4a1953875c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7bcff5-5b9b-4ab6-a32b-eab93de880bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8eeee0e-ed75-478e-9279-823d509cea57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd26e36e-1833-4b9d-9e70-e0336d7dd351",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74666812-6715-4eff-aa41-3c5f4a278d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb74581-0d74-4246-ae8f-fed476618dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff52780-b0f7-4829-9bf1-e3dff93ac71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "352e6519-9c47-45aa-a6a1-f65c6be0138a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be410872-05ec-48d2-ac5d-4fdaf588cabb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc211b4f-d892-48bb-ae5f-05a49f5bcc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77673d0f-9cfb-46e4-a452-108093ec94d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f5605f-8fc4-4e2a-90e6-664ffa97e9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5db4e705-6eff-4dfc-b610-c9cc931b55aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98fc166-f882-43e6-967e-982f210d4796",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f45708-63ea-4383-b487-e982230149c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2a5d7e-6356-4936-b03c-eaa464a5e4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4aed78-7b09-413f-8cdc-e074de4d4d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3322d6a1-eced-4231-b44c-1f6c64e2727c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54280827-95f9-409f-aabe-bcc9c9b0c48d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481efb6a-1e14-4882-8fcf-cf859228c619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab39cc1-ccf6-493a-ab4b-583e27eb7903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffceba6-4f2f-4dd5-ac2c-0cb1b9716f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2102e71-fb23-4eb6-9fa8-9603e8faa93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23804dd0-86d4-446f-bd8e-b9e07ef0dfab",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344f089f-3887-43a5-b3b5-6f804a58a9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2783eae-d5b6-49b2-b4f1-61fc22a0f1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ac9407-b1cd-46c2-88c5-3f8dada27e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5e0d25-f2d9-4955-beb2-aa3ef9ece06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39634b78-6b07-49bf-baeb-b247a43f71fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bfce9a-1260-4cd1-86e3-2f04d89fb1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaae8003-a8bb-484d-801c-c0f8a1aa2691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4456cf-2632-4655-8199-ae92bf028a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49549aff-ca05-4153-9844-49acf1b6f3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77721dd6-522b-4829-aff7-96bb2afd870a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88acfab5-10a0-4214-8800-08ca40da8406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76436a4b-c0f3-4e93-a38a-bfe041b1c3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248c45d7-29da-4aef-b8c9-e3b7eec06318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcb82cc-fbbb-4610-8771-1e50d6b81d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea1d0ce-7be6-4a9c-a491-9488eee4d954",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd523648-b81a-4c9c-8344-9e1c7db5264f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279ad10f-0a9c-4e36-8e91-6b76ee5e5eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140009c4-91d2-4cce-b07b-149653c1be06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "084d8ee5-81f2-4020-bb85-feadaf67f969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99adf77-163a-402e-97be-efd6481ce2c3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d8876a-348a-4a66-9796-beaf2f001a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a251b76-5b1a-4a58-b09a-2f24062dcfd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5608038-dc0d-4efb-9c58-eb2d0139e1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6fc638-0c64-4a4b-8c89-68a1a3d6316e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110a4efe-d02f-4b41-a325-203b96cb3c2d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50b6af3-1a7e-4e2e-b35d-6ea479e3556c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2198583e-21f7-4eb9-9b18-997d975e9f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b0c93c-7cad-4a3b-8c88-720c0c2b7adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c60bce-89a5-43dc-93ea-ef47d30c3920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83efcd3e-ca38-43d9-8683-e0b68609313c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597b4852-9032-4825-9031-15992cd0aa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f0e3d0-e608-4f7e-b2e3-66121a9728b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c6f871-cf9a-40b6-91c3-0506fc194025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c62b3f7-a6bb-48a6-9ca8-083f14517488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0484e6-f5e3-4de3-986e-1781844ea2c9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef034c7f-c0bb-4b07-9ec1-c52b3e0d32c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a31f77c-29c7-47e8-b8fc-8b44374d499f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703946ec-67b8-49cf-8e4c-fb11ddaf11d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "66034d4b-fb08-4bcd-a411-fe19da995497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779d6794-11bf-478d-9393-718b31431a1c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f33bbd8-3062-46c1-9aa4-43629dbd664a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b77d58-f6be-4e50-8001-8ce817e254ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416568a7-f29b-459c-bcd7-02fcca854b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6620c3b7-0067-4532-9ffc-c1abfce4a7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe0ede1-36ca-4c53-8b72-b09ebee59050",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78cf95b-d8ca-4e6c-9c6e-cd4dac2d60ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1c0480-90f4-47ba-b957-633a0bb8542a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e862c4-9984-4e66-9a3d-82005a6f37b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5acf0e8f-be50-464b-a9e0-cd9b396bd9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a7acf9-6889-43c4-a20e-e3a10b37fd58",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2956a52f-9747-46b7-a9a2-9dbdb92a51f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b4b07f-2ae0-48a7-a193-996e4e3fdb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9f7314-2762-411b-aee6-29150d8bd9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b28a031f-e78d-47e1-9fce-95dc8d0d156c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3660c3-932e-488d-a40c-a3b887d0cc0b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5239a87-e31f-41ec-9778-6e6287404087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c9b869-e251-4180-ac6e-113e9513ec25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014b6c78-ca55-4748-b702-0e7a36f32d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aaf0137-adfe-4699-8eb5-d0ddb9a2db05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fa5409-f49e-44ec-bbb5-1ea8a1f86cf6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57505a0-f622-4057-bff0-b8457a0b024b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d5778e-4ce6-4416-9eb7-0b10964c5aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b43e1a5-2cfd-488b-b253-b90808a3f8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1aee27-28c1-4195-b263-e9ce866d7019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f82ba5-de54-4c9b-8f1b-4f9ea0f6e888",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04098d3-5708-4132-8731-c6b6b2daed6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5536af-dd93-469b-91dc-0daa26b1546a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806f374f-c95f-45ef-83f6-92cb1534eed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caa59cac-bc21-4bcc-9246-f1655c01514c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24b6d38-8eb4-45f7-902c-b17a5ea889b2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10aa09e4-f1e6-4b8d-a9cd-4c8b6af7b69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e456dc-24ae-411d-ace7-8da2c3c37734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1938a870-c000-4061-8d4b-1866be883cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9db700-d94b-43db-93a6-45bc313df5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb52338d-6e93-44a9-ae6a-3f3f5c7c31d2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674218c8-5730-4772-bed2-5d0e396df2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00529269-591b-4f69-a159-6110b7ff217b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb285ea4-beb8-45fc-8c32-85833d051e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d53dfa91-9f29-4e67-b79b-c46ee67c8b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f3338e-63f5-4684-a5d7-b66689a8a436",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aacebc8-6b42-45f7-951e-534ab9591820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3786977-df60-42ce-a34d-4127a372a166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30694467-c0ee-4fe5-ab5b-e6e29f0cc330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c741b4e0-1bea-4a54-93fa-44569c6a90bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307847eb-9b4c-488c-81fd-aad9e4b8ab41",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28fbdc8-0c41-4d9f-a7e9-fa500a2ae8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd41755d-558c-4f1d-b898-bf1731936dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020f4e10-1338-43d6-a5d8-e40cee6dd01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70ecb7ce-a7c6-4e8f-8d13-8f5147bc881e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f96b736-3862-4c25-bb46-e65833f2f0be",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b291d3e0-4139-44cd-b3b9-654793a3628a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d205564a-24b1-4582-8458-4fd020338380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb0cec7-2c9e-402b-bbd6-a781a25abf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3420c5-2e39-421d-8eee-1b2a18e517c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe769cf4-b360-4a8d-b39a-ef7a895a6bc5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1109d1-cd6b-4c75-8e41-d8d6372d6e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff80791f-6ce0-4e4d-aa4d-5083fb764843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a5af88-0659-43a3-938d-159bc33e18b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ada6db89-c00b-4f33-b5ae-fd3dfe32b428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab578fdf-5334-45eb-8104-79d196346f4a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e77b382-bd8f-4b0d-b4c4-c5a5579be3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6789a51a-bd43-4089-9035-a423dc037618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3921c84f-1e15-46cd-ba83-c09ca0be8196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e242dd-c004-4062-9fd2-c04576c210cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e0c1a1-d11d-413a-8606-071ba33d8408",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c3160c-6362-4e47-9360-9d6046ae8b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f5813a-d417-4919-9a31-f5104139b4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00366141-9f8c-4bec-8f33-d1e8e2c5e6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "546f0f10-a734-4841-9459-ad7529825454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c870088-8ab5-4f0f-8763-ef92b6d82390",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588b08a6-49f9-4451-b776-c6f666de04c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417e3c87-a661-4eef-97f8-70fe3e5cec86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2575fe8a-7b69-4adf-86b7-6c8fc1d562f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "060ca16c-bbb0-4305-87f8-e5a9188c94da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80eeab3b-d437-4ef9-b3cc-a52c556f02c4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f550f950-3054-494b-b6bd-3bcfa1a365c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f346717e-b566-4653-9eba-a9aa73e253f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1166d1-0c15-462c-8974-9ff942a42446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c18f96-b5ec-454b-b252-7b5ab8f68b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e35292-73e5-4d9d-9935-785a4d58cce5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a6766b-6a56-4892-a443-961ebf7dc8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50f73c1-c4d2-4c95-8d6d-4455ddbde2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b4da61-4ad8-48d7-b675-56c7c3736553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65637f60-e02e-49b5-95ec-c94c826c77af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10304bf7-7df0-4c76-9cec-a4043362e3d3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b04f8c-4aed-4d2b-8076-834d1aff113f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68b6a1f-0107-4c4e-ad49-9653238200a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4874a1d9-f87b-47ba-a660-fefaa8d169a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9750d4a0-bbba-4b80-b6cd-e47e7f403847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6673f27f-4b98-43da-af54-808000b7397f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0e0d4f-5700-4de1-8178-ba218656a946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a63e066-8b93-4db5-802f-e22128d94220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860531e8-a82f-40e0-9eb0-02ade3ca0752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c80549e-2543-42bc-ae00-cbaf2d80e23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc49290f-f0a4-47cd-a661-dd849ed6da5e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923404e4-31b8-44f4-b917-c4895eebf295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9effb3bb-f586-4c30-a22d-65a416de5c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d806dc-d0e7-49a2-8c24-f2397b40c475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b112662d-bd99-4f68-a4a0-a5fbd0239d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f1eeaf-4429-4851-b8ad-0843b5366d3d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbef879-c5bb-46b9-9f99-9497467c92f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4286e40e-ca4e-4abb-8d81-5a9e8b5ece8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4c4ddf-d86c-43de-a538-7f4a57d5ce3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "518a48c9-067d-4f68-bb99-cb0664497d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7eab698-f483-42a0-8211-33a94878d59b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9376bb20-e612-4b0f-98d9-13089f0b7e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf2d199-3f7d-4317-97e2-5430188180e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c05365-6c74-49a0-8df1-61922bc0f06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a893ed-bfa1-41b5-98dc-d4d12db3aeb4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fef22951-db35-4da8-93b3-7ccbad88c47c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "193ce17b-f874-49d4-9ca3-0b74447db83a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec587455-b5bd-409e-a0c8-58976d4d2fdf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fe0a3a-691d-4851-a78c-19d36387e480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc76a803-a303-4434-b0a0-a9b0163c5ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eefcc4a0-957c-4346-8a0a-7b3f5d6e4151"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e0ca86e-f319-4447-80dd-dede5f56b6f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa119137-84d6-436d-8624-8e9dbda24c6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5af4dfc3-1687-4a56-8b89-f1aa51fe61e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ad1c4c9-b3ca-4ac6-9b0b-d26e0ace0f63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e761f49e-32db-4e1e-baac-3ee90e0cd09c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60fa21ad-c614-40c6-9ed8-3b85cb4bc7b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07831229-aa38-4b09-9d3e-96fde6d75ff5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1682a999-5cb8-45c5-81d9-456254c220e0"
            }
          }
        ]
      },
      {
        "id": "c71279ab-7f29-43e2-976a-69dc3243f5ef",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5dbc5410-8cdb-4a32-93be-a5e4941751f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ac1266a-c0f8-452c-a41a-89012878e5e0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73764405-9a52-405e-9ea0-4e4f80303f82",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02d1eeb-2422-410c-a318-02b01a0aac4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6dcc67-f8a6-46be-b048-86621785afcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd01db93-fb32-4464-81da-a9c314ce147c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a395d7e-2ffc-4f79-9984-bcf4a3bf9f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c78a493-ea90-4ecd-aeaf-cc70bcd353a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3eab5c-64b9-4e23-bc68-e4506f83b284",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff97518-742a-491e-96a9-239e7307d8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a12ff2-de4c-489c-80d5-f6dccdfa8d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd849e28-5494-420a-9fca-4a62ff4bfa3e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63108b0a-822e-498e-a9f6-7af6f674b1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcec019-af30-4e5b-88ee-2d78db7249e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddc749a-8778-474f-b1af-673e77d5066f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5582fd1-0893-4c28-8bf3-e08cfbc70e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3ca4da-a6db-4759-bf0b-818dfff07f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52761b3c-c985-4e88-818d-f14883f8a9ef",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024b4a69-ffdd-478f-961d-3e2987362004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae9ebdc-09a4-42eb-84bc-8ecc7cc203c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991eef28-0cde-4f91-9965-6229465cdaa6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d93244-787b-465d-8a30-97193dc74762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe75c1e2-4b6b-479a-8931-a394e632ab15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b6a580-1b9a-487c-818f-23fb25912014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6085e9-898d-41b1-a31d-3be64e751d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76fe038-4261-4927-b97c-56f878c7c871",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3748723-c891-4db7-9413-4d097ff25393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9acefbf-98e0-4f56-905f-d4592c145754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fd25f7-3815-481e-9ec6-3b5030cfe147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff4f3d2-d739-43a8-b5eb-b2cab7bcdf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66505f7-0f3d-4b90-be58-834a67b61508",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98b9eee-59e6-4b5b-8ff9-af0d01cb1924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4b688dd-18d9-4775-ae53-5baac9ee8844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e8095d-4871-48d5-8d69-713c867c3e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5f00c9-ef95-4d32-a483-f33b6e8c7cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd9cf96-61d5-4f79-b1ff-f9e221eb3647",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7ab31f-3605-4064-8d91-df7394f3d1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e963c681-69c0-49e1-ab71-a703121fc98d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33999f9-bef5-4739-8140-edc88bd25ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c422fa60-fe31-4ea4-a6c7-d804491086bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d17533a-1177-4ac0-837e-fde90aa08f35",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b81215-1ba4-4ebc-9c47-4f53a792bc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ecb213-e426-4da9-9487-c3a0f4f2416b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d36917-fced-44e3-a1d3-1aaf9e7c4084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc70eacb-c296-4ce1-ac12-88cd3699bdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a216c2-7e6d-46b1-a671-eaff5b2cc9ee",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec217c8-9812-414e-afcd-0c885bb29583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f3630b-44eb-4b14-8753-4f652b49b2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a8a122-9ae8-4f43-9886-6f78bb0248df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3ba882-7ea1-44ed-bce3-984568feada3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf23d9a-5c77-42d6-b987-6da17d45f385",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63977618-9f73-4bd4-bc96-6865c2ca9050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae8a2d53-f5f9-4059-b176-4c4969326650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffedd36e-6b7d-432d-9ced-03ce3caaf1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167e861f-0c43-490e-9c09-d132e8ba3d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ee386f-4af2-41bf-b70c-3f299f3ce928",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0addad28-e4a3-40d1-a89b-d75a38f2097f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c64e62c-ab3e-44b1-bfd2-b6385dffd6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651c68d3-8cc7-494c-90b0-938757f43a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5802af8-21d8-433a-9910-d41961c0e366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269c4a32-ea26-417e-8b5b-47648f859924",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15f4631-7a90-42ea-b9b1-e5a760792367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f56d1145-1b3d-420c-b0c6-4de25b856faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90833405-c09d-40a2-b59c-d3f62adbf507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9169934d-8642-4be0-a766-1f24aeb210fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5db200a-e8b4-4470-9054-edc6b5eaa6f8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1564a2c3-dd8f-4a7f-9721-a6ae789e178f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8436ad5e-283b-4823-9c9d-a9678a70fe36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef03283-a35d-4e40-a4c6-0637a5d7378c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70179b2d-0e11-4200-874b-543e4754d879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082fd0b0-1fac-4b59-8029-06d71681a182",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a3e9da-092f-4cd5-ae49-4ad6c42454c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d6bb55-f8bb-4ccb-ba3e-66235f0c16e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324f0c41-8d61-49e8-9832-3e7dfe772fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ced122-d082-4785-bc94-c47cb05dc15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b0edec-dd18-4fe5-8949-519d7c45777f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40666ee-b2eb-440b-9eeb-62a114e239c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73978da-356b-4fb3-bbf4-df144c3aab17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3afb24-eec0-4be0-8b43-8929b4d723f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab82f91-4772-41a1-9700-4c052b0f6b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20d508e-0840-40fe-9be3-4945d33b2c4b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89568dfa-3555-4047-b804-8a7e6ccb1923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cc2f83-6876-4016-9c0c-65e3ffc9dc6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3a6ff0-f7a1-4ff2-b6ea-20157182babe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0b8ae2-44c9-45ab-9eef-a3234a08c916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a507561e-c363-4708-8870-4edd123dbea0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d481552-7435-4d69-b10b-d68c689e1421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53835b3-4855-4eaf-acbb-9cce30c186d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef1e5d1-6dd2-4458-a7e5-4f34d5210722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe67757-64af-4987-b999-d4b79af62d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648b78f5-5c39-4cf3-b317-af4261f882d5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5e0a82-2d27-4e2d-8d73-0e237608a27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12178061-40ea-4fc7-a672-5f0a89918c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512d6386-6c4a-4d36-b6d8-f61b50cb7845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9febf4-03eb-470d-924e-477616be52cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da731695-d742-498d-b5c3-1a7e832b0fc7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289f8404-7c87-4955-9f7d-e3b29e4dbee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208cfea5-4096-4e14-a3b0-8288182168c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5381838c-b541-4b7b-8076-1bf47908d532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2614b2f-6256-4595-8d0d-aa01ec195734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66223054-342d-4f09-a544-a26b205b7f0f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f9e7ff-e814-4f34-ac5b-626c3451a5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff447c4d-eab9-4301-88cb-a2330bf884ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6687d0-bcfd-4e27-bab3-6e20b6f56c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57f650f-4e0e-4666-8c07-d10a15b35244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd72bca4-0ffe-4341-9ede-c1b9b1a711c9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db538f1b-71de-45c9-a7f9-934ab2ac280e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3227d0b-7a61-41f1-98b5-85b9340756dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21014a7-c7bf-4d58-bb8b-2e3433cbc606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900f7276-163a-4fae-a873-e2d7a8e476d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e5faf0-0138-4723-bca5-cd94a80626da",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9295fc-280e-4841-a0dd-86fe831b48d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bfb45d-b2a7-4f57-aa57-ae9a886e0d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3033c5dc-ab7e-40fd-9797-813aeecbfd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480b1361-68d2-4db9-83b5-ee47b2274c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d963e3f-0b76-4216-aa74-82b76c55b1d4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59ef676-2c21-4db7-b217-c80fe1369ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "585d26ea-7926-4546-b313-bf53a9c7420e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba03f4f-0dae-4bb3-a229-702cfa11256d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6170b4-e067-4969-af08-5391bd6ecd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac68789-01a1-49da-bd1f-de63c681d249",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdccb18b-4a06-48d9-b7f8-95aae7070354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca01cfa-3349-4d7c-8e4c-49908a1779fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87599aca-ee2f-4e53-a863-58af9a32e6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4315ecb8-9125-4893-a237-c277a53575f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc3cf1b-b481-4552-ad19-2cc23ed4d769",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e8f7f3-ce91-4ad8-9961-ab8b619b89de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5906c8-c4c7-4705-9c92-e0ddede2fdb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31ab078-cc35-40ca-bbf9-e876868ca5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd25f1c2-ec86-49de-8e87-d890be774afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d30c8b-27d9-4577-87ab-40ec2df78ec4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804bfeab-8409-48cf-9f10-c8db478febcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8800bb5a-4541-4c94-aef9-2926c660137c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c5e165-49c9-4748-be6a-c3ed91014621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56e23bf-a607-47b0-9407-1b1d01e34a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38001bf7-0aff-4c45-a325-951567c4edc7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bec5f86-e3ef-406d-82bf-bf6a4bacabc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d5b939-11ab-4b8c-9393-a7fa2a00381a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d285ab-09af-4497-98f8-6cc51d415576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f020f69d-f541-4523-9229-41100132dda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d84b423-6dc1-44a3-8930-1471d4393535",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ac9d58-fb50-4034-91eb-dc4943bab15d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fee3136d-d159-47e1-8611-5c01e9cb421c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d7ef8e-e9f7-42a9-82f3-a67dbad53caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8301d4-9822-4a74-a1e8-ba92e44821b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dcd2a7-42aa-4baa-8d19-90a478ef9488",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67927ac4-de86-4f0d-9b29-ffc308d2c095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b11f2fd-b94d-4d74-9bab-d43994875998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24073668-f715-419b-9f2d-7316f8e82fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24a842e-b17b-4a8e-9844-8e4b2f910423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4627da-5d2f-4e90-b4cf-d9de4950b0ad",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63ca1ca-ffd1-411e-bcde-34ea89f12843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb989e01-ed0c-4b5d-9838-7b9bf9d71937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baef2af7-0470-4959-a1c5-553135f3b85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c791152-8aca-4a17-9301-ff3523ebf0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5e0b1e-e4c1-42fb-be22-08ad590122e6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22970c4e-10c1-41d4-aeb7-18ce68dc47c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3d85d5-f243-4f53-90b1-6ccf19ef4571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "579a4fc6-6cac-4e84-98fb-ade48b596231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328d6a95-4090-4cde-b74d-6474583ca50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844682fe-988a-4129-b932-86bb7cad473c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae5bd13-26ac-48c7-b872-7c11458082af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90758de-9ee6-4a42-8d05-076b1b32717f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f199e76-2656-45b8-802a-407f71322081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561f1b5c-1de1-4ba4-8d74-db6c205a9bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe3f96f-f36c-41ec-b5bd-eb6160cee8ca",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eee5687-69c4-4198-b0ce-1e164f173df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3bd67c-015d-4e68-9990-9a59972e5537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b577c4c9-9f8b-4115-8bc6-889a5d46ddfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6628fb-762d-4aeb-a222-08532168a752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5b8418-2c98-412a-933a-d95c06a39ff4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062f95eb-d0ca-4f06-99de-205eb0976832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c779ca-dc2a-4f1a-966d-615adbe7f3cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0181251f-ceb1-41b1-8993-3b49923203af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acecc98a-400e-44a9-9b22-3446d0d20bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785cdac1-da3d-45e7-b826-234450bdd16a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c80e34b-4d54-4993-b111-d7c8f35294c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3026512a-e7b7-4fb3-a021-81d2a46d4b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ca6f65-eba5-4cf4-8bf4-2b8cd19a3ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04741f9f-f9e2-4886-9152-26d1aede784d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdbbeb0-58ec-492f-9edd-5d78556feccc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe46baac-7e9f-4d30-b1b7-89aaa710d56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2cc946-ae19-4dd5-82dd-8ce960cd7bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602636b4-d629-4112-980a-a446f796ecb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc56d580-ec04-4cc1-a165-be21fbba2597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7919a1-e796-48bc-afa7-5dc505d9c36f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d996d814-4efc-4fe9-a82a-9f3f220b8822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3360dbf4-7c2c-484a-93fa-927550673d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3e3975-d47e-4a53-b8e6-89bf8c1258db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac4484e-71f8-4918-812f-fc6ea4bd77e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f568c5-2bd0-43fb-89f5-5c2ab81b3d98",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fe48be-362c-4e51-b1b1-43cdbad9ded7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fd8e4a-ee53-4ae0-83aa-bfc3b0b4de79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc319783-6fd6-4420-ba99-1c73ade98200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c79af6d-8693-4672-833d-15d164357d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df574e99-8216-414a-bd22-357e31b1f579",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f7a7a9-4f3c-40f0-af49-04b1f443b17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765a1032-d6e6-43b3-ba1e-5a5b9cbb55b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4ced87-4a32-4def-bed6-4bdc90ed2864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82e31ef-8a2b-4583-b03a-eb9d0a6c9a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9274721-d169-46c7-b227-f40d981e18bd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06a8119-610b-4cb4-ba5e-daaa6b4b171a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e66a7bd-2a69-4ec4-8cb0-380dbcb39c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12365b4d-1bde-46b4-99be-838558e8d062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6655321a-849a-4b91-a9fb-7f3f1a075806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c49e05-c3f3-4489-9b82-1421d639d4a5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed04de32-629d-4d40-8f5e-2df8ff8c7214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b626072-6cd5-4372-a5d8-8f7a3bf0fd1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36ef368-4bd2-40c0-bb27-2ecf8f0db06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f649640-a36d-417f-80eb-706c1bdce9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701ffe77-ac82-43af-93d5-142f3d2d7c50",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ef3d73-2921-4aa4-8ea2-31ad49f18cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0739c32d-5497-4170-a1d6-9336f61203d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2db958f-ebb0-45cf-9af5-d4e8a1c8151f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6013ef44-019d-4562-9a4c-0ea9dc4a42e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e181ac-a0d3-41a5-90cb-b43590d1e523",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a497d2c3-d438-43a4-b70d-9087596f7eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b339254-a523-400d-bb48-2cfb138d2315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a20c3b-1f86-4ca2-a48e-a5995d32e5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1069f3-f0ed-4f1b-9047-ed9cb2500b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8ca2c9-a390-4f04-bf20-cb4de671a669",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df209d7-fdfb-4e18-a687-1ca46e77134a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44af64e0-c575-4281-9d0e-d007fb24d62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8599d24-61e9-4dfa-8b0b-453271231265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9cee8a-c110-4ffa-b976-d47541537295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2aefe68-929a-4eec-b613-c1de3aeea975",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20f9efc-4013-4c48-9b3e-375a0c2b328b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2603040-d731-4253-80f7-9ab8cb47b11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ba9eec-3257-49d7-94e5-e3ad7a0610e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63943eb-64c6-4fb9-ba6d-afa95c74c162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b2675c-5cea-4d32-a94e-3ce7e2b08ef3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ee8b93-5da4-4107-8d34-ec381372cdda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a740c906-1338-4fd6-9e1c-fc7f9dafde17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2cbede-4ce2-49ed-8bee-7b2b5b3c70be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026828dd-8d84-443e-a749-546d98ac4102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2f22c8-6607-40dc-8a32-1d05d7f0449a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3878d14a-46dd-44cc-bf47-c5af5cae817b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9fe260-43b1-4c14-bf86-a887ec9c77f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd7bd7c-0c29-45f3-9092-b2da1b473d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f3437e-b213-407d-9412-57bd937bf214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30662873-6c60-404d-8bd0-4283d19be20b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca1cecd-c813-4035-ae71-275790daa7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb12206-02e4-4cb8-8433-9a9d46fa7126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1b3f2b-d201-4e2f-bcd2-3f5824f05f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1d16fe-6114-41f1-8ed3-414457e4b543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c73a142-c962-4fc8-8e1e-958fe1803ba2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1364c2-b499-4322-af65-003cd8e9a90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2022a590-c0ee-44d3-9068-0880344b7c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102a2f5f-f3e5-4cdc-8b29-878f02d0b539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03746124-acef-401e-95a7-66b83e6ce39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37516ca2-ceab-41ef-a863-b893c42c4ee2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf790b29-9081-4f83-8ce1-ad1a09fae4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cb08d6-fd0e-4c0c-8926-fb287fa9c896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c917b2-e1f9-4bcb-a4f4-cdffee5fe67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f52068b-c3c6-4dc4-99aa-7ec18175b188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa1882f-5ee6-44b5-ac1d-8a3b2a7e808f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0a5b07-7219-444f-a1bb-d1995cd17b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd09dd8-36f0-47d0-a54b-912fbc535e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad9a0c1-d8a8-4458-9e53-e93f143e7338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd48cd99-4f2b-44d9-a91e-533e4c688ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f21fe39-a478-451f-b87f-48dab7b3fb24",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8064b55e-bc53-4eee-ba18-3a208ef9d188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5d92f7-8e04-4773-8403-f1b6b3c6eafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37bc939-09f7-4124-a5be-0c4222a840bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6152a1b5-4321-4313-80dc-f77a3d8a1095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b11c4cb-7d95-4652-89d9-fb4ad48f6ea4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e24bb5c-e2c2-4816-9dff-51ab3577c2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2890a365-801e-4892-a266-43d908632170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c234df1-624f-4418-b742-cfc1d92052dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986e50a0-74f9-4714-9533-0df1363f797a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6d5f83-1df5-4814-bb9a-898155634925",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec91e2c9-fcd9-4996-83b0-649519f9e9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01925f0-367c-469c-9fe6-ff523d3e1161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd947920-9bcd-4921-97fc-f43ca0b01e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b666e6-c526-41cc-9d78-cc410f072682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f119665-2de1-4fa8-b574-9d7c345ad89d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0207d0a1-d8c6-4828-84b4-039d000d2892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f20efc8-f5e1-4c29-ba5f-4f4f7387021f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007f582e-a4a8-4f2f-b6d0-09a7b0d09481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a336b18-7e07-4af8-baa0-e2b2629c132a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f93415-84c2-4e80-844a-feed54284f28",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d36a9c0-7c52-4cd9-8faf-47bb7257d2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a406654-58b4-4fe8-9968-fce3d70c186a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d613182-78db-4b54-9512-4c4003b33e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755e929c-a516-4b95-9159-e8e07fa248d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5184b02d-8178-49a9-aca8-98c5c078e664",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899c011f-b0a2-4734-8bbc-15a51c0f5214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77427bb-7118-49f6-ace9-8c0b917e3cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542b6a34-27b0-4c40-8443-980380d4f495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd60c54-4ef3-4f34-9421-c389aafd2989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e451d5-09ed-467b-ac91-240035a0de9f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a682910-8430-4f48-b0f0-516bd26b14ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b562f6c9-e62e-4609-951c-fadb84f7f816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fa9617-b0b6-4ea2-8c34-78b8806e91a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda185f2-3d94-49cf-a095-d1c3ee4f8370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f3b4dc-3d26-440d-b67d-b93b59b1f9fb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795710fa-29cd-4979-9185-33fbd3c65c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1de4414-77a3-4b70-948a-78f73c72f61d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3642a3f-1bba-4213-969a-46c841e2a449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5715cb76-211b-45f6-893c-9ffd247f8b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b6e17f-f9ee-40fd-8bf7-4a357a984358",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d97540-2340-494a-af55-bdb1e84f3706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f4e8a5-dc78-433e-80b2-a197844ab021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef3b29a-8bd4-4660-a193-89cbfe0ce49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc47440-dde7-4684-a049-e314b47e6a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6eaa5bc-180c-4e68-92e9-23918f6cbba8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899139fb-2951-46b5-bf81-dcea5fcb220e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7193e7c7-7d92-4291-bce4-5c7b2d46f751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06631ab8-1024-4984-bcab-2be6c8c8ab1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61648543-e7f2-409a-99cf-5f913522856c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076e1ebe-9cb5-462f-a5fe-b2d45938c502",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f96f2be-8957-42c2-a354-331072231309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b7e3934-3c0f-4045-973c-c8402604715d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a741a61a-6f87-45ae-ae3a-9e4ce61609b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548c8420-c1af-40a2-8b34-26cc6e78d543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea88a0dc-a9f9-45e2-bcef-6d7bfc275021",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b8cc65-e6e2-410c-b057-0dbc21f44e03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b651ff7-9ebb-4f69-aa49-5e0cb0c46157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9eaad9-c685-405a-a592-3a4a7cf9b277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c26d4b-bf15-4e52-b12d-136426498d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58efa72c-1743-4354-b5d7-42fc8c6603f5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73e04bf-82e8-4967-9581-8d6f25376f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f254972-36ab-4d39-95af-e1d161bbcfe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbc15fc-42a8-43e1-b92c-5dbe1048bed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257a6f73-10ec-412e-bf80-db9bbfc5bc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74277d9-b605-4c88-829f-4e75657d4d74",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c534dcbb-926d-45e0-a1f6-854ed19cc30c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52afdf7-dc41-4fb6-8ce3-cbc50765f976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1b23ee-9c2f-4fce-b87f-764e6a153bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07debf7-7f03-414e-bad1-9c2f5539342e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf71e9aa-9cb5-4074-b63a-2955950571aa",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd499928-7f54-4056-b39d-2fba8aef76f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da694dea-975f-40a5-9190-fb7a718abdeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faa0bff-6a0b-44b4-aeb6-75a7c9281892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870a76fb-def1-4e91-aa6c-c6eb8d14d465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfcc9d8-f6f4-455d-ad76-f2cf3fc44a7d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f32d2b9-03e6-47a0-bcc0-5f6e71f42a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62405fb1-0817-47b4-9d34-3d91c45790bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b6d8fe-0807-4fc5-9d10-6f1b7aa2291d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e41a7c-60bd-4dbf-8559-695dc5ef84de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ac6f7e-0af0-4755-bab4-936830c60efd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7edbd1a-1d01-41a2-99ef-c8ea6c92e1f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89cca29b-4c8d-435a-85a1-8906dff97dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63ba47f-0f67-49d8-b5da-ba84b9640db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15b3123-2ce7-47b4-9680-939db0312469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bb3690-fd4a-4aa9-a7b1-aa1f8aa58b8f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4e7cec-0aa4-47f6-acfc-cc2fe481ed01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2473e0c2-2a5b-4a20-ab5e-554d51a88eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddd6857-2379-4e1e-8778-f24429b83342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c370ae98-c3e5-45d8-b395-97729970110d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217d5f31-ca25-4832-8c8d-bb3e053c016f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef60a41-ba97-407c-89f8-8d9a2f9d1462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d7ee2b-dd37-4340-a3ed-196d0b289d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663d4227-9c46-4eb3-abfe-3f46266259cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53c9d25-0d84-427e-9f16-214e4e2921a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb9e6b3-01c0-4015-8b47-68184844bbdf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89c8473-d3a1-4502-af94-23f0d2c58b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c887f64d-09c1-42e9-b4dc-f59f3ab74faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9967b512-dfde-40fc-8b9c-5d9f272ee76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1279d15e-d913-462e-86a4-76eac25f7d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c8cf66-8d51-4841-96ff-01bde800640c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c388fae-e824-46e5-9c09-9dfcb453e2cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ccf075-297f-457f-b8b1-5119a829a5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cf5e24-4326-43f9-8784-cc0450eb9174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d3ef34-374c-4134-b122-92c6295c1437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3c0030-b3b2-40d3-a427-585a9d5078cb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5820b8f9-adbd-41aa-8e97-790617808b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2510a5d-c772-49c2-8062-5dad9d79053f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99f826e-e64d-4c35-b5d4-d13715a5d9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86747a50-ceb1-4c6c-b812-357157d66a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586bb075-358d-4814-b1ca-5ffde1e255a4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cac90f6-8c47-45cf-882a-65a02649eb1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32bce0b2-614f-453c-b44d-8e80611d415d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f176ad-5fd2-46d3-9165-af04ecc4920b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f93ce8-08d1-4290-a2ff-0027e397745e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ac0291-ed6a-4cb2-bfb3-b7207d39ca91",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535e256b-aafa-4a14-97eb-53b5d55987ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "777cb5b3-0167-4e01-ba5a-5ed27068946a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5196a57-4884-4fff-871e-69cb6a1a55ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02480d74-5ab6-41a7-a3c8-13a5f3bd6407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054a4cd6-8028-4185-b740-8ed7a95ec473",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7909bf-6b16-4765-b19c-414a5701e929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5e5b4a3-f740-42de-a7ef-7744a6a525ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b61c105-1d33-4b0f-8f10-a0260621bedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b84cbd8-a175-4a08-906c-e3d1b6d36e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8065b7-98b8-4d03-9403-546c36e47b58",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab5860b-0b09-4f38-9ce3-bae8cfbd5a09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee06d259-ba05-4ecd-ae14-901e8ac6a9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec2f9bd-ead2-41c2-99ee-0e65d0de65a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f195b3d-2c27-4b73-b6dc-7c6e133fac78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20acc249-a6d8-4dc0-a4f8-e529cb6f8385",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d583c9f5-208d-4041-adc8-f54901ba6a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84af811-e601-4a98-b57f-490d64fbc092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531238a3-7311-4784-8758-8043800b7c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7366f346-eb20-41eb-bd17-f5840d63e95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babb4a0d-95b1-428f-8023-e8344b19d01b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe316117-ac3e-4142-9f50-86f78a491a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f86a2e-c376-435e-803a-7f8d45f3efdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20730bc5-543d-4e3a-bf09-65119c0e8b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74487c5e-fcb1-46bf-8946-91b643452d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d84c4b-ab41-4581-b22e-e1e3f26a9cfc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ed2f0e-fc09-4d6b-ad6c-78b6bd042a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc1f588-8df4-44d9-ad0c-5ad3fb45aff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f026d5ea-da29-4f16-89d1-1ef4ace07581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b37903-cbe5-4ed8-8971-982baffa7008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b1b2a8-0ad9-49bc-8670-6d9f75887ddb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e3b17d-b4a1-497b-903d-f197d6ea1319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cbe4257-ef55-4a56-a890-e7b17588ade4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6240664d-ed59-40e4-a9dc-2c2e44950a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37365080-a837-4e79-ac57-00c6f1e8592f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74d8b32-1a21-4881-81bd-693090a0d907",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b186744-e2d2-43ed-b037-74259f541089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2966f744-88d0-4b21-ac5a-cf13a8128cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7441d34-8d6e-4068-946b-7d4b67037fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be4bd23-b9b1-4141-8b3c-927d38389d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d9724a-646d-4b46-8aab-0aa6a1d57c97",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac865af9-533c-486c-af35-63b34186178d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fdd8224-8d5a-4a2c-bab6-e2289e25b15d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7176cefd-26d7-4977-99ca-a9b6302537dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e658995-759d-44cb-8d17-3cbbec03ab43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d4da5f-050c-4502-9737-264ffca6c2b9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1486de-c261-4077-afde-0fa288792166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f84aa4d-bfa2-4728-bcca-a71662af7528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fc7c0e-f02b-4d51-9600-debaa2bc6334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c070a92b-b5ba-406f-88af-3a5574b15b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1e2972-3492-4508-b2c2-80d5ea36760d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb44c861-5614-4b62-9c21-4510c82f8abb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cbeda51-9305-432a-91a6-c6879bf711f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d229cb8a-68ce-49cc-9c54-42be90327f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce5d23e-09fe-4585-b943-7d9993489dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f60d25-19fb-4484-b0bf-dbef95a73769",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91d64d3-1396-4f61-89ce-6469879cc7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bdec1b2-a1c1-4f0d-a718-84c9e2d6b078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19abe52d-a5b4-4250-a333-6ad8733f712f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d30276-32ef-493f-9bbb-4cd73219ae67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8ebc11-a096-4d15-9dfb-83049edecd06",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f77a36-3348-43fe-8a95-0f1c743568b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7371676d-62e8-44f9-95d3-8367249dc0c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5758e75f-dcac-4a3d-90c8-6f06af830504",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378b4525-d411-4cda-bbd5-e43cdba9db03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14826a5-bac5-4cfc-82df-818ca3f60485",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa8d65a-4ba3-4e48-ac09-2656a89d2dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d448c9-0cec-4858-92f2-d157a5fd187a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2f07fd-8fe4-4fdb-9115-ceb7ba9fbbb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb82164-d6f5-45fb-bce2-a875a472d841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7033041f-390c-4d2d-a088-b57e395ca81d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e6155a-9256-4f29-876e-88588ddbcb73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63532a8-285e-4c73-a4cd-c8f9bb6966ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e38791e-433b-4880-9431-f3dba170ed18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d529bb64-e2d7-4bfb-ab84-b69b61b4cd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d39642c-8882-4423-bada-62f5199045e8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03a915d-99a7-47e6-8437-bc63c38ea9a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40b08e9e-0462-4bbf-a991-694619578f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b562f91d-e0c5-4762-bed2-0100bc39284f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6015c612-14d4-4c83-9bc4-6aff69d8b8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fc112a-d52c-4006-807e-51ff8dbcc362",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5e978c-ff54-42b7-aa4c-69acebaf6a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da828005-d1e0-49ed-801a-321e3507c144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f131a03a-3fdc-4f1d-8064-197dcf3c9d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e88d5a2-1f86-4025-952c-ecb388c3e61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b438883-d410-4393-9131-18a1f0f22b3c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af6c929-64c3-4822-b30c-9fa14a712986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f6e042-a564-45e5-b377-4778c806bedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6b76dc-2f2c-4c88-9bc1-1417a571d8da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ae201e-bb3a-4bad-9ff5-f47ae058368b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec71d01-fe04-49f2-a654-e4df826ede0f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed845927-b95b-4bb8-978b-e97ace2fad06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09fe015-2f39-43f0-a8a2-2ed64f20a4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "174f4ada-c7e8-42db-9537-8086a6571c8a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00951da2-ff07-47ff-93cf-8c92f71f0f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c6e22f-6317-493e-b0ec-11c3138fdd2a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f59e52-b2c5-4c31-9058-03ba386c80dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "164c9504-b546-4c43-a976-a84078b5d508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b828e1-c8c5-4cce-82e5-24b60c448ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a542c93-76c8-4b09-8b75-42962416b328"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5ee9c39-d4be-4983-bb9e-038a5f6ca7ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26483eef-dd11-4312-955e-25815b8269be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03cb53f0-b4b0-4621-a0eb-ff2b2747f58d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "124891ae-baab-4d86-840c-cacee0adbd46"
                    }
                  }
                ]
              },
              {
                "id": "bfd811d2-7ea7-40dd-afc7-1842b4ac6ba4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6236c85-7222-4071-aeb0-face5c1ae312",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1442fe23-5dde-4e61-9155-c379804ec5cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a182f2c1-07e7-4814-86cd-fc53bf5e4907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21566ecf-7ed9-4ec3-94d8-cdbf719a50e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dacae91-18fd-405f-8b4d-9779a3252633"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e886df00-73ed-4671-bef7-762669235886",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38d84c29-2db7-430a-8155-bbcf45e6f5fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27689231-2fb2-479a-ae5a-0df1532df8ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eefa8d9-278a-41a1-bb44-4eb4a225fd51"
                    }
                  }
                ]
              },
              {
                "id": "81cd8464-8bd7-4198-9b6d-6ee19bb4ae4c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9cd31d00-4f3a-4fb1-8917-dcab2d5d08db",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08779fbf-35b5-43b4-b6f9-dbdabdddf1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "33cc2e93-cf07-40d4-add2-038302bf4837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ea2c3a-42d1-4918-bb64-6a636c80d8d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82821d8d-be9d-4535-b658-708415598469"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4ab2ddc4-acc8-406e-ac7e-68f2b7c57ac1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "71764a92-7902-42c5-a04e-53d8cf629d86",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f590147-6245-4670-902b-6b017a01cc34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c56cb336-b13d-4d93-b418-cf2d18872ead"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f8eac49-d945-4b99-b4fd-bdcf0c881c77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b176e27a-e82b-4768-95d9-f05ad3b292ab"
                    }
                  }
                ]
              },
              {
                "id": "fe10c0c2-b3ce-437a-bfae-87d8e2da0c5f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2797e1a9-46c0-4990-bc93-5d37ad3775fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3bd07b2e-476e-4ef7-a2f7-c07d910622a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "759d0b1e-63b4-4231-a080-5da77f13df7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac9a447c-6088-400f-a2d1-b06fa4e84aa2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e48d508b-2588-44d4-8bd1-2a8685f8c44c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "27af4748-2be1-489c-952a-3d3032629210"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad24cd5a-2801-4598-ab77-cab3535a64b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ef84888-d5f4-4057-a7d6-464680a08d9e"
            }
          }
        ]
      },
      {
        "id": "e6f5ea4d-4954-4d78-9a21-134bb56a9ef0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "70e5fbc9-7413-47f8-b7ca-808625ee28cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcd77fe2-3193-43b9-ad10-ef3f4a2699cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f7a2278-1212-4c03-b40f-50bdfccb20d3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f7dda5-ad3a-408c-be0f-2ba5ef9a8f24",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1849a082-a2d8-40b0-b792-040928d29a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78527fd5-2b3d-46d5-9fd6-cc64c91a7f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b4d7c2b-6049-4add-8795-5ee530032158"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a24e4063-1bd3-4017-ade5-d9b2849dcb34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7767e5d0-d096-4a06-ae5f-83f6b60b7e57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b5457d3-ff46-4a55-8002-99cbc856fe29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a9a6b53-7b01-41d4-9b80-d030b6af24d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "171272e0-3cdd-402b-8f7b-9c5a9ccfe9d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "258d1f1e-9e69-4fd8-9f19-154ff178e55d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fb9b0a5-e353-492e-86bc-76f80cde214e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b11cc04b-914a-4b25-bbe1-949608c17366"
            }
          }
        ]
      },
      {
        "id": "ce3b1e99-9687-4c6e-81b1-07d8ab690ddc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f99984e5-0d98-430d-9770-9b7ae04bfdbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bba9c5bc-34a9-4821-94c0-ecd6bd070ced",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8510de0e-fe97-47e0-aea4-29a4478227cb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92095823-be80-418f-9605-c9108c96f24f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5e5b63a-5ae7-49fa-9a88-403ba719080d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d6054e-a86e-40c1-94e2-b6681a99b948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a20d3a0-4a03-4c13-aacf-5095a94608e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa40acc3-94ef-4a4a-8290-0b8d0316f92a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e85711a9-06fc-4130-a9ad-9fa1f75c4b89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c11c6ff-1575-4fa4-937e-b4505a7754e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6f27b8b-94e9-4bce-ba6f-e7e36d7314df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60445f80-7d43-40d3-9e69-534123439380",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "831e26f9-5bb7-4798-bba6-794561229d06"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6070de94-361f-4e1c-a547-1dbd59e23824",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43b69ae1-a8af-479b-89ce-4bafaaaaa52d"
            }
          }
        ]
      },
      {
        "id": "f2dcfc6c-1ea5-4937-930c-cdef523ed892",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cfff4b74-4e23-4d8d-89b1-2124066f12d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6deff2cd-66bb-49f9-8b5f-cf702b415842",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46f96e67-d5b3-4f4c-b124-218b3bd166b0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4e5e8c-f928-4315-ae03-b572f28b89a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29d97839-42fc-4182-8a00-bc96c0d06383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42c5fd0-1e3f-4db2-b015-af319566d9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2aefc1ed-2cb5-4f7e-8f76-223c69b814e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80aa111a-66b0-4a34-b24d-2c48ad924d81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4a13719-b57c-41f5-9371-e210be18ba51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f88e25d-67ff-48d0-b3da-964f8be68ff9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56fd89f1-fb5a-4383-997f-5dbc75990b75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "537e6aee-f8c1-4350-9dd1-48d61f1ccd30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8766a4f0-5a6e-438b-bb50-7e5f61180818"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51237a9c-08c8-4dcd-a9e0-8d5943c5af7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab52685a-a5af-4bcd-9376-7cfed091a8b7"
            }
          }
        ]
      },
      {
        "id": "6c4397ac-2e6c-444d-b124-3de39a6fb6d4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6afe34a8-d267-4a8c-a690-87485930bdca",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07bc816d-f444-4e72-bc42-02741c35a0a4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ffa1eb9c-53e3-4f21-967c-ddc2ec2c23ac",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "250a20ce-7ceb-4665-ac35-25cb4874da40",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f0a576b-b65c-4e6e-b151-2bbb68333b2f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.694736842105257,
      "responseMin": 6,
      "responseMax": 276,
      "responseSd": 29.539176609298178,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709598821973,
      "completed": 1709598835257
    },
    "executions": [
      {
        "id": "acbcc02b-93d0-4161-8a2a-fbcee8aad128",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "aa4f2cf4-006e-47a4-8268-abe0ef0d3fd0",
          "httpRequestId": "8a7adedb-c3ff-4c96-ba20-2773d6e30ca3"
        },
        "item": {
          "id": "acbcc02b-93d0-4161-8a2a-fbcee8aad128",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "306bd060-561a-48de-aace-30de4b35cfda",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "095ad817-fa88-4b70-8a8b-0289091707d4",
        "cursor": {
          "ref": "87e585a5-f4a4-4cd5-b335-952e9ffa6a97",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "de35d47a-6071-43fb-8c14-afa31d9a3b2b"
        },
        "item": {
          "id": "095ad817-fa88-4b70-8a8b-0289091707d4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ac23f3da-123c-43fc-8d11-483223807795",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ad5b4546-d8cf-42ee-87be-9d841610c63e",
        "cursor": {
          "ref": "8ffa607c-1839-42d6-be1f-448248a19d58",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "52e00a42-5b42-4f31-94c2-efe2ff237470"
        },
        "item": {
          "id": "ad5b4546-d8cf-42ee-87be-9d841610c63e",
          "name": "did_json"
        },
        "response": {
          "id": "9619a991-5189-489f-8574-c686033bc480",
          "status": "OK",
          "code": 200,
          "responseTime": 176,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a1c203-c185-4cd6-bb41-c470d143fd89",
        "cursor": {
          "ref": "44d244a7-a0fa-499b-b225-a6ab40acce1d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff1c940a-26b3-4134-bd8b-317ef592a20c"
        },
        "item": {
          "id": "38a1c203-c185-4cd6-bb41-c470d143fd89",
          "name": "did:invalid"
        },
        "response": {
          "id": "68279634-4b34-4788-a641-742ef78da67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a1c203-c185-4cd6-bb41-c470d143fd89",
        "cursor": {
          "ref": "44d244a7-a0fa-499b-b225-a6ab40acce1d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff1c940a-26b3-4134-bd8b-317ef592a20c"
        },
        "item": {
          "id": "38a1c203-c185-4cd6-bb41-c470d143fd89",
          "name": "did:invalid"
        },
        "response": {
          "id": "68279634-4b34-4788-a641-742ef78da67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606c0939-18db-47e6-949a-aaa0eaddbc0e",
        "cursor": {
          "ref": "14074b3b-d787-49a4-afef-21ac9b234929",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9c149121-5036-4aae-a9f3-035be955d4d0"
        },
        "item": {
          "id": "606c0939-18db-47e6-949a-aaa0eaddbc0e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6e46369d-350a-44ba-93fc-bd092a385312",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3084560-4fe0-4221-93ce-d15471340c79",
        "cursor": {
          "ref": "d0f6deb8-9a82-4c74-9e48-2685f4294de5",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "74de39e4-9828-4ae8-bbec-a9c8130ad0c3"
        },
        "item": {
          "id": "a3084560-4fe0-4221-93ce-d15471340c79",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fad0c029-2f5c-49a4-8f63-0a5abd414a5c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3214f5-5232-4993-9a3a-cf6713762320",
        "cursor": {
          "ref": "806ea415-b544-47ce-ad00-8fb6354c3d72",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3df78cf5-eafb-4c81-8059-1f760109f29f"
        },
        "item": {
          "id": "df3214f5-5232-4993-9a3a-cf6713762320",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9b30757b-ea44-4262-8a7c-82d352b65d04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6923588-01fd-408e-ab23-dd676c8fcf6e",
        "cursor": {
          "ref": "32babfaf-7efe-4182-98ce-bc0e0a2ceb8c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b64492b8-1e61-4b55-ac52-8ee196299862"
        },
        "item": {
          "id": "e6923588-01fd-408e-ab23-dd676c8fcf6e",
          "name": "identifiers"
        },
        "response": {
          "id": "60909b52-d070-4847-a280-03cb8e944e56",
          "status": "OK",
          "code": 200,
          "responseTime": 235,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12245e4a-b4ba-4f7e-b038-db77c20864da",
        "cursor": {
          "ref": "b7e67d66-1bb7-44dc-b523-aee7682ea58b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "15f2e4a1-1b74-4809-9bf8-deece70de502"
        },
        "item": {
          "id": "12245e4a-b4ba-4f7e-b038-db77c20864da",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f426ae77-2515-4f19-a1ec-b41f7939d68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1e6608-8c1c-4988-8d11-001963ce0cf8",
        "cursor": {
          "ref": "453c27e3-86b8-43ee-8f3a-6dda862b8e0e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "25d376bc-04c6-4dd7-aeea-d15b7b49dfb5"
        },
        "item": {
          "id": "ca1e6608-8c1c-4988-8d11-001963ce0cf8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7f8aad38-fb03-4c95-ac86-cd563a45c012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e49d8c9-995c-42b5-aedd-cf213ccad4a8",
        "cursor": {
          "ref": "b8e08e8e-8200-44e6-b7ce-7fe979168687",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "64abf493-97e4-47d8-bfcb-fbc80617fcb1"
        },
        "item": {
          "id": "7e49d8c9-995c-42b5-aedd-cf213ccad4a8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bcbe044f-929a-455a-99c5-14df5d348048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff992ee0-4915-4918-9f1c-158debe928a4",
        "cursor": {
          "ref": "b3cb5fbd-01f5-4971-8d80-0dde09df5b31",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b9ec20e4-6650-44fd-bb43-e98576e27a9a"
        },
        "item": {
          "id": "ff992ee0-4915-4918-9f1c-158debe928a4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8c7cdc36-7851-4eb7-991e-2f1936ae02e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429f9b47-881c-484e-99dd-c212ed696c0d",
        "cursor": {
          "ref": "e3c748e7-8b8d-41c3-8f09-8350a1b0d552",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e3532385-e146-4481-b2c4-5d101cf59113"
        },
        "item": {
          "id": "429f9b47-881c-484e-99dd-c212ed696c0d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a2600784-2095-4367-bbae-0f6dfd99bdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19b5d3f-380a-4ea9-8fb4-50462fd20504",
        "cursor": {
          "ref": "b98e5253-5301-4d5a-8db7-53772357a5f6",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5df5e624-f8b4-4a78-9f3a-5cbe7eb99fd0"
        },
        "item": {
          "id": "d19b5d3f-380a-4ea9-8fb4-50462fd20504",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6b3f4775-bf43-4c22-8786-55f0369c0b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fe7987-9e1e-4238-9075-155d544ce6b9",
        "cursor": {
          "ref": "a5baff2d-ed4f-45b6-9dfb-3659993d1f27",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cea553b3-e729-421c-80d9-bdb460aadb6c"
        },
        "item": {
          "id": "a2fe7987-9e1e-4238-9075-155d544ce6b9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "514baae6-f922-4f88-bf3a-e2dae3e20008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f82f3e0-2b62-4d31-960b-97c29fe83508",
        "cursor": {
          "ref": "ecda7030-a273-43c4-b381-162756e1499e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4d4ef40b-3d9c-414c-bc0e-e84f6b0d9592"
        },
        "item": {
          "id": "4f82f3e0-2b62-4d31-960b-97c29fe83508",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "55445e5f-84ed-4e4d-9680-9f40e9523f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8226928b-ca2a-4afa-b21f-41f1af8330d6",
        "cursor": {
          "ref": "51864507-a58b-4239-9946-1503b7413b4c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "953500ce-6f07-460d-808f-4d1d91aa62cd"
        },
        "item": {
          "id": "8226928b-ca2a-4afa-b21f-41f1af8330d6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "549b1c60-094a-4a1f-8aa5-f2074a640c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e43848b-f22d-448d-8b57-0500d7baac34",
        "cursor": {
          "ref": "07a85b7f-6090-437d-b455-d3bf572d9bde",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "20958a2f-df1b-4eb1-a490-2a41ac1795a1"
        },
        "item": {
          "id": "5e43848b-f22d-448d-8b57-0500d7baac34",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9bbf2acc-ac78-4db1-9787-999f338ab8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3cc9e0-9a0f-4897-9447-9981b04514a6",
        "cursor": {
          "ref": "5ff1aeff-9977-4e7c-b436-d5fe036f2c96",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ad4581c1-01ef-47fd-8253-9ae1a304dab9"
        },
        "item": {
          "id": "8c3cc9e0-9a0f-4897-9447-9981b04514a6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c1744146-6bad-41bb-8923-642a27f89213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3b788e-f7a5-4552-aa8a-e14265d3bb07",
        "cursor": {
          "ref": "14293243-b8fb-4ac0-b442-4c7107c12927",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "965b86c2-c4c4-491f-9af8-0850d23470d5"
        },
        "item": {
          "id": "9e3b788e-f7a5-4552-aa8a-e14265d3bb07",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5a31afa3-4f68-4462-8bfe-427404435b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1d9e1d-6498-4119-9a16-b994dbc758d6",
        "cursor": {
          "ref": "51291ad1-353c-4151-b4ba-533325061f5d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8ec51609-46ea-4f9c-8fc0-6675fda5a029"
        },
        "item": {
          "id": "cd1d9e1d-6498-4119-9a16-b994dbc758d6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "38757bb3-fbdd-4139-bcd2-e2a0ba376304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e600418b-91cb-489d-b779-f431658c0465",
        "cursor": {
          "ref": "16fd8b45-f383-4d99-b5b8-9a5cf6c01261",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "35d86f07-98e0-4f76-8d9a-56b748ecb89f"
        },
        "item": {
          "id": "e600418b-91cb-489d-b779-f431658c0465",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ca3bea19-bd24-4ccc-b3cd-126d66a59191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fe6206-4c47-4d7e-9dce-7688b24cd47d",
        "cursor": {
          "ref": "cde36eba-00c5-4811-9758-0ee85a284dc1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b99375d0-6473-4a12-8624-25fb76574e7b"
        },
        "item": {
          "id": "23fe6206-4c47-4d7e-9dce-7688b24cd47d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d9a9c807-cd5f-4807-b39b-1850e928dac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a04415-15b1-43b5-bb42-0f05560e82c4",
        "cursor": {
          "ref": "7caf5631-2c88-473a-bebe-2e251f018b36",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9793b4ac-c660-4302-ad43-f7588632e335"
        },
        "item": {
          "id": "57a04415-15b1-43b5-bb42-0f05560e82c4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b065b276-d063-4b1c-a758-4eee191fcfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc99173-82e9-4e49-92bb-b78ca0bdb39c",
        "cursor": {
          "ref": "6d8e1f74-5ee5-4c6f-bba5-b74f1c28d5fe",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0878b451-4a55-4a79-a640-7789962dd671"
        },
        "item": {
          "id": "2bc99173-82e9-4e49-92bb-b78ca0bdb39c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "860d593f-6a26-49c7-94e3-909c6d10738f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1dc787-e898-4659-a6b8-0f92f2ada4c4",
        "cursor": {
          "ref": "2e925025-8a49-4922-af00-35eaae03fcfe",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bb321f5b-095a-4cbf-96cf-a25600e13525"
        },
        "item": {
          "id": "0b1dc787-e898-4659-a6b8-0f92f2ada4c4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b55acdfe-bc73-445f-b224-7721f5cdfc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6037bf15-03f2-45cb-a196-74a2d796d93b",
        "cursor": {
          "ref": "db362154-b5a8-4090-a04e-467bea1c8c56",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e25a1efb-e883-41ca-9917-43a35297a081"
        },
        "item": {
          "id": "6037bf15-03f2-45cb-a196-74a2d796d93b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0196357d-3f9d-426f-a66f-0b7a20afbbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db01d8c2-9e81-4b31-88e7-b6745d7ddbff",
        "cursor": {
          "ref": "737cc6e1-1122-4f53-86e5-faa6cd3bb4b6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "11d917da-8c6e-45ec-a608-cd5177ebc0e4"
        },
        "item": {
          "id": "db01d8c2-9e81-4b31-88e7-b6745d7ddbff",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "431618af-25ce-4010-9004-a9e3ce16aa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a649162-fa55-48f0-9850-75caaae84bef",
        "cursor": {
          "ref": "e9f40c89-a552-48b8-98ba-7559470c6c31",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d2780ea6-bcd8-4558-83d0-fbcfc657d209"
        },
        "item": {
          "id": "6a649162-fa55-48f0-9850-75caaae84bef",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a678302e-59e9-4830-b276-d2ce8b2d6450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b32a822-c3d9-45b0-92f2-1e211eb0fd92",
        "cursor": {
          "ref": "8971bb1f-9c3d-4a7b-bcb8-1c7feb12ba0c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9708da77-2c54-4b7d-99e2-5a1065c4f349"
        },
        "item": {
          "id": "7b32a822-c3d9-45b0-92f2-1e211eb0fd92",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "da30a41f-9c97-4f33-b5c9-c562f9356a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97f6daf-7221-4e77-834c-0de10ef470c4",
        "cursor": {
          "ref": "c1baae5f-a4b7-4b61-81c2-fe2ed8e88c1b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7a3d5257-f688-49a9-bc7e-f8517018d411"
        },
        "item": {
          "id": "b97f6daf-7221-4e77-834c-0de10ef470c4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "96a3635c-58b9-45cc-b335-330f9c03f2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c03e1f8-6ac2-4996-9339-d821509a5a2a",
        "cursor": {
          "ref": "d865bc85-5007-4ac8-b905-f0190304e3ba",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ba803fcf-138b-4158-a00e-8609c8a53974"
        },
        "item": {
          "id": "1c03e1f8-6ac2-4996-9339-d821509a5a2a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "37f50ec3-c812-44cc-bddb-8b5889bd942b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10883c4e-317c-4e72-a47b-10d7ef23300c",
        "cursor": {
          "ref": "10506e00-1181-42a5-a0b0-d7a667d56b6c",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e00655b3-8075-41af-ab90-3f71a3d2d6f5"
        },
        "item": {
          "id": "10883c4e-317c-4e72-a47b-10d7ef23300c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "db9e89ed-fe13-4f66-a839-cd23775684ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd670ecf-e8fa-49bb-a11b-028b35b3f62a",
        "cursor": {
          "ref": "be656c51-3dcd-46a0-b300-74c3853da81d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f0188350-5da1-411d-bc3f-44f956e7660c"
        },
        "item": {
          "id": "bd670ecf-e8fa-49bb-a11b-028b35b3f62a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f4a01be7-3b43-4dd6-962e-f6ad3621da4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302a8726-5470-447a-96e3-9757a182094c",
        "cursor": {
          "ref": "33a46905-638b-4e62-9c67-03df670553f1",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "81b10037-a1fb-4f28-a39f-5c6051e749dd"
        },
        "item": {
          "id": "302a8726-5470-447a-96e3-9757a182094c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6ad65d51-8a26-4ba2-91d5-f974081b7fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822c4506-431a-4bca-84de-71c57c5f2ef6",
        "cursor": {
          "ref": "219544aa-bb89-4776-889c-30d0ddcb2ef5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d3f35a2e-ab3a-478b-8e3f-f97cdc138a91"
        },
        "item": {
          "id": "822c4506-431a-4bca-84de-71c57c5f2ef6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5c01fce3-247f-4605-97a7-fac673624821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f28fc63-4342-45b6-a413-8735b6b37886",
        "cursor": {
          "ref": "10564579-503f-4d75-b5b0-cb3e4ab0227d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b260aa21-5413-49d7-96ae-fd3d61d437cc"
        },
        "item": {
          "id": "1f28fc63-4342-45b6-a413-8735b6b37886",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "642ea7ee-7501-4c9c-8623-e2ab53856ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52659c31-cadb-4384-9cc0-77d82ed3ae4d",
        "cursor": {
          "ref": "a378fea9-b657-44ca-852b-c3fb240c0560",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "386b0e05-7a44-4833-b11a-08c0fbe7aa82"
        },
        "item": {
          "id": "52659c31-cadb-4384-9cc0-77d82ed3ae4d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c030902c-d4c3-4479-af52-ab4993fc64c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3225eb8b-7e79-4741-8f25-9b8a71f14565",
        "cursor": {
          "ref": "33de4ea2-20e0-4cce-8d04-b4cee2af4bae",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bfdce70a-1270-4c9e-aa79-049839af8bcc"
        },
        "item": {
          "id": "3225eb8b-7e79-4741-8f25-9b8a71f14565",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cc688d5c-6e06-4acc-90fa-35d104eefddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a35606-0a08-44e1-a72d-4869f539a6eb",
        "cursor": {
          "ref": "97ac46cc-b85a-405e-8f4c-14ad28b106e7",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9d5c3297-3f17-495e-a643-18296b82c865"
        },
        "item": {
          "id": "c5a35606-0a08-44e1-a72d-4869f539a6eb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d587dbf1-9b0d-4b1c-bccd-8bafc40be36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b19003-ccc7-4082-b528-74f4e29a42ca",
        "cursor": {
          "ref": "ef993656-ade4-4eef-9820-705d9f916b7f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d406c574-2a15-4a1d-a1b8-9e9ebb9f1b08"
        },
        "item": {
          "id": "b7b19003-ccc7-4082-b528-74f4e29a42ca",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bdcde434-daf0-443d-9ebc-de1c1373c695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cfb0bb-841e-48e1-baf8-a6d7f2fd08b7",
        "cursor": {
          "ref": "d795559f-9c7a-401e-b02f-465d3842b0ac",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e45ffc4f-923b-469d-9a49-99cb2771983e"
        },
        "item": {
          "id": "86cfb0bb-841e-48e1-baf8-a6d7f2fd08b7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "20b50431-e464-4898-9635-17865516e8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2cf2a4-0e77-43cc-a45e-221d315cd103",
        "cursor": {
          "ref": "688308e0-1398-499d-968c-cdbceead2ab7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2b2a94f9-e817-4451-b968-f1a3a49990a8"
        },
        "item": {
          "id": "ae2cf2a4-0e77-43cc-a45e-221d315cd103",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "431e96a9-88c5-4b89-a0a9-2c7fa1544db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d31eabb-e5c2-474e-a609-4cd25e0fe34d",
        "cursor": {
          "ref": "8b514950-349d-4009-9661-a0a1d51e6cab",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cc4bbbf2-67db-4cb3-8eee-20c053590650"
        },
        "item": {
          "id": "7d31eabb-e5c2-474e-a609-4cd25e0fe34d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "94417171-9a80-4e09-9f74-869cfc49dcec",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 35,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7116b4c3-9004-41b2-9b59-1d6c8aab952c",
        "cursor": {
          "ref": "2bfd4bc5-66ca-4eb7-91bb-6100400a27b8",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6b0ff907-53d4-4344-b1c8-469ef277ca80"
        },
        "item": {
          "id": "7116b4c3-9004-41b2-9b59-1d6c8aab952c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6dfdb113-2f56-4f50-8fb2-24324c17ce0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca17610a-d435-4ad7-945e-5ab8e2f72b4d",
        "cursor": {
          "ref": "aafaf9ae-583a-4880-98c5-a97e9d98d162",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "775c6514-b1cc-47b0-bb5e-c480558483fc"
        },
        "item": {
          "id": "ca17610a-d435-4ad7-945e-5ab8e2f72b4d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5cee4c25-41cc-4c40-a166-1870b0ff1f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24063c29-7df7-401c-9887-a215e63aa54a",
        "cursor": {
          "ref": "f40c9956-4b36-4939-a0c1-04e8b78346c2",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "001fdabd-1af7-4548-8a09-63501c6ef994"
        },
        "item": {
          "id": "24063c29-7df7-401c-9887-a215e63aa54a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5621f1e3-c8dd-478d-b384-4dbcf0944931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722f00e7-5766-46ef-ba67-7d249f3f648e",
        "cursor": {
          "ref": "4d73dcce-0aa2-4970-b56f-cfb022225c5a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "19c7e5d7-6ca1-4726-95b7-33862b15ac91"
        },
        "item": {
          "id": "722f00e7-5766-46ef-ba67-7d249f3f648e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "58ad7d19-3af7-4177-990a-262b9673c952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47af3b5b-5b71-4597-9cd9-ef73cc5041b4",
        "cursor": {
          "ref": "49274169-1fae-4bcc-b0f7-21d0e72cd357",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "310ac219-426d-4f33-a1de-4f3dda0d5ed7"
        },
        "item": {
          "id": "47af3b5b-5b71-4597-9cd9-ef73cc5041b4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6356314f-5f97-42b0-93aa-fbc8a857645f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11829bf7-e35c-400f-a839-56deab36f787",
        "cursor": {
          "ref": "c0294615-7c32-4dee-a109-63a3b05842d2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b4072681-0239-4497-ade9-9c1a303923de"
        },
        "item": {
          "id": "11829bf7-e35c-400f-a839-56deab36f787",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a275b982-f069-44ec-8fb2-a7e69e2478fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaff8ed-724e-403e-869f-942debcafe75",
        "cursor": {
          "ref": "6c51a941-da7a-4015-8909-994191252721",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f87275f7-cb44-4439-afdf-1200119f70f1"
        },
        "item": {
          "id": "bdaff8ed-724e-403e-869f-942debcafe75",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "303a0d76-d94a-49cc-9358-b64478bf9aad",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 22,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3964fa72-3939-4907-80ad-f6ed7a998b46",
        "cursor": {
          "ref": "42730455-2a87-4a7b-b6f2-74b95cb4c69a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2764ad39-a716-4521-ac1e-ecfaf7385e5b"
        },
        "item": {
          "id": "3964fa72-3939-4907-80ad-f6ed7a998b46",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c271fb34-b357-460d-8dfd-f4e1f640bb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8ec9e2-5b4b-4e87-a3e0-de0d2eae7fc1",
        "cursor": {
          "ref": "ca41436b-09a3-4cda-9fdb-d0fdb337885c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "db7ef446-09d7-4b59-9fe6-bd3fadd6246a"
        },
        "item": {
          "id": "0a8ec9e2-5b4b-4e87-a3e0-de0d2eae7fc1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "96ad5dec-a58e-4ae4-826b-010be1aa4dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510d367d-b46c-409e-a571-2a2e5d9cb4d3",
        "cursor": {
          "ref": "da75c5d8-02fa-4db3-bd74-fab88c9bae42",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f9d0d6d5-a82b-43bd-932c-4bcd82edea2b"
        },
        "item": {
          "id": "510d367d-b46c-409e-a571-2a2e5d9cb4d3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "60becf73-342a-4e35-badd-db4822ddf8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ccf3b4-a7e6-4071-b7c2-fde7897b0e53",
        "cursor": {
          "ref": "7371228b-9db3-4a95-b90e-4b1d3cb04245",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "62b6d9b2-9705-4d51-abaa-7b15600d29e4"
        },
        "item": {
          "id": "38ccf3b4-a7e6-4071-b7c2-fde7897b0e53",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ddb5e4e5-a71d-4c38-b0fb-5008ada611a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e988659-9c26-41ec-b852-edb2515bb2b4",
        "cursor": {
          "ref": "1d0a3ec7-fa31-4b14-9ee2-2e9c8818b702",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a86312bb-a039-4f88-8de1-7405cb8ce5a9"
        },
        "item": {
          "id": "6e988659-9c26-41ec-b852-edb2515bb2b4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8c414657-2d42-4fc9-9255-aba9e6d847f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c69c526-5335-48f4-9ab8-f67c4fca19bd",
        "cursor": {
          "ref": "ce05f79d-799c-468d-bbad-7847f56fadd0",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "50412a6a-aba0-4f10-906d-37f1ed98236c"
        },
        "item": {
          "id": "2c69c526-5335-48f4-9ab8-f67c4fca19bd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "567ac4db-d295-46f4-b3b7-c29eef6295fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf8ffa3-c35b-4b9d-9b65-5b942b9422a5",
        "cursor": {
          "ref": "5789d290-eacb-4d74-9ed5-c693cf5b349f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d33b41e1-49e5-4b51-ad2a-77366eeb5860"
        },
        "item": {
          "id": "ddf8ffa3-c35b-4b9d-9b65-5b942b9422a5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ebffe6f5-c925-4343-866b-dd0cf1d84d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a09ea7-54fb-4818-88c5-9c329be70d34",
        "cursor": {
          "ref": "3354796f-d019-4fa7-a216-65c7c19686fc",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "060af297-5c99-4466-8892-8534d676467c"
        },
        "item": {
          "id": "29a09ea7-54fb-4818-88c5-9c329be70d34",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "221d3922-abd5-4d5f-ab6f-e6bd061d038a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c7f59d-955e-41f6-8bf4-eb326ec43d14",
        "cursor": {
          "ref": "680ee1f6-2e4a-4f36-a8eb-2e4ef2ab1a7e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6559bd3b-9e39-4e78-b8b2-887a9ef9d140"
        },
        "item": {
          "id": "33c7f59d-955e-41f6-8bf4-eb326ec43d14",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7ee01d6c-681f-4552-ab7e-14a8de648f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed59e8b-9b6f-4cf8-852b-493f668a50db",
        "cursor": {
          "ref": "faf9ebaa-cebb-4584-aacc-4018114d5066",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6f628598-3e02-4b22-b289-57773fb6ba83"
        },
        "item": {
          "id": "2ed59e8b-9b6f-4cf8-852b-493f668a50db",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7727cbdc-f48c-4169-a283-2d2b487a3fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3209f65-51ed-429c-ac73-2e8af0773240",
        "cursor": {
          "ref": "29403888-ce3e-4044-a93e-052f8e7a25d7",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f57cdf3c-0df6-4748-a13d-7122e6f06353"
        },
        "item": {
          "id": "d3209f65-51ed-429c-ac73-2e8af0773240",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6467259b-9bed-4a03-a8ec-821a765c4390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfddea3-63df-4d57-bb5e-18eef3e00edb",
        "cursor": {
          "ref": "b3d69b55-2a00-40d1-a461-852d8aca318e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7f8859eb-be75-48db-8525-bbe3746af5a4"
        },
        "item": {
          "id": "ebfddea3-63df-4d57-bb5e-18eef3e00edb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6a82f29d-0e4a-41ac-9b20-3d91b3e2eacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e52690f-5978-433b-b284-b0cb45c8dacc",
        "cursor": {
          "ref": "5127d556-2e27-4001-b8c1-b41ad22d5034",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f7d82f8a-a035-4684-8dbf-cda7363a0ec7"
        },
        "item": {
          "id": "1e52690f-5978-433b-b284-b0cb45c8dacc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f83c5792-c11b-437b-a6c6-d0497f2a0070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176328fc-b2a7-4225-ac0e-31ea4e12acee",
        "cursor": {
          "ref": "90f75d67-8f28-4acc-8147-bbc22d810862",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6d8cc85a-0411-47fc-9930-be84ea148720"
        },
        "item": {
          "id": "176328fc-b2a7-4225-ac0e-31ea4e12acee",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7bac1ff1-9bba-4ab9-8cef-3647b720de86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef60936-0397-4cfb-9796-03fe91143fbb",
        "cursor": {
          "ref": "78697b7a-0838-4fad-96dd-febf37765d66",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "99f61759-3f7e-4437-87ea-92ab0a64bba9"
        },
        "item": {
          "id": "aef60936-0397-4cfb-9796-03fe91143fbb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cb308aa9-e4a5-4271-9b54-dccf8a463798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faad18a-82e1-4258-8a38-ed27878f7d1c",
        "cursor": {
          "ref": "7eff234a-cfd3-4603-9b68-0aff4172e8f0",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "04159fa4-f0d9-44ab-a2f1-d3f9fc00fbd5"
        },
        "item": {
          "id": "5faad18a-82e1-4258-8a38-ed27878f7d1c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "643c72dc-249f-4c50-a403-11f4e1f49c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c594df-12de-4ffe-95b3-6c89fde67e7d",
        "cursor": {
          "ref": "65a5b1a6-72e4-4463-9bb4-21cfb846a3a4",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "da4943c4-6f7a-4d7f-a237-5576a7c56793"
        },
        "item": {
          "id": "c2c594df-12de-4ffe-95b3-6c89fde67e7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "237ee2cb-fc28-47fd-a922-10de78974f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1ee871-33cb-4938-a8e6-e9beec960e7b",
        "cursor": {
          "ref": "d01feae2-15ee-493b-b567-59c5cb437494",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "afa46ba0-4da2-4cdd-acdb-dc121ee26e2e"
        },
        "item": {
          "id": "df1ee871-33cb-4938-a8e6-e9beec960e7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fc697d92-83b2-4a11-a87c-ea6dc27b2509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d212f0-7b8a-4dd8-8274-1b9ebf29befc",
        "cursor": {
          "ref": "259ae1b6-4124-462d-a97c-da813153d720",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cde14eed-3189-4723-8502-0e0661546ce5"
        },
        "item": {
          "id": "98d212f0-7b8a-4dd8-8274-1b9ebf29befc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5339b901-53be-4a6d-9a89-087e2bc88f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520c5986-83e9-4d04-8f8d-78df94363a7d",
        "cursor": {
          "ref": "628dd458-17a1-45d6-80e6-521730992315",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bdcaa751-0626-4232-82b9-ddd61d0973c1"
        },
        "item": {
          "id": "520c5986-83e9-4d04-8f8d-78df94363a7d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d0c27e8d-c8f5-4952-bd01-96d33ce1b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d3576a-c77c-4486-84f3-2d95e6bb9927",
        "cursor": {
          "ref": "16e32165-4a09-463b-92dc-31d1013ebc72",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "15000dc1-9b1e-4cbe-842b-15aa0b6dae8d"
        },
        "item": {
          "id": "b0d3576a-c77c-4486-84f3-2d95e6bb9927",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c6fd5f74-5297-4bfc-ba53-4a96c81835fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bfd1a9-4c0a-4ef2-8b01-22802ac544c4",
        "cursor": {
          "ref": "ddcd34d0-4c9a-461c-99d6-02798ccd7dcb",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "67fd876a-2479-4687-9269-72826a7108e4"
        },
        "item": {
          "id": "43bfd1a9-4c0a-4ef2-8b01-22802ac544c4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bd28604f-9f8a-4344-ab92-26581e53d3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f4a675-08ec-4f8e-8412-b0a760ff8d73",
        "cursor": {
          "ref": "d2d01e98-436f-4369-88ef-0f8d58eb111c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3c13f987-139f-4b2c-9e4e-45fcd25cdbf3"
        },
        "item": {
          "id": "91f4a675-08ec-4f8e-8412-b0a760ff8d73",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0bf64c9a-cd91-4aa5-983b-ef5313e1e9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c66875c-0150-40ff-ae6b-a6f8888ca039",
        "cursor": {
          "ref": "0d218f92-04a9-4bed-80f4-f8132b7e36d5",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "188add82-5e46-4138-9ab0-82de733067e2"
        },
        "item": {
          "id": "8c66875c-0150-40ff-ae6b-a6f8888ca039",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6da18541-c169-4542-aa26-24a72e459707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d80d66a-d61f-4ee0-913f-018b73e94f8f",
        "cursor": {
          "ref": "b1f6b65c-2923-42c1-9ead-868d51c3b4c0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "83980258-8c80-4d3c-9ff9-f20a890c5c21"
        },
        "item": {
          "id": "3d80d66a-d61f-4ee0-913f-018b73e94f8f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3f4e703c-dda8-4896-8d6b-c83ec14a6bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c8858a-c675-4a14-a001-fccef2242b7d",
        "cursor": {
          "ref": "1b7f9f7f-56bf-4ac9-a5f5-610fc89f543f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "96ce148a-a820-4809-b9a9-0cc90bade0f9"
        },
        "item": {
          "id": "e2c8858a-c675-4a14-a001-fccef2242b7d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "52bc940b-71c4-4542-9b30-1b82f226025d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138c6418-00ca-4de3-bfd2-c038fe142938",
        "cursor": {
          "ref": "f2da4038-b085-4fbd-ba82-c8a5b25053f0",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "99e489f8-925f-4df9-afd2-388472693bbb"
        },
        "item": {
          "id": "138c6418-00ca-4de3-bfd2-c038fe142938",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e496527e-d9ed-463d-bf98-d2e38f5f46a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda95dd1-29c1-40ff-a180-656abf41de5c",
        "cursor": {
          "ref": "26d5c8be-ce45-4515-8e17-9d5979cee140",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "616652fc-c15a-4bbf-bc19-20a67fc967a7"
        },
        "item": {
          "id": "dda95dd1-29c1-40ff-a180-656abf41de5c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ad00cbfc-aa94-4a0b-884f-5144a38d7b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ada011e-ccbf-4bb6-9172-58aad2ff603d",
        "cursor": {
          "ref": "380e1a9c-e620-4164-ab37-491b578bd3b4",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "64eef1d3-5210-45cb-92ea-0854c0547d13"
        },
        "item": {
          "id": "5ada011e-ccbf-4bb6-9172-58aad2ff603d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f3872926-726a-47f1-910b-93de9bb49fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f58f0eb-1c69-454a-a803-1e13620fb43d",
        "cursor": {
          "ref": "420b93ef-52ba-44bb-b974-75e348f7c210",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ecadc634-d039-4cfa-839a-65daef01f63d"
        },
        "item": {
          "id": "5f58f0eb-1c69-454a-a803-1e13620fb43d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7d185373-9cce-4704-8070-0fc55b81a970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08d0b07-b3bc-4ece-9328-e2e7e505915f",
        "cursor": {
          "ref": "e200426d-5694-43d4-aa6e-9201d0409f33",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "11c99f59-6ac3-40fc-97d5-0620aba919f7"
        },
        "item": {
          "id": "a08d0b07-b3bc-4ece-9328-e2e7e505915f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c9e3356a-96a9-4740-8356-c0ef197074b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6b33f8-3dad-48e6-8816-8d5bfa24a310",
        "cursor": {
          "ref": "2643c47e-a748-45cc-ada0-c879ce86311b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "939186d0-5c6f-4c44-aa7c-62d23aeb4692"
        },
        "item": {
          "id": "8e6b33f8-3dad-48e6-8816-8d5bfa24a310",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "92700d32-e7a0-4a18-a610-8a619e33b4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a883c0ed-da73-4914-b5ad-49d8daa371ac",
        "cursor": {
          "ref": "61d3b05a-0367-4223-bd0d-048a9008d92c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a5b18a1d-3510-43b3-9ac1-00a00ea22d95"
        },
        "item": {
          "id": "a883c0ed-da73-4914-b5ad-49d8daa371ac",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7ecb9b2e-756d-4097-9a0d-53c1024b77b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f272d85-229f-40d4-9426-ce7120fc6e10",
        "cursor": {
          "ref": "96e31c72-c599-448f-93c2-a42e2ccc4406",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fc765779-fc98-4a3a-99e7-d16a4841b395"
        },
        "item": {
          "id": "2f272d85-229f-40d4-9426-ce7120fc6e10",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6fe8c249-76af-43c5-b22b-6873dcf5c78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6325a5-0636-4012-9af4-d2fa65420474",
        "cursor": {
          "ref": "f8cbeced-4394-4e78-9557-ea84b2666b2a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c38add94-2cfd-4f6e-b252-f8572c4fe96d"
        },
        "item": {
          "id": "4a6325a5-0636-4012-9af4-d2fa65420474",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bf28b35d-e314-4cad-afee-c7e9c0b1cb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f00c18-7083-43ce-bd54-5f5671b7bcf8",
        "cursor": {
          "ref": "abb1b43c-6bb0-48d2-956f-a9989d3685f3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c1d605ae-fb78-4c99-8cbf-e054368d22b2"
        },
        "item": {
          "id": "a8f00c18-7083-43ce-bd54-5f5671b7bcf8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f2aafcc7-551e-44c8-bdcb-5c281db2e936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2c6001-24dc-4449-af7e-d8a63dc5ba82",
        "cursor": {
          "ref": "f80b9b69-8f79-4d0d-81be-af63f623526e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e58f176a-4dc2-48fd-ae78-dbd960783898"
        },
        "item": {
          "id": "5d2c6001-24dc-4449-af7e-d8a63dc5ba82",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3aaa1861-1a42-4ba7-a3d1-87bd6074e6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46931f36-9251-499d-b138-c085f2d2095e",
        "cursor": {
          "ref": "2cd17aa8-d883-4d97-9cd9-cd71c9901c65",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "31904e40-ffbe-4d3b-a3f6-719a89864b76"
        },
        "item": {
          "id": "46931f36-9251-499d-b138-c085f2d2095e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c372ff87-2a25-4e40-a311-e827b89a3de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378c4e3c-a602-4794-9ebb-57ff1b0195e3",
        "cursor": {
          "ref": "d0e062eb-7ea2-4c5f-8b32-9714ea47220e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5c76566f-93a0-4a64-9076-d2375092d1c8"
        },
        "item": {
          "id": "378c4e3c-a602-4794-9ebb-57ff1b0195e3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "53918610-c383-45f4-94ff-a37b365e0304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1ea686-3411-4430-9891-e4c30d887240",
        "cursor": {
          "ref": "010084eb-4b6c-4d6d-adcb-c0f1dcd1ff74",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "959b9182-2e0b-4bcf-8bd0-b899387cd823"
        },
        "item": {
          "id": "3f1ea686-3411-4430-9891-e4c30d887240",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "343d60a8-1b16-456f-b41d-0ee23271bb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efa6b8b-1599-4df3-8c68-ff0a7f6df494",
        "cursor": {
          "ref": "f2bcdbd7-8be0-4d9f-ae8c-e42551b2ab07",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "17718b03-7229-48f9-a18b-a3447ff241e8"
        },
        "item": {
          "id": "6efa6b8b-1599-4df3-8c68-ff0a7f6df494",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "989e9c36-20a8-4bcb-b9d9-2accf298806b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dbb4bd-2f9d-4e5d-bc6d-b40a03bd5cb4",
        "cursor": {
          "ref": "909e530b-485b-490a-9b7d-0895f8504428",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c59ecddc-2440-419c-ab63-9f36b934d671"
        },
        "item": {
          "id": "55dbb4bd-2f9d-4e5d-bc6d-b40a03bd5cb4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "156e9549-f117-4a18-b4ca-208380498d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8189c1b6-dc2a-4000-9671-adaef5b96d17",
        "cursor": {
          "ref": "ffdcd56f-6de4-4426-a631-996176d73f1f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7bb20567-16b5-4e80-9031-f0ac2f5d7892"
        },
        "item": {
          "id": "8189c1b6-dc2a-4000-9671-adaef5b96d17",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3298800b-06ad-4041-a99f-af244d42f0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6307d0ec-d974-419c-a127-13f851297404",
        "cursor": {
          "ref": "de0acf4b-bf93-431a-aaeb-09cc63fd8ad3",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2699e305-67b6-4bf6-bea1-dbc42a7ce7b1"
        },
        "item": {
          "id": "6307d0ec-d974-419c-a127-13f851297404",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "17c3da90-cd23-4a5e-8057-e3521c2ef568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6d08ce-c1fd-4767-94c8-c9bc9c567a6b",
        "cursor": {
          "ref": "a1df67f0-fe0f-45ff-a33a-1b33de162bdf",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f3774035-3b4a-4f13-a1e3-777bbd403296"
        },
        "item": {
          "id": "6a6d08ce-c1fd-4767-94c8-c9bc9c567a6b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9c6397ec-4f1b-4aca-a9f9-47f0bf158318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414ae7d8-c92d-4fcc-bb01-c527c6ab13b7",
        "cursor": {
          "ref": "b4ccd7ac-e9c3-4e78-ab37-1beb855a276b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "97d394de-2170-4da7-bffb-3cfcbc2bb30f"
        },
        "item": {
          "id": "414ae7d8-c92d-4fcc-bb01-c527c6ab13b7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b4e7c63f-2707-448e-b232-59f452c299dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54573fc7-0dcd-46fa-b010-3cc7b42c828d",
        "cursor": {
          "ref": "45136ec5-5179-469c-9594-12ea474d3aee",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bd40758c-a574-4da9-b4dc-6e6173b109e0"
        },
        "item": {
          "id": "54573fc7-0dcd-46fa-b010-3cc7b42c828d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c77fb2da-4afb-4384-9700-7c231f74395f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ba80e2-e156-41d1-8b3c-123647ac311d",
        "cursor": {
          "ref": "814c7eb8-7b0f-45eb-bf4a-6dc944ad574b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "101b0ba6-c551-4d90-8a60-0e1d0bd2f594"
        },
        "item": {
          "id": "85ba80e2-e156-41d1-8b3c-123647ac311d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9ce81d6a-422d-4bf3-a191-b5cf0519a5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6334df0-a578-4f83-af53-4f5b70fb662b",
        "cursor": {
          "ref": "8ef9a0cd-7dd5-4d90-b5b9-09484eb1933e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "be567da1-8853-454b-97a3-1c1196101374"
        },
        "item": {
          "id": "c6334df0-a578-4f83-af53-4f5b70fb662b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ae04b0d0-4290-406a-ad94-e561d09a40fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc1b774-a270-45bf-b7de-e0eaecd5d89f",
        "cursor": {
          "ref": "72d6f123-e0bb-467d-9d31-1ce14257631d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3c9ecc82-f1ca-46d5-99b7-abfa74670991"
        },
        "item": {
          "id": "1dc1b774-a270-45bf-b7de-e0eaecd5d89f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2cbf388a-a5c1-4091-9a7f-8de7e4a740d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdadab39-5932-4936-9799-69a7ef340ca8",
        "cursor": {
          "ref": "3e073d7c-ca24-4a4e-92f2-eca37e62c10f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d6249e28-bb0b-44e6-ba84-995a54515d9b"
        },
        "item": {
          "id": "bdadab39-5932-4936-9799-69a7ef340ca8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ea5ec3fe-24bc-42b0-abcd-daa0c679be52",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beef348-015c-4373-91d7-7eabd294e668",
        "cursor": {
          "ref": "a4a39dc7-6f11-4705-b735-de85c4342fae",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6f8c1ceb-9a5f-4863-9251-43892ced5ddd"
        },
        "item": {
          "id": "7beef348-015c-4373-91d7-7eabd294e668",
          "name": "credentials_issue"
        },
        "response": {
          "id": "40a7b43b-deea-4179-89ad-58950c60e2aa",
          "status": "Created",
          "code": 201,
          "responseTime": 255,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "39701e0f-19fa-4f9f-a317-544d893d5586",
        "cursor": {
          "ref": "aeb060a1-e72c-41f5-ac4c-5de2f93a9576",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7a8ee288-98b9-4bf3-ad03-d42d26a3a407"
        },
        "item": {
          "id": "39701e0f-19fa-4f9f-a317-544d893d5586",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7331ee51-2f05-4d54-91aa-6f51efadc7d5",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c4ea40-c3a6-42cf-80ff-954b512847d8",
        "cursor": {
          "ref": "8c23a5d7-f82a-4472-9fef-d5a7429765ca",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e23eac66-05d9-4a44-8eaf-5479e20372a3"
        },
        "item": {
          "id": "68c4ea40-c3a6-42cf-80ff-954b512847d8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "58fb3701-2562-4abf-95b6-bc0ea53969a7",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "69683973-512f-4e0e-839e-7dbed4864976",
        "cursor": {
          "ref": "e8f4e94b-996c-4ded-b603-305cfc820764",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "393fdad9-eef3-4ffb-947b-91242931d8cb"
        },
        "item": {
          "id": "69683973-512f-4e0e-839e-7dbed4864976",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "24b03b6e-b6fa-4a2b-b939-8dacfc731b43",
          "status": "Created",
          "code": 201,
          "responseTime": 41,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf52ad16-c48d-4976-85da-90649b7c99f9",
        "cursor": {
          "ref": "4650d33e-ad75-4685-b2d5-87849601ca3b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "419d04a9-1254-494d-99bc-71182068b428"
        },
        "item": {
          "id": "bf52ad16-c48d-4976-85da-90649b7c99f9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e8a561f8-70fb-4cdb-beaf-6a1afb6f136f",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "89970612-c02c-426d-be16-cdbff48e4738",
        "cursor": {
          "ref": "e582f20e-512e-4619-9e56-ba1bad515067",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b0cf3861-75c6-4302-9346-8bd5856e7054"
        },
        "item": {
          "id": "89970612-c02c-426d-be16-cdbff48e4738",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3540a86a-b5bf-4910-b9f1-c6ed88f3dbc4",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2ee419-b79d-4632-955f-3fe24b0b3207",
        "cursor": {
          "ref": "c963d1e4-ad2b-4db7-8f09-2d67d23de008",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1b61aed6-f825-450f-bcc0-014616212d82"
        },
        "item": {
          "id": "8f2ee419-b79d-4632-955f-3fe24b0b3207",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b045bcf7-fdb0-4f6f-bc88-68cdae72b8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2020eddd-d63c-4bd6-b680-4952e07d8cfa",
        "cursor": {
          "ref": "3c64c5eb-33c5-410d-80b2-23ab2798a673",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3b85b5a7-08fa-4bda-b14e-00e74b58037b"
        },
        "item": {
          "id": "2020eddd-d63c-4bd6-b680-4952e07d8cfa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2ebda81a-5fa8-44ad-bb3d-7c8bd97c5e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a03a0ca-d515-4275-9572-7786e5264338",
        "cursor": {
          "ref": "ffe5497d-a5d7-4fb0-95da-22000080c58c",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6c5e017c-bb8d-49aa-bc96-909aa9a3e10c"
        },
        "item": {
          "id": "1a03a0ca-d515-4275-9572-7786e5264338",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "690debc5-6870-47b3-925e-dfef251639e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e91ba2-edcb-437b-bd20-501eef61af6f",
        "cursor": {
          "ref": "d6c4b458-9974-4775-973f-737df7f33501",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9a950ac3-6352-4306-a70c-d457f0d43ddf"
        },
        "item": {
          "id": "e0e91ba2-edcb-437b-bd20-501eef61af6f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "13ae5f26-2605-40b6-b277-f41b573a4ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dbd9b1-0628-442a-b87c-9aa1e5713c47",
        "cursor": {
          "ref": "b9f5cedb-e889-48dc-a2b2-8e5f259fcb13",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e0df66a2-3ccf-4827-9219-424b6d70f86d"
        },
        "item": {
          "id": "e8dbd9b1-0628-442a-b87c-9aa1e5713c47",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6d37d6a7-0427-4178-be52-6a9c18fb4d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0a492e-552e-43f3-aa28-4b6d32258bc9",
        "cursor": {
          "ref": "2345d7c8-da56-4455-8e8d-60e66797c3e0",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "adbd37ae-5483-41f3-a87a-6c0274dc042e"
        },
        "item": {
          "id": "7d0a492e-552e-43f3-aa28-4b6d32258bc9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "994ceadc-9c76-422c-924d-e815ee6c5606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2130536-9327-4da5-bb0c-7a5784ed0aa0",
        "cursor": {
          "ref": "30575f60-c41e-4ca9-bb27-b37e601399c1",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "05cb9f76-8bff-4f75-92b8-e37a39846d3e"
        },
        "item": {
          "id": "d2130536-9327-4da5-bb0c-7a5784ed0aa0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "41ff94ac-14d0-40e1-9f46-f70308409e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9103cf71-0a4c-4c9c-bf21-29c2a6e7048c",
        "cursor": {
          "ref": "febd9f5d-a9d0-411e-b3fb-bbbf238e583a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4c9652cd-7cc9-41b8-926d-e93be09976ff"
        },
        "item": {
          "id": "9103cf71-0a4c-4c9c-bf21-29c2a6e7048c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ab0453b4-2a90-466b-8184-0e85636d4225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2281e219-3027-4f0a-80db-cb47c2596c96",
        "cursor": {
          "ref": "b63b6ecb-1b51-49dc-8462-d5cebbe4755b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fbbdafe7-4ef4-4416-b72c-e5314563a07d"
        },
        "item": {
          "id": "2281e219-3027-4f0a-80db-cb47c2596c96",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5415d236-398d-4e71-9422-cb9b5c3a7260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a62cb68-9fe5-4c04-be7f-d8670a26f3cb",
        "cursor": {
          "ref": "f5eea08c-3a71-4081-90b2-b9ac010e7915",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8d45bebd-abaa-4f91-bc03-dabf9e529dff"
        },
        "item": {
          "id": "4a62cb68-9fe5-4c04-be7f-d8670a26f3cb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "44039250-fefc-4c28-900b-68558e1e4166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbbf0af-1785-4eb2-9134-00de28396fc6",
        "cursor": {
          "ref": "98762d53-c405-48e3-99a3-f434a3726f1c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d103b905-e80a-4941-806e-a4c1379df848"
        },
        "item": {
          "id": "5fbbf0af-1785-4eb2-9134-00de28396fc6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a9e6d280-2e2a-4c5d-9d6a-95dcd8a02382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271421a1-a3ae-4468-8a8c-70539a69d36c",
        "cursor": {
          "ref": "ab5a4996-e341-4c5a-a39c-3b5be59c7e78",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1e21efb9-a415-4f58-a604-7c474d80615e"
        },
        "item": {
          "id": "271421a1-a3ae-4468-8a8c-70539a69d36c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b430ebd3-627b-4014-a37f-db613800d6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b24d2bf-becd-4dc3-a778-c3966457c804",
        "cursor": {
          "ref": "2e9e02e0-9928-40d8-9c50-c11c15716075",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "90053c83-ce9d-49b8-8972-18ed182c523c"
        },
        "item": {
          "id": "0b24d2bf-becd-4dc3-a778-c3966457c804",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b643fdd6-12b7-4d84-8e22-b7a83d58b2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1327eb78-5298-4f0f-be32-2da9ff30d950",
        "cursor": {
          "ref": "b915409c-6f4a-4b17-a4c3-42c7a20c5fb2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7596c4b5-fa86-4196-9e61-ebb46ec7b9f9"
        },
        "item": {
          "id": "1327eb78-5298-4f0f-be32-2da9ff30d950",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9b482b44-2d97-4b31-a04f-9f4c46f2baf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18c167d-f531-4e89-adae-f97887ee2d63",
        "cursor": {
          "ref": "b2e4906d-19fa-4fdb-abc8-680530a006a6",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "02c9fd50-ea9a-4c48-a709-3eca377949be"
        },
        "item": {
          "id": "b18c167d-f531-4e89-adae-f97887ee2d63",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4be6b59a-ddd0-4afe-9ff7-6c27f2f43e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17e3929-5a2c-4d26-9b55-962c0b2db456",
        "cursor": {
          "ref": "48628a48-681c-4e7e-aa31-226fba7cad5c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "509842ad-fc00-4fc1-bf89-f29b1a9a70c6"
        },
        "item": {
          "id": "e17e3929-5a2c-4d26-9b55-962c0b2db456",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d23c592c-2df5-426a-89be-28959955e1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d7dee6-258f-4611-bf8a-ad0f1aac103b",
        "cursor": {
          "ref": "a1128e55-f86c-4788-b2cf-6741f3545a4e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ab10f228-c021-4a9f-9d3f-69118689ecca"
        },
        "item": {
          "id": "13d7dee6-258f-4611-bf8a-ad0f1aac103b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4dd007c1-732c-4756-b029-bc1e8c44efb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53764a58-b065-43f4-9c53-e14afa9612f8",
        "cursor": {
          "ref": "58f6e2fe-0b08-4625-8a19-afdd8467eba4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ac14bbd0-4b8a-46ad-a911-5718b6479deb"
        },
        "item": {
          "id": "53764a58-b065-43f4-9c53-e14afa9612f8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ab6d507f-cb43-4de8-bcff-04562229ce93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518aac11-5b0d-4714-be8c-29d7251d99bf",
        "cursor": {
          "ref": "8874ac83-56e2-4f34-a067-84a2a3d8a7b7",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f9ae55cb-76ae-41b6-8f02-c96a1b61ec50"
        },
        "item": {
          "id": "518aac11-5b0d-4714-be8c-29d7251d99bf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6e651ab3-390d-430a-9ea8-fd2abe68efed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923dd501-b3d1-483e-9d0b-96d41e97466d",
        "cursor": {
          "ref": "f5490b47-b712-45d7-b96b-7a02f2e00f7f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "361d5ecc-6390-4a42-a80b-0d45f84a8416"
        },
        "item": {
          "id": "923dd501-b3d1-483e-9d0b-96d41e97466d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aa775d85-61b1-4540-80e0-bf5c75bce19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ff6212-4437-4ab9-a52d-7ee0772379f6",
        "cursor": {
          "ref": "9403e79f-1e97-46ed-8000-ba8e5a4e9230",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1be1db45-9843-423f-b8e9-4803680aa9db"
        },
        "item": {
          "id": "49ff6212-4437-4ab9-a52d-7ee0772379f6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "55f2f79c-ece8-4069-a76a-f0b0eb93a016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a3cb78-915e-4c54-aa3c-286a99b21786",
        "cursor": {
          "ref": "55c8b55b-e5a0-4caa-9655-a5c68c1daa85",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0e81740f-fff5-4c3b-870d-6fcb3acd730c"
        },
        "item": {
          "id": "d4a3cb78-915e-4c54-aa3c-286a99b21786",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f6531765-bddd-4bd5-8491-cc50127b9f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21c07f3-af69-4813-84be-31c54e53b6ac",
        "cursor": {
          "ref": "4991bb35-aee6-4c84-97c9-b4154c483e25",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1dc019a7-3b42-43ee-89cb-3bc62b5a0913"
        },
        "item": {
          "id": "a21c07f3-af69-4813-84be-31c54e53b6ac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "29f37d26-f6aa-4240-be96-04785c9cbcc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95d9ae0-5aac-44e5-bd54-a1a28a697120",
        "cursor": {
          "ref": "6ff06861-4c55-4f6c-8b03-9beb1cc47dbb",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c65201a8-b45a-437c-9280-efee1905e133"
        },
        "item": {
          "id": "d95d9ae0-5aac-44e5-bd54-a1a28a697120",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1ff16123-ed82-44e4-be07-09e013f79375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9224d6-dc46-4f44-9d34-9efe2a18c115",
        "cursor": {
          "ref": "b7fd16bc-a74f-492d-bea8-c31be33cf71b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6648c409-402c-4a07-b2d5-2c0902a34b4c"
        },
        "item": {
          "id": "ec9224d6-dc46-4f44-9d34-9efe2a18c115",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "00715fb2-3b98-4c43-a8b8-2d849fce4e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fd979e-212b-4865-90ba-821827aca266",
        "cursor": {
          "ref": "0845074d-0d55-47bd-ab05-47efafea1309",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c92f0443-ce55-4094-ae8d-eb2161e8cc38"
        },
        "item": {
          "id": "69fd979e-212b-4865-90ba-821827aca266",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "82e5079f-127e-48e6-94d6-7dbcb601a7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cecc60-57aa-434d-a765-9d24e5f20c4f",
        "cursor": {
          "ref": "f954f85e-9a5a-4697-854a-97e8b6c9f98e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "68bfaa24-0fd0-4c12-b7ab-b965fc322506"
        },
        "item": {
          "id": "34cecc60-57aa-434d-a765-9d24e5f20c4f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dca08789-0017-4278-8f45-a895bb98d85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98ca513-43d7-48e3-a3e2-37b809161bc1",
        "cursor": {
          "ref": "3ecc217e-94eb-4c73-887b-f7fa3fdc7b40",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f0de85d8-d710-4979-9fb5-5e8d7cccb98d"
        },
        "item": {
          "id": "c98ca513-43d7-48e3-a3e2-37b809161bc1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7d1065d8-5901-4c3b-b17f-af6f461a1efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23f903f-7d19-4e96-95bb-a6f728a23505",
        "cursor": {
          "ref": "fae87f04-399e-4b33-a424-9769f60ed205",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "03ff0b36-7f82-44a8-bc25-325009b6df15"
        },
        "item": {
          "id": "c23f903f-7d19-4e96-95bb-a6f728a23505",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "191db902-5a1d-4b57-81e0-c138c37be8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d64886e-a04e-4e9a-9f84-379da1856b59",
        "cursor": {
          "ref": "3f8f84f7-d70d-4e1b-ba00-d19f3b5cee7f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "743b29dd-e3ef-464c-be62-2e1921a3dfc5"
        },
        "item": {
          "id": "1d64886e-a04e-4e9a-9f84-379da1856b59",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ddc11974-7c72-4a63-901b-ad52efde404f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b877be2-4ad8-4ce4-a751-2cd7e3a952d8",
        "cursor": {
          "ref": "a23b8bb4-b63d-4d82-b1c2-bc69610fb086",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "69f7472c-ad39-43de-a2b9-436c71cdface"
        },
        "item": {
          "id": "8b877be2-4ad8-4ce4-a751-2cd7e3a952d8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ac53cb30-c8fb-4f53-9d8a-b7fb4fbf29ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b58335-9e43-4d7f-b374-ba90f9d0a763",
        "cursor": {
          "ref": "96e3d13c-cddd-4df4-9d47-177533f720e4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f93ea24a-5595-432d-8563-fc1ee2a0b55f"
        },
        "item": {
          "id": "92b58335-9e43-4d7f-b374-ba90f9d0a763",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c17fc568-e5c8-44f4-9d0c-a621f6a597e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2a2dee-d330-4dd2-bf04-5b39383fbd25",
        "cursor": {
          "ref": "bdb64f7f-832a-4686-95ea-337cacf7eb6b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3012af88-0097-468a-a590-9da9b5dd74cb"
        },
        "item": {
          "id": "1b2a2dee-d330-4dd2-bf04-5b39383fbd25",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bbc5a18f-fb92-429a-a1ec-5a61e9c65bde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee9a958-3fe7-4870-b3e5-e2675b5fd172",
        "cursor": {
          "ref": "34c85eca-0bd3-4daa-b686-0b7d7e36ae31",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bd45d31d-332d-40e6-9d94-c518e77c8177"
        },
        "item": {
          "id": "2ee9a958-3fe7-4870-b3e5-e2675b5fd172",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6f26f7fd-e0ad-437e-a45d-4d25e71fdf90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca651fe3-a001-409d-8df3-b4e7d9e6d91e",
        "cursor": {
          "ref": "73917890-2b61-4174-90a1-15c84a2e6514",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a23d984d-ebea-4847-8f63-a4ea4112f3f7"
        },
        "item": {
          "id": "ca651fe3-a001-409d-8df3-b4e7d9e6d91e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e2a127fc-1cb5-422b-9b0f-4ef79b15be53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d92dd4-6c23-4c82-bd1a-df1dbb20932f",
        "cursor": {
          "ref": "13d7ad03-6b5e-4f94-b17e-b67081463570",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a79ee592-cde7-40fc-8c7f-f7164231c9d5"
        },
        "item": {
          "id": "09d92dd4-6c23-4c82-bd1a-df1dbb20932f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2f4d709d-13aa-4134-98e1-635c079bd5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd26e36e-1833-4b9d-9e70-e0336d7dd351",
        "cursor": {
          "ref": "dea76c9c-3daf-4b8e-a0a5-033c1a46805a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5970f17e-216d-4a1d-a9bc-8e1c74bdcb6a"
        },
        "item": {
          "id": "bd26e36e-1833-4b9d-9e70-e0336d7dd351",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ff5a0cc6-34d6-41a9-9dec-939b1e5203aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be410872-05ec-48d2-ac5d-4fdaf588cabb",
        "cursor": {
          "ref": "0e071e47-5766-4b85-b831-04921934507e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f89ad782-035c-4d13-93e9-81305b9ce394"
        },
        "item": {
          "id": "be410872-05ec-48d2-ac5d-4fdaf588cabb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "78bb65cd-0aa4-47bd-9aa4-26cbcafd9256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98fc166-f882-43e6-967e-982f210d4796",
        "cursor": {
          "ref": "520a0b2c-b6e9-4682-a4e4-11ac6e7ba9d5",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "27a57995-c627-4480-9a47-23f119fcff30"
        },
        "item": {
          "id": "c98fc166-f882-43e6-967e-982f210d4796",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f55f993d-e06b-4cee-a077-341ece8800fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54280827-95f9-409f-aabe-bcc9c9b0c48d",
        "cursor": {
          "ref": "a68ac02d-2fdd-4ef0-8391-6601fce68e8e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1eaed8d7-55aa-4e59-ad2f-9c21fad824da"
        },
        "item": {
          "id": "54280827-95f9-409f-aabe-bcc9c9b0c48d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7cf30340-33f4-43b4-a8fe-4120100d70cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23804dd0-86d4-446f-bd8e-b9e07ef0dfab",
        "cursor": {
          "ref": "ffbb3c7d-e66a-4f6a-92f7-7b3b498086e6",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7675c8bc-c199-40d9-a651-49fff0941560"
        },
        "item": {
          "id": "23804dd0-86d4-446f-bd8e-b9e07ef0dfab",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5ce496d2-4f8c-46ef-a383-8a66fa2d5900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39634b78-6b07-49bf-baeb-b247a43f71fc",
        "cursor": {
          "ref": "ceb3cac7-5044-4b42-84f6-6db56364bc2d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1b88465f-40a5-497d-a74e-6025b10c6cba"
        },
        "item": {
          "id": "39634b78-6b07-49bf-baeb-b247a43f71fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1ab6f896-1504-4aa1-b64d-bac64932f844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77721dd6-522b-4829-aff7-96bb2afd870a",
        "cursor": {
          "ref": "bfb6ce93-20ab-4ddc-91e9-c2fae05fa278",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c8de3366-6f0f-4982-8ed5-b4d8990da46a"
        },
        "item": {
          "id": "77721dd6-522b-4829-aff7-96bb2afd870a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4b2b2b0f-2ea2-44eb-9cab-1d00f3dc73bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea1d0ce-7be6-4a9c-a491-9488eee4d954",
        "cursor": {
          "ref": "f2d7cd2b-1c3a-4190-825b-3688162029cf",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "84b341d0-3cb9-4bdd-87e5-e6281de05097"
        },
        "item": {
          "id": "fea1d0ce-7be6-4a9c-a491-9488eee4d954",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9a4f3df9-7abb-42ff-8beb-7b04a01edb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99adf77-163a-402e-97be-efd6481ce2c3",
        "cursor": {
          "ref": "69a86a20-a413-4182-b837-74d95aa0fae8",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "37f4a0c6-8939-477f-9ce7-63728f44bf20"
        },
        "item": {
          "id": "c99adf77-163a-402e-97be-efd6481ce2c3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "55606a9a-c960-440c-95ce-1596792edfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110a4efe-d02f-4b41-a325-203b96cb3c2d",
        "cursor": {
          "ref": "9c03749f-662e-46ba-aaf9-564a847d0016",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0c2249d3-7886-48de-93cc-73c2e68205eb"
        },
        "item": {
          "id": "110a4efe-d02f-4b41-a325-203b96cb3c2d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e31fea95-cb7d-4feb-a212-34fa6d418819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83efcd3e-ca38-43d9-8683-e0b68609313c",
        "cursor": {
          "ref": "2f2789c0-18bc-4dab-a981-5f75f821a714",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dee7ccdb-0bb9-4c08-a4bf-ef1218ca7e70"
        },
        "item": {
          "id": "83efcd3e-ca38-43d9-8683-e0b68609313c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b5bc925e-09f6-4c2a-a7cb-f9a53814dc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0484e6-f5e3-4de3-986e-1781844ea2c9",
        "cursor": {
          "ref": "7e96fb88-7bc9-40c8-9e44-9ec3747f7af0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "734aab0b-18cf-4615-a4fe-00fb994c710d"
        },
        "item": {
          "id": "8b0484e6-f5e3-4de3-986e-1781844ea2c9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9bcdd916-8b72-4a6f-836d-5e8636eef9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779d6794-11bf-478d-9393-718b31431a1c",
        "cursor": {
          "ref": "d8fda17d-504a-44e4-ab0e-295e107f0083",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e4686a2e-af39-4399-b863-a2b611ae74ec"
        },
        "item": {
          "id": "779d6794-11bf-478d-9393-718b31431a1c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a3a81a24-a74c-4cb8-bab2-61e2496292f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe0ede1-36ca-4c53-8b72-b09ebee59050",
        "cursor": {
          "ref": "bd6a782d-25e4-44d4-9a15-24f630bb2a43",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5d0d3d64-9ea9-435c-a115-9a7c341ea53b"
        },
        "item": {
          "id": "1fe0ede1-36ca-4c53-8b72-b09ebee59050",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "151af873-5c3a-486d-aecb-4491236ee92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a7acf9-6889-43c4-a20e-e3a10b37fd58",
        "cursor": {
          "ref": "a11cbeb1-7e48-4374-b696-5c491e6a4b08",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9249a9a9-c2c8-46c9-a2ae-27a79635dc3b"
        },
        "item": {
          "id": "b7a7acf9-6889-43c4-a20e-e3a10b37fd58",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6972afd8-2a40-4058-90f7-24d059c62992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3660c3-932e-488d-a40c-a3b887d0cc0b",
        "cursor": {
          "ref": "059e057e-fb87-451b-83df-7dde5680339d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6f7fa6fc-d8b2-41dd-b1bd-06281536d21d"
        },
        "item": {
          "id": "8a3660c3-932e-488d-a40c-a3b887d0cc0b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "98349561-378f-4c6d-843d-075546de613e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fa5409-f49e-44ec-bbb5-1ea8a1f86cf6",
        "cursor": {
          "ref": "8ccb0e3f-f3a3-4d15-9972-d1a03a49ab8f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6c5a81fd-d3dc-4e5f-b575-0e776fe8c048"
        },
        "item": {
          "id": "70fa5409-f49e-44ec-bbb5-1ea8a1f86cf6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "80e21ff8-f711-4393-b822-b39a4a455637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f82ba5-de54-4c9b-8f1b-4f9ea0f6e888",
        "cursor": {
          "ref": "a43502f5-d5a8-4114-a1d4-1ae17ed1e8dd",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1190b89f-2c92-4d79-95ff-f8b62dc85a98"
        },
        "item": {
          "id": "23f82ba5-de54-4c9b-8f1b-4f9ea0f6e888",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6ed6d034-db61-4e54-9629-9da1dc9de121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24b6d38-8eb4-45f7-902c-b17a5ea889b2",
        "cursor": {
          "ref": "bbd84ccc-4938-4fb6-85d8-b5267eff17a5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6f58f012-4c72-4b46-b35d-4e5c977afccb"
        },
        "item": {
          "id": "a24b6d38-8eb4-45f7-902c-b17a5ea889b2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "443dec01-334c-4aae-bae2-e490697d619a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb52338d-6e93-44a9-ae6a-3f3f5c7c31d2",
        "cursor": {
          "ref": "6d6a9b0b-f0dd-4b51-bf5b-1dd7477f8154",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c837ddff-6cc6-413f-8859-06a06522c485"
        },
        "item": {
          "id": "bb52338d-6e93-44a9-ae6a-3f3f5c7c31d2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "061c9cd4-fb6d-4e79-88bb-568b9a1c41a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f3338e-63f5-4684-a5d7-b66689a8a436",
        "cursor": {
          "ref": "43c9fd7c-5ccb-467f-8b6f-158038b2a017",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "04906e95-8146-43e5-a65d-533adbde394b"
        },
        "item": {
          "id": "47f3338e-63f5-4684-a5d7-b66689a8a436",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f8296b41-e46f-45be-b8c8-be4c36e5ebde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307847eb-9b4c-488c-81fd-aad9e4b8ab41",
        "cursor": {
          "ref": "7c4a13a6-8545-4fc8-b7c8-7960b0d4e6ba",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e090615b-584a-4c9f-a24b-32be1d612f9c"
        },
        "item": {
          "id": "307847eb-9b4c-488c-81fd-aad9e4b8ab41",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0c77e49b-e260-48fb-8491-7ebe0516e485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f96b736-3862-4c25-bb46-e65833f2f0be",
        "cursor": {
          "ref": "94815068-8625-4ad0-9cb8-c82c167a90f8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5e36207b-f591-4fb0-bb6c-7d647bfee878"
        },
        "item": {
          "id": "6f96b736-3862-4c25-bb46-e65833f2f0be",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "73ce41b7-fba1-4d27-87bd-6291fcb1a043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe769cf4-b360-4a8d-b39a-ef7a895a6bc5",
        "cursor": {
          "ref": "05df22cb-73c4-4561-828d-56bb0b277688",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "019189ed-fa79-4135-8e6a-0a2c3a5d63c4"
        },
        "item": {
          "id": "fe769cf4-b360-4a8d-b39a-ef7a895a6bc5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "62998407-4831-41dd-80a5-c13bae54fb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab578fdf-5334-45eb-8104-79d196346f4a",
        "cursor": {
          "ref": "3fb62a6f-97ec-44fb-8342-00b05db7906f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a65e56ee-c4c9-4cb2-a092-17de720a0420"
        },
        "item": {
          "id": "ab578fdf-5334-45eb-8104-79d196346f4a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b317139f-e799-48d9-b1a7-3225c150791e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e0c1a1-d11d-413a-8606-071ba33d8408",
        "cursor": {
          "ref": "fd3c7498-b47f-4c70-860c-aaad376b6bfc",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1ee3d44b-de68-4f84-8087-9945e4a634d0"
        },
        "item": {
          "id": "72e0c1a1-d11d-413a-8606-071ba33d8408",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d655114f-cb33-4c0a-8353-3755a91b227a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c870088-8ab5-4f0f-8763-ef92b6d82390",
        "cursor": {
          "ref": "fc3ddf1a-f5a0-4255-be8a-471eaacaf051",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "43f545e3-820a-4242-af17-00c2de3c729d"
        },
        "item": {
          "id": "9c870088-8ab5-4f0f-8763-ef92b6d82390",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7ef786f4-443c-49aa-aa84-00cb6b271c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80eeab3b-d437-4ef9-b3cc-a52c556f02c4",
        "cursor": {
          "ref": "dd977250-f881-4eb4-8cf9-3f9ce393a382",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bdea054d-b21c-4d9e-91fb-9908ea614242"
        },
        "item": {
          "id": "80eeab3b-d437-4ef9-b3cc-a52c556f02c4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1b1c0441-e66e-43bb-ab5a-c1e8e8c7b2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e35292-73e5-4d9d-9935-785a4d58cce5",
        "cursor": {
          "ref": "03d2b133-d0a7-493d-9147-391f4d0eecc7",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2816c582-f533-45a4-a764-a71b5fc6860a"
        },
        "item": {
          "id": "a3e35292-73e5-4d9d-9935-785a4d58cce5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "34a83964-5e6c-4708-816b-41d0efd8bc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10304bf7-7df0-4c76-9cec-a4043362e3d3",
        "cursor": {
          "ref": "d8f41c8c-aa14-443e-89ea-9599c05ea928",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e0d355c3-cbbe-4e7e-8ffd-8d338e57d1d5"
        },
        "item": {
          "id": "10304bf7-7df0-4c76-9cec-a4043362e3d3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a246d4a3-d05e-4e63-be35-46975b587844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6673f27f-4b98-43da-af54-808000b7397f",
        "cursor": {
          "ref": "4a8819bf-6426-4c7e-8a54-0a5e2e8c9d8d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c3c8b609-ff7c-4372-9b9e-68df8247c845"
        },
        "item": {
          "id": "6673f27f-4b98-43da-af54-808000b7397f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6745d6db-fb7d-46ca-af46-e6d6f269ef41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc49290f-f0a4-47cd-a661-dd849ed6da5e",
        "cursor": {
          "ref": "c778d855-a8a8-4cc6-92e5-5c20abeebfc7",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "78772430-0f7d-4c1e-a5b0-6ed3b430712c"
        },
        "item": {
          "id": "dc49290f-f0a4-47cd-a661-dd849ed6da5e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6b1b944b-83c4-4161-a8b3-bad378bad405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f1eeaf-4429-4851-b8ad-0843b5366d3d",
        "cursor": {
          "ref": "b0f95034-9d6e-4649-9ebd-77952912b248",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ba407a75-112a-44cc-999a-e2ce58a7a20b"
        },
        "item": {
          "id": "c1f1eeaf-4429-4851-b8ad-0843b5366d3d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1415cbe1-9755-4018-ba0a-96124e2ccc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7eab698-f483-42a0-8211-33a94878d59b",
        "cursor": {
          "ref": "12c993b4-523a-49f1-afb5-1585fe2df88c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "aee911e3-b1a3-4b8a-ba92-9e9697fffca0"
        },
        "item": {
          "id": "d7eab698-f483-42a0-8211-33a94878d59b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "19386e05-3117-4ad3-8caf-ecba979ccab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193ce17b-f874-49d4-9ca3-0b74447db83a",
        "cursor": {
          "ref": "59f9289e-5089-4972-9185-0d02a18fd501",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "404c3b8e-67f5-4a26-b2bc-f64545b78842"
        },
        "item": {
          "id": "193ce17b-f874-49d4-9ca3-0b74447db83a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d6a29044-49eb-4d25-bce9-a7dead36e02b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73764405-9a52-405e-9ea0-4e4f80303f82",
        "cursor": {
          "ref": "28793baf-8ac2-4811-87bb-74b4ed62802e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2537e609-b2f6-4379-96f4-9526dbdfc4e1"
        },
        "item": {
          "id": "73764405-9a52-405e-9ea0-4e4f80303f82",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bba7d17d-7593-487b-a6f7-15647ccde57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd01db93-fb32-4464-81da-a9c314ce147c",
        "cursor": {
          "ref": "9e38b42c-c4f3-4c46-a74a-29b3dbb1bd2c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3be9e0ff-f037-4946-821f-d7aaa72af497"
        },
        "item": {
          "id": "bd01db93-fb32-4464-81da-a9c314ce147c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "81aea188-4128-414c-a670-fab59b40f867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3eab5c-64b9-4e23-bc68-e4506f83b284",
        "cursor": {
          "ref": "f201929a-36b4-41e3-baee-fb515d134bb3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1b47b2bf-b9a3-4218-8e24-3dcd92c9826d"
        },
        "item": {
          "id": "fe3eab5c-64b9-4e23-bc68-e4506f83b284",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6f7be6b8-3d7c-4d51-bbb9-fcd575f06e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd849e28-5494-420a-9fca-4a62ff4bfa3e",
        "cursor": {
          "ref": "10e0a161-bb9a-4fd9-80cf-cfb43ad45b81",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "38c53893-0a31-4906-be21-a114e3fa3d17"
        },
        "item": {
          "id": "cd849e28-5494-420a-9fca-4a62ff4bfa3e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9cee88bf-b7f9-4719-b2fb-77e049bfe2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddc749a-8778-474f-b1af-673e77d5066f",
        "cursor": {
          "ref": "ff7c6eab-34f9-445c-9838-ac6a2384c71b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "92978e25-6f4c-4a1d-867e-4a4cd64bcd89"
        },
        "item": {
          "id": "8ddc749a-8778-474f-b1af-673e77d5066f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4b687d75-d0b3-42f3-a931-751107b5982a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52761b3c-c985-4e88-818d-f14883f8a9ef",
        "cursor": {
          "ref": "aa934e4b-df15-4cbc-b9df-d53db8daaae6",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9038a47e-5c65-4622-8b0f-4a4a16a71a51"
        },
        "item": {
          "id": "52761b3c-c985-4e88-818d-f14883f8a9ef",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f296ef9f-3ecc-460a-9944-05acf25a5167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991eef28-0cde-4f91-9965-6229465cdaa6",
        "cursor": {
          "ref": "c1138cb6-6ac8-4644-890c-6e8a0056464c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "62c2ca59-4b03-4e5f-83b1-8c57de88c39c"
        },
        "item": {
          "id": "991eef28-0cde-4f91-9965-6229465cdaa6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fc7d9cd8-3f97-4055-98cf-a259913f2683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76fe038-4261-4927-b97c-56f878c7c871",
        "cursor": {
          "ref": "3a893e0d-e3e1-4e82-8ae9-f2871c09049d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "47afb845-08ec-4f5f-9843-d7b4b76ce136"
        },
        "item": {
          "id": "a76fe038-4261-4927-b97c-56f878c7c871",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0e6fecc5-4a01-491a-a0ef-e8f3ec640f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66505f7-0f3d-4b90-be58-834a67b61508",
        "cursor": {
          "ref": "a52002b7-1d45-49d1-8201-99a069346b91",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f7cb1096-6a6a-4ba2-ac99-b9b669911357"
        },
        "item": {
          "id": "a66505f7-0f3d-4b90-be58-834a67b61508",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8b6616aa-bcee-4442-a88a-19f29136e339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd9cf96-61d5-4f79-b1ff-f9e221eb3647",
        "cursor": {
          "ref": "c2f6c3dc-f0bc-4914-96b1-86f6227f9b8d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "58e9ffd9-ec92-446d-b14d-ca0730d73c94"
        },
        "item": {
          "id": "4fd9cf96-61d5-4f79-b1ff-f9e221eb3647",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "514195f5-9e7a-43de-93b4-30237f9fcf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d17533a-1177-4ac0-837e-fde90aa08f35",
        "cursor": {
          "ref": "a62e4be5-4a58-4d11-83d6-a77e6a92b9ac",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7fc1f1da-33fb-44e9-bbfa-1199daf2e73d"
        },
        "item": {
          "id": "8d17533a-1177-4ac0-837e-fde90aa08f35",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3c7e7819-ca71-447c-b55b-f546077041a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a216c2-7e6d-46b1-a671-eaff5b2cc9ee",
        "cursor": {
          "ref": "194cbda0-c4f8-4c73-afc4-a816cc553d0d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4d2428df-ffb6-494d-9551-33c259c2f2a8"
        },
        "item": {
          "id": "12a216c2-7e6d-46b1-a671-eaff5b2cc9ee",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "87a533c7-02d9-49ba-94aa-f3b2cc50ab56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf23d9a-5c77-42d6-b987-6da17d45f385",
        "cursor": {
          "ref": "abea28dd-612b-4b2f-b47b-be2bf67f557b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6869af7e-82ab-48ca-894a-94724817e704"
        },
        "item": {
          "id": "2cf23d9a-5c77-42d6-b987-6da17d45f385",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7c62cb91-8894-4cb4-abfd-2ff4d295e014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ee386f-4af2-41bf-b70c-3f299f3ce928",
        "cursor": {
          "ref": "0999ce7c-4bac-48b0-943b-bc7ebbc7e17f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "84d0c751-df95-492e-9715-9ee814da7f73"
        },
        "item": {
          "id": "11ee386f-4af2-41bf-b70c-3f299f3ce928",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5f8dfcad-4a72-470f-83e7-9fb834f64e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269c4a32-ea26-417e-8b5b-47648f859924",
        "cursor": {
          "ref": "ce2ad0db-2e36-4ca5-a3c8-a88a223d7af3",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "746729da-46fd-492b-bacf-945d71952142"
        },
        "item": {
          "id": "269c4a32-ea26-417e-8b5b-47648f859924",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f79d969d-548c-47ec-b5ea-74f21f59b8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5db200a-e8b4-4470-9054-edc6b5eaa6f8",
        "cursor": {
          "ref": "8d367667-57df-4dbe-90be-986f2f21bc4a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "32016880-f410-496e-b01c-4692871e953f"
        },
        "item": {
          "id": "e5db200a-e8b4-4470-9054-edc6b5eaa6f8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d148f642-e7d2-473f-82bb-40e0f03f0465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082fd0b0-1fac-4b59-8029-06d71681a182",
        "cursor": {
          "ref": "40499ab1-fa58-478b-8b6e-f41d23585a91",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9a66ee46-a83f-42e5-936c-d53db376f258"
        },
        "item": {
          "id": "082fd0b0-1fac-4b59-8029-06d71681a182",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9cc22d53-04d6-4cef-992e-0519c116c835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b0edec-dd18-4fe5-8949-519d7c45777f",
        "cursor": {
          "ref": "8f36603e-cd62-4ea1-b31d-9a4e36bf2719",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c532812a-6e05-4257-8793-2b9e3a9619ae"
        },
        "item": {
          "id": "00b0edec-dd18-4fe5-8949-519d7c45777f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "89b98b40-b45a-42ad-be39-9c1dc19abf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20d508e-0840-40fe-9be3-4945d33b2c4b",
        "cursor": {
          "ref": "26f06c83-8806-485c-b97b-4658c9b92872",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "58b6c0da-7633-433e-94e5-820e871343cd"
        },
        "item": {
          "id": "a20d508e-0840-40fe-9be3-4945d33b2c4b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "38d35be3-34eb-40f3-a55f-076416572f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a507561e-c363-4708-8870-4edd123dbea0",
        "cursor": {
          "ref": "658f227d-a85d-4378-b232-b596af7a5a1a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e39d678c-fd72-40a8-9a71-24ed0edd72fd"
        },
        "item": {
          "id": "a507561e-c363-4708-8870-4edd123dbea0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "850d078c-a449-42eb-bf21-2b141f708b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648b78f5-5c39-4cf3-b317-af4261f882d5",
        "cursor": {
          "ref": "22651351-e44e-4c6b-8428-32c2a6ab4320",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "50ebd043-c7a5-4375-871c-ab8bfab089e7"
        },
        "item": {
          "id": "648b78f5-5c39-4cf3-b317-af4261f882d5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7b014765-d08f-4495-8863-c88e64d385b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da731695-d742-498d-b5c3-1a7e832b0fc7",
        "cursor": {
          "ref": "2d9d2e6f-964f-499a-8c5e-24cfee683afb",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "adae669d-86bb-41dc-99fd-ebc5d6192015"
        },
        "item": {
          "id": "da731695-d742-498d-b5c3-1a7e832b0fc7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "50d2cb2b-4a7c-4db4-914e-4f6aa7671605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66223054-342d-4f09-a544-a26b205b7f0f",
        "cursor": {
          "ref": "d5c014d5-407e-4ab8-8c03-7d44609f89a8",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dca5db8a-97e7-4e48-a1fd-e1486f1945de"
        },
        "item": {
          "id": "66223054-342d-4f09-a544-a26b205b7f0f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "99bdfba7-ad21-4fc3-817c-a2ace422a445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd72bca4-0ffe-4341-9ede-c1b9b1a711c9",
        "cursor": {
          "ref": "c5b5c1a8-eb72-474f-911c-43f5317d6e41",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f1c20cb4-04e6-457d-84e8-67951128cd47"
        },
        "item": {
          "id": "fd72bca4-0ffe-4341-9ede-c1b9b1a711c9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ae5c88b4-c762-4dbe-a491-12fd45aad5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e5faf0-0138-4723-bca5-cd94a80626da",
        "cursor": {
          "ref": "1988b43d-3752-4f11-aaef-fad42cb70c79",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1e0756b0-5f89-47b8-8289-1d336ecda33c"
        },
        "item": {
          "id": "45e5faf0-0138-4723-bca5-cd94a80626da",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e29d72e7-7163-4a32-87ff-03845f40e2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d963e3f-0b76-4216-aa74-82b76c55b1d4",
        "cursor": {
          "ref": "8ed91b4f-7d9d-4c1e-85dc-c8844bfbe7c3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2ea67e65-2e1d-4d45-a33a-236123b3008d"
        },
        "item": {
          "id": "9d963e3f-0b76-4216-aa74-82b76c55b1d4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f47cb230-9d79-42a5-8aef-08444bb8f7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac68789-01a1-49da-bd1f-de63c681d249",
        "cursor": {
          "ref": "ebea8a1e-9aa1-4571-b9f3-80bb900b1611",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f729a1bb-9905-4e2b-98cb-c4f0ea21967c"
        },
        "item": {
          "id": "3ac68789-01a1-49da-bd1f-de63c681d249",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e45af6a6-a99c-452d-94b9-73b6d3f90385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc3cf1b-b481-4552-ad19-2cc23ed4d769",
        "cursor": {
          "ref": "eefc9705-eeb1-4e21-affd-9f09d258206b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f6e12cb8-7cad-4b9d-88b0-820dedac2c5a"
        },
        "item": {
          "id": "4fc3cf1b-b481-4552-ad19-2cc23ed4d769",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2b8885c5-e37c-400d-9452-5227b4ea25ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d30c8b-27d9-4577-87ab-40ec2df78ec4",
        "cursor": {
          "ref": "77c07fce-7367-4089-85bb-46fedf3872c7",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1ddf94d2-32ef-4d97-b6d0-a62fb414fcef"
        },
        "item": {
          "id": "98d30c8b-27d9-4577-87ab-40ec2df78ec4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "453f9895-5cab-4e4c-a7c4-ffa294446cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38001bf7-0aff-4c45-a325-951567c4edc7",
        "cursor": {
          "ref": "c6f5d179-67be-46e8-b22b-4dcc89758dd2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3615d3a3-4fac-4efb-82a1-4a033d6c32fb"
        },
        "item": {
          "id": "38001bf7-0aff-4c45-a325-951567c4edc7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "779bd911-930c-4f3e-b58d-b81049710b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d84b423-6dc1-44a3-8930-1471d4393535",
        "cursor": {
          "ref": "75a29aa2-5384-45a6-84b2-ef3d90ee1db4",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3781bff8-5269-4be2-b71d-085710d516f3"
        },
        "item": {
          "id": "4d84b423-6dc1-44a3-8930-1471d4393535",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "75d69d62-fa8c-45d0-8bbb-297bfd1ddf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dcd2a7-42aa-4baa-8d19-90a478ef9488",
        "cursor": {
          "ref": "e9d20ce1-1d49-4186-9d80-71512392faac",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e2c89599-a401-45de-a7fd-b4c5a16bf97a"
        },
        "item": {
          "id": "02dcd2a7-42aa-4baa-8d19-90a478ef9488",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "54e5a42f-f924-48b2-a317-621e04737572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4627da-5d2f-4e90-b4cf-d9de4950b0ad",
        "cursor": {
          "ref": "0003ce60-4cef-4583-a78f-eacd7cc8cdf0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "59a81ea4-3b57-46c6-97c5-a7585a0db9d3"
        },
        "item": {
          "id": "4d4627da-5d2f-4e90-b4cf-d9de4950b0ad",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2071e8ab-2aed-4888-a1d9-99af944ee334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5e0b1e-e4c1-42fb-be22-08ad590122e6",
        "cursor": {
          "ref": "6aaaabed-402a-4967-9ad7-39cdfc6087d6",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b6b7a8c5-0580-4f8b-81c6-98f974ef6f2a"
        },
        "item": {
          "id": "5f5e0b1e-e4c1-42fb-be22-08ad590122e6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e3a06029-1f3d-4f1d-8d15-175eb76f2f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844682fe-988a-4129-b932-86bb7cad473c",
        "cursor": {
          "ref": "9e0fc194-1cb3-45a4-b55c-7c8db54db153",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "49d8cbfc-c2e1-4ce4-82c9-8d96e8af7189"
        },
        "item": {
          "id": "844682fe-988a-4129-b932-86bb7cad473c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "058a5232-12e8-4c75-9f5c-6cdf629dffe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe3f96f-f36c-41ec-b5bd-eb6160cee8ca",
        "cursor": {
          "ref": "77c3c9c5-7f2a-401b-a038-f46535444bf5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "30850c92-6606-4ef4-a61b-82b03dac03b3"
        },
        "item": {
          "id": "cfe3f96f-f36c-41ec-b5bd-eb6160cee8ca",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "97fb6790-4463-4dab-9c31-97366555432c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5b8418-2c98-412a-933a-d95c06a39ff4",
        "cursor": {
          "ref": "0ee33e9a-50e7-4a1c-990e-52e4759bf218",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "37e503a8-d02c-4183-9f97-6b5a7ad3df68"
        },
        "item": {
          "id": "ed5b8418-2c98-412a-933a-d95c06a39ff4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0ad08999-e409-419c-8ed7-0aaac8630463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785cdac1-da3d-45e7-b826-234450bdd16a",
        "cursor": {
          "ref": "7e43bb4e-388e-4904-afdb-58cf59025627",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "add53789-cbf0-483a-8ff0-8ed5c848cf85"
        },
        "item": {
          "id": "785cdac1-da3d-45e7-b826-234450bdd16a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9edd7825-541c-4364-a491-cf58b135412b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdbbeb0-58ec-492f-9edd-5d78556feccc",
        "cursor": {
          "ref": "68b35086-41d6-42bf-9f4b-79fe1107dfda",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4dcebfba-466b-429d-8d61-77b601f65b34"
        },
        "item": {
          "id": "3fdbbeb0-58ec-492f-9edd-5d78556feccc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d3047cda-460f-43f9-81cd-31627dcc3a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7919a1-e796-48bc-afa7-5dc505d9c36f",
        "cursor": {
          "ref": "a25e354b-68e7-4a85-a058-28c17e4d110e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "73ef0507-6397-4cd3-a4a3-87d16bb1fc01"
        },
        "item": {
          "id": "bd7919a1-e796-48bc-afa7-5dc505d9c36f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "04fc9e13-939b-4c1a-9496-545f46b3b259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f568c5-2bd0-43fb-89f5-5c2ab81b3d98",
        "cursor": {
          "ref": "4bc13530-da8c-4357-ba4c-f0e3da9f4d81",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f0aeefab-2da1-455c-965e-b6b736d49aa6"
        },
        "item": {
          "id": "a4f568c5-2bd0-43fb-89f5-5c2ab81b3d98",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9fe6bb51-f26f-4e55-ab0c-ba8c250f27de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df574e99-8216-414a-bd22-357e31b1f579",
        "cursor": {
          "ref": "7b5332ae-5e9d-4eed-b428-1ac39b26c30e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f2ce30b1-ae75-4b99-8dd1-d21a24158497"
        },
        "item": {
          "id": "df574e99-8216-414a-bd22-357e31b1f579",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "629d764f-c173-41a5-a5c1-8ced8f38ef54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9274721-d169-46c7-b227-f40d981e18bd",
        "cursor": {
          "ref": "6a08573a-ec7c-4292-a749-7c9b598319d4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "46564308-f9dd-4427-bb2f-4fd6be233bd7"
        },
        "item": {
          "id": "d9274721-d169-46c7-b227-f40d981e18bd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fdce995d-8943-4c5b-9988-48c20a30a5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c49e05-c3f3-4489-9b82-1421d639d4a5",
        "cursor": {
          "ref": "1dc3b547-e331-4c11-8216-f7c7a3c16ea6",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b48db7cd-027a-403b-aab2-ce0600caa14f"
        },
        "item": {
          "id": "d5c49e05-c3f3-4489-9b82-1421d639d4a5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f278488f-702a-4d19-afa7-31cfea15676f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701ffe77-ac82-43af-93d5-142f3d2d7c50",
        "cursor": {
          "ref": "66cd6a44-e391-4476-bda8-7cc75b60fcbc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9c43dafd-0e1a-4ca3-8c23-1caff02ce9b2"
        },
        "item": {
          "id": "701ffe77-ac82-43af-93d5-142f3d2d7c50",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4cb127f5-992d-4c61-87c8-5f0dc43af280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e181ac-a0d3-41a5-90cb-b43590d1e523",
        "cursor": {
          "ref": "663941d6-b006-46d4-8739-844c8e2186ca",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "81029bea-e71a-41a3-971d-093363980131"
        },
        "item": {
          "id": "21e181ac-a0d3-41a5-90cb-b43590d1e523",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "08711fc9-cfd0-40f6-8c2e-8c77f1be9458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8ca2c9-a390-4f04-bf20-cb4de671a669",
        "cursor": {
          "ref": "e0baecec-79ac-4a68-b021-1ff3a386bc4d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3c36962d-3230-4a5a-86f2-45e2b471ec2e"
        },
        "item": {
          "id": "ff8ca2c9-a390-4f04-bf20-cb4de671a669",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "90b5ffd3-5a67-469a-a4ce-9f6b104000c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2aefe68-929a-4eec-b613-c1de3aeea975",
        "cursor": {
          "ref": "6cb11231-29a1-415c-bfc1-d9e968d0f9a5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a2d8594e-1637-4cc3-9b16-407ee198afa4"
        },
        "item": {
          "id": "e2aefe68-929a-4eec-b613-c1de3aeea975",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c6481e74-47a7-401d-91f4-f932c8650829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b2675c-5cea-4d32-a94e-3ce7e2b08ef3",
        "cursor": {
          "ref": "5dac7a66-5a9e-49dd-a740-5399dc6cbdc7",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "64c06451-e787-4b58-b708-9f9651a0c416"
        },
        "item": {
          "id": "49b2675c-5cea-4d32-a94e-3ce7e2b08ef3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b8bcacfb-bd75-46f9-8e83-3f9fe1f8e526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2f22c8-6607-40dc-8a32-1d05d7f0449a",
        "cursor": {
          "ref": "6d3be72d-dc12-42fe-a1e9-ddce816ff48c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a1283bc1-97e4-44e1-acce-ed8138312b96"
        },
        "item": {
          "id": "bd2f22c8-6607-40dc-8a32-1d05d7f0449a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d0a360ee-680f-431d-ba2d-b59f56a8e466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30662873-6c60-404d-8bd0-4283d19be20b",
        "cursor": {
          "ref": "b9814fb7-b054-4016-8525-75cbb9a554c1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "43d550a6-0419-4a85-9066-4ae7dbbf777d"
        },
        "item": {
          "id": "30662873-6c60-404d-8bd0-4283d19be20b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d9393f5b-2827-404d-8a51-6e8387e35b5a",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "4c73a142-c962-4fc8-8e1e-958fe1803ba2",
        "cursor": {
          "ref": "2e398f31-e616-4e35-9105-842a35ed3c16",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1a785bb6-1a0d-4e64-b0ca-169f26f6aedc"
        },
        "item": {
          "id": "4c73a142-c962-4fc8-8e1e-958fe1803ba2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "154f69be-879f-4dc4-938d-5647fe2d56ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37516ca2-ceab-41ef-a863-b893c42c4ee2",
        "cursor": {
          "ref": "6d137b3f-addd-4b80-b73a-094c3855d379",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6ee006b9-4ff1-4910-88f5-6b1ea3ef2621"
        },
        "item": {
          "id": "37516ca2-ceab-41ef-a863-b893c42c4ee2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2d1f014d-e761-4301-9ccf-09bf15165d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa1882f-5ee6-44b5-ac1d-8a3b2a7e808f",
        "cursor": {
          "ref": "d04e9d9d-86cd-4efc-a9d0-ece73f30a7be",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8cbe7a99-38bf-4f21-b955-b2330d2f9f10"
        },
        "item": {
          "id": "dfa1882f-5ee6-44b5-ac1d-8a3b2a7e808f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cacbf344-6252-45da-ad30-fb72c5293c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f21fe39-a478-451f-b87f-48dab7b3fb24",
        "cursor": {
          "ref": "1d318cdb-e43c-4462-ae9a-5e5d9e2fe3ce",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bdc6c7be-87da-463d-9895-f9adf35e38d2"
        },
        "item": {
          "id": "7f21fe39-a478-451f-b87f-48dab7b3fb24",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1dbf62a0-03cf-4bf8-9843-7ae554892955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b11c4cb-7d95-4652-89d9-fb4ad48f6ea4",
        "cursor": {
          "ref": "26b0c355-0529-45c8-bfd7-454cc8b63dd0",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8b788828-af20-41c2-8ecb-480a85fbd73e"
        },
        "item": {
          "id": "9b11c4cb-7d95-4652-89d9-fb4ad48f6ea4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "256abcec-383d-47cc-98b4-8dc208dca7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6d5f83-1df5-4814-bb9a-898155634925",
        "cursor": {
          "ref": "070b60d5-77c4-472a-bb35-0cef8fd70aa7",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "305b719d-8750-4a25-9fba-552facfe538f"
        },
        "item": {
          "id": "5b6d5f83-1df5-4814-bb9a-898155634925",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "706916ef-0344-4e1f-9ee0-fa9f6f833727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f119665-2de1-4fa8-b574-9d7c345ad89d",
        "cursor": {
          "ref": "2a2bac5c-a64d-425a-9d73-5678e50e08ef",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1a2c9cc8-3743-4ef9-94c8-333d98ac1b7c"
        },
        "item": {
          "id": "3f119665-2de1-4fa8-b574-9d7c345ad89d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "573330eb-2cec-4162-915e-fc8201db4cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f93415-84c2-4e80-844a-feed54284f28",
        "cursor": {
          "ref": "bf940394-51d0-43d7-98f1-97f575f72003",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6371a360-cb3c-4afe-9304-cddd337d2c15"
        },
        "item": {
          "id": "b6f93415-84c2-4e80-844a-feed54284f28",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5ceb22b4-4319-453f-94b4-c96b2222d73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5184b02d-8178-49a9-aca8-98c5c078e664",
        "cursor": {
          "ref": "7ee7940d-1743-4279-903d-05bea91dd612",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "de39e6a7-5f41-439f-afe6-d5cf66143f6f"
        },
        "item": {
          "id": "5184b02d-8178-49a9-aca8-98c5c078e664",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e855c93e-47a7-47bd-ae05-1d821c4cb7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e451d5-09ed-467b-ac91-240035a0de9f",
        "cursor": {
          "ref": "5991d48b-eb75-4d3f-8a40-209f38e4cd9d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "46975ab1-152a-4885-8f97-2c9e3144877c"
        },
        "item": {
          "id": "d5e451d5-09ed-467b-ac91-240035a0de9f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "619765c2-01b7-4511-bb67-d511df621b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f3b4dc-3d26-440d-b67d-b93b59b1f9fb",
        "cursor": {
          "ref": "755695a3-ddd9-46d6-8acf-7eead3333488",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5787afce-d54e-4e12-ab93-7d00c1be0b00"
        },
        "item": {
          "id": "a4f3b4dc-3d26-440d-b67d-b93b59b1f9fb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6e6220ab-d943-4259-a8bc-4c62eed2b898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b6e17f-f9ee-40fd-8bf7-4a357a984358",
        "cursor": {
          "ref": "5d6a7da3-d62d-42a9-a471-04924497076f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0c9e4e00-dd52-4e8c-a695-f84a38f8a7ec"
        },
        "item": {
          "id": "25b6e17f-f9ee-40fd-8bf7-4a357a984358",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5636b631-ef31-4002-b82b-6c01054c77f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6eaa5bc-180c-4e68-92e9-23918f6cbba8",
        "cursor": {
          "ref": "97a00034-6d48-4041-b63f-954f3b0a8371",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "80edb85f-22c4-436c-a1b7-f6ed4e5446f4"
        },
        "item": {
          "id": "b6eaa5bc-180c-4e68-92e9-23918f6cbba8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5e1e67f8-e563-49de-8ace-4af533f78ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076e1ebe-9cb5-462f-a5fe-b2d45938c502",
        "cursor": {
          "ref": "d88e919d-008b-4948-8f3c-3c6c0eb9a18c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c5870afb-6c1a-495e-9ada-308c7133d5a5"
        },
        "item": {
          "id": "076e1ebe-9cb5-462f-a5fe-b2d45938c502",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8fc5467d-e33f-418c-8180-942d5661fbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea88a0dc-a9f9-45e2-bcef-6d7bfc275021",
        "cursor": {
          "ref": "aa092b03-8fee-4dd5-8f27-5afbf28b634b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "26a1971c-9e3b-4a9e-999f-c97707240b2f"
        },
        "item": {
          "id": "ea88a0dc-a9f9-45e2-bcef-6d7bfc275021",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0fa00e48-c541-4aa7-bd67-755cec6de49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58efa72c-1743-4354-b5d7-42fc8c6603f5",
        "cursor": {
          "ref": "30b0717d-3f1b-4f08-9b49-a9d927a14dd1",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a4480367-eb91-42f1-beef-9d0b8fe7fccf"
        },
        "item": {
          "id": "58efa72c-1743-4354-b5d7-42fc8c6603f5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7c9dd95a-faf5-42b6-abec-65f9f9e9d36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74277d9-b605-4c88-829f-4e75657d4d74",
        "cursor": {
          "ref": "6737e9d4-5d50-41c6-97bc-147394d52e5f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6e6e49a7-f584-428e-8d85-640bf2e82efe"
        },
        "item": {
          "id": "b74277d9-b605-4c88-829f-4e75657d4d74",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "56f67946-d296-4d60-878b-687b7768eb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf71e9aa-9cb5-4074-b63a-2955950571aa",
        "cursor": {
          "ref": "a176df4e-92ff-479a-ac39-39388f2a84f2",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fb5155e0-c56d-4a07-b65f-a0f8ffe2fed6"
        },
        "item": {
          "id": "cf71e9aa-9cb5-4074-b63a-2955950571aa",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c673858e-f0f1-490c-8cf1-2c0a0189858b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfcc9d8-f6f4-455d-ad76-f2cf3fc44a7d",
        "cursor": {
          "ref": "9ebfae9f-2f63-4db5-ae86-3fb412855eb4",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dde20047-dafa-4e6b-9f0f-f5e79528580b"
        },
        "item": {
          "id": "7cfcc9d8-f6f4-455d-ad76-f2cf3fc44a7d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e31baf70-337d-425d-91df-7cf86bae022f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ac6f7e-0af0-4755-bab4-936830c60efd",
        "cursor": {
          "ref": "c2a0ffd6-c5ce-4d08-a672-aa42edc4da32",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9108598d-4383-4d8b-9a47-eaa1eb8953b3"
        },
        "item": {
          "id": "a4ac6f7e-0af0-4755-bab4-936830c60efd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3cc41059-3a19-43d0-b9c3-b0f92b9bb481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bb3690-fd4a-4aa9-a7b1-aa1f8aa58b8f",
        "cursor": {
          "ref": "36587a0d-b750-4ac9-b020-ed64d6d08a7e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6c5829b6-c680-43d4-b986-22ac9442a64b"
        },
        "item": {
          "id": "a2bb3690-fd4a-4aa9-a7b1-aa1f8aa58b8f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c49037a7-1edf-42c9-b7f1-c0a13156a7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217d5f31-ca25-4832-8c8d-bb3e053c016f",
        "cursor": {
          "ref": "ca5b78f1-c318-48c0-9140-0ebe7fe7b749",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8fec3f9b-1797-42a7-a184-d8853db6a102"
        },
        "item": {
          "id": "217d5f31-ca25-4832-8c8d-bb3e053c016f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "969ab75f-945e-439a-843d-c69adf0a053b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb9e6b3-01c0-4015-8b47-68184844bbdf",
        "cursor": {
          "ref": "47719578-2b1b-48c0-af26-0e7fbf0b848b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3d3910d0-1692-48d5-b676-3362667c0b82"
        },
        "item": {
          "id": "5cb9e6b3-01c0-4015-8b47-68184844bbdf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "619c9858-d1a1-4c52-93d1-41afd5d84c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c8cf66-8d51-4841-96ff-01bde800640c",
        "cursor": {
          "ref": "980bb742-89d9-4441-9a9d-372221d1b71d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7eb325a6-f227-462f-8b05-de9e38bc2b6a"
        },
        "item": {
          "id": "58c8cf66-8d51-4841-96ff-01bde800640c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "85384422-f020-4aef-b999-9e274d2db3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3c0030-b3b2-40d3-a427-585a9d5078cb",
        "cursor": {
          "ref": "4739354e-0b50-47c7-9615-156394e67e6e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "39caf178-a5a7-49ce-a256-680fa6480055"
        },
        "item": {
          "id": "5b3c0030-b3b2-40d3-a427-585a9d5078cb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d4fc156a-cc2b-4fc4-9fc6-b96432a5d260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586bb075-358d-4814-b1ca-5ffde1e255a4",
        "cursor": {
          "ref": "8a0e9eb8-6a28-4dcc-b085-cee25ef23cc9",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fc25c2c1-8cf2-4b4e-95ff-ff69ce75f3ec"
        },
        "item": {
          "id": "586bb075-358d-4814-b1ca-5ffde1e255a4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4944bac4-0fb2-4dfc-8218-761e613fad63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ac0291-ed6a-4cb2-bfb3-b7207d39ca91",
        "cursor": {
          "ref": "fdcda1f1-6f37-4e94-91af-ea0ef79a0e7f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1d6f5b5e-6dac-4d98-ba51-424cf7b3dabd"
        },
        "item": {
          "id": "d4ac0291-ed6a-4cb2-bfb3-b7207d39ca91",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d6f27ec6-b77f-4b32-898d-668d83b479ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054a4cd6-8028-4185-b740-8ed7a95ec473",
        "cursor": {
          "ref": "0d365fc4-a9c1-4d68-beb0-419d0741b00e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c601919c-93a2-4fb1-8020-d11c0dedfc50"
        },
        "item": {
          "id": "054a4cd6-8028-4185-b740-8ed7a95ec473",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "da7e717e-fc91-4287-9980-d419e20115c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8065b7-98b8-4d03-9403-546c36e47b58",
        "cursor": {
          "ref": "6e299754-ff51-4c6e-b942-b7f3a2ff2956",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "39c791a3-13f1-4b6d-a604-2558bbcb26ef"
        },
        "item": {
          "id": "bd8065b7-98b8-4d03-9403-546c36e47b58",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a7c5f3a8-ed11-4677-947f-e7132748441f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20acc249-a6d8-4dc0-a4f8-e529cb6f8385",
        "cursor": {
          "ref": "61a4e1b2-ae0e-486d-bf8d-095743e30aef",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "517056ca-1aaf-4ac1-8e5f-75f6a5baf09b"
        },
        "item": {
          "id": "20acc249-a6d8-4dc0-a4f8-e529cb6f8385",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fda0f439-95dd-4cdd-830a-a6d5190153e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babb4a0d-95b1-428f-8023-e8344b19d01b",
        "cursor": {
          "ref": "df76fe51-8462-44ef-8fd8-24b59ca40f1e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2b3572a5-6fe4-4a73-a327-3719744bb8fa"
        },
        "item": {
          "id": "babb4a0d-95b1-428f-8023-e8344b19d01b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2240828c-6ac5-4b90-aec9-c7200093b5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d84c4b-ab41-4581-b22e-e1e3f26a9cfc",
        "cursor": {
          "ref": "dbab5352-34a4-42fd-97af-1ea2abdd528f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "caabadfb-6405-479a-a4b5-c3f179c95a65"
        },
        "item": {
          "id": "54d84c4b-ab41-4581-b22e-e1e3f26a9cfc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "98dcc771-10c7-4612-8ccf-63581b6414a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b1b2a8-0ad9-49bc-8670-6d9f75887ddb",
        "cursor": {
          "ref": "fef7efe6-15c2-42c8-9d1c-bd976c44d87e",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "21d28d22-6ea7-417f-8bfd-5d4dc262fb95"
        },
        "item": {
          "id": "48b1b2a8-0ad9-49bc-8670-6d9f75887ddb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e2fc432c-2b05-419c-af88-1f014a8c8af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74d8b32-1a21-4881-81bd-693090a0d907",
        "cursor": {
          "ref": "bafb4423-8342-4ea7-8198-fccde17d7cc1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "018027f6-0717-4e70-a0a1-e45d8c8492d9"
        },
        "item": {
          "id": "c74d8b32-1a21-4881-81bd-693090a0d907",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "12d9bafd-d262-461e-b1d0-72bbf65ce09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d9724a-646d-4b46-8aab-0aa6a1d57c97",
        "cursor": {
          "ref": "eb057a4a-63ca-41e3-a211-4102dfdc02d8",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8cfd1dfb-b0c4-48b8-a906-135929bbdf36"
        },
        "item": {
          "id": "a4d9724a-646d-4b46-8aab-0aa6a1d57c97",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2782a002-eaae-4812-9558-96d71e76cb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d4da5f-050c-4502-9737-264ffca6c2b9",
        "cursor": {
          "ref": "f45ade4e-5257-4d16-9681-91843272df9d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a684f0f7-c9ab-4a45-be4f-e7cdbacf306d"
        },
        "item": {
          "id": "40d4da5f-050c-4502-9737-264ffca6c2b9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2de0becc-f1a4-452b-b3d9-6b44ec557374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1e2972-3492-4508-b2c2-80d5ea36760d",
        "cursor": {
          "ref": "a7b969e0-92a1-4d5f-b48e-498e5cb36d5d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "41c44f3b-1d6a-496b-b3bf-1e93a60de997"
        },
        "item": {
          "id": "3f1e2972-3492-4508-b2c2-80d5ea36760d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4f52d620-1afd-4347-ac82-0329ff73ef8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f60d25-19fb-4484-b0bf-dbef95a73769",
        "cursor": {
          "ref": "452b59b7-aa5f-4df0-af5e-f4d3b5d92e41",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b1f89845-7077-4b26-9b8d-5d38ce520ed0"
        },
        "item": {
          "id": "a4f60d25-19fb-4484-b0bf-dbef95a73769",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "64b5b6a9-d177-452f-b6a5-7e118aa3fe9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8ebc11-a096-4d15-9dfb-83049edecd06",
        "cursor": {
          "ref": "b893a1c1-89f8-402a-9c3e-05c8943c3beb",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f7e180f5-dac2-4937-9491-5478d3ebbec4"
        },
        "item": {
          "id": "aa8ebc11-a096-4d15-9dfb-83049edecd06",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "00e3c729-66a1-4275-82b8-1892d7942aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14826a5-bac5-4cfc-82df-818ca3f60485",
        "cursor": {
          "ref": "b2a166ba-7b52-469a-8421-0ddb2a5c2dd7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a68a965f-be0b-42ee-a9ae-02af6f809e31"
        },
        "item": {
          "id": "e14826a5-bac5-4cfc-82df-818ca3f60485",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "72886326-1b95-481f-b455-c548ce5bb040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7033041f-390c-4d2d-a088-b57e395ca81d",
        "cursor": {
          "ref": "c590cb13-7cf0-4f31-97b6-4dbbe378dcb1",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "814686c0-e234-4628-9989-7fbc7b50f2e5"
        },
        "item": {
          "id": "7033041f-390c-4d2d-a088-b57e395ca81d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c4eb5be1-0990-4607-aa0b-6ea17b52a8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d39642c-8882-4423-bada-62f5199045e8",
        "cursor": {
          "ref": "a87f36d8-6650-427d-9427-c85aa757f260",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "012ad156-bbee-407f-bb4f-0d5e692853b2"
        },
        "item": {
          "id": "9d39642c-8882-4423-bada-62f5199045e8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7235092f-425c-4f4c-a6c5-818d8a2f91b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fc112a-d52c-4006-807e-51ff8dbcc362",
        "cursor": {
          "ref": "daaf178d-c038-473d-a01d-ec1b98707fff",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fb30e385-5481-4c89-823a-358cd6e59aea"
        },
        "item": {
          "id": "01fc112a-d52c-4006-807e-51ff8dbcc362",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "166deb53-87ec-41d3-9746-09b38dcddc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b438883-d410-4393-9131-18a1f0f22b3c",
        "cursor": {
          "ref": "1a43ee10-1684-4d04-a754-b6e6ef2670c7",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "10b67f11-1062-47f8-9812-926110b57a8a"
        },
        "item": {
          "id": "0b438883-d410-4393-9131-18a1f0f22b3c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dd2123ca-6603-4a9c-a6a3-7b3d1e09a172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec71d01-fe04-49f2-a654-e4df826ede0f",
        "cursor": {
          "ref": "a4eb737b-766f-4b17-97c8-855c76bd8573",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d027b573-216f-4d51-92cc-a5749517ec05"
        },
        "item": {
          "id": "2ec71d01-fe04-49f2-a654-e4df826ede0f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0283385c-494d-49c3-8759-17a09142e179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c6e22f-6317-493e-b0ec-11c3138fdd2a",
        "cursor": {
          "ref": "bbfe79ff-3855-44e6-b880-68b55e4433c4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b5d1c76b-cda8-4d3a-8d90-a83d8f42789a"
        },
        "item": {
          "id": "d6c6e22f-6317-493e-b0ec-11c3138fdd2a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9bd85a8f-1530-4e97-abc0-fe2c43a24eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6236c85-7222-4071-aeb0-face5c1ae312",
        "cursor": {
          "ref": "ec05a27c-cd3b-4158-abd0-b4a1f2e5c4da",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "735e3be1-730c-4e5b-8767-b1b5c19bba65"
        },
        "item": {
          "id": "d6236c85-7222-4071-aeb0-face5c1ae312",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e5a6fd55-fb1d-44ae-9b1c-69ea84e609d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd31d00-4f3a-4fb1-8917-dcab2d5d08db",
        "cursor": {
          "ref": "59884e9d-3cc3-4bd8-95cf-4c3b4facc334",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "583c2bd0-b7bf-4a40-9c7a-8d8dbbc38cec"
        },
        "item": {
          "id": "9cd31d00-4f3a-4fb1-8917-dcab2d5d08db",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "58dfb289-4a53-4a25-84fd-903998e4def3",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "71764a92-7902-42c5-a04e-53d8cf629d86",
        "cursor": {
          "ref": "aef90453-978a-4602-823c-63f68163ef53",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e6e2c277-05ba-428a-aaf6-a732d46bb37c"
        },
        "item": {
          "id": "71764a92-7902-42c5-a04e-53d8cf629d86",
          "name": "credentials_verify"
        },
        "response": {
          "id": "462d1461-4398-45b4-98a5-16f9378a350f",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe10c0c2-b3ce-437a-bfae-87d8e2da0c5f",
        "cursor": {
          "ref": "723f9153-3a66-46e6-b652-da762e6d3d22",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f7a7f7f8-f799-4062-9994-dd9064438d8b"
        },
        "item": {
          "id": "fe10c0c2-b3ce-437a-bfae-87d8e2da0c5f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "26579227-4268-4092-a691-c051487f840f",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7a2278-1212-4c03-b40f-50bdfccb20d3",
        "cursor": {
          "ref": "7c3472fb-b3d1-4a65-a422-51e0aacb5891",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e96214da-2011-4652-b7cf-8a08fcc755d2"
        },
        "item": {
          "id": "7f7a2278-1212-4c03-b40f-50bdfccb20d3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eface32f-6dea-4fef-ba15-1829234aa049",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7a2278-1212-4c03-b40f-50bdfccb20d3",
        "cursor": {
          "ref": "7c3472fb-b3d1-4a65-a422-51e0aacb5891",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e96214da-2011-4652-b7cf-8a08fcc755d2"
        },
        "item": {
          "id": "7f7a2278-1212-4c03-b40f-50bdfccb20d3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eface32f-6dea-4fef-ba15-1829234aa049",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8510de0e-fe97-47e0-aea4-29a4478227cb",
        "cursor": {
          "ref": "bcffcb67-e700-44b1-a6ca-2f2440bbb73e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "caa65ddc-3c60-4dd5-9ad5-27e1708f3457"
        },
        "item": {
          "id": "8510de0e-fe97-47e0-aea4-29a4478227cb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bfa60ab7-c5c0-4b9d-a99e-243b304498e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f96e67-d5b3-4f4c-b124-218b3bd166b0",
        "cursor": {
          "ref": "ace31181-b300-45d2-964a-f1c8489ada55",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "83504715-faf6-43d7-9262-cab3bf37df5a"
        },
        "item": {
          "id": "46f96e67-d5b3-4f4c-b124-218b3bd166b0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ff28ac19-eae6-4986-bf1d-45fd0358663c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}