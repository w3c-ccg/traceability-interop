{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f1e86f94-bba1-45af-af36-2dcab3802002",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9ade39d8-5851-4467-aa6e-bc0d2013b54c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2894aa3-151b-4712-b655-6ebbd356772f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "703f775f-b326-4f62-9e11-0a46d85bfd3b"
                }
              }
            ]
          },
          {
            "id": "a47a82f6-5198-4917-be72-90ae3caccf65",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a26f9ee-b19d-4ac2-ae4b-a52881e240b5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "252405de-dae5-4ee6-911c-a4bc58cec529"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "31c5ec0f-1041-47ff-8cad-68bbf0abba33",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "734c7e8b-8c50-4bbe-bfdc-1c94d41e9376",
            "name": "Positive Testing",
            "item": [
              {
                "id": "546b3a0b-52e3-4b2b-bb85-e3f6cfd3caeb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca80b5dd-5787-4008-8706-b5813ca46367",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "424e019d-f224-4014-bcea-db300fddddea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffd33140-ad8f-47e3-bdba-e50381ebe54e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "756ee2f8-9ee4-4131-a853-597726714a7e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0f59c6d-7c02-40f5-9188-cba97d5ecc3b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9011b473-a958-475a-8af2-c6ec191b3a2a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0a72860-a271-44ac-8680-8c2dab01a577",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9de9c4f0-bbfc-4f0d-a305-4d2572de1cfa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b690b8fe-b7e2-4cfb-8b03-bd219d4f8ab0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "966c1442-dec5-42f2-8313-d72d2f3f24e5"
            }
          }
        ]
      },
      {
        "id": "bef8d404-9c97-4f19-a84b-71dbcb596743",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d5db360b-6427-4ca7-89a6-d9f9d50ec1cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25e4d146-59c1-4697-997b-2458f3e146a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f05f578c-f9ad-4a5b-99e2-db4d42b625ad",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb848bc-2f2e-4e80-8a22-49558b2cd08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ade072b6-5e12-401d-b36e-16db3958babc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784002ec-6440-4ad9-a270-f3e0ec118497",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fd84d6-1571-450a-a2bb-0e46126a4ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25303ce9-a2e9-4b23-b599-2b58662e179c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89058ef-736f-435a-9dc9-30ba93408806",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a369adbc-9d2b-466a-a03f-e595f1bcef14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4716e0b5-c529-4d3e-a60f-fa785bbe1db0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67de0326-cdea-45e4-b4c8-f3f931d4ec6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1206d834-ef62-4b4c-9bbe-7dacf55cc913",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feed02f-bc50-492c-b009-433e0d285b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1e3d967-1421-4698-8c92-b8dd4c648d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c16df3-7854-408b-b1b3-5a60f6255ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1305a304-6bf2-450a-86ab-7d43f6067e0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4fecc8c5-2ee0-4a68-9664-e2cc96d29493",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06769759-929d-404c-91dc-f5dfc22c94a3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cee8b3b5-785c-4076-8199-215174b8ba76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "af979eda-f268-412b-be8f-8be7e01c2ce5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49e08f6d-ada4-4228-b3de-330dfb89a659",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f896780b-5883-4587-afd1-c1d9cbd9e6a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6a30d74-22a9-4fe2-9307-0f67dbe72ddc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5947717b-1084-4bc6-88b7-09f2b69e7f62"
            }
          }
        ]
      },
      {
        "id": "87625489-4c03-44eb-a269-2c4d32800174",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "73e6b6c3-1956-4874-a558-445288f28fe2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4492d91-eba2-4edd-aaac-0567bf19a652",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "997a5112-c7e7-45e3-9e9c-f29022655cc0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001dd7d6-8f61-4edb-8a44-424993085c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7c9915-368d-4751-9bb8-66426c03043d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb5f49a-885c-4177-9c2b-d9c835454f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6fae63d-9c2b-4e0d-8102-9e4ec962b383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c7c72a-1141-4f93-88da-e43f80ab84c8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178450f3-47cd-40c3-aaae-b8defacfc646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0887d858-26e1-4500-8132-dd1a7261ec60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485e7697-83c1-4c60-9beb-c7caf9ef6de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4dee732-8f37-41f8-b578-19b20073699c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a11f05c-4b8e-4803-947c-d620dcc84c14",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef81b6e4-29ed-4380-af7d-2bec4fffefdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7e7309-4103-4602-b16f-ed7f0495a0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f176b76-381a-47d6-84fc-c49c1f0525b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28aaba1a-b5b5-4b7a-ba0d-8f4e532ee621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40380a6a-8115-41f1-8dc1-27e8e485d71e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3e2290-5825-42ee-a9e0-e492ce2d1d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f1d681-076e-40f3-af83-c40b7a24b402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5e3ef9-f5f2-45c9-a130-59603492b488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d03f950d-5b9f-4a8f-97c0-5aa2a1e4b342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce98f058-3801-4eda-8f93-0f97d16493b5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202387cd-8e99-4686-9e2c-7a9ef42a3068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e395dc8-9314-4763-bb6c-14e831f2c0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2771ca75-3db1-4b5c-ba8f-080afd29ba05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ab9091d-eaf6-4ac3-8c18-865427690a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06af620-fb45-466c-a96e-1f6280abcf73",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9961307a-1abb-4a26-9e78-385fb5b1835d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2372be-2eda-47e6-9b3b-3be244b24f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c4e38f-9ef3-4939-b88b-91d802e3d3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b50d221c-6081-4886-8676-ae7c38bcc650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1c5bd3-e497-4d98-bccd-560e953ce28d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c36562b-10ab-4835-b989-79084dc41cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3340dd0b-91f7-4fb5-8971-1e425d0a1e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2457afc-49fb-4499-a2aa-02445e5a62e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af354271-669c-44dc-b679-bbd43a2443a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55be324-27e1-4e44-8850-4099fa6fbb9f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29468b7-b98f-4c8a-b1c1-b4ef302b9694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081495c6-8831-4ef8-a725-0b9de762130f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d87681-7312-4d1e-a9b2-14ae59f3b495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d84ad92-8658-445f-8ca5-07ccda2545fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddba24aa-9616-4e59-92d4-6138ad3a7ed3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aec28e3-31b5-48fa-9416-27c11241c9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb670ffd-cdbc-4cb3-84da-7904130aaec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c9acb4-f131-4255-b71e-66eb1ba17432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc0d4f91-6841-4d4b-85eb-e6ce33ccfc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5726b8e1-2a0d-48be-9a8e-f644ce7998dd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bbb3b0-b23b-4efb-bc85-fab458f85e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b854aad-5c84-4dd0-9251-bf7ed6dcec1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0f269d-3282-4248-8a34-95ff1213dd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e5c4a9d-afe3-49ae-a581-28424511d6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4333077f-c01e-4a52-a03e-c7bcf287dff5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d57e681-c5e4-490b-8eed-7edec22943df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57004720-7f2e-41ed-a26b-96410edeec22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cbf738-d8a2-490f-a107-b2a3c23dd635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9ae2274-f0b0-4a9b-9beb-5da6a533a054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33031eb8-c1ac-4b41-bd1a-07236b053065",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b05799-4c58-4e4e-b0c1-3aeccf0879b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3f08f6-7881-4c0d-bf47-07832a34ad1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b462b3-5d61-4d5d-891f-6b7a05e9cf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c218d42e-438c-4d5e-b32b-3bee81dcb1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890eec77-48d9-4d4d-9e95-966c43199678",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e195c0a4-fa98-4aa0-b722-054edd7dfb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6666119a-0fd0-4484-a363-e84b388d7eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ff53a7-d08e-46a9-9ab7-37025c5b2642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e11f6a59-7355-4b6a-9878-9138e34b9f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625c6cb6-0f20-4a54-bab4-099c37406158",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daca24e-867c-4ae3-ba5b-f0c7bea00084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60fefec-ae16-4e80-9de3-c76b253bba51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445d0cdd-9e93-43b0-aeb9-112f0d8ca0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1f741fb-98c7-428d-8dad-91ead2d1b50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff1e578-fe34-4c2e-97ea-182794d3a04e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72374fd6-b3bd-499d-a50f-93acfc0fdc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35321af-f7b0-4c04-8359-0f361b7324a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238443d5-2864-49d1-9205-c2538bc339e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5006ac86-bed0-42f5-87b8-8e1d173b9f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bd9688-ac8c-42ab-ae85-1f0b0191c907",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c68dde0-c11a-48ba-ad45-ccab97b93c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e806175f-0aa2-4d41-a21e-7095c2c42256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee9df08-d5c8-430d-a7c5-c1da49ea50c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ba99e7e-7c99-4ffe-978e-e5b09db9a8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49da519c-def9-422c-aea9-fa2b781b9ba5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f377f2e8-9057-4f3b-9521-db9969b252bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac937c0c-4074-4482-8100-f60094f2532b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca17e69-548b-445b-bf10-e3292342b8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfbe5a43-3f0e-4666-aa96-9000c70d96c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e0fc19-50b1-4243-af41-d36b298e761c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f4c04b-a14d-4848-bdee-21005d4f262b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8419704-e3cf-413d-9c24-05c4acd2a098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feeeeb47-7b72-44e7-8957-98dc2dd8cbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "50a73060-98e4-4079-87ca-4069e776bc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f424c888-8cad-463d-aaf7-9aa760c962fb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f428948-70d0-4f58-a996-e7b8a283e9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b7c19d-dcb8-4539-bddb-e13d12811e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9516fed-f67f-4f51-83c5-90e0ec86cf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa063888-b122-4645-a646-88a047aabd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd62ae2c-0a1c-4a6e-9339-4dbc489663d7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92368216-ca34-40f2-aceb-50c6e2f71c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e01a97-dc3e-4172-b7d6-031dc811c08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328463b0-a730-4d30-9989-d876720a600a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1154d6-dffe-4646-be44-afda82360d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66ecca8-179b-457a-8075-e95d65538e57",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c0cf7a-c8a0-433c-99a7-6bbe1337c427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d64d87e-31d6-4a1b-a4aa-43dc1b71491a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f956280-daed-4e59-a282-72b2d129f497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffd6930-87a8-4323-ba89-2ba77ad8c359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50d15ab-1d40-4da0-a3ec-410c6a86858b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf076ba-5eae-4766-91fe-7429f54e9183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7b03ba-012c-4316-a6ba-aee27f8e6fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7d8834-b183-4310-95ac-13131d3f5278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36207536-4dba-4049-9e40-2860b5f2bfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2517b0-0527-415e-91c0-e0c759330b97",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a3ca05-2891-462c-a711-7f3f913e75cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e5ec31-1da9-4308-9f6e-678f956d9856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa42637f-a48c-4a4b-bf7a-acf65bd57703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfc947b-3d64-4a4b-9074-976b06dc8f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c80249-db1f-4c7a-aea2-45ed2efe1837",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6135900-f2d0-46e7-b14c-838ecdd7b24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6bd7c2a-d994-423a-811e-e6643b401066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b19813-f120-4540-adb7-33310ab6fe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "707eba56-8a7a-49fb-b7cb-aace832a1656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f416b190-5164-4215-b3d1-d779a566363d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb080d4a-0cea-4413-9753-47d662fcded6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c62d071-0c4c-4294-bb22-6d20c65f8d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd0eec7-5db7-40f8-95c0-06bf90fdd171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d3f5fd-657b-4ac9-94e7-c4e35df4ab7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8311d452-9315-4cb8-b971-58b1dc7f7b87",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804683bf-fe9a-4447-b706-e84ff8045d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ddeb660-4531-47cb-8e3f-25598b9e51fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68df3c5-49a0-4412-9153-463e772e5cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3414b2cf-ff24-4bdb-a658-ef0d8de8e2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191f071c-f298-4ab4-8ef9-cad02c13aa9e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a247bb-ad7e-4236-9048-c56cd59eaf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bafc93a-56ea-4ad3-aaaf-9a92ad05dc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c67b49-4cfc-4801-bc49-a4706798e530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2a1507-de09-4680-a120-0a49c4792380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41aaabd-3af2-4886-8703-b3d71dbed000",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e286c62-adba-47ab-b3cb-a40b25d7afef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a123414-ec58-4dce-8bb7-66ebf1d14c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eecf543-f45c-45f3-9666-b602e6f90bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5430ea10-3a0c-49e7-a9e3-b15f14729d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd64bb0f-6a78-474e-aecb-fc9aca940900",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f66f3cb-b93b-4cc5-8120-da84a9dc0774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a2fb7c-e0cb-4b6c-8d01-97a4ac8185d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c862e9b3-e2ae-47e3-ae9c-aafd43f8066c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7914962d-3177-4612-b971-6426407b6736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c12549-f603-41dd-ad42-2e14c419f1b5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653bce58-246f-42bd-9796-c19f8aade67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a59a106-1eae-42b0-b1b4-322fe5b3c472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2538af-fb82-43c3-8d40-97f49a6fe509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "97eae829-6a71-479f-99aa-8aedb3b83344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec5c605-6de0-4e56-af1b-5c6f6edb2b0d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf2843f-2568-4c7d-83e3-5f59ea845021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881abdb7-6327-4d74-966b-1c500ec4623c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ac59c6-8ef4-49f9-abed-83c4b4b3de3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1435cdb-b5e6-40a7-ac28-8ce2c309a3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94de83a9-303b-40c0-94ba-9c26754a7d3e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d7baf1-b54c-444b-b287-c5af1bd74ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ff8e91-dcec-478d-b3ff-a253aa1bd856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d053499-7885-4244-a51b-3827030c7e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a17c7e30-3260-46ad-9817-56877515ba22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb48454-a907-4c9e-8b7c-e3bdf53631db",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56796d9-9ea0-4655-9eee-f17d6cb57079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5774d3be-9fca-40c6-a1ca-d7fcb48da901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f2e803-d988-4d52-b3eb-88ec95ba4aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d92619f4-f546-4cd4-816b-6b9a67dce4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb68b3f-8462-4c6e-9060-dfe4c63c7efc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7f1ef9-afa2-4394-9fd7-29691a8211a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d261622b-09e7-40fd-ba38-ad05e2c6e68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7e0934-4804-474e-a74f-180e5d9c923b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b026704-e5aa-43a8-80a4-41b5e6b31bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a981e21-6184-48ff-bc32-3d96925816cc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ae9d8f-0c0b-4384-b001-428afb54fd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b87ffb9-8bba-4537-bd32-b49f9fe4614b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9a78ee-2a16-477b-8ce5-9325e74e0e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "901511aa-37ca-4a87-ada8-0368c6860c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c353d5-63d4-4ce4-97e2-f8dca4fbf602",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d65de44-919e-478f-961e-2618613b72ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f04a6b7-18b3-42e8-83e0-35ee411febbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec492823-ff8d-4897-b2d2-dcd7ba7e0239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8165eb-7718-4d6b-9832-a1ee5a0459bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc86a66-88db-4a31-9024-7a083f8b02cb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3656870-2dbb-4b3c-a102-28c3e8ca702f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b697a4-9e8d-48a9-9828-b64f7777fa70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f878c1d-5873-41ca-b388-9fdbeb0e52b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0691fbde-bf99-4960-97f9-d1ba86fbd265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be938782-6054-4df6-ad24-47a60a5d7f73",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3c62f8-be4b-4c9b-b9b2-aa62dcde31bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acee334-f964-4592-a57d-c27b7febb779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9931d252-3611-4f1c-be1b-4e38cae1e0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba57c76-33ab-455e-b88b-39aa1542243c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a552f306-0072-420c-94fd-738e2d6b8f58",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17324a4c-6966-4070-8775-7023a7fa4a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4ddd64-e59e-4332-bdfd-42e7af1027fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728986db-f17c-4c1b-875e-c33932378ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a67938c-a398-4157-9f09-5e2156c1ccfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9ef446-18a0-4ff0-8059-37aae1f9ae1e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c29e111-5c85-455d-805b-6479125a40a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fab74d6-76f8-4015-9c36-0396dd57d579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2839e575-97ed-4905-9eca-b985c19e9af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1305a6-b411-413f-ac1b-8b6331dff100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bde7d8-3658-4a2a-a5b9-b6446ca655fb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdf6745-bc7d-4772-81d7-8757d0f623a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb2b6b1-9206-4d40-becc-b2ceb8ccefe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee99693-8957-46fd-bce9-1d7914b77a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a78aff69-ef57-4e3e-97f3-e36cb2f20fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2f7610-9bc5-4b54-8fcc-82bf8e878592",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7679279-2b55-4e0a-97e4-c90baee6e7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab33a2aa-7d40-454f-89d7-c9762668dc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdd2d10-ce8f-4113-91e2-fc72c99e5359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "982a435a-4879-443d-98eb-2fc849a0e51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4364c5be-8fd4-4157-9159-17904d9cbe08",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e10ac5-2f2a-4645-8d21-fc1377fa4d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a736594-b8a8-470a-bb2b-29ce4b50e3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39c3a94-d98b-4d08-9603-817b60fff579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe61834f-3221-41cf-a0b9-7706299ed0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fd8487-035e-4571-ad73-55ab4aa04697",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af9fc4b-b74d-4792-b02a-65bb5fc89d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5325089-7bdf-4e04-abbc-457927cd068e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95cb870-e915-47eb-9822-f9eb41bb9e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "def90949-dad8-4b07-b066-d2b9f784a9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fbdaf5-befe-4612-81fa-6a0bbc5fc0d5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c704a4fb-855c-45c6-a075-4f0325e6cb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cca17ec-533b-451b-be57-bf1e2c2aed02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662f15fb-a4bd-456d-b9c3-975c8d22a483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "393857dc-0b9e-431a-9575-94aef3b97ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f18655-696f-4737-bbb6-ab6a54799f7a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe74c08-9e9e-415f-9c8b-c9b3fc1c1a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92800bb1-6573-434a-866c-b5a115a08779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1e8630-8f14-496e-84a7-5faad66e166a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2ed36a-efb4-4bf4-a6c4-81a64dd14cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c710521-6ce9-412d-bdfb-d65f57312b06",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb63344-bbcf-4e6f-a3dd-3fa4160cd742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad5d869-1c81-4c5f-9d55-9ec4b2db3727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c082e418-7ca2-480f-ab21-66f9903f7596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66426bce-3937-4a89-b042-5b44b43194e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d0a6bb-a595-421c-b77a-2121078a62bf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7ec85f-2649-4fdb-bf00-d22d5d864506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443c83b7-ee22-4783-8877-c9062873e753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56e731b-c6c4-4a55-b01d-11d6fb493f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93db7fac-a929-4725-9251-ec210a12f587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bfd978-d686-41ff-8e15-6176af73a488",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b712ed1-39d3-4477-850f-78735800bb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbd556e-6559-459e-b532-cf8f113bc8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628444be-3d34-4d12-bb81-d38ee9c40c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b984b8-3128-4f84-9a88-74a24da34f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13821f17-16df-4605-b451-8ed427bc5cdf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb068722-fd84-4558-a85c-69c689e17118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df26cf5a-dfd3-45d3-bc65-2672fb4cf89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b76b07-63a6-4b71-966c-e83a9830df8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4e0bef-6c86-4501-8660-1b98d7ef0c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf096e2e-c014-48c8-9f8e-a1e2fe5931c8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd0395c-ddff-42eb-9c03-d78a2e1b0190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0094ad3b-24d1-49fe-b329-2f62d31f7256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29ff725-6a98-498a-b119-7565efa29ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "02ec7635-8938-4c85-83bd-39b697c354b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc40971a-b2bf-48cf-a84e-731b8a947e7d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05089b9d-3eef-4017-8ae0-4212d236eafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78189c8f-325c-4865-a2f9-53395344859b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28412136-7726-4a18-9a3c-c7ab8e71ec7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05fdcfb6-df36-4777-8092-20e9d1d4eb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a026493-fe29-4472-86dc-a423a9fc78c0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbecee9f-7267-42e3-b796-72ac1fd184aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816d52e5-f025-497f-85a0-b29fa9001806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6170b148-88f3-4373-a87d-2f5efb5dd59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fccc77e9-4c2e-4fa4-84f1-f6d8d19d84b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe31111c-9249-4f23-a52a-6f18776bdebc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d911bb-67ed-40b4-9480-67ac8c58634d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfe422c-67cc-4a86-ad3a-cbb26bb18027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78435d3-7384-48eb-b136-bf39b4de82b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d37311-b9e7-4338-a198-99770eeb8ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f5cf39-f90c-4472-af24-7378e0bdd010",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9394bc19-a87b-4933-a3f5-69d7e8e20407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8f4ef3-09c3-4669-909b-d52983a44607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79579d17-7cb2-4dec-b59a-c8e3fa07e667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "223bff5b-0c1b-4d07-a268-fb961196c68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6c4eaf-ed1a-4b0b-9682-e8d54b8fafe7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03492700-e51d-49d5-bfe4-4d7d962234d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48eff35-edb7-4cd7-9f18-2f41316ba671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f182e19a-5b66-4a2e-87b3-e93193cf03de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8114ab20-fb4d-4518-97aa-1f6bfb9b5d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597b35aa-5acf-4df4-ae3d-153e454657c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dd2eec-4c95-4d5f-b5b0-37eeeb1273ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d312956-2cbd-4d30-8f36-6700df3543eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac942cc2-7ebb-474f-91f3-de74b99e8909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "04be8844-43ec-4b50-9693-a8ef4d41cb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123f1db5-f3fd-44a8-899a-512bfdf596de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b30b46-3109-4c7d-bfad-6390de673fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b52991-5366-4814-ad42-d8aada7cca43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a13c1a-2bb2-4395-b00a-d312095e9165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cac6265f-e623-4efb-a22f-12ca8683c80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf36f54c-f03c-448f-a0cf-377394a1142e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a6d03b-80f6-444d-a957-0bb0c6ba1811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f608e3-4301-410f-a406-ad6319c849d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e828b76-742a-4319-8432-81f943788b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bd49de-70d4-412a-bd56-710e9a91fd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5143e6f-742e-4f5c-938e-4f964faeff98",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad8586b-ff8e-4606-bc14-d85742013cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea4c168-6b64-41b3-9c30-a2bb11d00a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e162b88-3048-41da-b67b-f996cdb05f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "adbe039c-b596-4d22-95a4-b501b606801b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbabe030-599f-41b9-beb6-3dd88b820dbf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a298ee3-d923-41d1-905e-bb28f5731d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fe83f0-a75e-41c7-841c-359f4a38407b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1057715c-176b-42e2-9ba9-987e054ce734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "60a49170-b5e9-4d6c-8a25-b4f3a0ca5bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07898dba-9e27-44e7-b40f-9df8c1f7cde9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00f63af-b1f8-46e7-b7d4-e2376dccf961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c70703-9497-402f-b9ac-e529348dd6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db681bc-b2eb-43c8-b255-875994621dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa14c7e-c547-4fc9-833d-4aee30ec031f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a49fece-3fdc-4fa2-970d-41882e0912bc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1affb86-542c-4a80-9fa3-b985ff312473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd3911d-8fb8-43d0-a20c-0954c33b0861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44834db-46fe-4f64-8f18-c56f109aaf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "554bd96b-f61e-428c-bbd6-a7dd60d0a8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683a94be-5d98-47c4-be42-8eb645bf2763",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb269e7-1061-4314-b79a-f5bfb3b23be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948d9dee-f7d0-4e13-95c7-ba60814604d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f5f841-78bc-4e1d-9452-65d1d2cd9313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "737ae1b1-436a-4cb2-b23f-34e61b6e9fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9116e6e-af49-4547-a667-c30f96676b33",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97276c37-9068-4006-b889-df576e323200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d790b91-626c-4deb-8959-c5bb91d0ed93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f892b4-2f51-45de-9eed-6e0755e44abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9af217b0-84bc-40d5-bc7d-2e47b8a61439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efdc3b2-8bc9-4258-8cc5-ab703c489ade",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cfbce5-c497-4e48-a0e0-813827124e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509d2349-8e3f-43fd-8ce4-016dfd6b14f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a26be01-614c-42f5-bc5a-ef6e89e3075b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f78b0bf1-d984-44c4-a7a2-13e1491a4125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba455ef-9b22-4dec-93f2-49810e857fdd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e9e4d0-5200-4182-9fa6-4ae15e7bf29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d58109-19a5-44dc-ba48-df84d1510985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a86c1a-42f3-4817-927a-854f7e5e6878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa955c83-3b92-49b5-ba06-28e226996d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09063aa6-7bba-41d7-8c35-1787f41fc7fa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d65f87b-3a64-4c32-a8e8-f7f8464f5943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a057c7c5-44e0-410e-9864-314746794fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56284214-8a7a-478d-a227-8f82701596f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d48af56-5baa-4517-86c7-0a5ae817ea1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962fcd7d-5712-41da-97db-97c57068700a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06422acb-fc9d-425f-8430-8eff18c2763c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ba5910-8a4f-4ef2-91d6-f71ac7313287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5011aed-e456-4e3a-a6db-28aa84bd4fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc86400-86db-41df-bb12-251baaf4c815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae1949d-1681-4327-940e-a6492612c6c9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52b448a-004b-4cd2-9130-d5d8404d4919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5efd19-2b9a-456b-a917-deee27a13754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685b4ba6-f678-4e4d-94c9-f93f315ceb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb5e85e-4d70-4d44-9c40-a9ec6d3ad0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff86d4d6-25d1-43df-b644-e59ec1fc98e4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0a020f-d3b0-439a-9769-cb962a488210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9098cf3c-e20a-4d39-86e7-a8ad4cbae43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022cf0d0-407c-4f3a-b7c9-c1b57219bf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a879b2f7-16f6-4cb2-8ac1-c22b34d7c16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8fce02-69cc-41df-8973-6e42d346d6ae",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbf130b-99a9-496c-9bec-5645be67e63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33c46e0-c395-4707-a79e-f2dd33373ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8682c06-35b0-42bb-a12a-f85737ff50a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "721ef271-77fe-48ea-821a-50c93c0c41f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3376124-bb2e-4ace-aca6-526a9021a470",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b824eb07-0cab-4110-9475-803489b030b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be1e9dc-b954-4fb4-a62d-60dff2f2cf12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006e8097-a082-486c-9d0d-cfaf8b9541ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f19a2b-c019-4691-aa88-2e390ad89eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3b5fb2-7637-4b66-97bc-b6e9fde25033",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9698b3-29f6-4ab1-a77d-fdcda7ca1d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d6c648-8358-470a-9622-ac7eae76021a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98474d85-a53c-414c-bf48-621a82d52d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0058e56f-c864-4fe1-9a70-fd04b11223f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d046da3-0ac8-467e-81f1-22a6de665131",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300125bc-eb9a-466c-aadb-fb5b11533676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bee24fe-e723-46e5-87f3-c0ad14b200c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868407bd-22b8-42e7-97e7-44368593316a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e95597-5d2a-497c-a6ad-563b8371be5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0096153c-977d-4a80-aaa0-1fecb83fc9a8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5d6568-369f-4c60-a964-5c8624f62bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7579c13-5136-4227-b741-fe6cf1474ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1f402f-0978-4d7c-a1f2-cfe7fde853b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb77607-91f7-4f20-b23a-3e0a6381f1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5841d6-02dd-4fac-b834-a7d5824dbc4e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fcb79b-9158-48b3-bfd6-7f32f6ec6bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb912a9-e5f6-445c-a66f-2518126ca5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ac614c-b0b4-48f8-b1fa-545c89a42d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d8dc00-a350-4e02-a19b-afb2ba4dc127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21456634-178e-430f-8e97-bbb58be9fa74",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd35cb2d-b8a6-46ef-9d8d-343444439681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e42aa55-317e-4f20-a905-5f167cfe3c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8750a202-d5a6-4a74-ae7a-e4aa1b604577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "564456b3-3fd1-43e7-a8d0-ec9bc9b924aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d98d8c9-c0b6-4f11-a656-e017d455d5dd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143571ff-b85b-41ad-8b65-05529aa5e96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a27c5f-a000-4a01-80cc-df7d0910fcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe0c38e-735f-4360-8386-cba9b740b92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab68086a-03f2-443c-b092-3f76085337b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392ff3cb-89e9-4bea-90c7-769fca1d2f49",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff984270-c3ca-4bad-8cd8-d43d09e94448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae6f66e-761c-4eef-aa2e-ac369c2d6b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc9230d-99b8-4db0-8c4c-980ae1ff2bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9fc12b-ebfb-4aa9-9262-d03a2ac6cc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc5a1f2-795d-4dc6-b913-466b0f949da4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a359ec40-3b80-4455-a8c1-cd366d2e611e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06d3cdd-71c8-4114-a504-63b19174e0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57238bbc-55d0-427c-a5da-92af6ea47141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "055392c6-f570-438d-94b6-bbd502aebada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2c4f9f-a2f8-43a1-a634-decba3292a84",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564e00e7-7e5a-4f93-820b-5ed53e9f5d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d7e250-324e-43f9-9800-de57cc3bca8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c21a072-56ea-461e-abbf-5db817769780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c39535a6-707d-4900-80a0-d60f408fc793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e75e530-a3c9-4453-9e80-67a2257ad921",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1477802d-db1e-4b08-83e2-d1be7bd18a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e408d21-e417-421a-a719-e47445977187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3357ec8-2272-417d-ad5d-98fb41335cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e26779-f013-4db9-8f92-044f3ad5f9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983d8897-717e-48cb-ab56-1b4a216e3baf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9398c32-5653-448f-b534-8bdc19f8d2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92032e8-ada9-4c4f-8add-e980ad9b70d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf42ee2-dd1c-4ba4-962a-d403004541b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c361c61a-426e-4f84-804c-fd2e6dcd05e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def545c8-d98f-461d-9470-c131d0232a60",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a527ca5b-6b33-481b-8845-aaa9b4a1fafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8a0b5f-73ea-4d3d-bd6d-546e1a35adb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9849aa52-e30a-4f9b-ac1d-0b8f7d6c0661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "033cee80-6562-4fa5-95fa-1f3555da2b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4b1006-c39a-4a23-a7be-220a308ff454",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0d24ed-cfd8-4e62-a6b5-c4d64380a542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb26bf5-d2d2-4674-9bda-22b99320781a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce184a02-a1c3-4897-ae79-dfae578edf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa19c0d-23c8-4b8e-a4ab-7b1a0b0a0c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3fa276-97cb-4b37-ab21-432ffcf22c31",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824fa215-8eee-480d-af13-2a36c5e2476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eadfb3c8-ba4d-42a3-8966-3d9a60e05d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1d31ee-2cad-43d9-ac2d-572bfce358c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4d80be-7144-4f0d-8e8e-db44e2d60744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b734972-94f0-4f7c-a059-2cfa26d85e61",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb53268-4dc3-4008-a7a8-af7c5f1ee32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bdc16d-48f9-4113-8bec-48c50fca57af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d43ddf1-5eb6-4851-8f2f-46c914e4a3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4439b9d-9cc6-4dd4-a3bd-2f6b114a751c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009f2cc4-2a2c-42d3-a041-b864a924e316",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f093c476-81e7-4001-8d26-ca718f1af4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0bea78-858a-48b5-b3e6-dc17e5526cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758b0d8a-4480-4720-be06-32916306a9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "790f8eff-d764-4ab4-a377-9c7ef8d0ee58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e489723e-8960-4d67-a5bf-93bad472643c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302a9529-4856-420e-93f1-29ae927b6a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc89d32-145f-4c71-85dd-a475c46b96e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58314ab0-69ad-468e-b1d9-c52ac7cb1430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "46b26f4e-09a1-4529-b724-eb9892cc2e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807482f1-ee8c-4486-bc94-1599583d8127",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5967c135-fedd-451f-91b3-bc06dcd6b945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b005a32a-23e1-45c5-bb04-f45cbcab078c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c452385-89ca-4b70-9667-396f2efed4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e49c4c-4caa-4595-9d44-c5f572bb113d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed08b3b8-9f1d-43fb-a357-00ea286b5f4d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9786e0-457f-4149-b49e-54a26af75308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ef48cb1b-d232-485b-8dcf-2998bad96728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d0d55c-fb70-469d-96f9-f152d2f9a293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "01277e7f-15f5-4b5b-a505-ccbcc24f9820"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "996d9deb-ec34-4468-b8e9-c128dc7a2cb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d79a6fed-aa0e-45fb-9df0-2b17d0bf20bb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5f5d4d-3d5d-4512-add1-d66c03cc45bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87e99f6b-1ab9-4309-958c-8434933dc722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c9c3f4-9b5c-40ef-b286-503668c46980",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a289aa2d-1f85-42f6-9767-a15e5c9bb07c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6d5ccb5-6907-4d9d-aa52-49296b398c5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "344d1a3b-9c5a-46f8-82cf-2bbed373510a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df9831ff-9ba5-4aaf-bd52-51fbbcf18bab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4750b47-8cc1-49d9-9b2d-22e9934f69bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cedc25b7-71b5-47f7-98b0-eb799a9fd963",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "910eb54e-44ae-4163-b2a4-f83924bdb2f2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0093465b-acd5-4c6f-872f-9849eff29a49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11b41861-8d4b-4acf-b936-71460f34cd14"
                }
              }
            ]
          },
          {
            "id": "ceae2c37-94f7-441d-bb7d-4fdcf293e275",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a52978d-1df0-4ae4-a346-b0414ad19e71",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f819d2ab-63f9-480f-9e28-ad01886105be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96416d0b-0a95-4aa3-9df9-792ec776d7dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "702f6dd8-d385-4098-be53-825071e51e16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7feff0d6-5a9b-4118-bd51-81e226fb9188"
                    }
                  }
                ]
              },
              {
                "id": "0dfc25af-7e29-4518-8839-338787000453",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bfac208-7725-474c-ab53-d3efd6a2ffd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "917c8961-d349-4cbc-9124-d015a7a3d20a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bd5fa8e-7c71-4b1e-9704-87544b957085",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7bbbe69b-ba69-4c0c-a369-4c28618c1060"
                    }
                  }
                ]
              },
              {
                "id": "df1ce9e2-3275-4a25-974d-d8d989bf4250",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47c33a3f-ddc9-4477-88b4-0583358d20c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "286b15ff-8597-4280-9314-7f9dbe8572fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db61d74b-0b1e-4008-9213-5fe74440e29d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8f6fca19-a5f4-480b-a6b3-c4b056623852"
                    }
                  }
                ]
              },
              {
                "id": "ff7b0c3f-5a6a-4ef9-8caf-0f5b18d21eaf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22c98cfd-0c51-4d02-94a8-5ad73ff1cf36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51234982-7276-4456-b96d-f88b6fcf7bdd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8af600f-f202-482c-9d4c-1d57af054cea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ae3c259d-c1b0-4583-a538-90af08195875"
                    }
                  }
                ]
              },
              {
                "id": "34a9a449-4761-4d5b-b539-0289b30cd36e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10724163-501d-4e69-a3a9-e1e5e1e17b3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37ba7d0f-4eb4-4ec7-984f-659a2e2c6ccb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5aa20dea-df2c-4cbc-a4f0-405039bee4c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "feb522f3-e164-4733-b590-ca423abb9934"
                    }
                  }
                ]
              },
              {
                "id": "e2bca27b-accf-42d0-b996-e2cf839d5d4c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5207b52-bfa5-4559-94dc-f2be77cde29c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "febc413f-4660-498b-9495-58fe06552003"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f732c461-1c7a-4d7f-8064-b30740549fe8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76247308-7873-4262-918b-b5771f0cdc8b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27d9c19b-d30a-472b-8c5f-23f642179847",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd5e2e7e-ec0d-42c6-af94-af2cf8c56ecf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c5eac351-0f8b-43a4-a693-70ae10ff28fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09c259b3-4c7b-4157-b9e5-4894b3fb7511"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8cbadb0-724c-4f65-88e9-2198f792e1b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d18948ea-fe2c-48ac-b564-2177115de7d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70be4b22-27bf-47c3-b88e-08f11ee14657",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b5ab34a-911b-4a60-9088-f664a2ab62a8"
            }
          }
        ]
      },
      {
        "id": "daebda2f-19ef-4aeb-9157-6c60c464d345",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "baf972c2-d2fb-480a-8ee5-a00e54538806",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aca1e1f6-918c-45d4-a36d-5360e95a140c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b6166a2-6cd1-49a6-ad70-a6bb9798e9e4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41d5998-1c43-4f66-9f21-e7c39b422bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb6e587-8a8a-4d48-92dc-30e9609d6956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535c79de-8172-4e6a-b197-c6dbe4f8889d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4a291d-6125-4c87-9dbf-e326b0952040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64ec04f-3023-4acc-a70d-cb4de92c3aea",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425596ac-95ca-4ca5-bb3e-382578494f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869a1421-7f83-4784-b6ba-277ec71d0440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c922cdc-cfa6-4b63-b7a0-80d8e4b4f3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6869a6-ecb1-482a-91aa-74d34c716522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6029c6e3-218a-45d9-8e3a-d97116e6b2dd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218c6da3-37c0-4019-b1db-cbfcbabb3f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f3486c-f085-49a4-b5fb-bd91ef57f867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9450e47-e50f-4a94-8be8-77942f9f7bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "678a6990-95ef-4014-8927-b507217a1b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5965c0-1740-4502-96fb-0ed94137800c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125acffd-e54e-446f-a7b8-dbdf31826c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07b2890-3441-4678-9b7e-b560d21d409a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1a8f79-1327-48a1-91b7-82582aa91045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b815e303-b5a9-46b4-95d0-22e9095b4e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9af2781-47b6-411a-9363-2ea779d0ed52",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618589df-6de5-4e66-80a8-45d0bffaf396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475394bb-a502-4094-b6f9-84d2f2336ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e72f546-9b5d-4568-a098-9b4ee5bbe68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "499011c6-0c51-4b08-9cf8-0824d0d16040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2efede4-0254-486d-8729-cdc19f8f6690",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc0f4e5-7e8b-44c2-ae76-03a29ed3dc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6286f537-c414-4af1-aa01-d21f3611e3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa70647c-2ab8-4009-b401-24e23fb04df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3de43246-e934-4579-b3b3-a2fe8958e025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06ba586-6c3a-4125-aaeb-cdf9deb6e66c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04b6d10-650a-478c-95c4-1c1c9f8f02ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa90e48-93f8-4e74-88e8-4c52844be042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c451b96-1fb0-44ae-827b-c9b2775dc6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f338494-b32d-46c7-b777-d92cec0e2119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671ae851-5879-47eb-b4d3-22df9e71f089",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1ee097-b520-44ac-bd1c-4114488d7ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77c236f-4934-4916-be4f-9bf000e9933e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3be4e2-88ed-4a84-824e-206bc65db37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9220874b-c62a-4e8b-9095-79f98c2caf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e9f17b-6302-48ec-8403-2f6a5125a82d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6929f3-148f-4724-9d3a-7ec343ebbaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ebd8e9-089c-4fcb-a03c-36fc49d6bcfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7676c0d7-5a7a-4b2c-af5b-0d5313879a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39faa9be-4a96-4d97-9968-ead931267f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bef25c-5bb1-494d-85a2-9a9fb0f388f3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efae556d-b37c-4628-884b-42a738dd57e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75285675-fa18-49a2-a95e-ba0359c4d573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaf90db-18b1-4238-be8c-25d895db78fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e38c2486-a83b-457e-9eb2-cab0ba608b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81346062-d793-474b-86e5-080a184a1684",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e58ce0-9095-4211-85b7-dd46d873fda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de75be10-d412-432a-ace1-f9d14693a482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be0ec04-4607-4689-8501-19a1730a4df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f725a68b-e64d-4991-971d-aaaa21b349de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa4a197-6e9b-44f8-bd63-862c1214406a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb034309-1309-40ca-8689-7ac98598adf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b87a92-65ba-4cde-925d-afddfb319cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb4f675-70eb-4939-81c4-deb94643e32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "288e7344-4efb-456c-ac11-3cac28b9223e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7bd750-19d1-4f1d-b918-d5a4ad039bb1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da327c0-2e7a-4ebd-9690-4ff32f9432b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69095b53-dbf3-4735-858d-7d97c1d5f2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e15a59-154e-409a-ab50-67f357749311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25985e47-eae1-430b-9e53-9db20ae53327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0210a26-fee8-457a-8778-27a2bd6a53d2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc6400c-0d5e-4048-b1bb-a284b2fc10da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e252501-cb7e-4c56-8747-134b9d51f6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19150fc-7cdf-4afc-a0b5-30e3fc834330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f613b8b8-0bba-4efa-8dfb-4d76b520dfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c755368d-cd00-4ea2-9476-9d53ca561f46",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036a8842-1928-4983-b0a4-0af13e7e70c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c672e86-413a-4b52-9308-1f369ef353e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29932902-7197-44cf-937b-c31575ac5a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "790fd15a-1517-4299-9d28-cdaf368a28b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83226381-103d-49fe-94c3-aff64cef54ac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32794212-2799-4c5e-add2-0280c218bc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1783bf9b-bd11-4686-a581-9a00040532e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2c0689-e96e-4034-8238-fa312636fff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d82267f5-b517-41b8-b552-e3a40513efab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb3d2ed-3248-4b54-b378-f0751280aa99",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a50408f-0b24-4317-96e6-c01fe9b00757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b25f87-1221-4f51-b492-60ab19a0436f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2e4fdd-03dc-4550-b253-17db32d381da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e11754f7-ff3b-47ed-bf30-132680aa2aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee33964-e836-495f-a805-61a4c4680b8b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaee5d4-a42b-46fc-b87f-c364fe2e9ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1238fab-bad9-40ba-9425-1cc8496f0721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696507c5-49c2-43d3-917d-c784a8113516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6c7c72-9be3-4ed4-ac97-7e742ef58883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8595d80-e897-407c-b513-b4b2a6764adc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce690b60-9f4c-4e4c-90e9-5364c255667d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eccb5ea-9c6a-40f0-9386-abcdb9686c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cd4120-dfc4-4a04-8c16-e1fcf078583a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c200ad-b75c-40e8-b964-7a8d9c268cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bf2e9a-9567-486a-8dfc-00e8e91f208c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad1c93b-f42c-4eb0-b3c0-2d5a9126ae83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22349082-3297-49c8-9ed0-02c9a10ef792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c27325d-cb17-426c-ae03-748a587f9588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a87b68-2e3c-4a4d-a7ec-abf98f511edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7291fddd-073f-4875-a56c-ae38d41044d9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb62ecf-b53a-4d8d-aa87-3cb45e11da47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b88c8b2-3c1e-495c-8276-b0371d2705fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af106dfd-4444-41c1-b5b1-abf45ade065f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22e45312-5737-455d-90d9-d08b138a89a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0885f04c-2d24-4120-aba8-eda9554e37f4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07681804-40e2-4fc1-806c-121ad8107213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0e43b2-d9bb-4cd4-9aeb-be22fa0689d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95496494-f1af-460a-8ec1-7e37194c343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ad7b23-0bf4-4912-85a6-9c833279322e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d65f209-88b3-42a9-be7a-e67f7f2dc7a9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c898e8a-57df-43f9-a296-8a5fb87dd5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb9909d-6fed-4083-8556-349fe53646fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe09fc0c-2fd8-4b9b-8183-1e8438c90e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a287dbc-b61f-4927-b274-239a1a617098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad68d66-4178-4b07-9c91-171fb39d8256",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f0d623-ceaf-4163-a2fd-607dbad77598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2f7daa-4088-48c2-bb33-df94e16119a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b92e76d-836c-44c3-9642-91becca61458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fa2d96-e387-4a15-b1c6-6920b45f270f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db478ed-2958-4a5b-84ae-088cbd584df9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b171571-c5b8-48a7-b4b3-9a593051cd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6250ab4-711b-4339-8226-58e83792e43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19042105-7102-44a1-829a-1f162bff7cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8521d484-043c-4c3a-a7b6-00cf11790e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e35bd10-ff1e-46e7-bed1-40cef7f82727",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7ee35b-a2f0-489c-8b5a-336a93904b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4a5d10-baea-4d73-88a5-1cbaf5f25f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37465257-afc1-49b8-a896-de9d717ec777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "599d84ae-f618-459c-a813-560524b18d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde1b352-9221-43b1-94f4-2a61a239ddf3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28808ae4-1e61-4e07-bec0-a606fc3246cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc69d55-6b11-40d0-bbe5-412b0636722b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4faada-8669-4c1f-8bdd-60c8773d813e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26373b46-918b-4bc5-9691-a58a3e838b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a727b516-29cf-4218-8f27-884275fd8a5d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ba1d9d-a685-45ae-a148-548a72517ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5033dd43-7092-4dcf-821d-58594c0efbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1d2d26-7b94-4ffe-a52d-030fb525d7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "878289f9-576e-444a-9d24-508434fefd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dab50f9-714e-4e66-a7bf-a1abcb965524",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f277d48-4f8c-4b1d-a736-b3fcb4d1da6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de00cf5-6414-4fbc-8aee-9579c314c429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee1103a-f3f3-43da-aef5-a35a162f7049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97fe0e5e-1f7a-4660-8a88-aa9a90678962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89e48c2-4f68-4e96-ac56-ce4d306a0783",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b84bfc-84b4-4656-8b27-ac23671452a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3e58f5-38ac-4398-ae80-57b52cd454e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1eaa262-6de0-4710-8978-8c0dc9ad3faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51aea809-6c5d-4b9e-af5d-3133f841e93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4290539-cd77-4573-b853-8707c08d8b02",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb09cc0-2e6a-43d6-a3a9-c140e9afa886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec95220-783a-466a-8f8f-32b5e5481346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ed8339-2fa0-4065-85f2-3bccb13aa10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5d8de7-c39e-4686-a310-598e495b4828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ee1d41-5ff1-44eb-958c-e1bc4c95814b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822f7df4-2085-4fc4-94f6-d9c3e7f2089e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d4fdda-110a-4d42-9234-ede3bac71537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636389fe-09ec-43b5-97ce-c22b06c97499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2b9cf2-e3c7-4015-ab66-10c508ae1382"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2f22d96-e4ac-4c56-8915-a2ecadb3669a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f54a300b-0a91-4860-857b-713515b7e077",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bb2d6b-5a1a-4d7c-84cd-cb8c8601ac5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9bcc8286-53f0-42bf-b6f9-6a9e7fbcd24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a01444-3c30-4c2e-bee7-6706a8497825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4be854ea-ee36-45c5-b5a6-43b7f89c4655"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2e737c2-2056-43f1-80fa-b562ad24f656",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8df1941-7cf1-4003-a93c-cd9e5ee2a4bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d42c8210-5b14-4b49-abfc-eb3fcfe88610",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a7b67a4-6cc6-4f99-8b28-0aedb80fbd2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6b381df-b9b3-42a4-815c-83ebd90721ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd20b576-2e45-474f-b7eb-8683cb5cdb80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4921858b-513a-42a8-b150-b92a96a364f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8e2dda4-9ab7-4da7-a0df-46a076694fe9"
            }
          }
        ]
      },
      {
        "id": "ba117b99-1759-47c0-84d1-cb41d8e98e2a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ea2eab28-74aa-4c12-aa50-1abd583538fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ec0b108-e950-4fac-8d12-2e95f552b687",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "413a22a2-aedb-4856-85b9-812629c7ef03",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78438354-c177-46fa-ba3a-6c3d503d8a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edf2113-3c6b-4d18-a7dd-872f2e1d6791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c3594c-af6f-48e4-a21a-1fe2c4ea5462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d63908-d71d-4cbe-9272-570c77b78d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb3deef-11fc-44b0-af83-0f86084ba114",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768ae43f-b6c2-49f9-8c1d-f0542809dea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52eb536f-b522-4f1b-a9c3-e313a300e98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c18d215-f41f-453e-aa68-951f8f43d1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7385224b-212d-4e0f-a2a9-139e24d186ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171e4b91-aca7-4d25-bb6f-01b648c98285",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b575ae54-3c96-4b4b-83e8-951bac73b05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849d8000-5463-446a-9772-c4cd2569d28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4aba87-5f2a-4964-8555-03ea9a4fec57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0a1917-cef4-4b56-999c-f4d02e5cbe2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40629f8-7787-43bd-9837-5dbd902769c7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada71924-3b9d-4048-a71f-05527fd70778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f08369-6885-46f8-b353-66a7db7a0608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9992ea-ed40-42df-a76a-9f03f76e1e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65a89b71-104f-4a6f-94b3-3df4b515a2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb52890-43ae-4819-805d-50f660be54d4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87cf6d4-b006-4758-bf9e-3a351ffdb2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c925a181-f01b-4480-afdb-56429cdf7896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e4e280-a596-4a32-b8bf-b9c56ac7e3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e257f13-d047-460f-9276-aa0100306215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87c0d9a-d8cd-4ec6-8e99-c204995fded8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e013f950-7ab8-4e95-8c79-15245ecb2b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271990ac-1d35-45e5-9980-58dfc395afac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bfe2c6-8514-4b1b-bc91-23f485cd0fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec48aa38-4eae-44ea-857f-2db9ec76973a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886279b3-a582-4945-8a2d-bf0a8fddf4ca",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4ab26a-f67e-45f8-bb62-b9801657b4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c561d79-eca5-4865-bfd7-cf588afe7b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c178d3-3185-447c-b309-6faf261525db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a811dfa4-7ccc-4675-9ea9-64b0a1db8520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046c1e5f-d46e-4eb1-b4db-a6962e166dfb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fc2da6-be67-4120-bd4a-7ef5320e59c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cc7022-5349-48e4-8f53-475922bff94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e50b194-d8d9-4ab9-9085-a7d279f2f270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f98cc0-f107-4ea7-8d20-c1c496bdeefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0a32b6-ea00-4487-ad77-89cc765777b0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbc2f5c-9312-4442-a81d-7a4b8e0246c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ef9ec8-2b4b-4eb7-bba4-cfe06b344b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d892469f-e3f5-41db-80c4-38276c02e49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5aa9f4-d7c0-4075-af25-4c53d7a2926d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dccdbc7-9931-47bb-9708-29e1047bb83f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f773a9a5-ea57-452b-a0a7-4262b9228946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc6bcd7-2dfd-4add-a184-735613eed575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfe50e2-cc3f-4837-95a6-97d143bc701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a72a3b08-58cc-4f66-adcc-a14153cd1b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a679751e-52de-42d7-98f8-733388c00e1f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1db17f-1ecf-4c25-9f28-7237f551c19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b39f36-4899-420f-99d3-104029e3d188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436c329a-460c-49e9-8834-020cc4cab4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "091e7bfe-b347-4eec-988c-ca632e9a9cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04289fcb-5b99-45bd-b6ff-05bf1e51c6a4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3001a8-6f96-44f1-8fc7-05908ef6bf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdf6140-46bc-4129-a21f-4073e9733c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1f4f2f-2873-4752-8b36-b1dc5d608934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1f78d0-91b6-4ed8-b75a-dd850e0ff5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290a017e-44ed-4d03-839f-30dc8bec8d26",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d469b941-835c-4947-9087-08f00991186c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0966125b-d8cd-448e-94a3-d48b372df99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ab7224-4261-487f-9162-e9f0e41abdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6620bd49-a57d-41b5-b351-9d1858173b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6370b5f8-47b0-42f5-8d80-5ca4739eb64e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2560c170-cf78-4c14-adc3-8a024285a6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b18c7ae-73b1-4e7e-becd-36a681fd23a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3def68d-1486-46f3-a727-55c31bc1fb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c5cbab-6649-44b3-b201-0ac7ff08781b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081a2c60-1843-4d98-9c79-36d28f5ac5bf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cefcf2-d830-498f-82bd-aed66635981f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72506617-a5f2-4f87-95c3-2045f22285e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b19526-71d7-453f-bfb4-ce8e0bd2443e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f98f0d-141d-4e4f-84cf-3823f1992fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b64a76-ba1e-4c28-94f2-295e122ad84c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b3c351-36c6-480e-9abf-2731e2ce5b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7670c6bb-6b31-449a-af61-497953cea4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d260a3c-0dca-461c-b341-5e0da27e04de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b020cff8-cdbe-4770-b2fc-dac8423a6cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2da536-f2f3-4f75-ab80-2c3523b2fe9c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fef5c3-2e44-46c4-99c6-e1d96ee26fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b512da-2647-4822-86d5-efdcf0013412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4888c51f-8c08-4e27-b9d8-1e6f1239c6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c08f73d-d63a-4dd9-8fd0-53e294c8c7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4448f897-e73d-405d-97ac-c4e56f9bdd9d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce6506a-42d5-4b59-815f-44d89a928a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a453ca1-fac5-45cb-9ddd-44b1eda18791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28df6c80-e6ea-40e9-8160-26635f8e19ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a08122-5a20-428f-a10d-a896997fec91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e81e44-147e-4e4d-aaa6-8e4f4a4566d3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281fddc9-33c3-45fc-b7c7-4bfe5e7a0af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdd4132-7229-408e-9f56-ee525a81f66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3759a6cf-a9aa-4ddb-a0b0-e22cb32edce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf609c4-dd55-43d2-8d4c-a8c7b330f2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ec5b49-ef67-4f8a-97ff-aefedc2ff64e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4188fa93-0911-4070-b317-5a4da62a7438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568fea57-4f49-47d0-b6b5-482844fe5d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c5a65c-2a79-4bf1-844d-e14c193de3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f55d387c-6fc4-45df-834a-f349acf96a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e81674-39ec-4be0-831d-cb78671e68cd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caafdc1f-267a-4112-acfc-737784838737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ac5551-d653-4c17-9a45-42252ae34960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19a467d-ee20-4e79-bb6c-0b0b7dbdedcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d205c4d-d383-46bd-a8c3-93e6eb74e2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b213b1b-581e-4c10-8dc1-468ce43f6098",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7f9dce-5730-4bf1-a1cd-742e58bd407c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd537240-cb65-44cc-842e-5e2529203077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec76f82-7e78-4f10-921d-d10acc1f967e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db89a094-1394-4d4d-9789-097978f7fa02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9992c2b-9cfd-421f-a16a-44c676107434",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23e6e07-cf2c-4bef-a461-77745e7ce2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dec0e5e-03b4-48c3-afd1-6f467ba07a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967e1229-0fea-4fcf-b5f1-54c11d6218af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9ded67-0bbb-4de8-a3c0-304baa453d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91655c0c-46e0-4fd0-937e-27a34da1fafe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22f352a-5841-474b-be6f-d3f6995222dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139b9448-dc45-4f41-8e39-9c1122245df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f99f5a0-b1c4-4ed8-a29a-46bd6063c5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c529d9-0910-434c-909e-20794cca78a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91955458-d3b7-4e52-b971-3f492cd436d9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fa8783-4a98-464b-a1e0-fefda0c7a23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da245b32-93ac-4d6b-8471-c7f98d09edff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1b30ad-e6a6-4377-abf9-a916b505d102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b1e1cf-9a95-465c-9139-0306f0442465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2315fe23-d784-4078-bba1-7f29ce989e3a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aec2559-e7f4-4a8d-bacb-f3a1ad49136e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55802a8-b722-4914-82e2-e91e3134912b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b14a779-e87f-4b4e-8748-4952c059d844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7dd824-b3cf-43a8-bb9a-8726cb14697b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299cbd53-e37e-4b60-83b3-ad952c8a63b3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9f51b7-fb54-4705-8f90-e702649d57f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a0a7aa-adab-4b53-8eed-e1ecadf9afec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9cfab4-db12-4486-a0df-712e6ecceb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3728a8da-2139-404f-a9e8-e5597ced0c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8188f208-50d7-419b-80f5-66400c5b0899",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02419a21-74ae-49d0-88e9-98353e09f4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73de0bc8-e8d2-4deb-b168-87949cbcb39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40bf0a4-fad1-4ce9-a46a-072ffd98d8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c34db6e-e13f-4d66-8ae8-f9866cddc107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36431145-1acb-4b62-889b-5299dfb43687",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628b0e7a-ccb9-47be-9e71-2118efc6cd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d18b017-c790-40be-abcd-1f927918bc03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92518d7-6e79-425f-940f-b6f5fbcb21d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26f6e0ed-89bd-410b-9d8f-914670bf1a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed2a9a9-ba96-4a20-b43b-b47e9ee10deb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205d0c97-4f30-424b-9409-f8d81a008658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63171130-5f54-444d-9e03-c7395d7d438f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12af2ab-f65b-45a6-abe4-1e91d3e08b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aef3878-067a-4470-a871-e8777d025d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294c873c-41ce-49d2-b3d0-028da89b49ad",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0ad3d2-db01-4ae1-9e48-9921fdb4888a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb2137c-8162-44ab-a595-230092b6b64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e041fa2-079d-4471-8327-2cc03324e2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8dc51f2-4cd6-4fa9-870a-02672b6feb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89125cb-987f-4796-8f2a-a0b6ac610ace",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5a8ffa-0bce-4f0f-8f09-8f9567633aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490d1a4c-d280-4514-9c12-41f0d191e53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1df432-2bad-4c19-989a-94f75dee386e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b920688-6149-437c-8191-5c875bce89ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb760b8-7b90-490c-8e3d-0444f232ffb0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db0a4ad-13ba-4abd-bfb5-fc5a546c0d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c130151-276a-45bf-8763-fd0609ed5878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f50841c-0b55-412e-b345-bb2a7349768c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38965188-9675-4193-bb3c-014906216954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31860e3-374c-4435-ade4-8ddf4cad9a1b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049926bb-c0ac-4cef-a30e-857f2aefc7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70dde518-dc20-4151-92b6-428d40b59fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be0115e-eb6c-4aa1-b2cd-aa3b5a39a261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af76ab13-eb57-4fb4-9e99-d476179691cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b2fd64-1f38-4d94-9479-46af1fcba997",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf44ca1-ea4f-4ef3-b3d5-9c86d31fc7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f8a967-99b3-4a02-972b-4faeb9e8a77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d84bbc2-723e-457a-8054-57de9c4bdcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff0cf4d-a2eb-4dc1-a5b1-efcb91e9dc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a972f03-75a0-4a46-8a46-b5a6048220e1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bd8ede-5c40-4c20-afb7-dabce06d4ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23240881-b90a-47ed-82d6-3164697aa39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25809f2-df31-4304-a723-d9b3eeba1b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3586114-a10c-4019-a3c4-10afb1cdd029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c71fac7-2072-4222-8663-c1f18bc5301c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79cfbe7-f265-4b67-b1d6-a63832fee7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0a0116-6838-4ee5-b149-dc3576374a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f3938e-1b40-4fc5-b51c-129a6080ee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcec6c8-879e-46af-8def-27cdf359e7b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c2475f09-76be-4c37-8865-3509b4a1c363",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f06d332-a2e1-4163-bb57-6088cb59b7ca",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d2dba6-a6bb-4472-a10f-ea48afe57a2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e830269a-91a3-43e6-a7b3-8c02b055a42c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ee3807-8d82-4431-99b4-63f1772def7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76807ce0-7021-4bfb-b423-e6233ce0a55c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd688043-81f5-4147-a28c-f2102b402f7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5d5b50a-1bae-400e-8556-68bc3e3907cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e39f0134-7fdf-492c-92ee-1198ab68dd4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "432cf5ee-fc67-4cfe-980d-5d5b13868c20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ace8ca5a-2471-48bb-9947-f4fc483afc39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df5e32d2-c26e-4ac3-8a32-0a1ca86ed92b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03a7aab8-f894-4012-ba75-a8a6d251204c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09581bea-0d84-4c94-9f3f-3d0e9795749b"
            }
          }
        ]
      },
      {
        "id": "f38636f4-fdeb-4096-883e-950ff9bb0bf7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cfb74d81-da6a-4ca1-a228-175213debcda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92be691a-699b-4dd1-8c2c-184533702df0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67b12277-ad86-47d8-b661-1c789fe71ed6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47f62cc-294a-4e6c-9fb0-20a831508f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03118057-faeb-496d-b3c6-d8f4e4a61276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57776b71-7058-4d5d-8fed-36a21c4296e7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fb5b8a-b3b9-4a7c-9452-abd87c75d078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34149e3b-970c-42c5-bb08-699f814b0791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6089ff1b-c9ce-46a6-9753-2dcb9ae88b30",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adab642d-4707-4bbe-8409-9417ee162109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88a58f8-3810-4211-a787-70a26915a0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382da654-8950-44e1-860b-73c12329429f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cb367c-50be-41eb-a6d7-455948801d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8802b8f0-4365-4dbb-a872-fedf5500b42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7d1237-42ab-42cf-b260-8b0e7f0892ce",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544f129b-3b29-4baf-81dc-af5b093ab813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0caa611d-0493-45e6-952e-527c66bc1ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d25a263-4e31-460f-ae7a-f5b94434ec51",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ded3e39-2295-4977-a8e6-83b946a07e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbb7188-0138-4657-bc10-03d5515984ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e944ea2b-8718-4ad5-8ddb-fbf09f3e9f5d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3652c1-9c95-4c5b-a973-7acf0fadde14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebec4aa-a97f-4f8c-800a-0f3fff5281bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35675a9-e08f-4745-a91a-ba9da1503098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8086f8c-18a7-4b4c-97ed-e5d1cc97ed17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e6589b-5cca-4910-a35a-d8cccfe53764",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8d1c91-8d69-4edc-bc47-6d01f5231f77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa40788-95c5-4b4d-ac34-f547de963004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41e08c1-c4e8-4a8c-8972-a4c66c3d62ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d69eed-111a-4cf8-93fe-3fd7381acec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ff20cd-f657-4c29-9746-3e6fc33597c0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad8a6aa-1ae7-4929-a94a-025f2e9bc629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a392f8-5b25-4336-83e5-ac945ba5e5ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bac9b51-cdba-4517-bfc8-aa0812d264d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa2068d-dab4-42bc-afba-d0b3dd003a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29b1ea3-b990-41e1-8c3d-16ab03b5a57c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ff8a27-9272-48e6-bbd5-a7702fb13c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42c9828c-4208-4fba-865a-e368cc41e340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc7107a-7b09-4019-9799-1ac401e4aa8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8131d3-d5a8-414c-9a08-d613ab2ab666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36cc2e7-674a-4e17-899c-ae593c04ff27",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0376f5-9553-4dea-8a74-94006901047c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7b4f1d-a0ab-44d5-99d4-86ffa2fc8639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc94a46-593f-4874-ba5f-95277b162223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa3bf8d-5fc9-4d97-863a-ac6387287ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a87b884-bcbb-4559-88a0-359d6ffe3a83",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cdad3f-a595-4292-aa85-cc2e1f1e19a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271ae3a5-ec11-4ac8-bb5a-f80df9df43e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce52a4e1-923a-4f4d-a928-5f5c1a014437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd85a7c-3838-4b63-b5d0-fe98f4500e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963cb42a-24ad-42b7-9662-134073e6103f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5ac4e9-f55d-4817-88f1-cbdddb5d6619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a23b1521-88c5-486a-ba9f-4d302e401d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3772d0f-e0b2-444f-b65a-a1dfd2c3379f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc47d6f-ca89-480e-92c7-c00ca30e0f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a60d8f-6869-4002-a1d7-b0e967cac175",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078fb389-20d3-47f5-955e-434c361a9d46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca97c23f-a678-4542-9591-3eba6a09b005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9568e9e0-2799-4017-bc31-fa8fa51d394f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d71e37-2d01-45e6-9178-6b8cd2176168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53df0b72-1536-45a8-9d79-bfa187a09b9c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2013f077-c6f2-4d8f-818a-5cee4d27007e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7bdff39-66e2-49b0-9aca-891e37c72ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6805cba8-4e50-449c-be1e-00aa20c0f08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093fc3c3-b8b2-4a28-8fdf-fe1c098cb765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c58c38-55e5-4a1b-b061-7dc455dedb62",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24b9f59-c440-48e1-9936-bb8f2a72b104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05628a5c-2a8b-4c89-93f7-81e804f985f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a904f3-b889-4653-bce3-3a081c004ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93b522b-44d7-46a9-b327-4dd2d68e05a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec2a92e-5221-4c54-b325-338ea0f9d6d2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24a4125-7b87-4129-8c86-c6e0abec8e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd60e90b-8f05-4b8a-a942-f9c12c71900e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9cf14e-b363-4c2f-b7d9-dcbb35feed10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc4ee26-b8b3-489f-9bfd-8d90c1fc0685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea0dbb9-c653-46c2-807c-2d1ae9190240",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5e1fa7-37dd-4dc5-aad5-03ca29fba23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497e3e8f-9549-405e-aae0-865395cac6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daa9cd2-a862-4312-91cb-022833b48425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b147952-ba8c-4448-950f-9a73c44431e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbe198f-f3e8-465f-b70d-e3ddb7ca67ef",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b87bb5c-6f77-408b-b581-9e118be31a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68154e53-6b25-41c4-8b17-d08a5c6d9bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766d49df-64f7-4b37-b2da-27472541ff81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7caac8de-02b4-4ed2-a53f-b9d760a076f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25fb4ec-ba7c-4064-bfa3-5ab18fccc593",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9049893f-c2ce-43dd-8ab2-c88417dd8bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14b8041-5379-4891-93cd-aed7d7aca39c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea73511-e506-4389-ba0d-a7f8bf4d71d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdf4796-6e95-4c34-81bd-6d0d48e99dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf478a8-d296-4f93-a5ec-58e03ee9b346",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d65156-56de-463e-a2c4-d030979ba8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd05d60a-5d7b-4782-8708-2df8a9fa7bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8f7ed2-b551-4438-9df4-522b83224c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6724fb04-e49f-4ef4-ad40-db016da81356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6bbbbd-dca1-495a-83d4-7e747efb9d3b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5505a09-5ec7-4217-a13e-1352c6d80a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7d6d05-89ab-446a-addf-bb6b3f69240d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbf49d1-17b9-4d42-a202-c463ac24dddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c720e150-e3bd-472b-873d-5f2a1e7c9098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a928dd-0c97-46a2-aa7b-13d113ec9495",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08eae91e-3d30-4bd5-b97c-c65adeeb4bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0521a785-5a99-4ae0-8745-b26e23900aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89713a2c-dc6e-4e5f-a6a8-7cc5a1affeca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34cd9ebf-801e-4e12-97c0-d19b733c7bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57ce973-e963-4ba7-b579-d4943b27b5c6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8247974d-26bd-4663-9f99-31ab2274ee2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8af9e914-b104-437c-8d3b-3846abebf422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea05359-d182-4d5c-8296-7ec4d9670b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639c3604-3485-47e9-a369-ec4621fd394e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3a233a-9098-4e3a-8c6d-5090d0610dba",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef637630-573b-4baf-bbaa-78d4c2a63342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90e17fd7-c2ae-475d-94ed-d9be110225b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1803f3b5-8a38-4bbe-b446-610482cb6ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693c246c-876f-48db-9a1c-ee9b44c1bd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b403b284-acb8-4440-bc9c-6faccf3035b3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a813730-861a-4819-9d20-37dc8ca876d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91a95d3-4435-4611-a6b2-537c46890fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c385392-2d8d-4ba9-b20b-cea32f614fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89104dad-b7bd-44a4-bead-f5bc1216fac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb6c740-4b18-4dc8-8519-2a31d4d85b60",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa6f9e2-f7b5-44a5-90c1-df8cd45b700c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c82d527-2706-4e7d-9296-871af03f2ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c054246e-5db9-4058-af1c-65279c4d659f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c591581-78b6-4678-ac12-87c9adb0c253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3b747f-dd4e-4a75-9eee-b96b4c9a43f4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec8201d-afa0-465c-8a80-877faa02ed10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6f86e9-ee31-42d0-a9bc-aadc680bd85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0ae76c-c0db-44e4-9773-baaa78342232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcf3eb6-1bd7-47df-8836-d6e95c7331f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b051a74-adc4-468b-9f75-66a915ceebb6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789b30b0-82ec-4d1d-98a3-279e5251a361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f6acdba-2faa-4ce3-a14f-c67d8446a42a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc93854d-b617-46a8-90dd-6fe914aab732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3410011-d57d-4ea9-ab9a-9acdc319cb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e591a76-1547-427c-b85d-dffef9ed6fd6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad886028-29fa-4a53-bf1f-3497786039ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c9d242d-8504-408f-9bf7-b185339a4357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf88b5e-f334-470d-9e78-bb456d826922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799970f8-4aa3-4163-85ab-b4c0e5e95c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5484bdea-05bd-481a-807f-d713331b8673",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a09e197-b704-4840-ac01-b9861a099ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e525c76b-f26c-4439-89d7-04a115efd5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a106035e-615f-4f53-bf82-766f6fff8722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b40c8cd-4fb0-4f62-941a-9cebc811f5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3f7923-a085-48cb-bc71-71268ca2601a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07031afc-1ece-4727-b75c-49b1a49a1309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018f3882-66e7-4727-937f-501e452e436a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dc83e1-702f-467c-a704-c309f21b59c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28d8a0c-68ce-47dd-8541-43bd57c93d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa65d74f-5b8d-46b4-8edc-04418acfb05a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204edac0-8c0e-4e58-b426-026b76925aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed93927f-40b7-4325-b4e4-ec7e0d0122b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d14221b-1224-4559-9328-f917dd6938ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956b038e-94ad-440f-82bd-79ba51a056ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ef8f15-7ea3-497c-84a7-bb20089fef76",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0101c77e-6f02-43f1-8d62-1844d752da70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42501493-f525-483d-bc79-a432dc9c669e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f01f821-9931-4720-950b-ad03bceb5136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4d6e49-d554-4484-95ca-5576eeb99176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf75b84-243c-4cc7-8128-a21dc99aadcd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91da501-3100-4440-aeed-242fbcec425f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626d1ce7-e610-4f30-905a-28be80c95a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37651b7-044d-4ef5-9502-4e38e893f25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d11d84a-35a3-4b98-9726-b22d61703854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994b7c34-336c-44b9-9b1f-a18d6199bc17",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b50d95f-0b3c-4c73-9444-4ed24f0290c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1945a30-5827-4016-9bb2-9a7ef2200063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b1ccd2-240a-4731-a871-4573cb698ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102844e7-e8ce-4871-b968-57755ef23c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd559e9-dd62-451f-9c7d-55f690da8a9d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc9c550-43d3-49e9-90fb-898e1808b3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbda16b-eb6f-4d98-b0c8-491865044a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c60581e-43ea-4700-bf45-f04e477dfc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0747edd4-c0a3-44dc-b998-5e1dca11f400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89812f69-e4fc-407a-a165-5629eba0fa6c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26134c40-c1f7-437d-a526-85c16a2efe6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552a7609-c833-4695-9d0b-7f43723e7c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18870d9d-faf5-4c2f-8d1c-2398cfe32a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14517ec-ceea-4a2a-bb10-a2b3df1697c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5462a30f-dc89-4f30-8ff3-90e7d56f7d36",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3ec982-823e-4883-b445-f085b2bc38f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f277c42-b6eb-4fb2-9dde-98be2461d8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d16611-4576-4c2c-8ff1-2c70ceb38323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6dd3211-7ac7-49fc-8da0-5c9e40fc9b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa41ce5-fb15-4bb7-a9d2-e5289300968f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6438d19-0731-40ea-bc83-538710c01215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48224ead-499b-4d89-8df1-ba55e9f6af0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4709d2b-1740-4611-86b8-36d1ff6a2a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1597a511-72fe-429d-99c6-d7650f0e04e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc0719a-9fbb-4006-a5c5-3b592dd05a70",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493ec6b6-4458-4c42-96ec-d85fc00b463d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4221a26a-a8f4-49c6-aa31-b20206735acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a136b93-4655-4187-aec0-772ccaeb17b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd40fe0-8119-4bf9-8b3f-b0b9ed000cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e3681a-f3d7-43f0-a300-92ef2a60de01",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758e0c8e-1c02-48fe-9d09-b7e9f34a697a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbdf7a8-75fd-46bc-921c-7547ef3bbffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e187296f-48c4-478b-b4d8-23f503d75b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae626840-bccd-4494-94b6-ec4cefe96683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0cff66-ff1f-490b-aca8-581c160682a5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d36c5d1-1558-4ae3-ae32-651ed0df4c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1192a8-b78b-4a3d-ba8d-80aeed36fbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5170fcbf-9f90-4c76-b3fd-6590e5bc1b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e73d0d-7591-478f-a967-4cf93e585a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31481c34-3a9d-490b-940c-004ba3c78c9c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65655a7a-dec1-4d4a-b0f0-cdc2633c6fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ebc0d1-c9ce-4f35-83ee-3056d2cf7856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37603928-0716-4fa0-ba7f-ec911d0059bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfc9ae8-55e7-4ebd-bfe4-f90ca0e4d834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a0881c-9b94-4524-a272-af277a4fc40d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167aca04-65a8-405e-9323-35c05069aa1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e8e89a-4bf9-4f1d-a060-2b06c92a8d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd308412-35b6-4916-aa29-2f75b47dba04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d72b69-64d2-4db6-9677-68fc83697337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cd486c-99a8-4c5c-a1ab-30422282ff27",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43734b99-6c36-41cf-977f-3ce1169fcc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6d1eff-828c-4afd-bae4-3ff7d424c9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e226dafa-07b4-408d-95c6-e1e837e99e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4bf1ea-334b-4ac3-b199-e38a02a3012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd4ded7-fc7c-45ed-956a-22a09697041f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a3443c-ab2c-4adc-ae6c-94925d960ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed699f6-6562-4d1f-ba96-1031bf425a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be1c38e-1724-4433-96e8-59d8fce1d439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696b7a40-b6c2-438a-b202-c4a2e9e59595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f09ecb-2995-4dff-b5f0-09f96755d954",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d4ec0a-6bfa-4b75-95be-08579b23fa44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b97b6e-7a4c-4a9d-bfc0-ecc37f6b6916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ef9287-16ee-4e6c-b279-b56a5bd91be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ea400b-e1c6-4973-9dba-5b5bffa5a444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de47ad5d-e7f7-4622-b99f-2fcb517b8ca5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4ccf93-c31d-4d5f-8f60-e988000180e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2678e528-a615-4e0d-a03a-bc2db5ecf534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1ef45b-b0f5-49eb-9406-1f0188497eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be3e6ad-165c-4756-b25c-fb9b122e8f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e20f65-0c00-4ea0-ad42-cd96bba1453a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3eda96-4844-499d-b3e7-4a0bac5d1ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5502ace-951b-4e33-a981-fbf256121efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac58a83-84e1-4aab-aed8-e9a93d604c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6cb785-f096-461f-8258-33eba059c709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35366d7f-7f86-43e1-951e-2fd8ee3d4486",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16d107c-62eb-4900-9f87-f3d02d00818e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22a2bfa-e8cd-42a9-8137-05a106517277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62ead57-93d4-4bc2-bf7d-25550eb46ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c09463a-6586-4ccc-bc8d-7711e4410b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5191d7-bfaa-47b2-a687-a5487759d478",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3361377-6ba9-4919-9a83-b0fc6382ef77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb2bc75-7a88-4b72-a744-f2cea69e56d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40a07d0-1821-4795-8fd9-7586625c73cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8144727c-5695-448e-a6d1-6ac82d9cf6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c986d3c4-8a8d-48e6-a6e5-18cb92f113eb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e128807-8023-43d6-88e3-1d0eb53b7e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b03055c-7636-4013-9619-6849cba25cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b952caac-bdb8-4457-b393-868274c60e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918b8148-bccc-434f-a3ac-4a5e32ce3a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705f9de2-cb97-4044-8d13-ad89bc7da988",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78aad728-10cb-4605-8e6d-8b9ddb8c09e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118ccf8b-bf85-4446-aa84-6924ce506b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed20571-ffcc-4571-9aab-8a202194055d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea51ec9-2dd2-4fd9-b5e9-7a58814f92d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8da7be6-0cad-4073-8077-4b0f467f2473",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99f62e1-220f-42f6-9489-dde1561692b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29256a8-f25f-49b2-b1fe-1abc98ad9471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1f1afa-d608-4b5b-b581-0181a964cde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e12573-af96-433b-b25c-f1c528cfc277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b56335f-23a5-416c-94c2-d63e17f5fbd0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cff8c25-036d-4fb0-affd-e150796d7d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb579e89-0729-477d-825c-2ee2839712b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7719ad79-6265-455d-acc2-aac185730062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3179d4-ef2e-4abb-92e5-9e069320ebf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e13d18-89fb-44ac-a68f-6436f15dc1a9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e270b10d-1af7-4a8b-8d68-fdc5fe78a05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fb8079-ac4a-4a6e-a200-e6e44dc072eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0325e50b-d4f8-4c4a-a8a5-9a621e3dbb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64804d7f-4b7a-4312-b27c-473e60896c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4360c7c1-5488-41a1-b714-5114bca4c773",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dffdf6-8c22-4e18-aeff-4fbd3634fc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288962e7-e004-4f90-9e89-7078b11b5bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78724a3e-2888-476f-977d-6acbde88545c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e485ad5-0b91-4e0d-8744-c50c3157c372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0969edee-84fa-4a78-a118-52d18faa2bed",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7091dde2-ea26-441b-9628-80d198a2a5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd63737-fc78-4b66-a8f6-e4d299b83d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee4b0ba-2546-4633-8e1f-3b39335c9626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29cd98c-2e9b-47c6-9744-210d86b58c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c0f092-177f-4372-9e5b-f6d34f591b22",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02573f5-73ad-4eae-869b-56862b9aebbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7412a195-9f35-4b60-a64a-6588a60623c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d8dc6e-5a17-4469-a57f-e090514bfceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e5a35d-10d8-4713-9097-53fb9fff09f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2c7868-3fa4-4eca-831c-6db5282abf10",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276e40c1-310c-4410-a4a9-57482663f7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669d030a-8884-4a19-8837-e41a55b473b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c535a4ed-b5fc-49c4-8f66-32d7b7ad7156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb68399-e103-40b3-89aa-66647bafa7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767dc642-3ac3-4e04-b93d-aaa46b86021d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c312197e-dedb-4e24-87af-71bc7b7bf9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6627c7-d86a-49e1-badb-6f2278ab2183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cb41db-ba14-4a05-a963-89ee4a2ed97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94a40de-0831-49b8-9853-968c0e6f3c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84082bdd-af63-43f5-9e0b-d5dfb12b598a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c74e9c9-de6e-403d-accd-eb7aac3e39ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b82b329-4f97-46eb-bb80-ad55f0d20ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e0fd39-66a7-41f2-8f63-99150803b07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5de79b-c601-4e87-97e8-ac8bd32b3ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92b990b-d217-46da-b90a-aa60e83a6dd8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993c0bd1-0da6-49ae-b93a-e6cccee8df4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3793ecc8-befa-43bd-99a8-e7a151676bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e21ada4-45ea-4e53-bae2-b043b5262a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dfd2f0-57d2-4157-ab24-80e542e058a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07ea301-292b-423d-bd08-d50bca637296",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2a16dc-cc86-4a1a-800d-51d061f029ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "428e2bca-3e90-4908-bd30-b5c8892c196f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc263cf9-bef2-4b88-aadf-8684d7935ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c757258d-d39c-45ce-9553-b16c65359d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2aeab9-488a-463b-94cf-844ca42350f3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e859d91c-a5e3-416f-baf3-4f34ead705e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f23d2a49-9d44-4ae5-99fc-3c547ccb8664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a053ce-1ca7-4829-bc8a-98a17ab593df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64e2ecf-c71a-48e9-b944-d8ab34e245fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50e48e9-1caf-47ac-b85c-905841138706",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01755063-2441-45c3-b5c2-8ce2b7603337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0e9ec9b-e4c5-4bc6-9bed-344cacd3d3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b472ae-753f-4f23-ab20-5bdd0ca257b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa6c109-658d-4ea8-b1b3-93dd7ef4db77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebebb43-f4a3-405d-9b51-4eb31e21c87f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6858a8-63b1-4dd0-96e4-5461358545b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31a29f9-260d-42cf-855f-d04ae81ac716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2e2308-be57-40ec-b382-c70ecf883834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3754d920-2425-4fcd-b886-acd493daed5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c761273-d6e9-41ed-bfa5-d89de8afee51",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc57f81-66ad-4a27-8c87-b38d6856ecb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4daf9ad5-c29a-48b6-9af4-e8588348797b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e60db0-75cf-4c2e-bc29-475c2e6e5dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e82f8c0-02ef-41c8-82e0-94d43063b35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e64882d-fdbd-4052-98d6-afe7d49d03ce",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26daee52-78b2-4487-b425-f2d988fe8bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac2f25a-109b-419a-9181-55d7c35737df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b15a6cf-e294-4526-afe5-0c60b7868708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62268d04-8865-4721-88be-443376fb119b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b161a86b-341d-448f-9f61-853ea8033de0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e00e53-2d5c-45c9-bab7-047189e19e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab2f9ac-ce89-4285-8e28-c158d2ba9d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce9f188-9a0c-4914-b61f-43400f8a6711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4f1244-704d-441c-8091-7b1a877b1c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97be263c-2747-4333-9b58-ba7d247ffde9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9992eb27-2a2d-4b36-99b2-48791c48624a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b0a150-72f9-4a3a-9489-36b1b932c178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a5bdf9-0a5f-419e-b8ad-358c29598c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c372b4f6-15bf-4dc4-ab4c-c088b2e003e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5aa739-81c3-43ce-b037-f701eb9a4151",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de6a1ae-4dde-42fa-82c7-4150105f7ca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9267eeb2-3f86-48e3-885f-c5d43808bf79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a65eafa-fa68-44a0-bf31-c8efe360355a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45a8ce7-aea6-45d3-a77d-449e482d731f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564c4692-4c3f-4db6-a7e7-e29914cd79f8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f240f0f-d7df-4a09-aa6b-0057f088e876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1383cbdd-53cd-4ffa-b7bd-6dc67640280f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55960ec2-4bc4-43e4-af10-9b5d3ad9f715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc83769-61fa-4a20-8a70-50af6de99231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2932ef1d-69f4-4cbd-9b1f-cba511358988",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e08718-9707-4e0d-93a9-3eb7526ca11b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "919cecab-38bf-4264-8044-e17ad19153cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27e3bc0-5762-477d-9a07-d1c7b020e7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a89aa6-8546-4639-9c12-e3e67055c4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c27fa0-408c-4823-b253-61e567036055",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c3d9c8-847d-46e9-b189-54acf0196a47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "213d3bf0-70ef-4567-9339-3fdd45447594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c53e045-fd37-4b9d-9c5e-3aff04d1fcf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fff29f-8eea-44f4-8b55-507fd6fc4d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a31eb7d-d079-44a9-b1c8-85323d8b35c7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf10f088-ef10-4950-b7a9-6a0df95b6596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e02f818-e01d-4f7c-be44-3476ddb94825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1c27f3-09dc-4f0a-ad79-c7e592031186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a6c348-1e0a-464b-8f34-f1e6d15ea350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cae35b-291f-4e72-9a08-f177d7dcfa29",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3ff370-14cf-4ad3-af5c-fbefac165a36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d0824b8-b8c7-4c6c-994e-f5ac435fdcbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a861a1-7d22-41d3-8df4-32b7de248509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ea506f-8e1b-4a52-96c1-14d54b270b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a22fba8-96cb-48c9-ba1f-e1de23706c08",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aed025c-a92c-4284-849d-91c4025be6eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cad4b95-3e5b-4310-97bc-06846d99f6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ed5f3c-6a0e-48e9-b49f-c5d9f0c65bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f9951f-2d92-4540-a6b1-68a8f576ba90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64de72be-56be-4024-aa26-b1b2cdcf35b9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24221f7b-8d71-46f4-9f8c-89d44db76a95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18fd67bc-f037-4349-8b89-230888095fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecf97f9-dff0-48ef-a17a-b44b18231335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb35a59-7e1c-4202-946d-c5c068ff64cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddf8e87-b261-418b-9ff1-97c959849934",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0799cc03-76fb-49a2-b224-359e67202aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd6e08a7-9296-4256-a212-d38aebc7b107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838a3cc1-c28b-409f-9065-97364e13185e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea695daf-a9f4-45e4-851d-8e1402f86c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febed381-9796-4386-9a45-b8e9c311db09",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f395f53-c83a-4527-8e61-208e6ce58744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5544908-ea8c-4384-b592-f520761f933e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849b309f-7e21-4e0f-ba36-3bed67062d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a65d3a-d833-4659-b407-9036f09433b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dd6e7f-1b3c-4f0b-a3a4-fe77dd667e42",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31150417-7dea-4141-b395-04f7b55b00cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd48486-9727-410d-83cd-ae71cc07e2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e909b3-e62e-4336-8758-e5229acd9390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6b5999-9e56-41dd-918d-a828cd3c4878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135ea16c-ca32-47c4-b0f9-34ad2e7a82c6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1814ad90-f835-4578-a548-a579ae7064dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9299ce5-be9d-4280-ba6b-08c4976a2ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d0d046-4481-4f95-a5e5-0c4962df236d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b0556a-b8b9-434b-a150-665786435fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51291ada-fb3a-4a52-83ac-038e344a0ae3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a533109-3efe-41d6-8689-c0bfa6f38d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed50b1e6-9b77-4478-9690-d25b26bbfc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfe7ee2-5fca-4b9b-9290-f0800a15ef20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d7d536-9c10-4740-9559-73e3778106b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e30764-e1fe-493b-872b-7946e772a926",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af18b45c-d77b-4db3-b6c7-75c0165b17ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a67f22b5-59d4-4aea-8d02-f8a93849b050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d248136e-14fd-4313-aa88-1bf55b5c5cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00724e62-08cd-4fa7-a6d1-3557e85194e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b9268a-55e5-4c4e-8cb8-fbc628da323e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbaed87-1b62-4e0e-b76f-84317e5f0046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b85806c7-3404-443e-84df-ec187481601e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e9acce-9f2f-4541-8270-e45f04276373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e06717a-c5c8-4eb8-af63-e3e1668b6260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cec960-30ce-423a-a73b-405b8af16a67",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd94c450-ae38-4d05-87de-cb9410a86d3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b26cd52-912e-496c-ac26-703b3dae497c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad03f6d-7aad-4dd7-8a13-c6da6980b9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c579b45-589d-433e-ae0c-e373952ad3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db1efb6-5d43-4a99-ac1d-2a64c809f507",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d354d6a-4b07-423c-bc1a-929638e9e735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83964d71-25ae-426b-a0d1-6970cd8cddcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429d4d1c-5e5e-47fa-9a78-d7f999921807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b873e3-16b0-414f-ae8a-7b7a1620bcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f18f799-9926-4320-bc05-d0dfebefc7cf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ce2fed-2a06-4af1-b538-871fe9115a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cd76cdb-6ebc-4ab7-abed-af04d3e601d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c18842-c1c4-4803-9da8-37baaf6bd742",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08078343-3824-4961-b377-75216631e6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b79e06d-2300-4e2a-8be7-5eaad2702862",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672c3f94-bd86-4da6-a932-2475716ebd48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b9f520c-bf73-4867-824a-77f440ee8a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87025e69-778d-477e-a236-cf6906ba101e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccba2d2-afbb-41bc-bfbe-ca56ad355409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00bdb5b-f7ae-4f90-aa08-e024aa406920",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90bd996-f7c2-4140-87b3-1bd963113b87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0944f27-2334-4ade-b01b-c2132bdc3c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffd6d9a-4c55-4106-bd45-8fd5e24ef1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aff4837-b061-420a-9673-9838f012c124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3121193c-fe21-4d0f-a278-4f67d0123eb6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e52ab4-98f7-4ba8-8bad-1367bb1d777a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c0f3c96-3759-4d07-8387-d989c57dab16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f486a977-5089-401d-b8e5-5a9156fa1751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85b658c-b065-40bc-a56c-7b67b64f2018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766f3284-9f56-48d2-9692-eaf0c46b1294",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9540f9fb-5626-45ea-9b12-0e2542282d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ba22de-fde7-4961-a721-d20709593ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722f36ca-1290-403e-9132-bafd5f9f9121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427ffe79-ea47-4c26-8bfc-0ebaed6de097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0832332-54a4-4135-8180-4566e0d7cca4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a16af4a-d749-4326-9c16-8961a2fddf19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3285a88-3f61-456d-8e10-e426dfaacd70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f82fc42-51b9-4327-a901-bdf0e6a0303a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b550ed32-8e12-4863-b970-95c808bb3bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916d1749-fe8b-4189-8169-9916eb48ba64",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1fdfb8-deba-4f89-9bfb-f4fb48ccc863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a507b7f-cab2-4605-a1f7-69df455c25cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c2f77a-3c6b-43a2-8928-f121739f8741",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9063484-3758-4fb2-837b-4554315ac22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04a7484-44a5-4154-8d44-1998cfa8bdea",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b174b1-6380-4919-a79e-e1c1d7dd9bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "807bd821-3cb5-48e7-8d9e-1e21c5a53391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c655fa7d-3a56-48ee-8d20-4dc94fb1b90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c305655-7448-4d01-96d8-6414d98ad5f8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f78559c2-8ccb-4675-a0fc-8ef42f8707a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb7641b7-27ec-4dea-be85-dd1e30727e96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b199e581-dd4a-4cab-9a02-32646a68eba5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba795013-a8c9-4b00-87d8-7c2940048b14"
                    }
                  }
                ]
              },
              {
                "id": "6175fe75-4b50-4aa4-8bb4-996c0b3ed897",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50db2019-4240-4e93-ac97-89bcd2298bd3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4be59b-3e93-4efe-b30c-0351600a3d8b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1d357d3e-21e9-4a60-b128-81549dc4d0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78a38fe-59d2-4a51-93f3-463dbc4d4973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4345c12e-d681-451b-8a10-e5ac40633390"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1951f76-91db-4458-ac39-e3f6d4550e2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbb5d40f-a9da-4923-8672-67110af8f058"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b094595-c1ed-4300-9d03-e652936bb67f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "805d9aa3-6651-4848-8517-05d7195cb1f8"
                    }
                  }
                ]
              },
              {
                "id": "d68b268d-234b-4f6f-84db-f140800bea56",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "80a7a656-a946-44e4-a213-2e20070ecdd7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893029e1-9ee5-4049-b607-5cb7503175ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "07e5cab7-ae44-42d2-a60e-62df2cd69265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a511a22c-9a3a-4f77-872e-708ac1deb1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb62349-6d58-4d42-9720-f2d91160c022"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "46b8b2ac-becc-4bc8-b394-c7f5f6d2bde1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3987cfa9-f8c1-4e9f-a0f1-cfdb7f25f060",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc6843b8-a4c6-4dad-b195-e7e906f1462e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e64f6a15-22f2-4985-9896-b31d3ce94f15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6665d32b-cea9-418b-aaa9-8d7f1234d31b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a144b30f-cfce-4723-bfad-cd5e42615bb3"
                    }
                  }
                ]
              },
              {
                "id": "3be32d72-7f11-4080-8842-2142c36c3c5b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f224873-8e9d-4a8a-a87e-9856fbc91de6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e68f9282-bf8b-4214-b2bc-8f9738e5baf2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b207e67-0d62-4417-b3bd-76354b89b7be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a1c41b1-12a8-4f7b-b232-bdb39c20aa62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40fe76af-4b58-4c77-93a8-ee9d4f372e1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8c07c860-ac02-4d9d-bbbb-f4f2729ef156"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e18bd4c4-18da-4ca6-a1cb-79bfee183dc3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f98fefd-00e3-4fca-9852-6199a6f85ae5"
            }
          }
        ]
      },
      {
        "id": "21309767-d7b6-40b1-ae98-b4a5b5ed231d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "16d47283-d09e-4746-be85-55f1a0b8eb84",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b54dfbd-8c81-491d-94af-846492c9622f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e36ce857-0b13-44ee-966b-72d972a63c11",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cded26fa-f9c9-4fdd-a7a9-c0583e257434",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a70b7067-21e6-4bc8-9e08-0beed4b3e7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16f181c-1781-4a03-8060-6f3d9d2b6dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bb82493-4737-4ac5-9c58-f662be70c343"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "772563bc-5c77-40cd-b2be-b6b226f2a037",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7941be23-f590-4b75-af44-f85e211260eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02f38545-b67c-4d83-9fe9-a74ac01a83e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b51c16e0-9c58-4ccc-9b9b-dc80c1ea7172"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "023d17ee-73d0-4451-bc53-8ea3d5dcf35b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bbbe1280-0e8b-4849-a761-66a5b2f475d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3b92c15-f97b-4e2f-a0f9-ce775e2ca135",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d7b46d6-1e8f-47c2-ae30-22b460a7c3fe"
            }
          }
        ]
      },
      {
        "id": "5304dc64-ed8d-4b07-a8ab-0b2ec3ae5be0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ee4a244f-5c93-4bfa-9b60-12658ed4e8b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e46aa75-ff57-48a2-83f3-f4814e219e11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79f0cc70-16a3-4d65-975d-c8dfb5790b37",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16e7306-5c70-489c-aeb0-261c83722ce1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0aea97fb-298a-4c8e-aaa4-d9e8b14a64ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab0411b-8474-4c4b-8ade-7b8f11d21f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1120ab32-72b5-45ca-8143-0bf01a3432ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3783c79-affb-4e62-bd00-fd8403d50cb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d94bcc3-2548-4e9e-bcc8-a449414306ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d05f17ca-76f9-440b-9c3d-04b542134f3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a66c2b05-5692-40e9-a05b-7a68d831e4a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7ca48a4-633a-4700-ba58-96a42789e7dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03eaa6dc-be6f-4478-b8be-9a3260692ba3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98d71e16-316e-480f-afd6-56cbed3e1179",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fcfc304-eb5b-48f1-971e-74eb13e6badb"
            }
          }
        ]
      },
      {
        "id": "9d3c5822-376d-47fa-9db6-e3fb80323546",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4a0be844-e3df-4e2a-8f1a-338c75d314e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1910911e-82ea-470b-ab85-4f21c8ef7491",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12a9a1d9-c294-4d85-a061-54aeabbb0db6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b8b8d8-9c80-439e-8f94-6ca40e32f373",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4eb820d6-5f07-401c-81df-030d8d407f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98785141-a740-4548-b42b-087292ac0b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc3b5add-4660-4e82-b00d-c38b7a735cd9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb862f2b-6543-463a-bc26-6a734d87536a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "900b14a0-c612-4bef-8d8c-46b3a6eb9cf7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0237e568-862c-4bbc-9c1e-29da6ba85946",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f2b8ad3-0c38-41df-b619-7b9938aec2ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99e61346-37a6-4156-be6a-17dc729b25b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "15070469-3b8a-4935-ad37-6d1756d32013"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ffb7b31-d50a-4bec-90e3-0e3db93032f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dfe65492-7fe5-4d17-b192-c64efa5f552f"
            }
          }
        ]
      },
      {
        "id": "ec3c1ac6-6d59-46b5-a7db-667804ee8686",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ef38add-0def-46df-8600-e6468d32849c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77558679-d775-4f39-9120-c2b14e5394e4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3452b32e-9cbb-41d6-a274-0b51fef3d583",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dae1de9e-a3f8-4e26-89fa-b948e5cc9974",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f9c0786-d283-4657-b682-326c1c3b3da4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.183098591549287,
      "responseMin": 3,
      "responseMax": 261,
      "responseSd": 19.277667046008432,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691109613650,
      "completed": 1691109627910
    },
    "executions": [
      {
        "id": "9ade39d8-5851-4467-aa6e-bc0d2013b54c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f2b6ebdc-3ccf-456c-b5c7-02dd509bc7b3",
          "httpRequestId": "961b553e-044a-4b11-a572-00ffcb4e8c55"
        },
        "item": {
          "id": "9ade39d8-5851-4467-aa6e-bc0d2013b54c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6eac484d-612c-4d91-8f26-afa694a57eb3",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "a47a82f6-5198-4917-be72-90ae3caccf65",
        "cursor": {
          "ref": "19e32f63-8ba1-4219-b915-caa87e1a0b77",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f69b3448-311c-44c6-9325-ee8be68da529"
        },
        "item": {
          "id": "a47a82f6-5198-4917-be72-90ae3caccf65",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "98a6d27e-0285-4b41-9ee3-d110a0d023e4",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "546b3a0b-52e3-4b2b-bb85-e3f6cfd3caeb",
        "cursor": {
          "ref": "3ea39924-c5a1-458c-a724-5a01fa152476",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "43df273c-eb9a-4d8a-ac4d-2e81d18b2d76"
        },
        "item": {
          "id": "546b3a0b-52e3-4b2b-bb85-e3f6cfd3caeb",
          "name": "did_json"
        },
        "response": {
          "id": "8225b381-2264-4efb-a5a7-0e2c26f966b0",
          "status": "OK",
          "code": 200,
          "responseTime": 141,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05f578c-f9ad-4a5b-99e2-db4d42b625ad",
        "cursor": {
          "ref": "07095826-5ba0-4ffa-8ab2-73588466e6e7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4bd88d3b-a12e-4188-af86-44f450b6fbc3"
        },
        "item": {
          "id": "f05f578c-f9ad-4a5b-99e2-db4d42b625ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "458c52dd-255c-411e-992d-b05351405407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05f578c-f9ad-4a5b-99e2-db4d42b625ad",
        "cursor": {
          "ref": "07095826-5ba0-4ffa-8ab2-73588466e6e7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4bd88d3b-a12e-4188-af86-44f450b6fbc3"
        },
        "item": {
          "id": "f05f578c-f9ad-4a5b-99e2-db4d42b625ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "458c52dd-255c-411e-992d-b05351405407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784002ec-6440-4ad9-a270-f3e0ec118497",
        "cursor": {
          "ref": "d0cb4046-71dd-4c94-aea6-ea53fc1c8087",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "026c412d-fadf-458a-aa36-3b42581fefdf"
        },
        "item": {
          "id": "784002ec-6440-4ad9-a270-f3e0ec118497",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1605086b-acfc-4415-ab50-36223b3b9f7e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89058ef-736f-435a-9dc9-30ba93408806",
        "cursor": {
          "ref": "dd51208c-49e9-4b06-afc5-3b75fde39763",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "71296d48-d14e-4469-bb39-8a9d51c11776"
        },
        "item": {
          "id": "a89058ef-736f-435a-9dc9-30ba93408806",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "21f0e9e8-6bed-4d31-9f0b-cb773b6e3212",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1206d834-ef62-4b4c-9bbe-7dacf55cc913",
        "cursor": {
          "ref": "9f89e670-a0cf-4c74-9d4a-ed4337ffec03",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e1b112af-af40-4a26-bbb9-6e06bcca84c9"
        },
        "item": {
          "id": "1206d834-ef62-4b4c-9bbe-7dacf55cc913",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "458522cc-88c9-4b5b-bafe-b86736b117a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06769759-929d-404c-91dc-f5dfc22c94a3",
        "cursor": {
          "ref": "9b5f764b-7db8-48d4-b1d5-c6b7ec97d3f2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "59c07fe5-4da6-440f-b6e9-8a90eeddfba5"
        },
        "item": {
          "id": "06769759-929d-404c-91dc-f5dfc22c94a3",
          "name": "identifiers"
        },
        "response": {
          "id": "c97d096d-7a7d-482b-9e15-526f9e7b295e",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997a5112-c7e7-45e3-9e9c-f29022655cc0",
        "cursor": {
          "ref": "999ecb95-15f0-4ff6-b36b-8a655abedfaf",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0c3639cb-59b9-43a6-9d4f-9ef13483cdba"
        },
        "item": {
          "id": "997a5112-c7e7-45e3-9e9c-f29022655cc0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "965a1ff0-b90e-43cf-8af4-b770d922dfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c7c72a-1141-4f93-88da-e43f80ab84c8",
        "cursor": {
          "ref": "2af09c54-458a-40bb-802a-57be39dd78be",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "95834e69-e481-436d-ae2e-8c667405dd21"
        },
        "item": {
          "id": "d5c7c72a-1141-4f93-88da-e43f80ab84c8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c223b5bb-b5cd-4aff-8915-b191b8d00534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a11f05c-4b8e-4803-947c-d620dcc84c14",
        "cursor": {
          "ref": "156bca2e-08ae-4b02-9351-a13f49b6e134",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5c5a7d4f-916d-4746-bbf3-e6344a79be48"
        },
        "item": {
          "id": "7a11f05c-4b8e-4803-947c-d620dcc84c14",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dd55275d-58fd-4588-9be3-aa94c80e7ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40380a6a-8115-41f1-8dc1-27e8e485d71e",
        "cursor": {
          "ref": "4f924ef9-747b-4803-86bc-a33ae87d52db",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "24605941-d86c-4070-bf21-654f2bd926df"
        },
        "item": {
          "id": "40380a6a-8115-41f1-8dc1-27e8e485d71e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "68ed4fa7-0171-473c-9c5e-2ed4c3dbcb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce98f058-3801-4eda-8f93-0f97d16493b5",
        "cursor": {
          "ref": "2adc4a51-0255-4a22-902c-0b97e2d993f1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "659f77a8-b631-4a91-ba73-64fc9f0cb68a"
        },
        "item": {
          "id": "ce98f058-3801-4eda-8f93-0f97d16493b5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "71bcf346-2f2b-4790-9d4a-3cbb0ae62c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06af620-fb45-466c-a96e-1f6280abcf73",
        "cursor": {
          "ref": "425cbf8d-388e-4907-832b-edd49c8d7a26",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4b7af216-3707-4a9f-b0bc-bdd8cebdd086"
        },
        "item": {
          "id": "b06af620-fb45-466c-a96e-1f6280abcf73",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d5de28c6-b1e8-444a-b33b-8a7100219187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1c5bd3-e497-4d98-bccd-560e953ce28d",
        "cursor": {
          "ref": "b98bdd9e-edc1-4c4c-a1c4-1c49d7bcada0",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cb2d1fa4-5280-4e9d-b61b-96ba16856b02"
        },
        "item": {
          "id": "5c1c5bd3-e497-4d98-bccd-560e953ce28d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c2bb7355-c97c-44c6-a1c1-b57a8bb9cec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55be324-27e1-4e44-8850-4099fa6fbb9f",
        "cursor": {
          "ref": "cc81904b-6474-423e-9580-3b056a913c2f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9095f6d4-c546-40e7-a62e-8400c35a2ae4"
        },
        "item": {
          "id": "d55be324-27e1-4e44-8850-4099fa6fbb9f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cc6f7d1a-68c2-4a42-9792-90fb5e166b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddba24aa-9616-4e59-92d4-6138ad3a7ed3",
        "cursor": {
          "ref": "d969f30c-e706-471c-96e8-d65cb0b149f6",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0274b5f3-23c3-4b32-a156-ccde8f2385c8"
        },
        "item": {
          "id": "ddba24aa-9616-4e59-92d4-6138ad3a7ed3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7756408d-ee42-432b-984b-51503991d2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5726b8e1-2a0d-48be-9a8e-f644ce7998dd",
        "cursor": {
          "ref": "93d3d5ab-e837-49f0-9a1a-b936c51badeb",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a7b9c9d9-c2b8-4ea1-bbee-8e067e6ecd3b"
        },
        "item": {
          "id": "5726b8e1-2a0d-48be-9a8e-f644ce7998dd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "769114e5-e428-48c9-ac96-17dc36f81070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4333077f-c01e-4a52-a03e-c7bcf287dff5",
        "cursor": {
          "ref": "dddbb933-f54f-46f3-ba78-e4de760228fe",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c38cc97f-bb0c-40b3-b350-5ea5400b28fe"
        },
        "item": {
          "id": "4333077f-c01e-4a52-a03e-c7bcf287dff5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6f3bd9fb-9c37-4fcd-ac5a-37f6bfe6da48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33031eb8-c1ac-4b41-bd1a-07236b053065",
        "cursor": {
          "ref": "df5a0d91-b4b5-48cc-ba79-e23f07a4565a",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6aceedc8-da72-43d0-b6ff-e431d1341322"
        },
        "item": {
          "id": "33031eb8-c1ac-4b41-bd1a-07236b053065",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ae0757a6-92e8-4dc6-bde9-c95562650644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890eec77-48d9-4d4d-9e95-966c43199678",
        "cursor": {
          "ref": "babe64d4-074f-4d51-b247-609e64e0986f",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "87e7c517-189e-4ae4-9561-261f5a58d224"
        },
        "item": {
          "id": "890eec77-48d9-4d4d-9e95-966c43199678",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bfe11c9d-d570-4e0b-98ef-1bf91cb12b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625c6cb6-0f20-4a54-bab4-099c37406158",
        "cursor": {
          "ref": "a1ec772b-d88d-4da7-92a4-9044198c69ad",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a143d186-55c6-47e3-807f-ed07bf73bf45"
        },
        "item": {
          "id": "625c6cb6-0f20-4a54-bab4-099c37406158",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ca3f175e-448b-48ce-80d6-187ff2bcc5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff1e578-fe34-4c2e-97ea-182794d3a04e",
        "cursor": {
          "ref": "c752aaed-e0e1-425a-91a5-d9570cc6ecc2",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9ec3cf30-eda2-4fd8-ba42-5360060f8324"
        },
        "item": {
          "id": "8ff1e578-fe34-4c2e-97ea-182794d3a04e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8001f5f5-8b5c-43fb-a9bd-141c97f99ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bd9688-ac8c-42ab-ae85-1f0b0191c907",
        "cursor": {
          "ref": "2b988a48-6207-4f51-8366-e566a4513199",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "46d00f54-c451-4a28-94a3-862c97445a2e"
        },
        "item": {
          "id": "c2bd9688-ac8c-42ab-ae85-1f0b0191c907",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "158b2a30-83b1-4eb9-a63e-01094dd9f0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49da519c-def9-422c-aea9-fa2b781b9ba5",
        "cursor": {
          "ref": "f68414ff-49d2-4c4b-955e-d0ecfd852479",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e76013df-703b-4481-bb10-1d02776c4dfd"
        },
        "item": {
          "id": "49da519c-def9-422c-aea9-fa2b781b9ba5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6d88e68f-e0ae-4e22-9dc8-7f608fc93e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e0fc19-50b1-4243-af41-d36b298e761c",
        "cursor": {
          "ref": "cdaeb4f0-04d3-409a-8b93-92d84516a96c",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5baa08ca-006e-4baa-96fd-c12118ce93f5"
        },
        "item": {
          "id": "78e0fc19-50b1-4243-af41-d36b298e761c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "880561dc-51d4-4a9d-be6a-9b92c4d37816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f424c888-8cad-463d-aaf7-9aa760c962fb",
        "cursor": {
          "ref": "7a43a1b8-3986-4e8b-a52f-6ce9e7b6b598",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3f183c58-a3e7-46a4-8f66-48c8c1a05dfa"
        },
        "item": {
          "id": "f424c888-8cad-463d-aaf7-9aa760c962fb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "04f9b5b4-4395-408f-9280-5383bf7bce6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd62ae2c-0a1c-4a6e-9339-4dbc489663d7",
        "cursor": {
          "ref": "ea809098-83b5-4356-90d1-01bf2a065c50",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a25e1018-0970-43cd-a745-57f50b922d0b"
        },
        "item": {
          "id": "bd62ae2c-0a1c-4a6e-9339-4dbc489663d7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "08435875-809c-4c16-b41c-485bf163c58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66ecca8-179b-457a-8075-e95d65538e57",
        "cursor": {
          "ref": "6234182d-b722-4a47-9656-ada4bf0673d1",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a1ba4fdc-6071-4de1-b5f3-cf49f47b0ddb"
        },
        "item": {
          "id": "e66ecca8-179b-457a-8075-e95d65538e57",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9b0716a6-859c-49cc-99f8-9e96bc079a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50d15ab-1d40-4da0-a3ec-410c6a86858b",
        "cursor": {
          "ref": "e63e2173-39a1-450e-b0c1-526794809972",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "381f4857-3b9f-4c06-ac97-9c7bec2236fc"
        },
        "item": {
          "id": "b50d15ab-1d40-4da0-a3ec-410c6a86858b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c4686e9f-1af5-4de2-a9aa-0113392dc7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2517b0-0527-415e-91c0-e0c759330b97",
        "cursor": {
          "ref": "210fd549-591d-42de-8778-87ca2fbd0920",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "35ad7680-901a-4a67-abe0-1b5dfbe09f53"
        },
        "item": {
          "id": "4b2517b0-0527-415e-91c0-e0c759330b97",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "537ece93-a560-4fda-8049-183124e273a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c80249-db1f-4c7a-aea2-45ed2efe1837",
        "cursor": {
          "ref": "10358a3f-302d-4d1c-9a6a-96f965bf05f1",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2732dfaf-bc84-4c9e-b94e-ddc52dc2a404"
        },
        "item": {
          "id": "c9c80249-db1f-4c7a-aea2-45ed2efe1837",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "be1c92c3-43b7-4ee1-936e-3463d8120f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f416b190-5164-4215-b3d1-d779a566363d",
        "cursor": {
          "ref": "d82973a6-1539-46bb-a3be-f18229e3a05e",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a306eb43-214b-4003-9b24-3a6bf8e729ca"
        },
        "item": {
          "id": "f416b190-5164-4215-b3d1-d779a566363d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "02b5e5b5-0bb8-411e-b1a2-45a54e3b37e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8311d452-9315-4cb8-b971-58b1dc7f7b87",
        "cursor": {
          "ref": "6b4ecbb0-ae2a-4d29-94b3-26dfb6e35ff9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "29fe9b57-3d89-4ca5-9b8b-bce3afc7ddaf"
        },
        "item": {
          "id": "8311d452-9315-4cb8-b971-58b1dc7f7b87",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "91ee500c-effa-4761-ba19-a6c43ca2a8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191f071c-f298-4ab4-8ef9-cad02c13aa9e",
        "cursor": {
          "ref": "65521a7b-02a2-45a5-8e22-c571db1640e6",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3be8416a-39ed-4040-8797-f57c20fde6b8"
        },
        "item": {
          "id": "191f071c-f298-4ab4-8ef9-cad02c13aa9e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6da29aef-6d3e-4cbf-9886-673e76120e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41aaabd-3af2-4886-8703-b3d71dbed000",
        "cursor": {
          "ref": "54c1e63b-8dc1-4a5f-b491-87154e81e90d",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "969e48a6-4196-477b-974d-7f4d0cbff5c0"
        },
        "item": {
          "id": "a41aaabd-3af2-4886-8703-b3d71dbed000",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "79c006a6-1f4d-444e-9f8f-edec7342cf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd64bb0f-6a78-474e-aecb-fc9aca940900",
        "cursor": {
          "ref": "7dce8489-c3df-4d15-b978-588cad85dfc6",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fe2495c1-5633-4e55-b3e4-5ef486f39716"
        },
        "item": {
          "id": "cd64bb0f-6a78-474e-aecb-fc9aca940900",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bfbd40fe-6d5d-4633-a321-949502850c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c12549-f603-41dd-ad42-2e14c419f1b5",
        "cursor": {
          "ref": "fe33e156-f6ce-45d4-b1de-3b0b33b640b6",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "30dc7a88-fd4a-4852-a8f5-6353646a5560"
        },
        "item": {
          "id": "09c12549-f603-41dd-ad42-2e14c419f1b5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d19c8ed0-8c0c-49d5-b5d6-635d5e296292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec5c605-6de0-4e56-af1b-5c6f6edb2b0d",
        "cursor": {
          "ref": "d71cda48-d1ef-487f-a009-00a5e1448813",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "48a4c862-6dad-4f74-94bf-52ccaa344472"
        },
        "item": {
          "id": "3ec5c605-6de0-4e56-af1b-5c6f6edb2b0d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9a78cb96-ce80-445c-8fb7-521bdcf770e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94de83a9-303b-40c0-94ba-9c26754a7d3e",
        "cursor": {
          "ref": "50b74ad8-ca43-4838-aba4-db99b56fd2ad",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "047c0d20-4361-438f-a01c-1896a5a7a6ad"
        },
        "item": {
          "id": "94de83a9-303b-40c0-94ba-9c26754a7d3e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c3a7601e-ea9e-4381-8ac8-c4e09b90637a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb48454-a907-4c9e-8b7c-e3bdf53631db",
        "cursor": {
          "ref": "788ad7ba-a126-4e10-af35-a93600d37968",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b3686c9c-2f0d-4184-98c5-936821846f07"
        },
        "item": {
          "id": "feb48454-a907-4c9e-8b7c-e3bdf53631db",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "547e24c8-5c25-459c-8848-0fad6767913f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb68b3f-8462-4c6e-9060-dfe4c63c7efc",
        "cursor": {
          "ref": "4065c19a-ed43-4674-8890-70c050a70347",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a0fccaf7-56e1-4733-af2e-bdabb7fc5ec9"
        },
        "item": {
          "id": "cfb68b3f-8462-4c6e-9060-dfe4c63c7efc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0d1b4615-da60-48f8-a074-99a7092e9a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a981e21-6184-48ff-bc32-3d96925816cc",
        "cursor": {
          "ref": "bf6ed182-af42-40ed-b773-ea3b87963be1",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "869d1dae-bd1a-4483-acc1-960c60005717"
        },
        "item": {
          "id": "3a981e21-6184-48ff-bc32-3d96925816cc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "67f51b46-29ce-4d89-9b88-95df58fa7612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c353d5-63d4-4ce4-97e2-f8dca4fbf602",
        "cursor": {
          "ref": "09b59b82-43c3-4de5-b655-cfc3df5b3aff",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c261f959-47bf-43f2-9091-3c9e9695e97c"
        },
        "item": {
          "id": "66c353d5-63d4-4ce4-97e2-f8dca4fbf602",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1008ef92-d308-4289-86de-e702408cbaae",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc86a66-88db-4a31-9024-7a083f8b02cb",
        "cursor": {
          "ref": "aaf4ac41-1a71-4f8f-9e06-8ec1dc5e95b1",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0e474a0d-de20-4ccb-8cda-f83bfa85c899"
        },
        "item": {
          "id": "1fc86a66-88db-4a31-9024-7a083f8b02cb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f4976966-20be-42f6-a514-1647e03039eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be938782-6054-4df6-ad24-47a60a5d7f73",
        "cursor": {
          "ref": "821dab02-c4d7-41bb-a383-7d1e0ca6532a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6192e520-4711-4c2d-ad9a-b1bf2304b5f7"
        },
        "item": {
          "id": "be938782-6054-4df6-ad24-47a60a5d7f73",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "11bd1151-2f1b-4d98-9c85-ba45b87df05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a552f306-0072-420c-94fd-738e2d6b8f58",
        "cursor": {
          "ref": "c6ee6c30-de2c-487e-98ef-8d308335f08e",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "80482ba8-16e3-4449-a248-167c2e1c3333"
        },
        "item": {
          "id": "a552f306-0072-420c-94fd-738e2d6b8f58",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "19ddf33e-b920-4130-b3cb-acb311c3a587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9ef446-18a0-4ff0-8059-37aae1f9ae1e",
        "cursor": {
          "ref": "f6cba52b-4389-435a-abde-dc33f6c2f45c",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "21f6e114-43ef-490a-a2fd-ac9273bc029f"
        },
        "item": {
          "id": "9f9ef446-18a0-4ff0-8059-37aae1f9ae1e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "80b633e2-6859-4f5c-bbca-5b8d6f27cd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bde7d8-3658-4a2a-a5b9-b6446ca655fb",
        "cursor": {
          "ref": "eaf9dd2c-fccb-43f7-941c-7f28c5199af9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1013828f-48ab-40b5-ad9e-8be19193e7fb"
        },
        "item": {
          "id": "54bde7d8-3658-4a2a-a5b9-b6446ca655fb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e1f86534-6218-4926-a95d-485c11d371b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2f7610-9bc5-4b54-8fcc-82bf8e878592",
        "cursor": {
          "ref": "78bf76a5-a90e-48a7-b4fa-2719420bec41",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "35ca08e0-34b6-41b6-8c12-12b80ec9e35b"
        },
        "item": {
          "id": "7f2f7610-9bc5-4b54-8fcc-82bf8e878592",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "53905d86-ce97-4c85-b58e-8018991d2434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4364c5be-8fd4-4157-9159-17904d9cbe08",
        "cursor": {
          "ref": "e6dae9ad-1a3b-45a2-b613-72e877bcd2fc",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bd3a46cc-dc07-4190-9f45-4b3c382fa5ad"
        },
        "item": {
          "id": "4364c5be-8fd4-4157-9159-17904d9cbe08",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d8abeb48-d124-45ce-8b60-f89a83e0818a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fd8487-035e-4571-ad73-55ab4aa04697",
        "cursor": {
          "ref": "5b14491f-8292-485d-bef2-71e872ace485",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fddc94f3-4819-4605-bff2-9aeb15a83fec"
        },
        "item": {
          "id": "88fd8487-035e-4571-ad73-55ab4aa04697",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a76b3cfc-beda-46a7-b9a0-b24ef1f7ea65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fbdaf5-befe-4612-81fa-6a0bbc5fc0d5",
        "cursor": {
          "ref": "9aa83686-6133-4da8-8036-97504c0e1f64",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a20af6d0-3a09-4fe3-bf78-68d99ca5e1ed"
        },
        "item": {
          "id": "d1fbdaf5-befe-4612-81fa-6a0bbc5fc0d5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d906318c-b7d6-47b8-89ce-28364efbc3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f18655-696f-4737-bbb6-ab6a54799f7a",
        "cursor": {
          "ref": "bd0cab54-a7a1-417b-a190-bda4e5f8e767",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c853abf8-6d12-41c2-837a-4ee02fa34675"
        },
        "item": {
          "id": "d3f18655-696f-4737-bbb6-ab6a54799f7a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "07417836-3489-4c98-abfe-5bfc5c14bf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c710521-6ce9-412d-bdfb-d65f57312b06",
        "cursor": {
          "ref": "1fecdd1d-865a-448b-8920-1336616bde96",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a650c633-77d4-4414-933b-1e025474ec10"
        },
        "item": {
          "id": "1c710521-6ce9-412d-bdfb-d65f57312b06",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f8d7c47f-0046-4ff7-a8a6-2ba86c833f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d0a6bb-a595-421c-b77a-2121078a62bf",
        "cursor": {
          "ref": "ee3bdc57-3b6b-4137-b552-7bf0cd37b4be",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4040a963-9463-45b9-8c8f-9692d26fee0a"
        },
        "item": {
          "id": "77d0a6bb-a595-421c-b77a-2121078a62bf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9ade46b2-9038-4cdd-a3eb-76afd0f3d3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bfd978-d686-41ff-8e15-6176af73a488",
        "cursor": {
          "ref": "62794cbd-421b-4eb4-b92a-87718c5f2b1e",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c8429e21-0f1f-4064-8353-2682d7a48da2"
        },
        "item": {
          "id": "54bfd978-d686-41ff-8e15-6176af73a488",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c2b76a93-cc6b-4322-8524-d12ac8a54551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13821f17-16df-4605-b451-8ed427bc5cdf",
        "cursor": {
          "ref": "dab1b871-2efa-4fa4-9997-7cb41358ed95",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "42d6aab3-909f-4d52-ab11-ff9f650f76c5"
        },
        "item": {
          "id": "13821f17-16df-4605-b451-8ed427bc5cdf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fca30dd6-24a6-47da-8d37-087375532418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf096e2e-c014-48c8-9f8e-a1e2fe5931c8",
        "cursor": {
          "ref": "d7b433d5-f841-47b0-9311-c83823520a23",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "58e3b82e-4b3d-484b-9511-3f759ab625fa"
        },
        "item": {
          "id": "bf096e2e-c014-48c8-9f8e-a1e2fe5931c8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4e051e97-696c-4bbf-8546-687e8d893297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc40971a-b2bf-48cf-a84e-731b8a947e7d",
        "cursor": {
          "ref": "cb6347d8-d61b-4dec-9ac0-5e9147e61e74",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a6f13995-1769-44ea-890e-3371d8b0fa46"
        },
        "item": {
          "id": "bc40971a-b2bf-48cf-a84e-731b8a947e7d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c6a324cf-5e28-468f-a3b1-34a2129d639b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a026493-fe29-4472-86dc-a423a9fc78c0",
        "cursor": {
          "ref": "7639dd52-5885-44c4-b52e-3aca3369dcd8",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0605e3d6-d6d1-4fa6-b913-f30f4b5c7253"
        },
        "item": {
          "id": "0a026493-fe29-4472-86dc-a423a9fc78c0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3ba2ffbb-50e4-479c-b83a-30735af4d60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe31111c-9249-4f23-a52a-6f18776bdebc",
        "cursor": {
          "ref": "f5d6fe9a-b44a-4498-a2d1-711417e8d895",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "14ba29a2-7948-4815-8548-47dd3cf8799a"
        },
        "item": {
          "id": "fe31111c-9249-4f23-a52a-6f18776bdebc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4a5ca578-8b95-4f63-bd9e-2e364d7e4d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f5cf39-f90c-4472-af24-7378e0bdd010",
        "cursor": {
          "ref": "b1d5ff4a-6676-4797-93e6-4e702493caa4",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "be6b1968-d89e-4c1f-a04b-12d90224663a"
        },
        "item": {
          "id": "02f5cf39-f90c-4472-af24-7378e0bdd010",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e6cd5ae9-3f59-445c-b0b8-3e912e84c610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6c4eaf-ed1a-4b0b-9682-e8d54b8fafe7",
        "cursor": {
          "ref": "a4cf5418-5f48-4f0e-aec6-9c809df838ee",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "88a2fca1-b673-4350-b689-9dbbdb632a95"
        },
        "item": {
          "id": "8b6c4eaf-ed1a-4b0b-9682-e8d54b8fafe7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8cde5830-8b93-4780-96bc-c0fcbbf23ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597b35aa-5acf-4df4-ae3d-153e454657c9",
        "cursor": {
          "ref": "d7fad16d-a4f4-41c9-a215-463464ec3101",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "78084909-8706-470f-a188-e7004c745860"
        },
        "item": {
          "id": "597b35aa-5acf-4df4-ae3d-153e454657c9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e7f0e95e-783f-42b7-9741-7993687d150a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123f1db5-f3fd-44a8-899a-512bfdf596de",
        "cursor": {
          "ref": "2fedacc0-fcfc-4753-af6f-679d3ddbd4e0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "72e6fc82-e0cf-4e5c-a6ce-0fff17a37b53"
        },
        "item": {
          "id": "123f1db5-f3fd-44a8-899a-512bfdf596de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a4d86355-5f41-402c-8108-4abb92fb8f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf36f54c-f03c-448f-a0cf-377394a1142e",
        "cursor": {
          "ref": "2431690e-52d3-4c93-9bb5-282b43efd993",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "33cfccbb-afc2-48f4-bb26-5443f57f8387"
        },
        "item": {
          "id": "bf36f54c-f03c-448f-a0cf-377394a1142e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5982cfe6-417f-4fd7-85ad-cb12075973fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5143e6f-742e-4f5c-938e-4f964faeff98",
        "cursor": {
          "ref": "52bf989c-5ebc-40ef-bc34-63354bb6a04d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bd8bb38d-42f6-4d6c-b283-21631ea4531c"
        },
        "item": {
          "id": "e5143e6f-742e-4f5c-938e-4f964faeff98",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "94e7f2ed-7d4c-43e5-8230-8eac1fb52ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbabe030-599f-41b9-beb6-3dd88b820dbf",
        "cursor": {
          "ref": "7bd71d57-3eb9-4891-891a-c2acdeaa8db6",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a27a65f9-6c53-4a18-b622-5fca2bf44b66"
        },
        "item": {
          "id": "fbabe030-599f-41b9-beb6-3dd88b820dbf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f3c83417-b59a-4d0f-b919-b56dc9691b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07898dba-9e27-44e7-b40f-9df8c1f7cde9",
        "cursor": {
          "ref": "44108de6-6b86-4f4a-9679-57e5af15fa73",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "876ba49b-42c1-4b1a-94b8-a9235c3f1701"
        },
        "item": {
          "id": "07898dba-9e27-44e7-b40f-9df8c1f7cde9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f3cad851-83e6-497e-8216-05faff976bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a49fece-3fdc-4fa2-970d-41882e0912bc",
        "cursor": {
          "ref": "b8fc4425-379c-48d8-b5ad-52d0699d42aa",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "45ddb6e7-be32-4178-afdf-66259d60ea55"
        },
        "item": {
          "id": "5a49fece-3fdc-4fa2-970d-41882e0912bc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "445b843b-edc0-4a0b-8fcb-5d95520c7d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683a94be-5d98-47c4-be42-8eb645bf2763",
        "cursor": {
          "ref": "eceba9e0-b9f4-4dd2-a25f-e686a85feabb",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "323d4c95-6a21-40c5-9fd8-51e659ce6272"
        },
        "item": {
          "id": "683a94be-5d98-47c4-be42-8eb645bf2763",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1f51e393-cd66-49d7-958a-27a810fe039c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9116e6e-af49-4547-a667-c30f96676b33",
        "cursor": {
          "ref": "8e4017cd-e5a7-4448-8497-180f70eef14d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ce550e3b-95c5-4808-8ae7-c15a0fcef3c5"
        },
        "item": {
          "id": "c9116e6e-af49-4547-a667-c30f96676b33",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d3dc665c-8f1b-4d06-aa31-9392a1c4927f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efdc3b2-8bc9-4258-8cc5-ab703c489ade",
        "cursor": {
          "ref": "d9f6ef5c-544b-4fb1-b0a7-fbd84a25ef79",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "45ed65a6-73c5-4c75-a2b2-8e8d67f19f2d"
        },
        "item": {
          "id": "7efdc3b2-8bc9-4258-8cc5-ab703c489ade",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c48e81bc-0716-43cc-b5da-edf11c55360c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba455ef-9b22-4dec-93f2-49810e857fdd",
        "cursor": {
          "ref": "6c4ea27c-0418-4fa9-9bec-d1582fc600e3",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a3b08d76-44c8-466f-b079-ecd42a6748c2"
        },
        "item": {
          "id": "cba455ef-9b22-4dec-93f2-49810e857fdd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ef634069-1503-4232-9837-fdb93137a19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09063aa6-7bba-41d7-8c35-1787f41fc7fa",
        "cursor": {
          "ref": "772978cc-b571-4c3a-ac46-0674fa4abb18",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6846201e-3cc5-4850-b346-835919c19d63"
        },
        "item": {
          "id": "09063aa6-7bba-41d7-8c35-1787f41fc7fa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "727358ed-9f1b-4fc0-a60b-3be5530bc8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962fcd7d-5712-41da-97db-97c57068700a",
        "cursor": {
          "ref": "ee30bcdd-8628-4b18-97da-58630b59c370",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f8f4bcf9-92d8-4e04-9ec3-14b245eabc3f"
        },
        "item": {
          "id": "962fcd7d-5712-41da-97db-97c57068700a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "63ca9eae-fb54-41fe-979b-4410f09a62b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae1949d-1681-4327-940e-a6492612c6c9",
        "cursor": {
          "ref": "9176e9c5-056b-492f-afe1-866d64ee80b4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8ca354a8-2d6a-464f-a162-2daa99c9f1b2"
        },
        "item": {
          "id": "2ae1949d-1681-4327-940e-a6492612c6c9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cb9ec2eb-fa69-43db-ad92-0b07ec8a0149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff86d4d6-25d1-43df-b644-e59ec1fc98e4",
        "cursor": {
          "ref": "e33231c1-128a-4c16-a200-22b873d442c5",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7e10b60f-6b81-4f5b-9816-5a327f19088b"
        },
        "item": {
          "id": "ff86d4d6-25d1-43df-b644-e59ec1fc98e4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8482920d-451e-4b7e-9ba6-0b0351c65717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8fce02-69cc-41df-8973-6e42d346d6ae",
        "cursor": {
          "ref": "cd05399e-f9f8-414c-a155-4df077481d4f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "de266601-7fb0-4a09-9e23-e44c64e49526"
        },
        "item": {
          "id": "9e8fce02-69cc-41df-8973-6e42d346d6ae",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ecc9fd7a-6a35-412c-8963-843db4c2ad78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3376124-bb2e-4ace-aca6-526a9021a470",
        "cursor": {
          "ref": "f63c292f-ee2a-4733-9a82-cdcdae2890c7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "31293707-0e8b-4677-aa04-179f4e2967f7"
        },
        "item": {
          "id": "f3376124-bb2e-4ace-aca6-526a9021a470",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f31bf717-8edf-4325-aef7-3624d956b979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3b5fb2-7637-4b66-97bc-b6e9fde25033",
        "cursor": {
          "ref": "9baf05d5-6b7e-4c8f-88f5-55ae2ae48e58",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "29e75c33-0309-465e-be84-88346aeea28b"
        },
        "item": {
          "id": "7a3b5fb2-7637-4b66-97bc-b6e9fde25033",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "30716b65-d784-4d52-bd7a-e2fb245cb60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d046da3-0ac8-467e-81f1-22a6de665131",
        "cursor": {
          "ref": "370571c9-84bd-49ae-a043-d1e8ae832fb0",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3087e510-c7e3-4046-b754-b45cdb389582"
        },
        "item": {
          "id": "7d046da3-0ac8-467e-81f1-22a6de665131",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2c81d59d-1d41-4795-b25f-2608176c99ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0096153c-977d-4a80-aaa0-1fecb83fc9a8",
        "cursor": {
          "ref": "1b7cce05-3a6a-44d1-b140-2f81bc4c26ac",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0dd86f9a-12a2-45a1-9db7-4c2be97ba3c1"
        },
        "item": {
          "id": "0096153c-977d-4a80-aaa0-1fecb83fc9a8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2959b97e-0527-4bcc-a476-21b84e2930e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5841d6-02dd-4fac-b834-a7d5824dbc4e",
        "cursor": {
          "ref": "a639002e-811f-4c67-b85e-22ce33307150",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f439f95e-a682-4a82-b420-be40dbc8b2e2"
        },
        "item": {
          "id": "bc5841d6-02dd-4fac-b834-a7d5824dbc4e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4e98a2f2-b333-4213-abaf-fc178516c297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21456634-178e-430f-8e97-bbb58be9fa74",
        "cursor": {
          "ref": "0d4557af-3466-4f2e-b288-95456d3f7943",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7b3f830a-3f46-434e-bc99-dc709741a486"
        },
        "item": {
          "id": "21456634-178e-430f-8e97-bbb58be9fa74",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a08e4eca-a5bb-4e7d-8a46-02c316570eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d98d8c9-c0b6-4f11-a656-e017d455d5dd",
        "cursor": {
          "ref": "05fea0b9-95a8-4014-9f79-949c559fc30f",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "540cc79f-02fa-431a-a600-ca649da92be4"
        },
        "item": {
          "id": "8d98d8c9-c0b6-4f11-a656-e017d455d5dd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "177e6e68-4074-45df-97d3-a31791ead8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392ff3cb-89e9-4bea-90c7-769fca1d2f49",
        "cursor": {
          "ref": "fe2d01d7-c6ce-4c41-b49b-68d76fba04eb",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "11bc681f-3ea4-45ad-b306-29730f4dd25f"
        },
        "item": {
          "id": "392ff3cb-89e9-4bea-90c7-769fca1d2f49",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0181f8b3-1dc4-4d2d-80c7-c3c0b3d2387f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc5a1f2-795d-4dc6-b913-466b0f949da4",
        "cursor": {
          "ref": "3950c747-52b7-47e0-bb05-0739292016c5",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6f87c49c-0d6d-4add-b5c4-ff04a3dd2f21"
        },
        "item": {
          "id": "ebc5a1f2-795d-4dc6-b913-466b0f949da4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a6dd8745-c7b8-4638-8a9e-fa389752b75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2c4f9f-a2f8-43a1-a634-decba3292a84",
        "cursor": {
          "ref": "b355b277-affb-4d90-9c66-89733f00c0d0",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ef6e8116-7ba3-4af0-99ab-0823c7d8e6fe"
        },
        "item": {
          "id": "4f2c4f9f-a2f8-43a1-a634-decba3292a84",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d7e6fd17-7125-49f3-8563-7cf9cb149c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e75e530-a3c9-4453-9e80-67a2257ad921",
        "cursor": {
          "ref": "4c6be1af-711f-451a-89c8-90dc1cdf1f52",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "272bd808-2b45-4742-ac33-693244d1f5a6"
        },
        "item": {
          "id": "7e75e530-a3c9-4453-9e80-67a2257ad921",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "58649fbb-69ca-482f-81d7-4c0a9448f842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983d8897-717e-48cb-ab56-1b4a216e3baf",
        "cursor": {
          "ref": "be9d0310-895f-4575-b133-11738a332604",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7e40c596-fca6-4935-9a0b-d7b93dac0bfa"
        },
        "item": {
          "id": "983d8897-717e-48cb-ab56-1b4a216e3baf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e73c8c46-94e2-4443-937e-a60a1c24d308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def545c8-d98f-461d-9470-c131d0232a60",
        "cursor": {
          "ref": "5984c90e-5870-4755-b268-60355dfbee4c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3bb627ed-c26a-4b0a-962c-9613b4e954cb"
        },
        "item": {
          "id": "def545c8-d98f-461d-9470-c131d0232a60",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "821e90b8-65f4-4139-b771-3b533bcce533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4b1006-c39a-4a23-a7be-220a308ff454",
        "cursor": {
          "ref": "01000a40-7215-4e3a-9504-7f5b8587cfe6",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b09ac5fc-493d-4773-890e-c84ccc296cae"
        },
        "item": {
          "id": "da4b1006-c39a-4a23-a7be-220a308ff454",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8d42b6f5-6219-4839-b06e-d7a501125a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3fa276-97cb-4b37-ab21-432ffcf22c31",
        "cursor": {
          "ref": "e98de86e-337e-4f6c-85cc-8b01ef807b15",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "40fd37b3-8707-44ba-8e23-6e77ed876644"
        },
        "item": {
          "id": "8f3fa276-97cb-4b37-ab21-432ffcf22c31",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2851e1d2-5ce7-4be0-b425-ced289b828f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b734972-94f0-4f7c-a059-2cfa26d85e61",
        "cursor": {
          "ref": "82cf0e32-647d-42b2-a76c-d6adbd438579",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "61e2f0ae-2b21-4147-96d3-bab7a284fc5e"
        },
        "item": {
          "id": "2b734972-94f0-4f7c-a059-2cfa26d85e61",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1b4b0a3d-85f3-4e63-a4eb-727aa5a2a26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009f2cc4-2a2c-42d3-a041-b864a924e316",
        "cursor": {
          "ref": "2a05ab57-029a-4439-8a4f-ed8e926fa1b2",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5d20ec5c-03c9-4b82-9c12-943bb0e664fb"
        },
        "item": {
          "id": "009f2cc4-2a2c-42d3-a041-b864a924e316",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cd80175a-0bdb-46fa-8ded-7d03944b77f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e489723e-8960-4d67-a5bf-93bad472643c",
        "cursor": {
          "ref": "4fc9bb1b-20b0-4fb5-910f-a35fba75c682",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "74a4e00b-d790-49f7-a466-aff5b5032db1"
        },
        "item": {
          "id": "e489723e-8960-4d67-a5bf-93bad472643c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d32fe4bb-7372-4953-a600-6f9eb3ef194e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807482f1-ee8c-4486-bc94-1599583d8127",
        "cursor": {
          "ref": "e986350e-946c-41c5-b96a-dfa32ac50734",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "34ec8860-6297-419b-b519-36a3c7753d2f"
        },
        "item": {
          "id": "807482f1-ee8c-4486-bc94-1599583d8127",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f737c8ae-8798-4e57-8c84-72cfb7654da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed08b3b8-9f1d-43fb-a357-00ea286b5f4d",
        "cursor": {
          "ref": "24f1e17d-4cd0-4b86-9b1a-bbcdd9632455",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5c1f58a7-b3a7-40f5-952c-de6af36c872c"
        },
        "item": {
          "id": "ed08b3b8-9f1d-43fb-a357-00ea286b5f4d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "72a8f473-3949-4efd-b364-7ce9c38b48ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79a6fed-aa0e-45fb-9df0-2b17d0bf20bb",
        "cursor": {
          "ref": "7955e701-be3c-47e2-9ac5-215e51592348",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5be2ccfa-5f52-4af2-acb7-8706993a0a69"
        },
        "item": {
          "id": "d79a6fed-aa0e-45fb-9df0-2b17d0bf20bb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9b78c32e-c5d9-48e2-9db9-49f8fdd54fb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a52978d-1df0-4ae4-a346-b0414ad19e71",
        "cursor": {
          "ref": "6e8b4fe3-0607-4891-b572-33793a9cd3ca",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fcd20c6c-d163-4cce-8b07-52d26e5ad4e8"
        },
        "item": {
          "id": "5a52978d-1df0-4ae4-a346-b0414ad19e71",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b4c92476-155c-48d1-a0f1-0598b4f7b158",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfc25af-7e29-4518-8839-338787000453",
        "cursor": {
          "ref": "a158ea26-9f8e-47da-87b7-df62cc9d871a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4bc5d008-3514-488b-ba38-ddce3da0d2bc"
        },
        "item": {
          "id": "0dfc25af-7e29-4518-8839-338787000453",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "42521624-dc30-467e-90ce-9691e99a2c0d",
          "status": "Created",
          "code": 201,
          "responseTime": 103,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1ce9e2-3275-4a25-974d-d8d989bf4250",
        "cursor": {
          "ref": "6b68f2de-76c0-4452-8837-b8dfa0c30bc3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "71778e6b-290b-4a7c-8acd-3ef5643e5300"
        },
        "item": {
          "id": "df1ce9e2-3275-4a25-974d-d8d989bf4250",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "505d70d2-472a-4452-b617-d5b218a7bfb5",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7b0c3f-5a6a-4ef9-8caf-0f5b18d21eaf",
        "cursor": {
          "ref": "ed2972cd-c338-40f6-8a5a-46f582cf8b76",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "305701a9-3b17-4a02-8900-d65d2844b954"
        },
        "item": {
          "id": "ff7b0c3f-5a6a-4ef9-8caf-0f5b18d21eaf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "69a4509a-e795-4f39-8729-ca0f8a1f5db6",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a9a449-4761-4d5b-b539-0289b30cd36e",
        "cursor": {
          "ref": "ffe6aa68-94ef-43c0-99b5-11ea05bf6277",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "58c031d7-a071-4de9-a1bf-ac675538eb9d"
        },
        "item": {
          "id": "34a9a449-4761-4d5b-b539-0289b30cd36e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a1667ab5-3995-4557-91fc-86ffe2977a30",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bca27b-accf-42d0-b996-e2cf839d5d4c",
        "cursor": {
          "ref": "d2f2dca4-1e0b-4789-870f-393a1f2e4268",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ab4301c7-22e5-4349-bd89-bcdc6a9137c2"
        },
        "item": {
          "id": "e2bca27b-accf-42d0-b996-e2cf839d5d4c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "475d1172-f143-4277-a69b-628d55db666b",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6166a2-6cd1-49a6-ad70-a6bb9798e9e4",
        "cursor": {
          "ref": "4386e933-d1aa-42d0-9993-cac98dd9538b",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "465967c8-c67f-43dc-9d23-52fb19fedd15"
        },
        "item": {
          "id": "3b6166a2-6cd1-49a6-ad70-a6bb9798e9e4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e487bca-5a51-4cf4-95f8-e5006e5e4766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64ec04f-3023-4acc-a70d-cb4de92c3aea",
        "cursor": {
          "ref": "577b63a8-313a-422f-9caf-914e9f5d727e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6dcd893f-f1c2-4847-9bde-4cf3452b70cf"
        },
        "item": {
          "id": "f64ec04f-3023-4acc-a70d-cb4de92c3aea",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8cd5cfa5-5442-4534-870e-351d9da07bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6029c6e3-218a-45d9-8e3a-d97116e6b2dd",
        "cursor": {
          "ref": "a69d2230-99c5-437a-a64a-b7c0d24fa6ae",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "20846a19-5ea7-49e9-a9b0-a74397c4e734"
        },
        "item": {
          "id": "6029c6e3-218a-45d9-8e3a-d97116e6b2dd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "87df6408-156f-41fd-b2e6-58e6ff688d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5965c0-1740-4502-96fb-0ed94137800c",
        "cursor": {
          "ref": "d9906d31-10db-46f5-b808-b702373e6d7f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f5857193-8cf9-4d80-a38d-7e1b9a72960e"
        },
        "item": {
          "id": "bc5965c0-1740-4502-96fb-0ed94137800c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a1e5a740-f2e0-4ac0-a857-599398c30656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9af2781-47b6-411a-9363-2ea779d0ed52",
        "cursor": {
          "ref": "9d17ae78-f1ac-4faf-b703-0a17c1628c13",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ea0139fd-073b-449b-bc1f-2b277414809c"
        },
        "item": {
          "id": "d9af2781-47b6-411a-9363-2ea779d0ed52",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "84f5b954-19be-45e0-8952-7c28797a9263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2efede4-0254-486d-8729-cdc19f8f6690",
        "cursor": {
          "ref": "8915b417-f981-4c51-8182-db03bae1f434",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f00c927c-0554-4466-8e9f-5a4765453de0"
        },
        "item": {
          "id": "b2efede4-0254-486d-8729-cdc19f8f6690",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "566ac43d-a881-4fe9-a1e7-c54102500057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06ba586-6c3a-4125-aaeb-cdf9deb6e66c",
        "cursor": {
          "ref": "ba4e5311-e3c1-49ce-a134-40f078f6f2e2",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ec837d1d-f01a-49f7-932a-6af4065eb3d0"
        },
        "item": {
          "id": "d06ba586-6c3a-4125-aaeb-cdf9deb6e66c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b46158ef-7907-4857-84f8-c1c4757970f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671ae851-5879-47eb-b4d3-22df9e71f089",
        "cursor": {
          "ref": "57b6bdd9-08a2-4754-a09a-78ef2c1a0f88",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ccdc8b52-63bc-447f-a567-37cd1831ec3f"
        },
        "item": {
          "id": "671ae851-5879-47eb-b4d3-22df9e71f089",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8f211f98-f6a9-4819-8b33-4faee9b9ab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e9f17b-6302-48ec-8403-2f6a5125a82d",
        "cursor": {
          "ref": "fbd70550-117a-4f0a-9b3c-6f082dd1103d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c9a163a5-6e06-4daf-b083-6d17e47a999a"
        },
        "item": {
          "id": "26e9f17b-6302-48ec-8403-2f6a5125a82d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "84fd3d8a-ad74-4bd7-afd5-d3e36d9b124c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bef25c-5bb1-494d-85a2-9a9fb0f388f3",
        "cursor": {
          "ref": "73c9bf5c-be16-4e4e-9af7-e280fbae12f2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "aef5d2c6-4a49-4f17-8d7c-797cc94ecbc7"
        },
        "item": {
          "id": "a7bef25c-5bb1-494d-85a2-9a9fb0f388f3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "66713b01-470a-4674-bd96-5ccb567ea3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81346062-d793-474b-86e5-080a184a1684",
        "cursor": {
          "ref": "57da1fab-7158-46bd-a544-424ba0b0f4e5",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "24fd32cf-6d2b-4371-a363-feb839014993"
        },
        "item": {
          "id": "81346062-d793-474b-86e5-080a184a1684",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "46cad3ac-a773-4163-bbf3-0519a20f872c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa4a197-6e9b-44f8-bd63-862c1214406a",
        "cursor": {
          "ref": "79abdaca-5fed-49fe-8422-9d4d0022f6b0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1253f8cf-1cbe-4140-89f9-5301e6b09098"
        },
        "item": {
          "id": "caa4a197-6e9b-44f8-bd63-862c1214406a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8299a6f8-7583-49ff-9a14-268eb87ae8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7bd750-19d1-4f1d-b918-d5a4ad039bb1",
        "cursor": {
          "ref": "418625a5-020b-4c5e-ad2a-da041b4fe5a2",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e789b330-5e91-4af1-acd3-70dba4ef9203"
        },
        "item": {
          "id": "be7bd750-19d1-4f1d-b918-d5a4ad039bb1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "92539516-8f16-4657-81f2-cc4b88327319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0210a26-fee8-457a-8778-27a2bd6a53d2",
        "cursor": {
          "ref": "0b89eb7c-2293-4ba4-a009-d7fbfc6410d0",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "61c6979f-be35-4b23-aeb0-d3bd6bd8e058"
        },
        "item": {
          "id": "d0210a26-fee8-457a-8778-27a2bd6a53d2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "03bb1ac1-cfbc-43b3-bed1-d7c187c027f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c755368d-cd00-4ea2-9476-9d53ca561f46",
        "cursor": {
          "ref": "8d4e660b-0aa8-4b2d-9b7f-3a2205260657",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7b36a733-76e7-4f92-adff-5f8b07839689"
        },
        "item": {
          "id": "c755368d-cd00-4ea2-9476-9d53ca561f46",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cb055b04-cb76-46bb-9132-7fbc086e94d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83226381-103d-49fe-94c3-aff64cef54ac",
        "cursor": {
          "ref": "513bc89a-2d47-4acd-909d-0f2f12b57249",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5be1745e-576a-4d08-b7d2-dab7cda7773e"
        },
        "item": {
          "id": "83226381-103d-49fe-94c3-aff64cef54ac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b92e4356-d9a5-456a-8060-a66bf3f28123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb3d2ed-3248-4b54-b378-f0751280aa99",
        "cursor": {
          "ref": "fbbf4b63-3c34-4fef-b68f-47c47b602fb7",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "06f1a79e-38ba-4cb9-b316-5b8104bb5411"
        },
        "item": {
          "id": "8eb3d2ed-3248-4b54-b378-f0751280aa99",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ac9867c6-4eef-46a4-891a-7ca164f12a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee33964-e836-495f-a805-61a4c4680b8b",
        "cursor": {
          "ref": "5723d511-cee7-4fa2-ab62-f6062c1943b4",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "df54844f-f67e-4f20-bc15-e0a7553094c1"
        },
        "item": {
          "id": "dee33964-e836-495f-a805-61a4c4680b8b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "32a78c2d-8712-4046-9583-17d7d7457af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8595d80-e897-407c-b513-b4b2a6764adc",
        "cursor": {
          "ref": "4700bb55-08ab-4c19-ac6b-2c09e1aae887",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a4e0ef6a-962f-467b-b4d4-029fd54a2c9a"
        },
        "item": {
          "id": "b8595d80-e897-407c-b513-b4b2a6764adc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "45221b4c-3999-4b35-bc70-a412dd9112fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bf2e9a-9567-486a-8dfc-00e8e91f208c",
        "cursor": {
          "ref": "d59b2f0e-50bb-48f1-a507-58eec467bca6",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d3864083-f6cb-424d-a704-149cf2a7ddd6"
        },
        "item": {
          "id": "48bf2e9a-9567-486a-8dfc-00e8e91f208c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cbbefef3-461e-4440-a3c6-93ff42f79d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7291fddd-073f-4875-a56c-ae38d41044d9",
        "cursor": {
          "ref": "31a5e3a6-8ab8-4a5b-a5b8-3d74d3acb241",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b5c76d60-5a9e-484b-8ade-578f6072c30f"
        },
        "item": {
          "id": "7291fddd-073f-4875-a56c-ae38d41044d9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cc8ab5bd-3972-4c00-a48e-068dba2ba9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0885f04c-2d24-4120-aba8-eda9554e37f4",
        "cursor": {
          "ref": "58a1419f-b447-4fc0-afca-54d54b08733f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5390a787-bab7-4e23-95bd-b44292901a02"
        },
        "item": {
          "id": "0885f04c-2d24-4120-aba8-eda9554e37f4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "044b518c-4746-4682-b111-0fcc65210605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d65f209-88b3-42a9-be7a-e67f7f2dc7a9",
        "cursor": {
          "ref": "13d84be9-1a7b-4b77-ab22-1def7516b1d6",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "403c2942-5480-463b-9337-c885912f6d4c"
        },
        "item": {
          "id": "7d65f209-88b3-42a9-be7a-e67f7f2dc7a9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "df133f97-ec40-4635-8ed6-cf0187f3a244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad68d66-4178-4b07-9c91-171fb39d8256",
        "cursor": {
          "ref": "8ed58650-8631-498c-b8e3-b1945d2168cf",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "12655e2a-2402-46df-a884-da08014ba139"
        },
        "item": {
          "id": "6ad68d66-4178-4b07-9c91-171fb39d8256",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bd12706a-f309-4bbc-8da3-331121ab6687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db478ed-2958-4a5b-84ae-088cbd584df9",
        "cursor": {
          "ref": "d17fd1c9-c5af-4464-a0ff-c8e34c86c9a6",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cf8906b8-f9d4-4082-ba5a-6da4aae9b8d8"
        },
        "item": {
          "id": "7db478ed-2958-4a5b-84ae-088cbd584df9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9ac1c410-8334-4a64-bd63-8676367f1752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e35bd10-ff1e-46e7-bed1-40cef7f82727",
        "cursor": {
          "ref": "324bb3d4-9641-4c2c-bf86-bc9b3229562a",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9ccb45ac-00ea-405c-ac30-967a095bfd07"
        },
        "item": {
          "id": "5e35bd10-ff1e-46e7-bed1-40cef7f82727",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "15b93e29-e255-497a-8d93-3100a925e0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde1b352-9221-43b1-94f4-2a61a239ddf3",
        "cursor": {
          "ref": "321801a4-7d50-4749-8392-dd737a09503c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fc28e759-4856-45d9-bd5c-80b486f6d22e"
        },
        "item": {
          "id": "dde1b352-9221-43b1-94f4-2a61a239ddf3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "31d229e4-b34d-48cb-a606-6c7550e4c7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a727b516-29cf-4218-8f27-884275fd8a5d",
        "cursor": {
          "ref": "07551799-d30f-482a-8931-67c1814b6604",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b591c0f7-88d5-4760-8931-54c4e546f2bf"
        },
        "item": {
          "id": "a727b516-29cf-4218-8f27-884275fd8a5d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8754aaf2-4b29-47a8-9c23-e87e1c326a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dab50f9-714e-4e66-a7bf-a1abcb965524",
        "cursor": {
          "ref": "325beff3-68fa-4264-8062-72597006e6e7",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "67329cf4-ba7b-4f36-9a2a-0d357aaee28d"
        },
        "item": {
          "id": "9dab50f9-714e-4e66-a7bf-a1abcb965524",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bc1a5918-e158-43f7-88de-01237ffd438e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89e48c2-4f68-4e96-ac56-ce4d306a0783",
        "cursor": {
          "ref": "7eca1af8-ab43-4c16-98b5-2c6e2f16e400",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d0fa2d04-3141-41b9-91a1-aa3037b917b7"
        },
        "item": {
          "id": "d89e48c2-4f68-4e96-ac56-ce4d306a0783",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f36ba831-dc37-4d43-8d41-3e29732a5911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4290539-cd77-4573-b853-8707c08d8b02",
        "cursor": {
          "ref": "e7cfb34b-2a50-47bb-a4ed-d72e6300a3e9",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "23350fe3-35cc-4b0d-8b02-5d0e49db4c8e"
        },
        "item": {
          "id": "e4290539-cd77-4573-b853-8707c08d8b02",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "523c77f2-e7e9-42f8-b605-53da1324e028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ee1d41-5ff1-44eb-958c-e1bc4c95814b",
        "cursor": {
          "ref": "576cfbed-7fac-4997-a077-31f7f8e786ae",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6722b809-f3af-4dbb-bfe5-da08d363203d"
        },
        "item": {
          "id": "e4ee1d41-5ff1-44eb-958c-e1bc4c95814b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9c3ac72b-db64-4d0f-a73c-c7e33528e85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54a300b-0a91-4860-857b-713515b7e077",
        "cursor": {
          "ref": "5041052f-f9a1-46c4-b91e-75e3b909c643",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7a861a5e-d7d6-4a2d-b7a1-90ed56dc42ae"
        },
        "item": {
          "id": "f54a300b-0a91-4860-857b-713515b7e077",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3ec3d319-1b3d-4649-8bd9-199629d1a7f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413a22a2-aedb-4856-85b9-812629c7ef03",
        "cursor": {
          "ref": "3c52bd95-343b-425b-b6a0-584a4cd59a51",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b6e64780-b068-46dd-80de-6a8ab6781eab"
        },
        "item": {
          "id": "413a22a2-aedb-4856-85b9-812629c7ef03",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4aaca04e-81b1-4614-a561-dc377b132abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb3deef-11fc-44b0-af83-0f86084ba114",
        "cursor": {
          "ref": "739a9a92-94c7-4d3d-ab26-24ae2ed7827e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "af2a0607-7930-4464-9f8d-6a5ec687bd46"
        },
        "item": {
          "id": "7cb3deef-11fc-44b0-af83-0f86084ba114",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "66adbe3b-de73-49f9-82bb-82190af6e996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171e4b91-aca7-4d25-bb6f-01b648c98285",
        "cursor": {
          "ref": "9328ec57-e37a-4422-af73-f7170dd85339",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d5c0feb3-7f54-4323-b74d-4b820f0ca850"
        },
        "item": {
          "id": "171e4b91-aca7-4d25-bb6f-01b648c98285",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fc79c15f-1866-46ba-8e73-ab6568307868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40629f8-7787-43bd-9837-5dbd902769c7",
        "cursor": {
          "ref": "ed2d1830-b555-4c72-9d52-1e702c422a84",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "202f5fa4-1681-4bc0-82ba-d3df6ceb60bf"
        },
        "item": {
          "id": "e40629f8-7787-43bd-9837-5dbd902769c7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "237d7f0f-6987-452f-bfe6-598d45087e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb52890-43ae-4819-805d-50f660be54d4",
        "cursor": {
          "ref": "ef2c864c-f39b-4a94-8625-73901714662e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5bc4bd26-336c-4ed3-a3f8-3f50393f00b9"
        },
        "item": {
          "id": "9fb52890-43ae-4819-805d-50f660be54d4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c37662a9-ebc7-45f0-9fbf-1f934d1553d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87c0d9a-d8cd-4ec6-8e99-c204995fded8",
        "cursor": {
          "ref": "d9a80039-6676-4a0d-88ae-48fb48538489",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f5e69032-da86-4aaf-9af9-fa3f9f309597"
        },
        "item": {
          "id": "f87c0d9a-d8cd-4ec6-8e99-c204995fded8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "55add5c4-20b3-4f7a-8514-c3d9576c86bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886279b3-a582-4945-8a2d-bf0a8fddf4ca",
        "cursor": {
          "ref": "a36594af-e6c2-408c-bd18-63200cb60814",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "da2fa29d-e09e-4e4d-bc38-0ef10da525d1"
        },
        "item": {
          "id": "886279b3-a582-4945-8a2d-bf0a8fddf4ca",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0de04615-f4d1-4e4a-b7cc-52eb5f3db9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046c1e5f-d46e-4eb1-b4db-a6962e166dfb",
        "cursor": {
          "ref": "a5eb397d-2020-40a0-b423-ba2d405df041",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "836bdeed-dd89-45f2-9309-bfcd1499b476"
        },
        "item": {
          "id": "046c1e5f-d46e-4eb1-b4db-a6962e166dfb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "34d518f2-3315-4d7d-b67f-3ce542d99ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0a32b6-ea00-4487-ad77-89cc765777b0",
        "cursor": {
          "ref": "610d65a1-9689-40aa-93f5-10ced41e9462",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "89fa213d-ea39-4eb7-8f8d-d8fe8fc0e2ba"
        },
        "item": {
          "id": "bc0a32b6-ea00-4487-ad77-89cc765777b0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6125f220-d7b1-4cb7-b596-df8864c55bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dccdbc7-9931-47bb-9708-29e1047bb83f",
        "cursor": {
          "ref": "0cfde20a-39ac-4178-ad65-0fb9c7f3aeb7",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "656e1ef6-759d-4f7a-bbed-209bb0cc71ec"
        },
        "item": {
          "id": "2dccdbc7-9931-47bb-9708-29e1047bb83f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ae8518d7-2575-43f3-9212-0024691f0b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a679751e-52de-42d7-98f8-733388c00e1f",
        "cursor": {
          "ref": "4fe068e1-f615-42f0-81a6-38c4d49d3e71",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "71bd2187-cb61-4106-af58-13b04136ac8e"
        },
        "item": {
          "id": "a679751e-52de-42d7-98f8-733388c00e1f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d9269b1f-ebc8-4b47-9d8e-ee912b6ae892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04289fcb-5b99-45bd-b6ff-05bf1e51c6a4",
        "cursor": {
          "ref": "4ed4487c-d5a9-4ee8-90c4-a2fc30aa2f01",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1cabc84e-4bd5-4747-b74b-e26c0fa18410"
        },
        "item": {
          "id": "04289fcb-5b99-45bd-b6ff-05bf1e51c6a4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d55cc648-65f8-4bea-abf7-24bfd73bbf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290a017e-44ed-4d03-839f-30dc8bec8d26",
        "cursor": {
          "ref": "a6d1dc23-11ab-462f-98b5-2e6116525a78",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "387debf3-d3f2-456f-a3f4-81a0dc7c9f06"
        },
        "item": {
          "id": "290a017e-44ed-4d03-839f-30dc8bec8d26",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "71e73262-f5b8-43a8-b216-bb1ee447d0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6370b5f8-47b0-42f5-8d80-5ca4739eb64e",
        "cursor": {
          "ref": "e1fe8104-aead-41ea-a1c9-46101bb064bd",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b49d1535-242b-4f4e-a44a-37dbb63c9297"
        },
        "item": {
          "id": "6370b5f8-47b0-42f5-8d80-5ca4739eb64e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "babfe749-debb-4663-b213-c9c22286ac22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081a2c60-1843-4d98-9c79-36d28f5ac5bf",
        "cursor": {
          "ref": "aa7dda61-7942-46fc-a284-c5d8b5d2dab8",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "df768cfd-8823-47b3-9b84-b7f8ee85d1cf"
        },
        "item": {
          "id": "081a2c60-1843-4d98-9c79-36d28f5ac5bf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "95b62116-d78b-432b-b9be-90877baa3adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b64a76-ba1e-4c28-94f2-295e122ad84c",
        "cursor": {
          "ref": "db2d8e35-610b-4b47-b84b-373c21154167",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "427af5ad-229e-40f3-8749-11019d8c31c0"
        },
        "item": {
          "id": "f1b64a76-ba1e-4c28-94f2-295e122ad84c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e5c539f0-6d21-4bc8-bbf0-8806da0156f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2da536-f2f3-4f75-ab80-2c3523b2fe9c",
        "cursor": {
          "ref": "36dcfd1f-dcfa-4056-810c-d5ade196abb9",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ee5cea52-83e1-4ea9-b19c-280789729cbd"
        },
        "item": {
          "id": "6d2da536-f2f3-4f75-ab80-2c3523b2fe9c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3669f067-c602-433b-8968-2a71563ed74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4448f897-e73d-405d-97ac-c4e56f9bdd9d",
        "cursor": {
          "ref": "6ba4c1e5-c9bd-4918-baa2-36d328e0bfb6",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4f1d404f-acc3-4a20-90b6-50dc9d75ad87"
        },
        "item": {
          "id": "4448f897-e73d-405d-97ac-c4e56f9bdd9d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4f58df31-786c-4f50-bf1f-2f1ec899407b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e81e44-147e-4e4d-aaa6-8e4f4a4566d3",
        "cursor": {
          "ref": "2dd132c3-e998-40df-b4f8-db118b4db109",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "37e969d5-cda0-4706-b213-261ab7f01850"
        },
        "item": {
          "id": "78e81e44-147e-4e4d-aaa6-8e4f4a4566d3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6d1ceb39-5a29-4df0-b89f-9791b096efac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ec5b49-ef67-4f8a-97ff-aefedc2ff64e",
        "cursor": {
          "ref": "b1c93c19-2bdc-4e90-b06c-6be3caec7faa",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7b1ab7f6-4ba9-426c-9fc6-731910ac6037"
        },
        "item": {
          "id": "d0ec5b49-ef67-4f8a-97ff-aefedc2ff64e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "96ea83d9-de24-4b1c-9a53-846f1ae2c95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e81674-39ec-4be0-831d-cb78671e68cd",
        "cursor": {
          "ref": "e2ba86bb-1c07-4dc0-9abc-ec99c0a59664",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e0a06d45-7935-418d-9d1b-46bc5b1d159e"
        },
        "item": {
          "id": "a4e81674-39ec-4be0-831d-cb78671e68cd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b84d2976-a0f6-42ed-9ab9-bec00529feee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b213b1b-581e-4c10-8dc1-468ce43f6098",
        "cursor": {
          "ref": "e9ce25c1-6264-4aac-b67a-84d9523d1a17",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a86b3f6b-39fb-477b-8272-3285228ccb13"
        },
        "item": {
          "id": "8b213b1b-581e-4c10-8dc1-468ce43f6098",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7e75a23e-79fc-4061-8543-7699360ae0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9992c2b-9cfd-421f-a16a-44c676107434",
        "cursor": {
          "ref": "32f82fa5-8fba-419a-a529-553a64b6a286",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c19ee081-d750-40e6-9ba3-65f351225ee5"
        },
        "item": {
          "id": "b9992c2b-9cfd-421f-a16a-44c676107434",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "31d6d01a-3e5c-4a2a-9c3c-79fbad240d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91655c0c-46e0-4fd0-937e-27a34da1fafe",
        "cursor": {
          "ref": "085d0c69-c457-43b3-a4ef-e49ea811b67e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ef30a347-8162-4e8d-8a76-ba75cd384501"
        },
        "item": {
          "id": "91655c0c-46e0-4fd0-937e-27a34da1fafe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b7e477cf-dfd8-4867-96b1-a5072562db49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91955458-d3b7-4e52-b971-3f492cd436d9",
        "cursor": {
          "ref": "b65b94a4-15c6-413a-87f9-a7748c1f9036",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "769082e0-737d-47c5-bbd6-e338c3bd8c0c"
        },
        "item": {
          "id": "91955458-d3b7-4e52-b971-3f492cd436d9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2cbe38ad-1b5d-44df-921f-681e3ba63e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2315fe23-d784-4078-bba1-7f29ce989e3a",
        "cursor": {
          "ref": "6c93054c-d95c-49f3-a305-cf46b3c927ca",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "773ecd93-5412-4c18-9cc4-74e4d2deb72a"
        },
        "item": {
          "id": "2315fe23-d784-4078-bba1-7f29ce989e3a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c3ee6127-2984-4061-a1dd-117e452c54b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299cbd53-e37e-4b60-83b3-ad952c8a63b3",
        "cursor": {
          "ref": "3eb46e1b-bb17-4427-990a-a03ce41990fd",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ad141f05-3470-4b14-aae3-cdd68af34c5e"
        },
        "item": {
          "id": "299cbd53-e37e-4b60-83b3-ad952c8a63b3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7b4114e8-a2b4-4b61-b36c-0e7dcf2e81c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8188f208-50d7-419b-80f5-66400c5b0899",
        "cursor": {
          "ref": "418f573b-f744-41ea-89bf-b4c1cea748ea",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8092032d-4202-4830-8897-d4cc633bfc12"
        },
        "item": {
          "id": "8188f208-50d7-419b-80f5-66400c5b0899",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8d8c85da-691e-4503-9cb4-017f93662ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36431145-1acb-4b62-889b-5299dfb43687",
        "cursor": {
          "ref": "b228a41a-f53c-4ae3-9075-5068b8d6f6f8",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "09be1559-f0a3-4e44-94ff-a49c94d74625"
        },
        "item": {
          "id": "36431145-1acb-4b62-889b-5299dfb43687",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "db1069bd-233b-44d5-b172-755c75230225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed2a9a9-ba96-4a20-b43b-b47e9ee10deb",
        "cursor": {
          "ref": "01fb991a-590d-43f4-bdf7-f74ed73bcb07",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6bcfb122-3dd6-4980-9288-120b8f1d1cc2"
        },
        "item": {
          "id": "1ed2a9a9-ba96-4a20-b43b-b47e9ee10deb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e99a4bff-0b74-477a-aaea-1b1136e62c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294c873c-41ce-49d2-b3d0-028da89b49ad",
        "cursor": {
          "ref": "c04c3f1e-d1ba-4962-bf0d-464489f58ad8",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f1e4076c-379b-4c0c-a531-f61b50d96f20"
        },
        "item": {
          "id": "294c873c-41ce-49d2-b3d0-028da89b49ad",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1b3c1ccc-7d8a-4fdf-a03e-d9eca360ae13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89125cb-987f-4796-8f2a-a0b6ac610ace",
        "cursor": {
          "ref": "61855399-afdc-455e-810c-c3cd395257e5",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d57ca95d-8ad5-4507-94c1-b54d9d44f42b"
        },
        "item": {
          "id": "d89125cb-987f-4796-8f2a-a0b6ac610ace",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b8612d30-c59a-47ba-9cdb-eb32479b1013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb760b8-7b90-490c-8e3d-0444f232ffb0",
        "cursor": {
          "ref": "fe9925db-6917-4d8f-8f13-9f40b4817060",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e7ea7572-37b6-43a7-96b8-132df8390d29"
        },
        "item": {
          "id": "edb760b8-7b90-490c-8e3d-0444f232ffb0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "471d599f-afbd-45c1-a328-da68c57c0340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31860e3-374c-4435-ade4-8ddf4cad9a1b",
        "cursor": {
          "ref": "1fa25fe3-9d03-4e3d-813d-db55a7391069",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4be41cad-b5db-4c8b-ad35-b1bc5f1b618d"
        },
        "item": {
          "id": "a31860e3-374c-4435-ade4-8ddf4cad9a1b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b6935c86-e1d9-461b-a52d-c0b0c4b9d16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b2fd64-1f38-4d94-9479-46af1fcba997",
        "cursor": {
          "ref": "29c14147-e6ad-4f04-a87d-c3bcfd411fe0",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b9be0486-cff8-48e6-beaf-8804e5617ac6"
        },
        "item": {
          "id": "a5b2fd64-1f38-4d94-9479-46af1fcba997",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5c9539f9-aed1-47d6-89fd-2026174a4e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a972f03-75a0-4a46-8a46-b5a6048220e1",
        "cursor": {
          "ref": "77f9faea-1a39-4a1c-9c13-a9a68c29f4cd",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "45b14610-6c02-40ba-82db-8254bce3e1b8"
        },
        "item": {
          "id": "7a972f03-75a0-4a46-8a46-b5a6048220e1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6d4aefa9-dff6-490d-a8fb-134759a48b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c71fac7-2072-4222-8663-c1f18bc5301c",
        "cursor": {
          "ref": "25d30e65-cc05-424a-ad78-1c1a5374186e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1c74212c-16f0-4af4-b4df-0c3bbe27e060"
        },
        "item": {
          "id": "4c71fac7-2072-4222-8663-c1f18bc5301c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "083c3dbe-725b-464c-a0d6-9754c0f5ceb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f06d332-a2e1-4163-bb57-6088cb59b7ca",
        "cursor": {
          "ref": "5679f379-ae2d-47db-9abc-c028e4883259",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "14139ca9-5f59-478c-ba7a-dbfd31f253e4"
        },
        "item": {
          "id": "5f06d332-a2e1-4163-bb57-6088cb59b7ca",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e2a913df-01b4-4e74-be01-8a94852efc7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b12277-ad86-47d8-b661-1c789fe71ed6",
        "cursor": {
          "ref": "107071f4-7de5-4641-a3a1-4d26fea11551",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "34ea6e0e-8d1b-43fb-b4d3-de94fc9df5d6"
        },
        "item": {
          "id": "67b12277-ad86-47d8-b661-1c789fe71ed6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f3619e75-6625-4691-82bb-92c14ec13ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57776b71-7058-4d5d-8fed-36a21c4296e7",
        "cursor": {
          "ref": "16445250-5abf-4e6c-85cc-2ba9c66da6e2",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "53000363-1d7a-480a-b0e6-13435469b77f"
        },
        "item": {
          "id": "57776b71-7058-4d5d-8fed-36a21c4296e7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b9270289-3078-403a-9134-b844a472a6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6089ff1b-c9ce-46a6-9753-2dcb9ae88b30",
        "cursor": {
          "ref": "6001695e-ec51-431f-b15e-16c32ae98d21",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "57f849f9-e5e3-4afc-b57b-248d3469e53f"
        },
        "item": {
          "id": "6089ff1b-c9ce-46a6-9753-2dcb9ae88b30",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bd78c3fc-9715-4fe5-ad79-d28583bc0a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382da654-8950-44e1-860b-73c12329429f",
        "cursor": {
          "ref": "d8ee736d-a406-4772-ad32-58e5f04b2f2c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9bf51d6e-990d-43d1-ac57-737619175d47"
        },
        "item": {
          "id": "382da654-8950-44e1-860b-73c12329429f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "287b8639-724e-4a89-baab-e0217b49497a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7d1237-42ab-42cf-b260-8b0e7f0892ce",
        "cursor": {
          "ref": "1d52c9e9-b4ad-4e4f-988d-ae63e0013892",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ac9ddebd-c3ac-462c-9292-80b5403f985a"
        },
        "item": {
          "id": "7a7d1237-42ab-42cf-b260-8b0e7f0892ce",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "151d9d9f-0288-4882-a277-c833c2612ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d25a263-4e31-460f-ae7a-f5b94434ec51",
        "cursor": {
          "ref": "e2073b5b-aa3c-4531-a484-81d907fd42a3",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1e3bf149-16a5-40bc-9f9e-80bfa99ce4f9"
        },
        "item": {
          "id": "6d25a263-4e31-460f-ae7a-f5b94434ec51",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4fc10daa-4d0c-41dd-b3c5-574371dbb54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e944ea2b-8718-4ad5-8ddb-fbf09f3e9f5d",
        "cursor": {
          "ref": "2c26d2be-0b95-4aa6-9e15-0b8c3d70e5ac",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cc2303ab-2df6-411b-9aed-fb6c9a6d26f9"
        },
        "item": {
          "id": "e944ea2b-8718-4ad5-8ddb-fbf09f3e9f5d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4cf268aa-4d8a-408b-b768-a4fecb1f32ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e6589b-5cca-4910-a35a-d8cccfe53764",
        "cursor": {
          "ref": "0710bf6a-67c6-4c3d-a1c8-da3dba98c3af",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f200af8a-4a2b-4dd3-9446-0f3c5df31c87"
        },
        "item": {
          "id": "f1e6589b-5cca-4910-a35a-d8cccfe53764",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d4bbaf4d-2026-458e-99db-b9c4503f26a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ff20cd-f657-4c29-9746-3e6fc33597c0",
        "cursor": {
          "ref": "f64b3dcd-e6ed-4fa3-9e89-66a134f4b488",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5b1147be-29ac-4d62-8d7b-f4c945f7f791"
        },
        "item": {
          "id": "34ff20cd-f657-4c29-9746-3e6fc33597c0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "56a90072-236f-404d-bd3c-aa3e90de3441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29b1ea3-b990-41e1-8c3d-16ab03b5a57c",
        "cursor": {
          "ref": "b39488f8-7d6d-44ae-bb7d-a7733f43f1d6",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "190c804f-07ee-46e7-8f2a-0885331fd942"
        },
        "item": {
          "id": "b29b1ea3-b990-41e1-8c3d-16ab03b5a57c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "602bfa7d-277d-48dd-a20b-358432bff933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36cc2e7-674a-4e17-899c-ae593c04ff27",
        "cursor": {
          "ref": "9b7a2a50-003a-453c-b673-f7a0121b2d28",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "39c8f6a3-fef2-45c9-8862-325d39772a38"
        },
        "item": {
          "id": "c36cc2e7-674a-4e17-899c-ae593c04ff27",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3b189912-6723-4df5-9f15-5f9c5b94d514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a87b884-bcbb-4559-88a0-359d6ffe3a83",
        "cursor": {
          "ref": "1c1536b1-a2bf-4eb8-b39b-2b2b1bb8daea",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0f4ff27e-d27f-4537-b081-f77523de051e"
        },
        "item": {
          "id": "6a87b884-bcbb-4559-88a0-359d6ffe3a83",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "76db7a8b-4bac-45e4-b531-79759294cd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963cb42a-24ad-42b7-9662-134073e6103f",
        "cursor": {
          "ref": "82318f08-862a-4f59-8b59-32722e9489b0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "65259e7a-5fa0-4377-8a76-c0e872be38b9"
        },
        "item": {
          "id": "963cb42a-24ad-42b7-9662-134073e6103f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "de401813-6788-4313-a43c-9f965ff3f1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a60d8f-6869-4002-a1d7-b0e967cac175",
        "cursor": {
          "ref": "af268c8e-b6db-4d86-ad93-e7318c029d2c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "75d8a0e3-89de-44a5-970e-04a4ff996cf6"
        },
        "item": {
          "id": "a4a60d8f-6869-4002-a1d7-b0e967cac175",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bc0d8c6f-143a-42a6-8fa9-f3cac78109a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53df0b72-1536-45a8-9d79-bfa187a09b9c",
        "cursor": {
          "ref": "97ddbbac-3cae-44b7-adc6-d1868173f930",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "46a18cc4-76be-4f25-9e61-8462e25f8700"
        },
        "item": {
          "id": "53df0b72-1536-45a8-9d79-bfa187a09b9c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "abd69815-109a-45a4-acb8-2908ae8199bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c58c38-55e5-4a1b-b061-7dc455dedb62",
        "cursor": {
          "ref": "0c4c8745-38e3-46b3-bbcc-12308e71e869",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7c3fcbac-9469-47d9-b323-503866d62977"
        },
        "item": {
          "id": "41c58c38-55e5-4a1b-b061-7dc455dedb62",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8742860b-5718-4fdc-8326-49cdfe0b9126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec2a92e-5221-4c54-b325-338ea0f9d6d2",
        "cursor": {
          "ref": "b8fa36d2-9b61-4a9f-a2d9-1a4cdb712f4f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2f024bb2-efbb-4100-8ffa-48ad51496087"
        },
        "item": {
          "id": "bec2a92e-5221-4c54-b325-338ea0f9d6d2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6ddd8ebd-be69-4ed8-965d-1a95f5bc5f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea0dbb9-c653-46c2-807c-2d1ae9190240",
        "cursor": {
          "ref": "412713ae-36a5-431e-8943-2bc2d518d80e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "76ad5031-9f26-4aa2-b568-635ffba1f117"
        },
        "item": {
          "id": "cea0dbb9-c653-46c2-807c-2d1ae9190240",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ffc85e33-2a8a-41d6-9630-77c7f9f5045d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbe198f-f3e8-465f-b70d-e3ddb7ca67ef",
        "cursor": {
          "ref": "18d6e10f-1c40-469a-a297-ccade3bf88ed",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "128b6d37-1473-46d9-9f50-f8776e65d9d0"
        },
        "item": {
          "id": "5bbe198f-f3e8-465f-b70d-e3ddb7ca67ef",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "40f41db3-851a-4376-a1c6-cb42fa80782f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25fb4ec-ba7c-4064-bfa3-5ab18fccc593",
        "cursor": {
          "ref": "0889d36c-9b26-42cd-b709-e876579f169a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d5d5c3f5-4e56-4a97-8e89-090ac7229f89"
        },
        "item": {
          "id": "c25fb4ec-ba7c-4064-bfa3-5ab18fccc593",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "00e4e8f8-79a4-4236-827d-cf87d5a40564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf478a8-d296-4f93-a5ec-58e03ee9b346",
        "cursor": {
          "ref": "b4224ef6-6bea-495d-9836-a7177214e9c2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1327100c-0cbc-4f49-a68f-c3b4d5c31505"
        },
        "item": {
          "id": "1cf478a8-d296-4f93-a5ec-58e03ee9b346",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0bf84ba1-f9a9-4cac-a9b7-e7401e6f0079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6bbbbd-dca1-495a-83d4-7e747efb9d3b",
        "cursor": {
          "ref": "dab1d5c4-c366-4b76-87b8-c9a9f63edb79",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "37030b3f-b64a-4eb2-a1f8-d46ae44dab26"
        },
        "item": {
          "id": "6c6bbbbd-dca1-495a-83d4-7e747efb9d3b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fd674e80-9b11-4d59-b823-4fc8f9b5c59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a928dd-0c97-46a2-aa7b-13d113ec9495",
        "cursor": {
          "ref": "bea66eca-e602-4206-8723-cc02a50ca978",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d046cd17-0af1-4daf-ae4f-169dfb0f1742"
        },
        "item": {
          "id": "18a928dd-0c97-46a2-aa7b-13d113ec9495",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "56c42c08-846c-414b-95c5-e4c1ca17178a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57ce973-e963-4ba7-b579-d4943b27b5c6",
        "cursor": {
          "ref": "a2511e1a-bebd-4e3f-80d3-ffbecfc1984f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5aacab6c-2afc-47ba-9182-8de12540f9d3"
        },
        "item": {
          "id": "f57ce973-e963-4ba7-b579-d4943b27b5c6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6a5b1cc0-c951-4a36-bbdb-df091bfee7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3a233a-9098-4e3a-8c6d-5090d0610dba",
        "cursor": {
          "ref": "3a57f5bc-9ad3-497d-9862-bc1e0f4ad59a",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "20088966-05dc-4a54-9bf4-8c6b65e8e16c"
        },
        "item": {
          "id": "0d3a233a-9098-4e3a-8c6d-5090d0610dba",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "57738db3-5b49-40f5-b6f5-741404de4d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b403b284-acb8-4440-bc9c-6faccf3035b3",
        "cursor": {
          "ref": "f37a7e5a-3dfd-4c10-b0ce-ff68c6616a94",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "34e81470-fa52-4774-91ab-7031ab2f2194"
        },
        "item": {
          "id": "b403b284-acb8-4440-bc9c-6faccf3035b3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b31a4d5d-1b72-4187-b76b-01b40f4ee621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb6c740-4b18-4dc8-8519-2a31d4d85b60",
        "cursor": {
          "ref": "e3c3991d-a97c-4c02-bf2f-cf071b0b72cf",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "280145f7-f55d-479b-88a0-44f9abbc177a"
        },
        "item": {
          "id": "6fb6c740-4b18-4dc8-8519-2a31d4d85b60",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "711a61c8-5005-440a-811d-d35b1b74fd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3b747f-dd4e-4a75-9eee-b96b4c9a43f4",
        "cursor": {
          "ref": "9b917fac-d3e4-43c6-9d27-b19402f76b26",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9c2ab573-9ea6-4464-a412-c2ab2d29b4dd"
        },
        "item": {
          "id": "fc3b747f-dd4e-4a75-9eee-b96b4c9a43f4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d6ac164f-b7b2-4465-aa26-69aa4cb74a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b051a74-adc4-468b-9f75-66a915ceebb6",
        "cursor": {
          "ref": "9e7d5831-952f-40a4-8750-cf59d8cb6d90",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "44e24fc0-6448-4b12-be27-c5e5db8a8c2f"
        },
        "item": {
          "id": "3b051a74-adc4-468b-9f75-66a915ceebb6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c76982f8-1aa4-4132-87cf-13dfb8992c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e591a76-1547-427c-b85d-dffef9ed6fd6",
        "cursor": {
          "ref": "b0ac8c78-48d3-4aa7-9765-7beae3ce09b9",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9bdfa394-0ee6-481c-b781-cc5d4a2cf005"
        },
        "item": {
          "id": "1e591a76-1547-427c-b85d-dffef9ed6fd6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "689250cf-2145-4792-af30-fd8bc60855a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5484bdea-05bd-481a-807f-d713331b8673",
        "cursor": {
          "ref": "57140873-af8f-47fc-bf59-9a87562baede",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b31bfbf2-9c46-417e-888d-29d749c46212"
        },
        "item": {
          "id": "5484bdea-05bd-481a-807f-d713331b8673",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c6efd2e1-ce2a-402e-a6f8-aa4248262112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3f7923-a085-48cb-bc71-71268ca2601a",
        "cursor": {
          "ref": "6d20436d-4fa9-44a6-b553-4945cb8c4955",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7035f8d2-836d-4145-85e2-8cac80dd3abc"
        },
        "item": {
          "id": "3e3f7923-a085-48cb-bc71-71268ca2601a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7d51d2f9-6fd6-4624-a112-3bf062c955e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa65d74f-5b8d-46b4-8edc-04418acfb05a",
        "cursor": {
          "ref": "29981c05-355c-43b7-9f18-b88ad1c91931",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e649085b-2f41-4cdf-a575-2066a89472eb"
        },
        "item": {
          "id": "fa65d74f-5b8d-46b4-8edc-04418acfb05a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "611041de-03b7-4d11-97db-54aff6a98299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ef8f15-7ea3-497c-84a7-bb20089fef76",
        "cursor": {
          "ref": "6dea3a98-4669-48c5-b7d2-c0aafea582d6",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a089d37b-7349-4b5f-8b58-33384ce45294"
        },
        "item": {
          "id": "73ef8f15-7ea3-497c-84a7-bb20089fef76",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d08d04b6-5a6f-4e43-9be9-1dec539bb20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf75b84-243c-4cc7-8128-a21dc99aadcd",
        "cursor": {
          "ref": "3076f3f3-c301-476e-9876-e766b7b2ecc7",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f6b7e89d-3052-45d8-8352-4c89dfc6397e"
        },
        "item": {
          "id": "6cf75b84-243c-4cc7-8128-a21dc99aadcd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "23f0fd7c-0d25-4aea-8702-02601cb44870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994b7c34-336c-44b9-9b1f-a18d6199bc17",
        "cursor": {
          "ref": "40e393c5-b75d-4fcb-a71c-95f84d25e9df",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c29493ee-5ad7-4764-b405-9017b46c048e"
        },
        "item": {
          "id": "994b7c34-336c-44b9-9b1f-a18d6199bc17",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b63f4987-e6d0-4891-93c4-4539baef979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd559e9-dd62-451f-9c7d-55f690da8a9d",
        "cursor": {
          "ref": "8e2ea161-961e-45f8-a325-55d761837b44",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c389e762-ec7f-43c4-a213-b8443603a055"
        },
        "item": {
          "id": "cbd559e9-dd62-451f-9c7d-55f690da8a9d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "16327e86-9196-46e5-9906-080d65753891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89812f69-e4fc-407a-a165-5629eba0fa6c",
        "cursor": {
          "ref": "8e4767ea-4859-4d1f-bc48-023bf4934ce3",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fcc9d469-688c-4efb-9c6f-5978c61451b4"
        },
        "item": {
          "id": "89812f69-e4fc-407a-a165-5629eba0fa6c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9f8e652f-0080-49cc-b818-70baa15560e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5462a30f-dc89-4f30-8ff3-90e7d56f7d36",
        "cursor": {
          "ref": "fbb11282-28d4-402a-b89c-d0c46bd79391",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e42891e9-e2a6-488a-bd14-00dc0c9f52b6"
        },
        "item": {
          "id": "5462a30f-dc89-4f30-8ff3-90e7d56f7d36",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1dd56042-b0df-45b2-bb7c-ad9677c1f53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa41ce5-fb15-4bb7-a9d2-e5289300968f",
        "cursor": {
          "ref": "7e2af2a6-a31e-4e10-95a5-1b4877af8031",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "735044a6-e1ac-4d98-9939-786623c88513"
        },
        "item": {
          "id": "3aa41ce5-fb15-4bb7-a9d2-e5289300968f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "735477c5-8db0-40a3-9dbe-e3ade1a07e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc0719a-9fbb-4006-a5c5-3b592dd05a70",
        "cursor": {
          "ref": "11eb97d5-7242-4b2a-9a65-d505e2a19964",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "eed82174-2ab6-4d9f-8d49-c4f30268de9c"
        },
        "item": {
          "id": "2bc0719a-9fbb-4006-a5c5-3b592dd05a70",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "01085762-4dee-48d6-8912-610cf0e3a909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e3681a-f3d7-43f0-a300-92ef2a60de01",
        "cursor": {
          "ref": "0f35f35c-d46e-43ec-86f5-b5cf45debd4e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "47f3b424-b158-4106-84fd-097c1a7a6328"
        },
        "item": {
          "id": "91e3681a-f3d7-43f0-a300-92ef2a60de01",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4f7d57b1-22aa-4577-84a6-242403f7fe72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0cff66-ff1f-490b-aca8-581c160682a5",
        "cursor": {
          "ref": "a63e8f7d-3201-4226-93cb-b44d87534efc",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8589ccc3-5cb2-4d9c-81c9-5a5de57b59f4"
        },
        "item": {
          "id": "2f0cff66-ff1f-490b-aca8-581c160682a5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "65206525-ca64-466a-82b8-f20930c1eef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31481c34-3a9d-490b-940c-004ba3c78c9c",
        "cursor": {
          "ref": "48952a61-9178-4295-95ee-2e005738f893",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8028f0d0-e5cd-4600-a64e-53892063eda7"
        },
        "item": {
          "id": "31481c34-3a9d-490b-940c-004ba3c78c9c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b16a519f-3930-484b-9e3c-760b5d13b516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a0881c-9b94-4524-a272-af277a4fc40d",
        "cursor": {
          "ref": "ea95bcf7-5f4d-4593-bd38-6f7ddcb7efe7",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "057dd6f3-3a40-466d-80e9-99930460c23c"
        },
        "item": {
          "id": "73a0881c-9b94-4524-a272-af277a4fc40d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2b4da394-4778-40b8-be3c-3c488f0f18d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cd486c-99a8-4c5c-a1ab-30422282ff27",
        "cursor": {
          "ref": "3942d441-c8fd-4a23-a368-2a32297723f8",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e50d3cab-5452-4653-accb-b10c4caa32ae"
        },
        "item": {
          "id": "95cd486c-99a8-4c5c-a1ab-30422282ff27",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "81efddad-4525-4bd0-b5f8-cdb047f89cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd4ded7-fc7c-45ed-956a-22a09697041f",
        "cursor": {
          "ref": "d49178d6-1be7-4f67-afea-993a1021623c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a27b9b7d-268c-4bee-bfe0-d65a39fef4c9"
        },
        "item": {
          "id": "fdd4ded7-fc7c-45ed-956a-22a09697041f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5303ce07-6c71-4918-99ba-9268b36f8867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f09ecb-2995-4dff-b5f0-09f96755d954",
        "cursor": {
          "ref": "43881a64-3726-499d-b376-5e4324734c47",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "89002c28-d5df-43b8-8dbb-57da20c09d44"
        },
        "item": {
          "id": "d1f09ecb-2995-4dff-b5f0-09f96755d954",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f480706e-a7a0-402d-85f3-91a7c3d332da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de47ad5d-e7f7-4622-b99f-2fcb517b8ca5",
        "cursor": {
          "ref": "a2204567-bc4a-4c2c-809d-b35eb3f8eb0f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dfe46901-0292-4e9d-afe4-71c7b8a63311"
        },
        "item": {
          "id": "de47ad5d-e7f7-4622-b99f-2fcb517b8ca5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8844e08e-0b75-4326-8b36-466b0d35f92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e20f65-0c00-4ea0-ad42-cd96bba1453a",
        "cursor": {
          "ref": "08505c52-55c9-498b-8376-7948c6572ce3",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ada06029-ba74-4438-a2db-24b878d0d577"
        },
        "item": {
          "id": "d6e20f65-0c00-4ea0-ad42-cd96bba1453a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "41b5dacf-17a2-4427-a525-196a2ca6b175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35366d7f-7f86-43e1-951e-2fd8ee3d4486",
        "cursor": {
          "ref": "3024b83c-47c4-41e8-8894-239fc04325df",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8054f54e-1848-412a-87c0-c183548e9510"
        },
        "item": {
          "id": "35366d7f-7f86-43e1-951e-2fd8ee3d4486",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "067237b2-2b57-42b6-b05b-67df14514032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5191d7-bfaa-47b2-a687-a5487759d478",
        "cursor": {
          "ref": "833ba362-ce3f-412a-aefa-acb70a46cdb7",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4803dc66-006d-49ab-abfd-2e2b0bc564f3"
        },
        "item": {
          "id": "cf5191d7-bfaa-47b2-a687-a5487759d478",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "14f95c2b-8244-4639-8ea7-006f83a96071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c986d3c4-8a8d-48e6-a6e5-18cb92f113eb",
        "cursor": {
          "ref": "444a30cb-d382-4240-8783-204e7d53b3f1",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2a0139ec-359e-4ce7-9618-67d5a5c3071c"
        },
        "item": {
          "id": "c986d3c4-8a8d-48e6-a6e5-18cb92f113eb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b0423b69-05bd-4054-a10e-cc3bb051ba23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705f9de2-cb97-4044-8d13-ad89bc7da988",
        "cursor": {
          "ref": "8df70652-75cd-4cac-9c6c-5dceae6bf4b2",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c986af77-45b5-4278-ae83-0181e2597789"
        },
        "item": {
          "id": "705f9de2-cb97-4044-8d13-ad89bc7da988",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a58c3300-18f9-41bd-8fb9-6c021a8c4376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8da7be6-0cad-4073-8077-4b0f467f2473",
        "cursor": {
          "ref": "c8eae6ba-9c9b-46db-8615-60734aca21a5",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "324b2fb8-bbba-4fbf-95e4-ed9bcd375331"
        },
        "item": {
          "id": "a8da7be6-0cad-4073-8077-4b0f467f2473",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6500f771-18f8-435c-b10b-69311be82ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b56335f-23a5-416c-94c2-d63e17f5fbd0",
        "cursor": {
          "ref": "02d17327-faf0-46c6-a86b-8382581c1961",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6ca55d03-2680-4f99-9978-0f7903014e34"
        },
        "item": {
          "id": "2b56335f-23a5-416c-94c2-d63e17f5fbd0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "81a12807-5f4d-4983-8249-d1bdc0dd754c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e13d18-89fb-44ac-a68f-6436f15dc1a9",
        "cursor": {
          "ref": "cad66aac-e765-42cf-a1c9-e90400d90896",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "958e11a0-f437-45cd-8b96-bdc447541b00"
        },
        "item": {
          "id": "c5e13d18-89fb-44ac-a68f-6436f15dc1a9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f64f8792-a34f-4c77-8d43-808aae101415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4360c7c1-5488-41a1-b714-5114bca4c773",
        "cursor": {
          "ref": "7fdccd13-2bcf-4282-83bb-eeaecc157a7c",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "17040dcb-4305-4b12-80c0-1563afab8778"
        },
        "item": {
          "id": "4360c7c1-5488-41a1-b714-5114bca4c773",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b50f31e7-1975-410f-b9db-47428b045047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0969edee-84fa-4a78-a118-52d18faa2bed",
        "cursor": {
          "ref": "4f8cb1f3-ba57-4cef-bdcb-dda8d0b91ec0",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6ea9c32a-e146-4c90-829e-2972b897c97f"
        },
        "item": {
          "id": "0969edee-84fa-4a78-a118-52d18faa2bed",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "021e2e3f-7b9f-4973-b81c-4450f904c3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c0f092-177f-4372-9e5b-f6d34f591b22",
        "cursor": {
          "ref": "dc279d83-38df-4630-9c58-9d4958f333ab",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "11865453-eb5f-4dac-b023-e4b31308b79d"
        },
        "item": {
          "id": "e3c0f092-177f-4372-9e5b-f6d34f591b22",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "af7f5b2b-3d71-4224-ad3b-f11a2d8f08e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2c7868-3fa4-4eca-831c-6db5282abf10",
        "cursor": {
          "ref": "e8105bff-435f-4b11-b013-177cb9cbb464",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2e420f20-605c-4e2d-b338-9ecc5c77ffb0"
        },
        "item": {
          "id": "cc2c7868-3fa4-4eca-831c-6db5282abf10",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dc736829-63a2-44e6-94f8-7ff658601fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767dc642-3ac3-4e04-b93d-aaa46b86021d",
        "cursor": {
          "ref": "c9cbc0b6-5fc4-478f-837f-8e82d0c85bef",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8a2d46b2-137a-4038-9efa-e60d67bd2ff0"
        },
        "item": {
          "id": "767dc642-3ac3-4e04-b93d-aaa46b86021d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e1d21c71-cc25-44dd-ab0a-9b05a1962998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84082bdd-af63-43f5-9e0b-d5dfb12b598a",
        "cursor": {
          "ref": "1f13b4d8-8e5c-4b8b-92eb-652292e1d05a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "05d7e85f-a0d0-425e-98ea-1fe76d3bc41a"
        },
        "item": {
          "id": "84082bdd-af63-43f5-9e0b-d5dfb12b598a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "769079c5-ef27-4ae1-a3d8-46f5c488b448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92b990b-d217-46da-b90a-aa60e83a6dd8",
        "cursor": {
          "ref": "fb13cf83-1632-41ed-8502-328b33c354c9",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1748bcfd-de54-4e27-8cb5-6ccfcb28b3b8"
        },
        "item": {
          "id": "d92b990b-d217-46da-b90a-aa60e83a6dd8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8540ec86-14b4-4b46-a622-dd505b400847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07ea301-292b-423d-bd08-d50bca637296",
        "cursor": {
          "ref": "d486d4ea-2c6d-4da6-bcac-4d8b85715dbe",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9d42b7f0-2159-471b-a68c-3e1438d68205"
        },
        "item": {
          "id": "c07ea301-292b-423d-bd08-d50bca637296",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b4d2edee-a22f-45ba-bc09-59fc38eb5063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2aeab9-488a-463b-94cf-844ca42350f3",
        "cursor": {
          "ref": "dc262393-9f65-46e3-b442-c913fd0c41f9",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a81f8042-2f28-4d32-a413-94600a933c90"
        },
        "item": {
          "id": "9b2aeab9-488a-463b-94cf-844ca42350f3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c87b11e9-179b-45ba-b848-e4f0ecb0f020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50e48e9-1caf-47ac-b85c-905841138706",
        "cursor": {
          "ref": "3d3645a9-001b-4e08-9234-2c4008d20174",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0ad5368e-5fd8-4f88-9693-33c656144b79"
        },
        "item": {
          "id": "d50e48e9-1caf-47ac-b85c-905841138706",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8f0eb5e3-f876-4ef3-a53c-ce43fa21ad18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebebb43-f4a3-405d-9b51-4eb31e21c87f",
        "cursor": {
          "ref": "b0bef744-1da2-442b-b77f-6cd94492696d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f4fad293-6260-419e-b8a3-cd19cadbe5f1"
        },
        "item": {
          "id": "7ebebb43-f4a3-405d-9b51-4eb31e21c87f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "edc2f652-0968-4df8-a9a3-df8183c6d539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c761273-d6e9-41ed-bfa5-d89de8afee51",
        "cursor": {
          "ref": "25ab31fa-e3c2-4825-a106-7ee99de5e622",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b841a110-aa3a-4251-89f8-15eadf82e15c"
        },
        "item": {
          "id": "4c761273-d6e9-41ed-bfa5-d89de8afee51",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fe02d816-2c1f-435c-8b73-150c955642bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e64882d-fdbd-4052-98d6-afe7d49d03ce",
        "cursor": {
          "ref": "f5576cd2-1940-4058-be4d-8f4287b1549e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a0465511-fdef-439e-a6e2-c5dcffcf77b3"
        },
        "item": {
          "id": "8e64882d-fdbd-4052-98d6-afe7d49d03ce",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "034b243a-a4a3-4200-ae27-e98d89297f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b161a86b-341d-448f-9f61-853ea8033de0",
        "cursor": {
          "ref": "228b89e2-59d9-4c8f-b5ff-4b0be0fddef7",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a48943a5-6d03-4532-a704-242dcb25671a"
        },
        "item": {
          "id": "b161a86b-341d-448f-9f61-853ea8033de0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "88268e19-25f5-464b-bb35-0882d130be88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97be263c-2747-4333-9b58-ba7d247ffde9",
        "cursor": {
          "ref": "a4d2bcf6-6996-4aa9-9a50-b2f6dda024aa",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9ce06886-19aa-4252-8b1a-7a71aeb6dcbb"
        },
        "item": {
          "id": "97be263c-2747-4333-9b58-ba7d247ffde9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f41fb4b9-9f0b-4ac7-8318-251e65651e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5aa739-81c3-43ce-b037-f701eb9a4151",
        "cursor": {
          "ref": "979c4041-1edb-4561-be0d-9d3b6f1c82a5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "43485fa6-9117-4b71-ae48-46a95a0f1944"
        },
        "item": {
          "id": "6e5aa739-81c3-43ce-b037-f701eb9a4151",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bf9f959b-f1a2-4997-88da-3a44d7b8b5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564c4692-4c3f-4db6-a7e7-e29914cd79f8",
        "cursor": {
          "ref": "b4adb86f-8dce-42ac-a144-914fbc7464af",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d67955f2-c89e-4674-82df-fd60a113ed16"
        },
        "item": {
          "id": "564c4692-4c3f-4db6-a7e7-e29914cd79f8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "eaae3f0d-5d39-4a03-8bba-a6b761bcf27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2932ef1d-69f4-4cbd-9b1f-cba511358988",
        "cursor": {
          "ref": "21b562d1-328e-43ab-b9be-a3b0e6a61180",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dc9884a1-b07e-4f13-a3cc-e92e4a8ebf93"
        },
        "item": {
          "id": "2932ef1d-69f4-4cbd-9b1f-cba511358988",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "20a61190-4816-4125-b7e2-54fdc7f03a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c27fa0-408c-4823-b253-61e567036055",
        "cursor": {
          "ref": "55819a47-36cb-4bf8-9e56-f711ef3f489c",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "77fd1fd8-98df-4deb-871c-2c9cb851946b"
        },
        "item": {
          "id": "44c27fa0-408c-4823-b253-61e567036055",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e3cf5b39-507a-4532-8fe6-7c62cd8157fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a31eb7d-d079-44a9-b1c8-85323d8b35c7",
        "cursor": {
          "ref": "2b19cfa6-f71e-42e3-8657-45dd648bb54e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "45be4d0b-5524-4e52-be8a-8d05da2fa7fe"
        },
        "item": {
          "id": "5a31eb7d-d079-44a9-b1c8-85323d8b35c7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f28524d5-99ce-4adf-9f5c-28acb1241d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cae35b-291f-4e72-9a08-f177d7dcfa29",
        "cursor": {
          "ref": "03be464b-8b89-4fb8-8d04-3015cd6f971b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "dc60f05c-6eb2-4f1c-be63-d43423a18042"
        },
        "item": {
          "id": "75cae35b-291f-4e72-9a08-f177d7dcfa29",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f19c29da-8898-4e93-b6d0-461f5c6c8cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a22fba8-96cb-48c9-ba1f-e1de23706c08",
        "cursor": {
          "ref": "cf296bc2-e641-4c4e-88e1-f377dcc6f6bd",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c65443a3-644b-44de-bcf9-43d278c2c2d0"
        },
        "item": {
          "id": "7a22fba8-96cb-48c9-ba1f-e1de23706c08",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7338e546-0a9e-4a83-b57d-7c0554cadd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64de72be-56be-4024-aa26-b1b2cdcf35b9",
        "cursor": {
          "ref": "9d0626a8-44a3-47b7-b1f8-399248a8e574",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a0781fe9-e5b1-47c3-a30e-da8e3b322687"
        },
        "item": {
          "id": "64de72be-56be-4024-aa26-b1b2cdcf35b9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f36dbe3f-5282-4b31-9ae7-0f235b248743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddf8e87-b261-418b-9ff1-97c959849934",
        "cursor": {
          "ref": "a08b2158-4776-4f8e-a0c2-c476d182a46a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "47001400-9eff-4cb1-8bf0-c0013d8e66fc"
        },
        "item": {
          "id": "cddf8e87-b261-418b-9ff1-97c959849934",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ff8fdcb7-2dde-410a-bef3-13dce64fc5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febed381-9796-4386-9a45-b8e9c311db09",
        "cursor": {
          "ref": "58704b0d-d0e1-4ee2-8756-f6348bbcaff8",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "eceb7265-53de-4108-9bec-2aa67be7302d"
        },
        "item": {
          "id": "febed381-9796-4386-9a45-b8e9c311db09",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "33a15ff8-4e75-4873-8428-5f5ec4b1b0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dd6e7f-1b3c-4f0b-a3a4-fe77dd667e42",
        "cursor": {
          "ref": "639e94d1-5a79-41c9-b9de-b517b86832ee",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6d8789c2-6249-4f49-ba2d-11189f8e6445"
        },
        "item": {
          "id": "d3dd6e7f-1b3c-4f0b-a3a4-fe77dd667e42",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e7127ddd-9256-4804-b029-d9489ee26703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135ea16c-ca32-47c4-b0f9-34ad2e7a82c6",
        "cursor": {
          "ref": "c2e38e29-6b5b-4581-ad80-414735c65f2f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9e353bb7-de78-4c7a-8bfd-4a382988804b"
        },
        "item": {
          "id": "135ea16c-ca32-47c4-b0f9-34ad2e7a82c6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4c8c3492-28b0-4a0d-a9bc-7a524b6394b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51291ada-fb3a-4a52-83ac-038e344a0ae3",
        "cursor": {
          "ref": "0f8c4b5b-437f-416b-ae7f-d24214c3567a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f922003f-696f-468f-a2b0-4e0e8ea06561"
        },
        "item": {
          "id": "51291ada-fb3a-4a52-83ac-038e344a0ae3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "941c15b9-8e2b-4174-b92c-b919d2e3fc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e30764-e1fe-493b-872b-7946e772a926",
        "cursor": {
          "ref": "1e36c990-f6d8-4fb0-a0f2-1159029d2a2b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b377f9d6-0beb-4219-849b-16b11963ff94"
        },
        "item": {
          "id": "f0e30764-e1fe-493b-872b-7946e772a926",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ede07b96-9c60-4075-829f-0724c22ad610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b9268a-55e5-4c4e-8cb8-fbc628da323e",
        "cursor": {
          "ref": "75702b42-dba2-4ceb-8978-37960fd18162",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d19c2e28-23a7-47e9-b144-984302ddd2bc"
        },
        "item": {
          "id": "04b9268a-55e5-4c4e-8cb8-fbc628da323e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "13b3c510-f43e-44c5-bbbb-e7e6fbfc9778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cec960-30ce-423a-a73b-405b8af16a67",
        "cursor": {
          "ref": "6a514e60-831e-47a9-a847-5fdba72b3381",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "aa9c7f91-84a9-43a7-979d-ea2173b4151c"
        },
        "item": {
          "id": "52cec960-30ce-423a-a73b-405b8af16a67",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e836641e-5877-45c3-b9b9-d9830c253d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db1efb6-5d43-4a99-ac1d-2a64c809f507",
        "cursor": {
          "ref": "7b05af6e-8bd2-4c5b-86b4-8c1bb271f2e7",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "25d88d8a-7c9b-493c-a242-6159771a70c8"
        },
        "item": {
          "id": "4db1efb6-5d43-4a99-ac1d-2a64c809f507",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d4a846c7-0691-424b-8e93-03cb848a85b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f18f799-9926-4320-bc05-d0dfebefc7cf",
        "cursor": {
          "ref": "4d82e559-a9a6-41eb-8a0e-2ea1c3ec9f46",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d011b44d-17b7-4ab2-aa9a-8c3e63650cbc"
        },
        "item": {
          "id": "1f18f799-9926-4320-bc05-d0dfebefc7cf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f353f415-83ca-4dc3-a42a-e20539a3cc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b79e06d-2300-4e2a-8be7-5eaad2702862",
        "cursor": {
          "ref": "fe1b64dc-520a-4cfc-88c9-b87f9d6b82e4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8eb616de-a72f-48fa-9bb4-121733e6437c"
        },
        "item": {
          "id": "4b79e06d-2300-4e2a-8be7-5eaad2702862",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "13c53777-6f8b-4526-9976-2d4907f5a163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00bdb5b-f7ae-4f90-aa08-e024aa406920",
        "cursor": {
          "ref": "5402f63f-daf0-4f2a-90d4-31518d0032da",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "16c8c834-24dc-4287-b8dd-488ef8adbd66"
        },
        "item": {
          "id": "b00bdb5b-f7ae-4f90-aa08-e024aa406920",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b3d427cc-8d32-4644-b421-e10379a6d6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3121193c-fe21-4d0f-a278-4f67d0123eb6",
        "cursor": {
          "ref": "e9c397d1-a8cc-464c-9ebe-a2081e48a98b",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "536453a3-19ce-43d6-87fd-cdf4af897433"
        },
        "item": {
          "id": "3121193c-fe21-4d0f-a278-4f67d0123eb6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "766785ca-8e91-47cb-9b81-6177bd02db94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766f3284-9f56-48d2-9692-eaf0c46b1294",
        "cursor": {
          "ref": "6f8d918b-da2c-4fb4-81eb-6fe271126526",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "02119da7-1811-4374-a522-a88d66cff3b4"
        },
        "item": {
          "id": "766f3284-9f56-48d2-9692-eaf0c46b1294",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f4578363-03d4-43fb-a79b-2c8fbc226bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0832332-54a4-4135-8180-4566e0d7cca4",
        "cursor": {
          "ref": "eaaacd95-7160-45b9-9cd9-6d0e8d26ff1b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9306fe27-7d5e-4839-995f-e6b63466248d"
        },
        "item": {
          "id": "b0832332-54a4-4135-8180-4566e0d7cca4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c53f007b-da6c-4b1b-8e4b-72be70e02f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916d1749-fe8b-4189-8169-9916eb48ba64",
        "cursor": {
          "ref": "066d2597-4aae-40c0-b86d-f4a0d88cfd01",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fb884687-01c2-48fb-8212-4097f2eff9a6"
        },
        "item": {
          "id": "916d1749-fe8b-4189-8169-9916eb48ba64",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "49bbccf3-50df-45df-a2ab-18559719148e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04a7484-44a5-4154-8d44-1998cfa8bdea",
        "cursor": {
          "ref": "d848c24d-3a8b-4a3f-8373-0b655b7c3f08",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "528cc02c-fb4f-467f-a370-b149bd01c1b3"
        },
        "item": {
          "id": "a04a7484-44a5-4154-8d44-1998cfa8bdea",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f171fed7-a048-4106-a422-6f1d4f0434d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50db2019-4240-4e93-ac97-89bcd2298bd3",
        "cursor": {
          "ref": "94356dc3-f1cb-4e12-9fb2-162b5258070d",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1d97217d-ad8b-4fb9-ac6c-a87a96af8afc"
        },
        "item": {
          "id": "50db2019-4240-4e93-ac97-89bcd2298bd3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "18a8ff8f-0d79-47a6-a9da-1265bc7dce29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a7a656-a946-44e4-a213-2e20070ecdd7",
        "cursor": {
          "ref": "0eb66a39-429a-4b91-9391-5e3b7c915eb7",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8a0bf16b-31b2-40b4-8e8b-97350dddc1bd"
        },
        "item": {
          "id": "80a7a656-a946-44e4-a213-2e20070ecdd7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "273eecad-68db-49de-a095-062be14f7acd",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3987cfa9-f8c1-4e9f-a0f1-cfdb7f25f060",
        "cursor": {
          "ref": "6623d13a-7be9-4516-8291-1665069a0672",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "26b690bb-1fa7-4a8e-b0d1-0a0220503e43"
        },
        "item": {
          "id": "3987cfa9-f8c1-4e9f-a0f1-cfdb7f25f060",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d019658f-2b85-4829-bf0c-6850b76d86c4",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be32d72-7f11-4080-8842-2142c36c3c5b",
        "cursor": {
          "ref": "beb0614d-8ae1-491b-979b-937155e102c8",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e8b164bf-c29e-4bd2-8a2f-162363cc62b9"
        },
        "item": {
          "id": "3be32d72-7f11-4080-8842-2142c36c3c5b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "975db421-4cc5-471c-968e-8a1029f6ecaf",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36ce857-0b13-44ee-966b-72d972a63c11",
        "cursor": {
          "ref": "374d9b2f-7ff2-405f-a490-a99d75ca5df4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "539ace65-c113-4a1f-92f0-bc74570f83b4"
        },
        "item": {
          "id": "e36ce857-0b13-44ee-966b-72d972a63c11",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "28c26cc7-ddff-4de1-bf12-5376c2dfe613",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36ce857-0b13-44ee-966b-72d972a63c11",
        "cursor": {
          "ref": "374d9b2f-7ff2-405f-a490-a99d75ca5df4",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "539ace65-c113-4a1f-92f0-bc74570f83b4"
        },
        "item": {
          "id": "e36ce857-0b13-44ee-966b-72d972a63c11",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "28c26cc7-ddff-4de1-bf12-5376c2dfe613",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f0cc70-16a3-4d65-975d-c8dfb5790b37",
        "cursor": {
          "ref": "47385171-80c0-413a-925e-ce234df1284d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "805a0638-1301-4bfb-acd8-72dfb1a05899"
        },
        "item": {
          "id": "79f0cc70-16a3-4d65-975d-c8dfb5790b37",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "79640845-d76f-4375-a5b7-839fb2597fff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a9a1d9-c294-4d85-a061-54aeabbb0db6",
        "cursor": {
          "ref": "fdd495d5-4fd1-4864-bc09-69f8c998d572",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1cb0efe1-11e8-47f8-baf6-f3ac9eabd40a"
        },
        "item": {
          "id": "12a9a1d9-c294-4d85-a061-54aeabbb0db6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bd482ff7-f5da-400a-9c0a-0ba2ce47a63e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}