{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "00602e01-e995-4ecd-83b7-597dafe5dddf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "36a89bf2-7c48-48e7-8c18-d5e5b893bf29",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b15da6a-0e5d-4549-a543-95ca9786be4a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c617e0e3-c193-47c4-ac95-5f3f9fefa241"
                }
              }
            ]
          },
          {
            "id": "2955fe46-ebac-46c5-aac9-497c1b360989",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e06d5f26-d59e-4ca2-a5d8-f250fc2ffc05",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ab80a882-90e5-4669-915b-abd30f426ffa"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a1218707-eb09-48f4-9e55-3dd1c5c64a00",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "99fff4db-0a1b-4ac8-b689-038ef9da64e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c15ddf2f-49e3-4d61-92ff-1f79b9949a09",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76295ac8-4442-42e2-8cbe-4788fb2bda07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ff6039a-692f-4450-bac6-8f93c44e1445"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b1b736a-07dd-4a59-b0d5-e20063dc1e25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a46edcb1-e30f-461d-aaf8-a0fcbcdb144a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48311b03-ea54-4f7f-a881-eec9b56200bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ecbe039-b8a8-4fb9-ac6a-22eddde9002f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c400a1ed-07cc-4918-bc36-e5ad23260464",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bb699904-f926-4984-acd5-046c76e92a25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "533ab5c6-c83a-4872-81ad-78a38e8780c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd390e6a-6a42-4a5e-83e5-800ecec16a00"
            }
          }
        ]
      },
      {
        "id": "206c7b7a-c581-4f1c-a189-615e7fff6bd8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e1ac75f1-9541-4708-be81-6028bbc564c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2762096e-41b2-45ce-8228-790db6ea2870",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b3fc053-571e-4c3f-9237-a46c6eb8b33a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c43c9be-f3e7-4049-83f2-78c0be091ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc53e62a-d134-475c-82b5-20a8d61a8d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a415499a-8414-4389-bcbb-e3d7c49faf0f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a5e7c1-1138-4728-be9b-cdbe45f3a186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e0dc766-94db-40a9-8499-a13decb7d476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e346eef-9d21-4844-878a-745b3fd415e6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46c5063-0970-4db2-9790-f7486763dc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a914f2e4-12c5-4ea7-ad04-4040f85b452c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60e1fa83-2cff-4c15-80e2-c7e4acb0f914",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dcce3cc5-d69d-4dfe-9f39-aab3594e85fc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc686ea3-6a2d-42b5-abbe-7c7f64d3384e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac313b3b-b043-44a2-a29b-def0debd3a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fac7b0-0695-4461-83e5-ce4e6d4071d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e5dc4a-34e2-4c82-a2e2-c5a0d042d03d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "90699881-7447-4365-9a1c-6847a37963d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "613a5071-7ee1-41c5-b165-a06d3e0e9bb1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83567a14-2b39-4cc5-b465-62f64a469cd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e0b24972-2b9a-42a6-b5da-1b5ca7609204"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "894ba5c2-24ab-4163-bf0b-d55cd36c1bac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a0b28f46-b5d5-4278-a01f-45eed89f7881"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9bb0ddb-62bc-4760-9478-2bd717f2b1fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a15451a9-c6fa-4911-a95e-577a22a40c80"
            }
          }
        ]
      },
      {
        "id": "7cae9874-ee32-4193-992f-13f3eff1d2a8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e55563bb-4646-40ea-870a-7906660da557",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc037aff-4727-42de-9220-e71f1d3b2ef9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "defcad69-84b3-4265-819b-370d897a66e5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7389032a-1144-482e-96eb-048df8dddd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd42cc1-1895-407b-8d0e-1f2da2a0683f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602d552c-1122-4165-a4ab-ebaf6128c242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7b930f8-bc52-44a5-ae1e-d02a50cf231b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b722720c-f9bf-441d-b685-a07e5de9b83d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529e4987-2483-4fd1-9776-af81f7894883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2796ad4b-de9a-429a-a224-64bc9fd18d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cba061-7d2e-42c0-ad94-ad39e72b1975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40c2154f-002b-44ca-9792-346796286d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf794216-f7ee-4628-bdfb-68c58bfc5b1a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0478cd8-d543-456a-a88f-e151e8e0f0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774cb0bd-1a46-4c5e-9ddd-6512121d92f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab18311-e933-4fb2-becd-ec373df5acff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86ba97b5-f523-4368-a2f3-4874f3358854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78e0201-2de0-48ea-9c9e-2ecfb86a3107",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b716f26a-1ab9-420d-bf05-035040cc7015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb0207c-ffaa-4b76-aa1c-5e2bad1314f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2236777e-7ae9-4b7c-a010-aec480ff9f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f680d490-8dc3-4117-afdd-51ee845dc741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e1c0c1-cf75-43b9-b1d7-4c10f5b68e66",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc8b150-78c5-4509-a458-b09332396ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f1d00f-3ede-48a7-b3dd-f792f92a01f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebae201-06b4-4a6b-aaae-56d420fdbc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "068cf803-8c81-4c7c-a51c-4428053ae31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2073bd6-d381-46ae-a369-843babceee5b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6f33d9-f4dc-4216-bb8f-4564340d045f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875cc5ec-e6a1-4468-a99e-57f5d710224c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096f7b8b-107d-43a1-afe1-e87e8ef74750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d030aca-28b5-4d50-940b-d45ffc5b8ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c9343a-0b92-40db-9869-b87c1a43f8aa",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e371c376-9c5d-49c4-9843-18a2d5c60585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909a2792-4050-4fbb-879f-d1beae1a1305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad23859-5a01-490e-8d5e-514bfeee4849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b82b3c1f-d478-4624-85d2-63931a674864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2b7af1-65a5-4269-84e4-cc1ab2cb21f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35273c5f-ecbd-480a-9b00-6cc973c586af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4d719e-a142-40db-86eb-0360529da7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad12f625-5031-44d0-a909-7dd277f55242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11b156ff-84dc-422f-abb2-fad9f3906101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d574359-295b-474a-93d3-d28226a3440d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c0c266-6f7e-4348-b0c7-ef4852ec8c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce95a309-d487-4892-87af-323c3801cf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b68d740-dc1c-406d-b6a8-472caf6f6b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fd0f99e-0b54-473a-9f8b-5f246fda7fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbf6f79-7214-4c8b-9b22-cf0d8dfe995b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ea8999-2abd-4383-b6ca-f773ae8ae13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e739e645-8e94-4398-9341-f4e73849d6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fe73f0-388b-4e6c-8101-a55855724a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "160e7607-a0ef-4e20-97e2-6ff7215ea04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6ffdba-becc-4893-933f-108c09e62e5c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d21afb-d941-4d15-b78d-a561a8812aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c24a6ea-a168-44af-b9a3-11444a559042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06ac5fd-1bf3-4d0f-a8c1-830d12491040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2925c996-830f-440d-bf93-2af2c184ca8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d3cb01-94d6-4b3e-96dc-800792dffdd0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96d29e5-77d3-4a18-9d1d-3adb95845406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f9dbc0-98f8-4597-9567-9fdfd5856dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f59ea0-408d-4200-a770-df742067ac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abeb004a-d45c-4613-8f1a-c2e564ae34c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36befb1-90fe-4886-8e8c-ae01495f3c7c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11797a3-b9a9-4222-af1f-92783253d86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880a0764-5969-4148-8371-1c7b067bc8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1d571c-656c-41e0-8c1c-15f96a691b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ffb7279-ef6d-4dee-ade5-e5cead4dd3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a5b54a-7d5e-4855-8f07-4037f3e7daa2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb7da1b-2196-4c44-bcaa-7300ca6f4c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c9d3ea-8f9a-4e1a-9d55-a4fa62025f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796d955b-fb9a-4ab3-809e-2fcdcd358688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c91073dd-a508-4cc7-a371-e643e659a166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b9aaec-fac2-4799-95ff-9a619f68a5e5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c34c9f-10ef-4234-9189-de8b903e9f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220e04bc-e7aa-4d84-88c6-ab6d7e49d529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f62a8fe-7bc0-4420-841e-4e3a8aef6de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a38208-b5a1-46dc-b08f-e85f0d9a7e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad88260-352b-4ca5-af53-f1098768e905",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c90e38b-ecff-4302-949a-bf5dfd72803b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3cfe5f9-956f-4193-8c9e-a756690925f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43462828-fdd3-4d6a-b389-010cb8f21185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19df08c4-646f-4b4a-8a04-b7391b285586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88113ee1-57ed-4fb6-b4b6-195229db4459",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cb70f3-df1e-407b-ad50-b4a16cc8a97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2eeea1-e916-4b63-ae39-3454f921cf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2907dd78-677c-4b71-8021-004c3e57b3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1e32843-9d18-4b1e-97c7-d06a8f5f41f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e95843-d228-4ab0-9be4-bb4706b56cca",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f74029-83cd-49b2-8f81-ca248c2f79f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28554064-942d-4d56-b185-7b8e123908e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7022eb5e-9775-47b9-b291-2d0db5c0e76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d625e13-232b-4bbb-8894-362439c0869d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58e9822-5d7d-41f9-82e5-a613f2015fff",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212a175f-e545-42dd-a4dd-34545c70282e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba06289-e4f3-4e2e-aa0f-105638c24c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84932e1c-855d-472e-8f67-9a16278e1524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31951420-3103-44cc-8ba5-219d6ec9e296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1743cdea-933e-4cdc-ad75-4c1c5b2c6fd2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839b6e45-ad8b-42d8-b969-fcf016bba4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2ae3d1-8483-45b6-a6a0-053bd7cc3abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa75101-7420-4eb8-bde9-075fdafeb2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d44e38f-3249-4a88-b5f0-28f0ceb26e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3c07b9-cf1b-4763-a0ce-93650c711c92",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a825c518-3f62-4c96-a391-cc4b75e41e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a3b898-4b73-4cc5-9e70-999e27a33680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eed11be-6085-404e-94da-9b17c41810fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d19f30e8-dbe8-4849-be85-fa31633e1e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0007b1b3-244c-49b7-b192-df0052969fad",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c9120a-fcfe-440c-93a2-ea8e6fcca29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205498fe-d95c-442f-b1d9-e2315b5dfdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3190a1e8-5d2a-447d-8a3e-9fbfcb3e756e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d481972-c632-404b-ae5a-ce80dcc5070e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252593bd-99d7-4c2b-a0b3-28f75459bd6c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b304723-fc59-4dab-8cbd-053d2cf5b9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0b3a8c-64b8-40e9-83f7-de656f0d470a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd38b23f-61ba-40fa-b326-95c654a7167d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "420f90a2-9614-4872-b0b1-148db16d29a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c3a8fe-4607-44d1-b73d-9311cdfd4f63",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef231d7-b15e-4387-b6f2-627b1cb8e303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b2896e-1a15-476a-a8c7-c3b34a452d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d395fcd-6786-40de-965b-6ab1751f9fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1710d85c-2a12-48d2-9172-643f420fe5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b605781-e62b-4e72-893a-b8217dbe2906",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d630cb7f-223f-4866-9959-b8bfbb26f47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9344cbec-f777-4286-8d27-931446de2cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5807a5-84d0-4ab1-937c-9455c8822d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf17f340-1507-48be-889b-5bcd128536c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d84f1a-cbe8-4d48-a90e-16dc09fd745b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56634dc-a78f-404d-bc32-cf68eb2347ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23efd6ba-285f-4e45-ab54-8cf32592146b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0737c8d-7f47-4dec-a287-48ae14f3352f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e1fa40-6074-4b32-88eb-9339e93ecbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869c6e0f-126d-434e-9061-4311912255d4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fc32bf-c3d1-4f61-9e0d-8f3efaf6523d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46fe4cf-b50e-4b14-9e68-52c5729c507b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e28509c-9f3f-466b-b54e-a7147580d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a7f2a4-4c2b-40be-8139-7c2e10ca3d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d48cabb-d230-4ca9-84f1-a87cd0864d10",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815ce42f-3735-4183-b5a2-c0f47c417869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a0639e-ff87-4ecb-8933-a37c012e22e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971fadba-b0bc-40f2-bac6-3a2ef95cf3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9f2e3d-2ec6-4143-a791-ea1a02715612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89da8aa2-d552-4f18-bfdc-f0cf36aed1c6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07fb64d-f400-4785-b950-252e877648e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88db00c-2973-4529-9be9-227de9990d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef55f1a-258e-4411-abae-d97340ed8584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80fc3c35-7b6d-41c0-afeb-66a018541ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b482bbfc-6410-453b-935e-e1dee74709dc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfefcb69-47d0-434c-80ab-78cd6a088243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099c6e46-f999-48de-a13e-8d978218abe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f503e2-5488-479d-9ca7-f09f93150712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc1a554-1953-4174-8579-0978c41d5f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fb1393-c19b-4d49-b47b-3383887837c3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4880a4-970f-43d7-a9bc-9a87a2c22c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91c0e56-0f0c-4223-9bfd-f3cb943069c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217ed5ff-55b1-412d-9c51-f1acb61ee77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "669b7f70-41a5-4d59-84fe-0ad5dc093324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a40a21-a297-40d3-b524-117b9079a49b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9d7b85-427a-40c3-9935-8f81802a9069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46221949-5ba8-405f-9be2-f3d1901209e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76c0f67-58dd-4dbd-987e-10981e25dab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b80034aa-0054-42a2-9ef7-a040f9f3c8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abccfb9a-268e-473f-a0b1-43cddebe8da7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cba759-4a80-46c3-bc83-8969ab9f906a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e064065-91c2-4c38-81df-a5c4b6e59faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9739f158-15b5-4f45-86f0-14dd7cf0bb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43d87445-a315-44d4-b839-5297a3dd4811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e4f042-9444-4af4-837f-b8ea6e3352fd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca15653-ac57-4ee2-b527-c99f9a17a1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedb8dba-ef72-4dfc-ba4e-60f902fdb5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b5ccad-a90a-4a73-92f9-ffaecb08646c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5213094-b451-4c72-8c93-46203582599a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45757f1f-3c11-4231-b82b-0189fa66db36",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31a0e74-aa85-4390-99d1-849d9c01a32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6544ce55-1ecb-458b-9d65-af126a1253e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdad520-c6b3-49fa-84b0-fd2275c24855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1edd3cf6-1b53-4c0b-a953-4ccbb4564c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e244614-37c5-4bb8-bbe4-218a257b76b0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05acfa78-de60-4cf8-ac0d-871bde6e2f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f33831f8-4161-4e0d-b0de-0ef455423025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1daa9dd-6812-4cb1-b6a9-408f6cb395da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09c73480-58b6-41a7-a927-f07b651d8ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f991762-da64-4f4e-a04b-d693026ca563",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba49ba73-eabe-4432-acfa-c78905ab7f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e109d83-8d53-4848-9990-c78dd921b6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd83b70-e0fe-4a13-a823-19cb9a304eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "544b7786-a066-4a54-abd6-c1ee3a5c4e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2836ac24-a881-4392-8811-253b8ac42347",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe49dcf4-da2e-479c-8f73-16e050156711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2365895-2323-40b0-abd5-877b94b3d793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b336ea-a9bd-4dff-8687-e086d23f4716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fc07d5-c1b8-48f4-a17b-d35f132b6a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6f4640-d9cf-4e88-a88a-6a57c3e72ce5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce6cbd2-6e4d-4d80-80f0-23a92e5b7739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461dea7a-b834-4446-a519-fd4a4a028904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5961ddcb-dc77-4f1e-80ae-5826237c284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee8876d-73f5-4015-8b88-c14c8d85489a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759481d0-3941-4955-bc3d-140f2993aa4a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e44636-07d9-4f75-b50f-b493debc0317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c30d90-238c-4660-9f22-8deed2c163cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d58cc61-2b7b-4ba0-8cd2-df4769983273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "14c59fca-0cce-449f-9eda-44dd926cffc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3ed879-011d-4336-8b9d-cc6dd4f765cb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395ad5ad-3733-41e7-bcdb-0d77de8881b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6e3f05-c767-46a5-b824-6e2b6771ed00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa0d6c1-ba14-4250-a41e-83aaaefe5a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0737ab5-42d9-4e29-8f3d-07e26a32990f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2b5b16-bcae-457e-9795-d8646942378b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9ef1c1-61f1-4998-b0ea-3cccef305486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6799f89b-066c-45f1-8e00-ef9c82d0807e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7130bcb6-eb7e-473e-bae6-efff8e669612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d80eb4-a9f9-4cc8-8fdd-835c120af6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aceb2a3c-1421-4149-8d29-4fdefe6b279d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128c6ef1-424c-4e58-9419-f2b9d1fd87a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02004a34-7360-441f-9184-688c63d6b538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b7a00d-fc52-4a32-9d23-56d8a139546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6194aae3-8286-4437-9b99-8b0c15386b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a9d8d7-c334-4fa8-be79-1b306ef7d562",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7197365b-648b-4161-89a1-f529f81cc8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905f4f32-d31c-44d4-9ee7-3ff356d6b1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850c558c-11bf-4456-aa64-26913429531f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0371b9e0-1a73-4a76-a227-8d6388f68098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4538e1f2-9dce-492a-9cea-c1ae3cf22c59",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a324b63-0073-42cb-b854-8459be25ac62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d88af9-40e4-4033-9cbe-50e18e30e8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d15fc4-d925-4f4a-80a1-689ac4b8b8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9752e2d0-5f57-4a96-ae20-1e72e571d4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b58e7a-49f1-4a4a-8227-bba056823545",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e78b6a-4c70-41a6-9ed5-f25efd672305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a800b4-cec3-4902-be39-9c3621f1554c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a81e4b9-569f-4efb-92a4-ba19cf0728ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea35124-caf5-42c4-9f68-a3993d0e9bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3720da58-1994-43b0-89e2-68ec71cdde0d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8f5952-f2e5-4a9e-8fd1-f65ea75d933b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6363dfe-f16a-4244-addb-100fcc8a3897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed52f09f-87ff-4624-a585-a20ae6669ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e52b65eb-7816-4b67-b8a5-bae756be108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2a3242-4c5c-4728-a86f-02d6cd6625e8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a969d2c2-3200-4841-bd0b-e1749f9d96da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36f136f-714a-45b0-94f4-3dc40666c1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8f9f0c-6854-45fc-94c8-5e6ebaeab4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b71277ae-9be7-4a65-952a-a8b504af2d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738efbbf-83f3-440b-8c00-fe49dbdfae21",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2474dcc-2462-484d-9921-61dffdd81836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7534b0b6-a3bf-4c18-801f-7a335fb9ae63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ec6ee0-ae61-4778-a6ca-4e1fd2253569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0cf45b-a762-4f8e-a0e7-92fcb3ad5900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b819077-afd1-4aa6-a8d6-3572d090173b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e598eb92-8c50-4dfe-a15b-728a0e44beb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb70a57-8bf3-409d-8446-4437abf0a79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3eb0a4-04c6-4bcd-8fc8-1de99ff39528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db0bdad1-3ff5-4799-9446-ab9e5c7397c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94ba49b-38e2-4296-9940-9a9e7e5bbc67",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8925f87f-6bf2-415b-bd3d-213772d1c897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83039b8-17d8-4c29-b411-ff823a4ad312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75c60a0-4e1d-4c8f-86c8-fccb58592552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b3f55c-24a9-4111-b811-6fd7b1aa4027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364d4eb6-d31d-4f88-82a8-8c901116be9b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7330a837-3ef5-47ab-b3c8-0104d0decbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71421470-b0a4-4811-8594-7c13b6fdf9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ef1036-015c-4a00-9e40-c5b1b53535d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f4366e-fada-4926-bd71-11256537e5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c8f6ca-fa7a-4576-b51d-ab41d57f0257",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3c1146-a234-44d7-9109-d124cdeaf046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a0b8d3-2c4a-4e1c-a9c1-52667620cb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194ecdde-ede5-4704-a796-eda101e12f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbae695-605e-400d-9a51-427cd39516dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e54cbdd-5fc3-4374-8e36-29e4e72faf58",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71ad784-3044-48f1-a220-98b00e5fd4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8dd5b7-cbe5-4831-93af-00ebc1ad76cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafdef43-15c6-4fe4-b494-189f34dbae7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bd34a2-af37-4457-bfda-adfec5ee90b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc2e9c9-2d07-4f17-824b-58afbe75c903",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af4e7b9-5ede-4980-819f-6783635e55b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f832749-f8c5-4095-a9ba-d735dee4e2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baefba9b-1021-4a26-8a51-347e5c81a836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6f20ea-a313-45f9-ae6f-ac9cbee605ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52aaa3cb-09af-4d57-bf31-be2e0971876b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9919f1-a09d-4524-be4e-bb37faf62f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8985377-998c-45cd-a105-bb3acd6b55ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848ec123-208a-4bce-b815-5b9b52e1cd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5bade6ac-353b-437f-9c64-49d4ee0b67ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9075dacc-f02d-4ab1-86b5-2e978f88b0f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262ceb08-871d-4841-a50d-cbd870cf2ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25445ff4-fb74-45fa-9664-ab83aaeb78dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fa628e-c6d9-488d-b1be-d29f124638ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca30f89-7b39-417f-878d-84cfe4bedb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788b501a-8eb0-4139-b73c-773638005e3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f7a3b9-55c6-46fd-875f-cd25fd347686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ed3e21-f8fc-440c-96a8-0110b8a27428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccc9f2a-6db8-4ce1-bd16-6172050818fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1b96bd-977f-4d0f-a784-ffc05d53e180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34b58ee-27dd-4005-bbff-e04a09dcf8f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756e0ebc-06ac-4e95-bc91-e43582592469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb18b4a8-ae12-46fc-b268-b2c987002b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b42e0a-ddeb-4cbe-890c-ab39bc0e23d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d022ce6-193f-4073-9404-39e634742b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc860bc-5c6b-45b3-ac19-dc3b8fb5fb9b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55aa212d-b727-4082-af29-0c22551fc2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c85e81-4a00-48c7-aa45-ac39df1bf2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf304e58-77b8-4d14-bc19-9fefaf00822c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "79625f42-2d35-4871-9db8-d1a0aa2040e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651dbce0-ae94-4c06-982b-85ecd934cb85",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018d9e24-d90a-4cb8-bb60-2f6d7f06df15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb720321-6658-4ace-a0e8-b02597cbfb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e67a70b-bb8d-4b1c-b62f-6517fe24014a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5af51332-3ea9-40f8-a5fc-07b2d3ba21aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e07277-02f0-401a-9452-7ff797bf6c9c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e3762a-ed7c-46ca-8006-64e11f9c4fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e91d75e-6fcc-4804-92c9-839639b4aa2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aaeef8-625d-47e7-8093-691aa153fada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f37d50c-6082-478c-b832-1e44e301a22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a43c9c-6206-472e-bd9c-7d0215131813",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca27fcc-682f-4fca-990d-26c3b0403681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a755fe7-da52-47a6-b9fd-dff6ae5e68e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fd9edc-1418-4138-ae6c-b6f8a3402ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa04ff0-66d8-432d-b583-6a0376ba919e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b99c4e3-dc87-4a5a-a631-69df762e20e0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0326fe1-6fdb-4784-916e-51799a420b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42c7322-96af-426f-9665-1cf2bad13adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1552034b-fe7d-4ca5-9720-6a47bea5d591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4402e147-115c-4de7-8197-81e3493ea9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22298a6c-0878-4b31-b30d-542dc9f312f5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76319be-255e-48b8-bd27-6fdf3551a3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc9196c-a43d-49f3-b52f-6e2f44361793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2441aa-bd85-45ba-abe5-f2af305fc601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb961dd-c04e-43ee-89b1-8d5287a41fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09934a3c-3123-4cd2-b2ab-1cf683a16fe0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027e03de-cfac-4052-84e8-c1c2fe3a7b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119cd458-558b-4d2e-b203-7eea8b5756f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289627b2-3a21-4386-a16c-ac3e989046d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37d1554-6311-420b-a4ef-f972f3a57e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a47ffb0-dcb4-4aa5-bc3e-610fba2e8acf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff899e5-371b-4e3b-a1f8-c5cbac498a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7c5875-543e-49f5-a5f4-d305c7c9bc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2394a11-46b3-49f1-b273-f2a063b85bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be77035f-70ff-4257-aa23-6f9d3aa3149f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49beb756-70e0-42e8-a487-f9929ff0e7e1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9769b2cc-9b5a-4fdc-9a83-404a1a5efaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e960d818-0d5f-4e97-9b8d-8500f35fd443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86399b8b-f86f-458f-8046-1369d552c952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c035f48-7666-45d4-a844-12cd33aed9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af4f9ff-053c-44db-86de-c35007460dda",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c622e57-23f2-49f4-9645-f8dd053507cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6ff579-49d2-49b6-a905-5866847c9621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765f320b-0a1c-478e-a8b3-447b4e917738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a64475-9869-4d01-815c-a1a000b896fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d566fbb-9a54-4a88-b1a9-e76ef3370769",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9375c1b-bf14-4a11-b4a9-c3a86012d070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8365b1-5534-46b9-9901-c94aa44b13ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea561b8-3fdc-4f75-8f01-5eb965898b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43059113-fa41-4917-9ee7-f078e64123ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7cedac-1ba6-4118-9b71-229f9056a3cc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87091fe9-c85a-4907-8e80-4028867a47fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6482b5a-d103-4695-8567-f0045d493f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e35985-d1d3-43c4-a574-8f020875c95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c20b5fa4-cd74-4365-b3b4-aa66bb8547e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befe29b7-47cb-47b0-a047-1797c50dff15",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d5b5bb-ee19-4b46-bcf8-98e7d3968d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8972d6-cb60-4566-abb5-462b851ac6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93853cdb-8fa2-4a85-9868-6276a6fdf017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29baf562-377c-47ca-b606-0503a614ac8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e017991e-da10-457c-80a4-0ec9b2051664",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3b15d9-5be4-4ae4-a0e5-2c04e2d67616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19595067-04a7-48b1-a1b1-96ea5801a1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9847c90e-9a0f-4679-aa5f-3d38ae7fe6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "537871fd-10de-4342-baac-ad0086145e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581cbbe6-0799-4c3d-8781-5295b82beff5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54dd82c-8acd-4f04-8bdb-7846bd9412bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2f6fa4-c31c-43b6-ad11-3ba28aefc8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d87ac9b-e6fb-4c7a-8eaf-1b251811b98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "052eedc2-b7d1-4c41-9b16-60c8816f0fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942c24e8-c5f6-43a9-91ad-1d1ad1d7d30e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3063e1-a46d-455f-9409-51a41b91a0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2c4d55-34ef-493b-810e-90d3fd32e5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aec223-33a8-4af7-b5ac-4916c247ef9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7073a2ea-1967-4d41-893f-140f371472b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6d874d-900c-4bcb-bc41-f0fcdd49d1d8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be54b74c-04f0-456e-8548-24c44cfe7623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea33118-85fd-4d68-b723-ae17f4612e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e271169d-3d87-4125-be2b-425fa596e639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8849932e-0a11-4b3a-b0ae-7dcce8a832e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fea4ba4-5e0b-489b-9c10-53faddb84ca4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db9d42d-4b5e-4fea-9ad1-4b5e4ba1c143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6582a4a4-614f-4d45-93da-fa2ffc85a912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f294c991-062c-4ba7-a6b2-dac83a44d2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d5f4fa-8cfe-4e3f-9e79-f852ea58263d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67732922-d5a6-4a3e-8aed-ef81bd651e35",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2560ea88-6e6f-4a87-8f44-0ad1bbd50372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8312b17-952b-4188-b43f-2870747d5fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35ff980-b288-4672-9877-5edf889019e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5dbd98-f0e7-4f65-9f57-d76f2108e343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2ae1be-ba55-47f0-bd46-42d1aa29e1e1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ea8e80-f895-41c1-af79-49ba3e3953a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6285e113-c272-4a22-b044-1aecd063566a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe08dbd-f9f0-4ee7-bff0-2aae8640e55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6834000-8120-4951-bec1-41fed1142518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc709840-0cc6-4d34-980c-c45f7e407971",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300dfaa2-2495-4724-adff-7a866c28bfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7447d890-a5bf-4d4f-88b3-6067638e77f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f789f01-8dbc-4f67-bafe-b9eed53635b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1e7932-e640-422c-9bbc-df058767e8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc95ddf-ce30-4b51-a279-094a4f30d219",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f574a9e0-108f-4462-8417-6c93a17fb376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708905db-05ae-419a-8ca1-aaf8cb62d530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29e7a37-3057-4a73-bd2c-644bdc087b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a88c26e-7087-479b-91b1-6fd8d312f2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801eada2-e00a-4065-83ef-a8a645b9935e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131f64a6-27ba-4ba5-a618-ba76f7215d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b431e2e9-0c14-47bb-af39-a2530c7cbc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd14f3ac-6280-4fe7-86de-b7a42c9c01a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd51e911-c139-4269-937f-8b7c0adc47d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45739c7e-9ea7-4655-9a59-ce71b7537f86",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c665175-821d-4d51-9a50-ea6e5ca197c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97b90ab-0e58-4bb8-8987-6a23b4b62e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b225294b-65f4-4101-b2bf-45024754c2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8e43ce-836c-462e-b74f-1ffeea1d40cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea990c7b-55b7-4e0d-a759-8c9aaa0bd2d5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da25f760-d6d0-44be-b5b7-a37b2d460763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704ed9ac-3609-4e4d-be20-647425564188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2a3112-adfa-4d6c-8fe0-45697ad87726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de310bbb-560a-4966-af42-ea8740238682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de4d139-25ee-457d-9448-ea543b9b758f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95350006-ff11-4488-92a6-da0bf519f4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429c366d-891b-425c-b038-06cc23b2eb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2398b9fc-c54b-4842-bb39-b39557481c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90c152bd-03b3-4147-a9f2-8dcf10c404af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf4d6eb-6e6c-45f5-bf36-c5a28f330ee0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081a574a-722c-4c5b-81bd-6dbbb818a10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfed90a8-0fbb-4019-913e-a26a76b08acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c9f9f4-a115-4e42-a55c-167fb9b5e136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5da5b2-a3ff-4d73-ba9c-2cafe399f0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b814febb-aa65-45af-8883-ac8deaf0806a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4d2051-7a7f-4332-a184-bb314f3d01c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda3f3dc-55de-4717-88fa-b61453957a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a164537-73e6-4856-8b73-b9a686e61a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed31a19a-8ff4-4839-b48e-8b3afea53784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1157f00e-4b5a-42a9-844e-b7e7d3d3c6a6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3bfa74-455d-468a-a3b3-c71d2516ad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2594d0-1791-41fe-8475-bef9c7f33d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fd9afd-c79f-40a8-bea4-29fddbb0bab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2087698-6225-4674-a902-dacbdd9e8727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06285d41-3720-4343-bc76-2676acd36f12",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0de680d-4993-4726-924b-21e6a266a902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126efa9c-128b-46bd-990d-730e04f682db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31452c76-267d-4cf2-8e03-c595c61b6c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4634724d-d795-455d-9667-bb5adbce2273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233ce9fa-dbf3-4e13-a4d2-f3c6eedfe652",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7380dcf8-75eb-4442-8370-0a788857bc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb208f81-a6e3-447a-b023-2ba6fd74d6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f37bcdd-d784-4bbf-ad10-22bea08c9973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0196c7c-056d-4d93-9f74-9ef097bcb05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5baad7-d97b-4a12-9eb0-10b4c5f43a64",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1410690c-e56a-4dab-8338-aa2bb739ca42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004ffaa5-f278-467b-9eb3-386c4a809133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757faf03-cff6-479c-bc28-b4c3ca42e39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c71a0d-be13-4ab2-9b2a-0f33253b0b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a1c49a-c923-49fd-9208-15f880c19f5e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d749841-d341-4403-ae15-2ed1b91ca6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "638bd671-934c-4e3f-9670-76d6cc1bdbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab29906d-a2bb-462b-96ad-2857671e459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "953a32af-4034-496b-b1f1-367b3b91377f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39cdf8b3-3f05-4d00-bdf9-fcd7c90923e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5f0dd46-a6e1-4d50-b2be-8fbf5c2975d6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c7c3ee-ee30-4382-b1d6-ea8099d0528d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "898b824d-9959-47ec-9e72-b57d3f231dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e9e54a-00e1-4c55-8da6-fe90608db0b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3e133c6-4413-403f-92af-864688412787"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1169415e-3335-41ea-965b-b683360de081",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2846371e-9ebe-4ce0-ae53-aa0a2aeb99ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b64f6076-e598-4a36-adbf-c638b1c8760b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2a2d51b-92a7-4705-89e1-cfe3072ff6ac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19560765-10bc-417c-9b09-cefb06917c27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c78cb430-1658-4be7-a092-7995bf0aa5c7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc0960c3-fe36-4369-9d4b-7d615e6fa906",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dff6e4d7-9c1c-4dfb-8d8c-4b2d50712073"
                }
              }
            ]
          },
          {
            "id": "5f2c72a4-fbf2-410a-903e-00e12ef85f68",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f985f03-43e9-48be-ae53-2471012ba1f7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4bdad59-3d13-4082-93b6-1de7f73fc636",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fd655c9-a88c-4e71-9803-33f476e217b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "852e7b0c-60b9-4d98-8ad3-bc12ddc76d12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2f18e4c6-f38b-45cc-80e7-b4cf8bcac82e"
                    }
                  }
                ]
              },
              {
                "id": "2b6826b5-d432-416b-bbda-0fa351c20253",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80628037-3765-4ab6-84d9-a325b086c339",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4aa62c9-720d-4df8-8774-cd3b0297f826"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6769195a-9dba-49bf-8ef3-1ac1c5a6cfb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9388925c-94bd-43c3-a5c3-d611681cdecf"
                    }
                  }
                ]
              },
              {
                "id": "5ea637ee-0407-4530-960b-a05b9c34007c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42f1c62b-506c-495c-adf6-631ac1638fe1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95c8153e-d392-4b2a-b944-9be63afc6792"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c23684d7-a5d1-4685-afbb-f1af3920ee78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "55a7cbe6-07a4-4e47-8085-e8f0ee30b921"
                    }
                  }
                ]
              },
              {
                "id": "0aa2bf03-565e-419e-992f-d4a4ca45213c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a767d78-7506-4be8-86c9-aca3ec637642",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f068da3e-39e6-4b6a-ba78-950b79f81055"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e5d9067-8045-4d63-afb5-7818961dbad4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7d0f7ad5-ef44-4fb1-8591-cb140c9ff115"
                    }
                  }
                ]
              },
              {
                "id": "75533e3b-5fd2-43a8-abb1-d42a62a0778e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "484c001b-ff4a-49c0-89bf-3ac92eff7eed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64da55ba-0d8a-4934-bfc7-109e036e9bbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7df2f183-30b8-4d06-8c3e-afa41f8ac6de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ef5ccaa0-7a1a-4338-a807-0efae763d25f"
                    }
                  }
                ]
              },
              {
                "id": "58368650-f380-4a88-ac4e-e3fc8ed63089",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0af06698-91ae-46de-ade9-6db9e18f92b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "805260cb-fb9a-42a5-8d96-24ef94c24832"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e89947cb-6301-4fe4-bb95-989ca689a3aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "797e9381-d0b5-4854-a7cd-5fadefb3315a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2cb7bc37-d8ea-4cc6-b154-92e41f09d605",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38789e3b-5309-4026-a4e7-00ddf1857b26"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3bad9f39-ad21-45b9-b308-12817b4020e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31f7d0df-2bb3-4f30-b973-ce99b24b80cf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcc8363d-76b8-4bce-aaba-c7c67f1682b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cfd803f2-8182-4c59-a264-d36aac4aa710"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3b715e4-c32d-4a40-a66e-2b92f8437c6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cbdff042-f3d6-43c2-961e-e2aed7a1a52a"
            }
          }
        ]
      },
      {
        "id": "a25563d4-ddb9-434a-af63-5418fe0fa8f5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ee3d460e-370d-4d97-93be-2c1f23bd6246",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34fd7af8-6ca4-407d-abe4-34dc18cc8b5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "766eee70-c60c-4b73-b9c4-251c3f40142d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a98108c-807b-4d7e-90b3-86224cbfa04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323a28c2-bb99-4d4f-ba22-d308e21a4ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07929e6-ac66-4bc6-93b8-75e52e6481d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "854b35b3-3d67-4c0b-b935-c84c4b62a5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ecd9fb-98d5-448f-8322-eedccabfafed",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0584037-7f0e-40c6-aca0-8cf71333d55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc82517a-8106-45fe-81be-5f1bd25bb83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fc6ba6-a0f2-4765-9730-1f4d34315ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "282a1da7-1d80-4094-bdb7-96354b86127f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e185c0-7aa1-4616-b0a1-fb27c110fc53",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51e6e51-af5e-4cfb-9449-986aec368a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ba3358-9ca3-468d-b3a4-5985bb1836be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ff6c0d-5977-4714-8b90-5e2b26d81944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2997151c-c4eb-48a4-b2da-3b0e760d5db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da35524-bc0f-45f6-9f3c-dc5e07c67924",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb08ac18-f1af-4d8f-a73c-a6f1902fc93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b051e19f-a60a-4286-bc98-8086463f1662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60777578-5357-486c-a4ac-d905e22702c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e850d9af-6982-48c5-823e-0c6db489bef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354789f2-1600-437a-8f71-b99bfb06f7f3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af63ffb-54a3-4f40-8150-33ab401bb2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0972413d-d0b7-41f1-b9ee-7cdacc1c199d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224c6158-231a-4807-b7c9-02eeded7c97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e884d6-c8cc-4780-b6cb-2b8858e623f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d36a1c-faec-4444-b538-b2a160f5f3b0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2160d1d-8895-41f4-a70c-0de195a8c5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25f9835-0bf0-419c-bf66-6b2d7f8d3048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2482928e-635d-48c2-b9f7-c63ebc2d7067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1061051-5fa9-44f4-a99c-3cc8493d6345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955c9fb8-e7fd-4dc5-88e0-26d6a3a3c6b5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d97f265-9d1d-4d26-a01a-a4a969cf9492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0c2405-5242-4d5f-950f-af89d4e22750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a853cd-78e6-4882-8c94-5afd5a5b5d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5df506-cec7-48bf-8237-846c0d54dc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38699b4d-951f-4e0e-aa68-1888f70f2bfd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17d4422-5470-4dd4-b882-4f1c4030e7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c87423-50b0-4f5c-a02c-d1cab375b186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27137850-e361-4dea-9a72-c2cc2a9464c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "221e33e4-56c1-4f27-abf2-a3fc6510ad72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79cba73-efce-4e68-85a5-ff3529b7b667",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb1be84-776f-430f-b78b-8da335d08004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce372cec-2f89-40d2-9504-33493f699b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ef83e5-268e-4958-a209-a7cebfbb79c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a40e0a8-01a9-4ec7-923b-dac1d522e514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aba843a-be9a-4ba0-a7fb-0bf81a70e44a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1d24e6-3326-423a-a0f7-d7f7dcd07020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280487d8-d657-410e-a75b-a8ae465ecc8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3baeb395-150d-4e2a-a40a-178cc9fc1860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a51b443-0e58-412b-bccc-eba69a00c4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119668f7-1b4f-48db-b4bd-9946d3f0ed30",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c8b378-f7d6-4889-851e-60681c072023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fd5194-64fa-4d17-97d0-2fc3e6a6a3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f158c3a1-a5d9-4157-96c1-bad5dcd3ec02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb5c37b-6451-445a-914c-5d264dc72ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f934ead9-c06c-4796-82af-2e9ed8d8da7a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073aea73-18ad-4a27-9950-45dc236d41ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5180851e-78bf-42bf-8ca9-bc2f2321c277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0737ccf3-14a4-485e-981c-a084b64a5d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05507d70-a682-4792-a18a-40d7d4581504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae30fb33-bac4-4b07-b180-2b10217bc555",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc71b5e-9e19-4e12-8821-c7393269e60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec546c3-d918-4019-8576-1f2a0498353c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecbdddd-26cf-4d7d-9890-c941049f6cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f0afb2-256d-4c7c-b789-b7c7c258cc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5db4545-515c-4c52-8778-ab7cc12d5468",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b818943-a8b9-43fe-a013-40b6d5437316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e833e7-4ae3-4b9b-903d-2306da49b4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741a6c95-bc76-4709-b374-5092d0961de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ee5882-686d-496d-b6db-a2966f1c4b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654affdf-7940-4614-94ae-348b6ade57ae",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024345db-7650-4f56-8e34-6da060262fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2d0787-bd29-4757-8097-00d683bf52a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63754101-24f4-4ddc-bd9e-fd63c4c62248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9707ce-35ce-41d5-893b-876c9f632d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2348454-e90c-487b-967d-045ea20628a2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8a1b56-0f28-4343-ba6e-7b0e850669fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeaaeb4a-7927-4323-965a-5319bc5804a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77b4f3a-6563-44a7-a0fb-537ebb3f97fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "387122b0-2449-46e8-ae4d-72e14e12006c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def20b0b-16c4-46e3-8696-b98ba9147bba",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f8dd04-a9be-4074-a1b1-14049f4846d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d298608b-cbdd-4850-b83d-578d490fcdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dba3c5e-3f1a-48e6-b78b-6121ffd8f82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "56cd09c0-f436-474d-a2bc-7950542e170c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67707a5a-5c14-4ec1-9192-84425a5ee490",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001e8e88-8cab-401e-b554-5b8409d671be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5733254b-2462-4afa-98e3-0142e19d7e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d54ef0-aa01-4e2d-a574-3bb4563c3e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d4e5f0-2ab0-4b29-ab45-fdda171addcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53399759-f3a4-41af-ad92-0092d3e0f036",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da5bef5-e61d-4f09-9303-6d3fe5b0a04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb996ad5-7acd-4140-9423-bb8d58e48577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ee5563-403f-44d6-978c-0c66f7700aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c797f6-8afd-4d13-ab9a-c740c25b93e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08990f4f-3d1f-4df1-9788-4b9bf7edefd8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baac2c7e-4bf0-4ac3-af67-d4932f9d7060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7e0d7f-b1d4-49a1-ab50-f4ed761af9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddcfb21-b10f-44d8-9c68-8338b2125687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b047e6-c8b5-43d7-964d-2c2a0c657d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3c8fa3-aa13-472e-9bd9-f4ebefdc2d39",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255590a2-38b1-49cc-8be7-a87f049bf158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc33adbc-50f4-40d2-bb77-259429ff1b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1098903a-f017-47a8-b699-8fed84523326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a017a972-4572-4217-a98d-97f140f9f35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b01715d-bac4-46b2-a529-4723a8c6da25",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d409e4d-9a23-4b54-a721-62f8acb9e18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff04408f-d905-4899-93e3-b3eaef818de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c275e4-17ff-4c00-9f05-4a43d316a4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36d2e86d-5ac2-4c14-901e-f80ff12a4438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68321188-36b8-4041-97a1-028e3d1b28ea",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a246c1-1209-4747-a484-a8f1b675ab90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64447842-7e01-47bb-b536-44e4d7502935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb73928-ac67-4a9b-87bc-86af825d8089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "970c24be-807c-4eaa-a2c1-6d0f0a3c4ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d299821-b719-4090-a3f4-b6288826fd08",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a7735b-2ae1-45f8-9e36-f55df39ac59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2707ac4c-f3a6-471d-80af-7d655c9ebd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c2aa32-dcd8-4918-b358-77fc3ce4b786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b88a636-0def-4e99-bef4-628216f5d818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12194630-59c6-4ae1-bf93-08a9adbe4ad8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f007ce-e27a-4b8b-9e21-3a0741495902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea99792-d745-43b2-9b7d-a378d500725e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfba48f-461f-4461-9291-ddfb7d317b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7028264-12b9-4071-9469-7263e9be37bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c8e7ad-75f6-4b76-88b3-519caeb220b5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28160953-98ba-4f5f-939c-e1a4e11254b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700d9541-2b11-4a93-8aa4-992cea1b86ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eecc11-1a5f-4672-b99e-abce8eb2d91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c4ecdd-76a2-49f8-9ee8-4b6eda856caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6a1809-a8af-44d5-b0e2-a18770c5ade1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473fd4a5-33c7-4a5f-a11a-fbda0352b894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1cfd7d-e17a-4918-a24e-2f69949a1beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88eb49d-1b7b-4080-9fbc-2b4a6cc79339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "576ff671-0a46-4a9d-abe0-0c46f0a9c82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61067773-091f-4619-8c77-b80b0ad624c2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42094d49-298f-4986-8c26-0f5c217d83b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fe508f-af5f-4777-a5b0-2eeae857c318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4866c8fc-3aa4-4a84-a138-88635dca6b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf09049-806e-4866-9d61-a38ce4641ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1476a2c3-8545-4ef3-97ef-274bcc17a0fb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9314e4f7-8f4c-4d06-9354-0184cb288273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fbee5ec-b440-4f1f-86d4-31cfefb08359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cff10b5-5a06-4b4c-ba4a-7feff08fcb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f586dd-ffa0-45c0-b956-bfa842c389a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542a9ed8-6ac8-4b18-9529-36620fe2a842",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd87e0a-d5d1-4214-bf60-494f6edd2814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7fbc1b-c85d-4b61-947b-7a2926bc71d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715a64de-ef5a-4227-8092-a9faa553b7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5c1517-93f3-4206-81f4-f4f60716eef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b060c5cf-32c0-400a-a057-99de97fc390d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae97fa5-71da-4b5c-b591-0197787cfb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f02e0fc-75e0-456f-9973-d66fb5d58b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3803736-c88a-4c8a-b70a-37f11c052dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f33b6217-234b-4ad0-a9a5-e204c3ea57ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37959750-b375-4bed-82ad-60b5b6312b55",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1458361-2e56-4218-9d0d-b35098e0267c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb05cd8b-7617-480a-9dd3-6545213b6ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c9d4fd-1aa5-462c-ab2d-ff945ef927e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d30088-6c00-4004-ad63-a03136fe523b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cffd17d6-f393-4b55-a3d7-ae123a879b4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70af2534-69d1-4354-9beb-8d075bd2c5d5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6978ac0a-bd9b-4e78-a172-b3de4c4e23e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bc523d38-bf1f-4b9b-b1d0-6d0b04e510ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cad909-53eb-46d1-afac-921b046dc4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e83d519-a4d9-4772-80ec-3836a6e79222"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59e80049-6713-4212-9a94-b8f8c1339658",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edf5d23e-9939-424f-8176-8973f786a9af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d516cb26-66ba-4d66-a516-562e0b1c7465",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03cb52ef-1ef1-464f-950c-07bcf17edaa0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dceb23de-bd42-4dc7-9ec7-126e29a414fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7b10945f-f543-4008-91fd-8d3f08542658"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcb2accf-6746-4416-a51e-2edc3bc9d61c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2c0b510-827e-4815-8ca0-6b18ab26cb59"
            }
          }
        ]
      },
      {
        "id": "1d7a987a-d7bb-4017-8f21-e98299dd5765",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "97703645-956c-40ec-9701-3d81c474aeac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6a9dfb1-ff5f-4399-b992-50d55020f720",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a724599-67c9-405b-860a-f2a611996f37",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82728fb3-447c-47d5-bc3e-ea80d1b01f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14de879-0c5e-4283-8142-117abd5ccec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e861c0-b630-4b23-892f-4cbc3c84aa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3679109d-c535-4fd2-98a9-7c0cb816b306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f48b12-02d6-435e-b7b7-1fed3b513db2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e3ea98-1588-4888-acf7-ba4cdf2d8e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca80ffe-9447-428e-bc91-d94b7f2f50e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20fea61-667c-45a4-bbf4-b166c260c425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "463bd61e-c064-432c-8950-66cf40e45ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7ddcc1-660c-4814-8004-de2f33a57a53",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd70d62-6a43-4f4b-8fad-80872907dff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e79bbba-faf3-4c83-9523-15927eaaf5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b36c85-bc50-4602-83f8-1f23c1a12e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "545b610f-8953-4390-8e51-394cc0459e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23866fd-5876-445b-b763-4018669fee17",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb219dc8-f658-4747-8e14-70c0819fbd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade38270-5e8d-4c37-98d9-b0ee689d0a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d01651-423f-4f94-8b76-d80023eb7201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50f3e203-b7ef-402c-9166-881fa7f60479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1f41d2-d8c5-40b6-b378-fee248bad066",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959c3bb3-a737-4918-8885-0b349a465a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2843dff-3982-426d-807e-cbb9381dc12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9200bd-85f1-4961-a419-5313c7d9f455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc07324-b083-439d-8660-f081c5c5f5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe36e4d-56a0-426b-94a6-2334d547e787",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a760689-e818-4729-8b9c-f7ff6fddf40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419b4408-1aaa-4f01-a3d5-fe677565cf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1630dea4-db17-47e9-bb4c-99ab397517e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fda0fe2-ec77-4f1b-92a8-8f3551e55497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de867b71-068a-4c50-8ff9-d87f80496323",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf2b07a-faaa-4ead-b6b0-c5addf0cd99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460ac9df-410c-478f-9679-2d4480604ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed8af5c-2a33-4e5a-aa22-1dadd889ef78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ad9183-94e5-453a-bc94-d643c213ba21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f677e27-2ed8-4a31-8c08-0a39aa125104",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbc9fc2-8ccc-4995-99a0-6083776175a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb747fa-4d7f-4ed6-9a79-7bf31c022696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f28c70-0e32-4ce3-af11-71fc9f803df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c73e8397-7043-4896-b025-a6213532f5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f369c2-7ad5-4b74-9717-28bc28ff989e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e4c1ec-9963-4edf-a7c6-5f1af275691c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad959d8f-e88e-4d77-b8d3-f1e0c06a4eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c33ebd-95bd-41dc-93cd-17b6766fc58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00cab470-151b-4d03-ae35-eb9d85c6c3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b13931f-5d2b-460e-8812-4e70ac4b4f5d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88146163-7bca-461f-bdc4-a6612a285809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72690f9d-c2ad-438b-976c-31f6594b1035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6202e993-e8e2-4e03-8be5-d113130e8aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d471c7df-de0d-4337-8b02-859bfe0b288e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4d6169-740b-44f0-8d75-a84c90eab6ed",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bdaa7e-e9cd-47a6-8d9c-7b692cb81c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8faca3e-ff89-441d-b7e0-c1efe4f456d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cac53c5-6ec7-45dd-8617-66737b36ee46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c2fc6e11-2d00-465d-b44b-183eec317a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065f55b8-7fa5-4cca-a25c-e05836eb6afb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a9fec7-ffd9-4413-85b1-aff50b444c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9fdc3b-8e64-4a16-88e6-7d41247d0367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c253bc-29e5-4526-a726-a40b4e750eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12a5662c-09f4-4a15-808c-4f16657e683b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eadb45a-251d-423a-903f-c96aad5e7484",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01b5c03-d0be-4643-9831-68ae49cb13c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba94fc93-1bc8-4b9e-924d-7b0a78288270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d1b1ab-c050-4f4b-9e5c-d996d9075e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8338ea09-0daa-49eb-850a-0567ca43fc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9d8858-538e-46a1-b7da-77a93a3aa5ba",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31b91ed-17ad-4afa-832f-efcd1bdbd1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa5b0e8-314b-4feb-bfcb-e871bb228407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed83b8b-098f-45be-bd4c-eec6ce4abe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "22121eb9-9602-439e-b03b-9a82586b2451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc32c0e3-0a84-4092-9394-3f1223ead5cd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a799a82d-94cf-4d74-b122-134c85474e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f34bbdf-ad1e-4ca4-826e-f977236ee042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac32c7c-b1a9-40cd-a19f-ec744d9a399a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a54ef0c2-d775-4294-a2eb-206ba88c10cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f79e3f8-aac1-43da-853c-b8b547f3ea56",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b1d4a0-5321-49c7-92e4-2aee716513fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18cc90e-d651-47ad-9582-b73ac0e6e7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cce30b8-36ec-4724-bb68-93bdfe0ea6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9650ce35-37d2-4a62-acb7-69e37487a7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd79695d-fdb2-44a4-b6b9-92a308ba354c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6b7550-2aba-4d50-a89c-109ac0ddbd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb47216-0fbb-497f-b9ad-33328ec1987d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75301711-050a-4447-a57d-a543fac58ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7abbb97d-f394-497b-a185-ad9866579a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb2abcb-c447-4c9a-bff6-8dec0730adfa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3333aab-d7de-415c-a026-d4a91352ea18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd6db1e-d3b7-4c3f-a73b-181bc5952a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48348a74-56ff-4430-a7ae-bbdfeebdaa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae49b15-23b3-4ca4-8247-c418b0a87595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3af0712-a1dd-45bb-8db3-098a4eb7a6a9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a683f8c-423e-4606-8a77-c5c8985acd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7db78cc-b305-4695-8a28-482c07c53b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a498bc2-9c1b-4952-973d-ee9fc3cf4495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c8370d-7590-4ee4-a710-4abe4b1f2fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64978a20-0e37-4e2b-b2f1-5e55770d25c8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e851afd-a7e6-41c3-84a3-0e1fdf9e89c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c0e52b-604b-49d3-90e6-e4c48fb6ee0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9e5b9a-14fa-42ad-a075-f01ae6b75b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30f0c31c-95fb-4ba8-9c87-f1ff7906daf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af39a172-0a6f-4a4f-9680-d8b298ff2325",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e67bcb8-72e5-4fdc-8dd3-96b81fb53a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85043783-234f-4b86-a051-ad2f20a72991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7636552a-1268-4115-8045-24994aa66a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c16f3ca-dd14-4541-8e69-3d55f86a1713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed9eba3-aba1-4c39-8ae8-6aa26cc022f9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab57dce5-08ff-484e-8f44-01f6da3a4579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9c3056-d284-498c-b355-154681a3ccdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713ef8c8-4896-4299-a130-82e6e2d69722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c81b8aa-d544-4b76-8cd0-56b715cb1f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81832261-a86a-4baa-a8a2-00755514b736",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd71e882-ea6e-41bf-b546-85d3c74cf79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef2ad5b-4e0f-42e1-83f1-e7bb89d15f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7004519-e5aa-4d4e-8d41-4c6749eb0c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "297a2b9b-75d7-4c2f-bd15-0509822f2579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38436aff-3fe8-4417-af37-c98b3a974a50",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058ae5a0-d592-4a33-873a-1d4a861e24ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ca0709-d071-406a-8db7-4ce0bdbc3cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb1758e-a2d4-4cd8-be6a-995c32f67d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e87d6c4-8ecc-4dc3-879b-7664a2529bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97515d03-70cb-45ce-9bfc-9ce2523f8492",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c56c170-9bf0-4681-a852-ef7c86712705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927b703d-3dc0-4a52-8f66-ef45cb59a7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a7998d-063a-450f-ada5-9077ac51c8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41417978-44a3-4833-9e9e-5df2addf0a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3e06b5-9ebf-4f0b-8468-163d54b5d116",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3192a9b2-1376-4739-a47e-e36e62379c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbbee7d-1504-4ea2-b190-d92f1f90fb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927077ba-c0a9-40d2-abb8-6462caf782eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7385d412-5f86-4356-a750-59bfd872a6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95837006-4c5d-41f4-8195-1bb51ce42fe7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122fbf3c-a82f-4e6d-b3b6-8159f08e6a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def08107-120e-4691-b995-b256813814fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0d1888-4b9e-4d19-acae-62cd22f2579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b217e86-7ccb-4bee-922c-e257f9494638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3676272e-6320-445e-a5fe-e2a30c77cbe8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97058adb-d16a-4183-88a5-ee19d1a03ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e854dc-9585-4fe7-9b95-4c0d3989af44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddffd40-144b-4635-a295-7b8f67ccb9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a095ba14-661e-417e-9ab5-fd74ec0036aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3c9b46-7ed5-4a9e-b86c-c5b0f123f338",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a8a9a0-1a88-44d9-908c-45dd04e30de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a78c9e5-8612-420b-80ee-c4492aa9a526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236f8326-4558-40f6-8b4e-5d2afd259e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbb92b4-4d4b-4c60-821b-91b702e44a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a2371a-4f52-4fdb-a08c-99545dc2d2df",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db5ebca-08b0-4a01-9008-55c883ab36b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23703392-f5d8-4f3b-8a31-8cd5ba84670c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fcd58a-9b2a-4cf6-81a3-36d061c422e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "597259c1-9246-4bba-832b-f47611abdde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768977b0-3724-4426-9d13-5364e9be12b4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25752570-98b5-46ea-b538-5aa5e569ed0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9254134d-9d7a-419e-945c-c768de0c1c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60e2019-0b98-4963-ad0a-74c2d8918395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc55559-25c5-4e14-8d5c-0170653f44eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735c8b32-8968-4c9f-9059-49cf7231d1cd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd17a81-aba1-4060-819c-909bac95eb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55886396-9961-4dfc-960c-832b1a90a9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa902b72-cadd-44ef-afc1-e0e7f9720dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c020410f-c890-4ccb-b1f6-66e246bb81b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc334842-ae89-4fd1-a644-f90d12b6dba5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad4b369-29a2-475c-a0ce-af198826ba7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef18197-86db-4954-b7d3-432642b9292a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5617f814-ff39-4a09-9f11-e32ffdb5dc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d970cfe-e673-43c6-b4d2-31b79a26dcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd67d34e-a9d6-48bf-a027-004e7b949789",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c833e795-ccf6-4b8d-bcbf-923c01405bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e3b9e8-fbe8-4c96-aaa0-e4308d0047f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be46643-956b-4042-bb82-1e7cab81fd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "585a39f8-8ff7-4ed5-a48d-bcdd3c2fb76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9d7a02-1231-45e2-bad9-97cf5ff2462e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b954a877-d6b7-43cb-a362-4e4140f70c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f055a3-214f-414b-9c8a-b1752e1a357c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0bad98-8c93-4823-8479-ebd0ba361699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "124c0e92-42b8-4505-a959-1ae58d156548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ada3979-6a87-4d8b-9672-a3d5a4b18c15",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f029477-68e9-4983-9678-63d80eae4f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59edad36-ebb5-442a-9f12-fa4230bd3f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261b6f4d-41d4-42ff-91a1-3740f044f7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a7f90b-2520-48c0-b35e-caf572e82492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24347019-fc40-4f07-a10c-b710fa50dc04",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62ec0ad-c1ea-487f-962a-7ec0c24d08ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31d085e-1c0f-41ba-bdb3-4dec80f51ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc510d5-a09c-4f7e-a956-ac2beab27731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d31298e-0c97-4452-a2ae-b3a3df5242f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6a76d94-0608-4eae-9c83-7bfedb1cd609",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a783bf95-d4bd-41e8-bf35-ebd833f5d2b2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b116e54-2e91-49ed-b878-2429bf424b33",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc81f58-fcd0-47ef-802f-e34b5a46d94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ff2897-b4cf-4d7f-907f-303065207fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad6451bb-de01-440b-b2cb-63f300d69c18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "140a7791-3506-497f-97cc-0302299dd9ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2de57e1-af0e-4f67-8333-24f607557651"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe80a6f7-3e07-4201-a5f5-0c1a6066ad6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c84d8b23-c742-4935-a745-fa29804221fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d05a4824-7a36-45b4-9354-2e659f4ae089",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bf54e747-cf27-4ad8-820d-e5e45ccc5e7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7c78016-b6d1-4752-aa47-14cf301fef31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfaf6f8e-1cbd-4bbb-b2bf-135539f05363"
            }
          }
        ]
      },
      {
        "id": "afe830c1-35a0-424a-8d36-7c91bcf31bb4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4e8560b2-7966-4497-91e2-dc8caa74d77d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7c94ac4-ca95-4680-bbd4-52d1a63fde6a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0aa10ecb-cb62-491d-ae46-e3199ba51e57",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c523de7-2e80-4aaf-abc8-a972f5bfdbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a14172-f7d5-40ca-bbe6-d5a892744016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d283edf7-d9de-4f5a-8193-787b012b4603",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5eba7d1-ce8c-4b61-b267-d653df093bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0911ad-c958-43dd-aef8-22e4dee103f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef157abe-e1e0-49ec-a54d-5f2f75df5877",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b4cb6f-da0e-403d-adb6-ddbd27944d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3450960c-9cc2-485c-928d-995edb2af0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38f5289-b6d4-42f3-9982-81bdf832947d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28ddde5-9457-4feb-b432-f42307265411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9b2ad2-0c9f-45be-b79a-391a662c111e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3eb096-e41b-42f8-88f0-f469f47badaa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5728b9f4-5488-4288-a636-7ce2f86737f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee8d929-cea9-49bd-87dd-a04def9f3f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1afcf8-36d7-4888-9098-de6b03881c26",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5420940e-cdc5-4d3e-9011-7432f2ee1c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc51e616-115c-4dbe-acbf-156901c3f10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e80b2f-1c96-449d-b67b-464476665fcc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4df27c-f568-4a6e-acfd-6e7acd647ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc02ac0-12d0-4b38-b149-85bbdd79c708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea52b009-7dcc-47ce-bfa9-ffd46b90023d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff6cd53-ab90-4f0b-b876-4be39fba2216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3474ba-8273-4929-82b7-b1d0695c0e65",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20ae6e7-39e3-4112-8e2b-c5c40eec4ef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f6d813-d9b9-49d6-9b95-18ece45c6d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6f0f0a-b774-4d7e-97ce-4bac41f695fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08accf60-2787-4f0d-8509-74c1b2ed4555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3b4918-7e57-4da8-bfa6-16277e4359be",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff455cd6-69c6-4758-a1c2-c509e18addbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1967cce5-0505-45fd-9c7c-f50c05064d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d191fe-0ee5-4045-814c-eb19f4a7163c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a02a7e5-9fab-4bec-ac0f-6abaa7daf607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a977d900-a94b-46af-b008-fa42b5902309",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec1ece0-a197-462c-8db0-571e2de5069c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "781e9c76-1543-4220-9b30-a36802fe5aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dc3d2e-f088-4e47-b9ea-772efa3dcacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a85085-0000-4c75-b2e5-a453e38f262d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7e570a-1854-4984-81cc-9d3cdbe52746",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a37fb36-d664-4ef6-9137-4ebac1268bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852e5418-03c0-4e2a-9dc7-f0b999744a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e8a00b-7889-4c62-b1ab-200679f8e20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8091a1-e73e-44c8-b7cb-3ddf6d9521b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889956bc-ed0e-46b4-ad97-a51795d39e7a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905aad20-1782-4f44-96a3-e637d56fa3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a897d7dc-99bd-4154-8973-029facbe321e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f95be77-8ceb-484f-9b2f-2cd785834012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b10631-1e84-42b1-a066-fe0ec4361f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fdd752-2859-40c6-bafe-2479f69f180a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b494c2-3188-4ad5-839e-72c361022234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254174fb-b4a8-4e81-80c6-36340d903cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6dfad2-cd91-4079-b410-e983e77de80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff67cee-907a-48e2-81d2-20caff38fd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a459d8-9274-4c7e-ac0b-361cc87c306f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d64715-6dc5-46f7-bd31-2e5d314634f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b8a3bb4-7e90-48ab-b073-61033b9a752e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e62ff9c-6648-4683-8fd4-72a16157979c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044b84dd-424e-41a4-b304-80332e771420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b9ccfe-627b-43c2-9d38-6f55c095d109",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6a5870-07a2-4c15-89dc-93650f790165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b25c858f-efe4-411b-8103-5e42c739ab77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2458cf-23d9-4706-871a-1e1a854fbd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518d3c5b-cb62-4b94-a986-12412ecd2a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49827961-0017-4a12-850e-70c2842048fc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97a5919-3a00-405d-a99a-aa150afb3a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1aa0791-7913-4625-92a6-de8223ce6df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6b73b9-65eb-4e85-8ff4-7de6613f1484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8c35aa-4168-4f01-ab92-f5e586ee3b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d71dbd-85f0-4e3f-8f2b-b5a5afc6914d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c32570-e6c3-4587-8b6b-9fc4002951c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7890e2-b44d-435a-949a-a052adcd91b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e248fe70-ecbd-4b0f-99df-a01a6a1e523a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda0de28-0618-45c2-9c3f-ae31300bfe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3addba-4ff6-4e9a-a8ad-d8ccc68adf5d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503242d2-f61a-4d82-8491-af96d3e3c045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddb9076-750e-48db-b21a-03974c5c4623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9603e65-4273-4e3c-b535-e8969157ee79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a424e76-3aca-4a3e-939d-ceedcdd2588b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ba0318-c8fa-4a52-8cb9-33058aee4ebe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da62530f-b810-47cb-9f5b-f6bc4d0c174e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057afbe7-8924-4eca-9164-6f9c17ee90b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a47bf6-4259-425c-8dff-b9533f4b26ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88679d61-4673-4935-a96d-179445d5946e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c033ff4-5cb8-4cea-bdaa-5e6ba0b23d30",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53eeb5c-63c6-43f9-b10b-974d5fbbb7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de756d04-499a-42a6-9073-8206727fdcce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663b1be8-b2f4-4e2d-b4b2-d6bb341cb9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec77517-9b0c-4b63-8325-88fdbd443c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f98e945-270b-4f0d-8d73-d6ccd5bb2435",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9d7ee8-9c7f-4b20-8c15-2960c60725d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea88c3f-8887-42d3-aa23-c5c042758d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b694b5b-a08e-4d11-b641-35583e62315a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdb1eeb-c2d6-4520-9c49-78fcef3e4fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa104b0-a230-4b64-98b6-e51aef96d2ca",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ae5fe4-2e3c-4b15-a4b6-239596886f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae76c6b-bbaf-4085-82df-fdce84275a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8834b537-9ed3-4c85-8f05-50cfd8154862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d29293-011e-4169-a4de-4a4efa339f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ea3837-2667-4618-a780-bbd50367f332",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9b52aa-7806-4975-bf1e-68b81e377e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca0b39b-4931-45e8-bb4a-6e09b7d218b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e92626-3e15-49cd-8acb-4f6bbb8d0124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf932f21-18e8-40e4-85d1-c47afc2a5271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba4030b-8e09-4194-80d6-b863cbe3313f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c279396b-a148-41c5-a8e2-50d19c2b9d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a29e68a2-1a1f-45c0-b7b6-b00867759a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a1bc84-5f46-4797-9df1-99ba61a4c1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf71273-7162-4527-9315-cfd96e01887f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e24c427-6bf6-4031-ae24-4792e8278eeb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6982264a-d417-4e28-a117-d0c9fc1ba890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b077ad5d-187a-464b-8b93-0369496c20ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9e5ce1-cf18-4161-93fe-dc87d6df3a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f457a27-84b3-495d-a531-7f36e3c629f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929c2c4c-3d56-41a8-8615-6daed8d270da",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88911977-2d90-41db-b9be-eb05d537b1d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adfb1e28-315b-4839-ac64-7fd8585f4da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895a9ead-8f44-408b-804f-57ad580485ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b46440-796f-4458-a41a-748a29561a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd67c37-8988-4506-b7b1-6d7684f3a816",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad4a8fc-825a-4d03-8e9e-05840ab66932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adaf5c96-21b1-48eb-b565-27d79d3b7626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337a3819-a73c-4205-848b-ac32c30dbec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844ae093-b6e4-4d0c-9ee4-0c7b8d6d31d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb25669-80cc-4e01-9be7-268d7b7ef1d6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24e0ecd-bc29-406a-b179-a999aab92fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21e3132-da98-46ad-b82d-a616b6b7799e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6be5f39-1f95-4921-b493-7aa498011fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fed3733-566e-4a91-8a22-9fdac19c50e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6d5bb1-b863-4bc0-9b9e-1d0fa3d2b6e9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c8187d-ce67-416e-8f41-2677f40614da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c887b97-4628-452f-a6cf-05740c9c6e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1670ff0e-5954-453e-90e1-27d23f67fd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d30bff8-5adc-4f00-8ee1-5d8b717ade66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab23b7a2-0aa7-440a-a5eb-6a839a0aa841",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f303f0b9-ff98-4bc3-b60e-52e3a16e7f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaac15da-296c-4f1a-a549-759b0db8d204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc56d83-54ef-406e-8f6f-46929fedf4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40da4071-b5c1-4f96-b7aa-33023a725ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fe0575-27b5-4612-86fc-8b114714b3fd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c2a0c3-aca8-40d7-93d8-8ec9b109b118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0399ab6f-83bc-4333-8da7-ac4a2f4691a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16092a5f-49d6-4d4b-8f3e-6a20f6540761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56c091e-f91b-4035-b797-be344b7b6e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8095ea-605d-4115-beaa-e14a96dfe96e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d91794-f525-4d44-9138-088aa6282191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eecb432e-4dbd-4695-b16f-ec5f3ed699c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571bd56a-58c2-4bf8-a7c9-a94542e08afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e337eeca-c512-4d7a-aafa-011daf400319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32079947-d8ec-4d33-b717-2eac67956660",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dced9a06-f0e1-470b-b233-be9a07b28572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcb3021f-5b1f-4722-8718-090101230e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553d28f3-09bf-48ce-bb5c-6c10bd6aad02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0642b94-bd8f-4e3f-ad2f-3e9e5d5ddb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184b3dd1-45fe-4b38-ab4d-259392465d1a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c0968a-3636-45a2-81ff-12c4b452383b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0c0b98f-5412-443c-9925-70dfc11c8d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0283dd-9875-47f1-88a3-6aa5ce4e2333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44d8605-358f-4df2-86e8-33b85eb51c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b503e14-f66c-4a08-8a04-856a95504754",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e206876-8d5f-48bb-b360-44aa955defd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea2760e-01b6-4d91-88ef-5d3a76825f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1276c64-8b37-439b-b9cd-54d3d9f9a46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed49f85-46df-4918-bcf4-c1dc8ef36ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d235f3dc-1c03-42b7-9f84-312292faf98e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc0ab6f-9842-4a09-9f72-296c81ab59f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272fb39e-96fd-4198-9f7c-9996433e60ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04702570-92c6-4cfc-847a-39a295aad453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1969a359-4d26-461c-8a7d-edbefa9e22f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f3d74c-1f08-40ab-84bc-1067996aaacf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00080806-3d71-4ceb-94ee-c3c4d2a48702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c91b2a0-cb6b-42d9-8d9d-6bc93e856613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df28a82e-3191-4574-aa96-c6e12d117c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f45f4c-be1c-4e5a-816c-d51c20a9c14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22df12b7-332c-4eb3-922b-6ad43c3eb97e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e3d5c8-afb0-41cb-a3d2-ba90c8d6ba37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59804bd9-9953-4b56-937a-8a481c222ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba09d191-d800-424a-b321-e299c0a7c624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7deddbc9-59af-4eba-855d-ff11d6d3e292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca58f5f3-d8da-43a5-bba3-6cd36876449f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0f8d32-841a-4e76-bc1d-182939a2ca9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f19cd5-5a68-40c5-97af-e8681b5ef093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf6d645-0d49-4dc7-ae52-ae68a0ca0f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdff6872-5207-4d5e-b2f6-812066e47a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a84af48-cda4-4dfa-8b1e-d96fa28a2716",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27b4e3c-bb89-43ff-9498-5b5b2be3a96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba879146-4e10-4943-9735-207f6e6da819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf5349d-277c-496c-8359-4d73de0fb177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be418f4-e0a3-4661-b65a-21632edc04dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed129768-5213-45da-9367-4a174f23d728",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e91d8b1-4975-4ff8-a428-ac56ed838a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c98956d-1252-45db-b26c-2165e33c5bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a581cdc8-4ad5-43d7-bd96-e33716839933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69dd06f-9b45-4630-9436-8d9e5ed56af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0278b37a-1ac6-48be-beca-b46d460a4be3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c19f614-43fd-41f9-9e92-3087a39f2bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a891b31-7121-4d14-9afb-4963ce32cca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f96105-210b-4663-bb79-b8be907b08f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52d8639-4ae9-4ade-8c59-6cb4b31053e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f43ecd-f0d0-45f1-be22-20ca61908b79",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c853470-e3b8-4aff-a477-991e1f2b09de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bb8879-fe73-47bb-bc51-140ec56c3cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7d82d5-8542-4ef5-9eac-d44f3ea25af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9be87b-29af-4c62-b438-749645c956a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ddb6fe-0ac9-4342-b628-9a9670d8b9c9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ed4909-b760-4c95-a51a-deb797c00c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bc7f73-7674-41c8-a01d-75e322ef2a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ba9361-4f09-4239-8d31-643eb05ede13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81663f85-3bf7-478a-8ccd-464f894a3535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606c1d0f-9299-48a7-aeee-de9476243e79",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b28111-b9c2-4f7c-9e0d-75d99bc2cea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b818da06-411b-4160-90b4-520c63c9671f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b2e3a8-fdf3-4025-a4b1-0a68751b2c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48d2622-60d7-4a45-993d-f468d2a83d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb56277-1a66-4519-8ad6-e8f3a2d1f66b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bed317a-669c-4f37-9c55-07b6270e3ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3544fdcc-4f6e-4494-93be-e5354666ca77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af07129c-366a-4a24-8982-bfaae248f008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b567b08-dee8-42a3-84e5-9b865d0b8924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a500e231-a246-473c-b1d3-905d6230ea29",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32519198-1c2e-448d-b6ae-e7694d75ea2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eba989c-5ffe-44e4-bb78-e02d863932d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f75665d-3961-44c1-aa51-393d5e8a6f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9384c6fe-3e27-4e11-aed5-dcbe35254e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b074644a-d77e-4db2-bbcf-fbe160f898ce",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9247bf1-6025-4c91-b560-5db8571776b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8192c776-3401-4192-8ed8-d02e39a770f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d216bb-f520-44c7-81fd-250fd73743ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f012c7f-e66c-44d9-bfb4-c5b4e65ba7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd7c55e-86e2-4d4d-87bb-b2eb858bc93a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585f57e4-8f47-4acd-96cb-e2b5ffec7843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edea026-6671-4373-95ce-9798c2528e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10902a91-5689-44ec-a7a1-082d375815b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135ec01b-3a9f-4273-b493-9fd8401e2354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8ae72f-629c-462b-967a-05cb41743777",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2f8b83-8036-421e-95cc-3cc0286be3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74a33d8-4a55-44ea-a569-bf2426f0dcee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26316ad6-ab98-43e7-b14a-6eeea11b14a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f284210-fe27-4aea-b8ec-f170f2c272b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372c0fe4-d33f-4265-a24a-a705c9690bba",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d89fab-86e7-4203-ab6f-2f2245aae41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2db2466-5ef3-41b9-a847-177e1f928af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d61652e-6c0d-4d0f-829a-68c338d8d10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082bbe2d-3a01-4069-a303-6fb35c925614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad5ff2a-26bf-4776-9129-9a6c7a38c0fa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530dcb2f-379e-4bb3-9976-374785320881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b7a9f2-7fb0-48a8-b10f-860a89cb5d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10f1bd3-a7bd-4bd3-b7bc-2b37ee8bde7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745344e4-f3b9-4728-b73b-28192573ad08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4818037a-76c2-4ebc-8418-450fd86eef6e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82214d97-f45a-4ceb-b0db-34bb9d05943a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d650346-0df9-428e-8ebb-5e818a7f1735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2df58b-132e-458c-948c-37d1690dae1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f65d91a-d645-4990-bd48-4ac85c078f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36879e7-cf45-47a1-9043-58a09e088000",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9556eb-66e0-42d8-b089-e55b12def40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4240ee-18ab-4190-bdd3-074c172ee2fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0179f8b0-b688-41f3-9f22-c2f947e32c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa079473-981d-4546-9e96-e1b31176d117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3b9c03-1a7f-484c-a07c-1a89dbcc40a0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bf70df-8ff2-44c2-adf5-c36a3008d777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b600eb0-cbd7-4404-a70e-90920d1e50be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7596811d-905a-4d67-bee6-4b354b3bcc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6882b2-7985-45e4-b48c-2eeddbb2966d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d75a0f-d6ec-460d-a3f3-981120b5d00e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1b1deb-6db9-4026-8495-3120129d9edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de762157-d86e-4ca7-a792-e574706c9c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f86f979-0971-45f5-8c1f-28689e46c13b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d88f2b9-8e80-47f6-bf0e-463adac825bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8976a29a-96c9-4984-96ab-720349aa51f0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a79049-2447-4fc3-90c8-5ad66438c121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a182ea76-fcab-4731-b306-52c6ced8a1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9d2345-1a09-4e69-ab0a-440400378d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6ae022-869a-400d-8120-b8cfc6a4a681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0390dbaf-fc50-40ea-8e10-66d64cacb3bf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084b0f62-2f0b-4d9b-9feb-9beff7cb007b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770faee7-d4b0-409d-9fc2-2296555d0c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ffec36-74ef-4800-b98e-6cdefebc9e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0adaf1-69e8-4a55-bdae-871d51fb9040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c57e006-81f0-43cb-898c-d93b163535bc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d756f56-dd42-4326-9caf-2f6048991518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a86e0e-d3f5-41d8-9edb-31bae6788855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c817aac5-33bc-4b26-be04-919d8c608419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573e2f6e-384e-4931-94f8-4d5874fbe83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff70ba51-8376-4a15-b0b3-3fefe0ded77f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4380ae85-9f48-4d66-9ef6-e73f64cf8b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7f39b3-49a4-4c08-b142-9e72400ecee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0600b78-8ffa-43a9-8d17-310edccaaa4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34609508-49e1-47c0-b006-c07f9947ee07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3193fbb8-30c0-4e3e-95a5-39dbd697e9ff",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14fe2ee-2363-49f7-8059-b6fd604759c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0b1717-f5ad-4f12-9a85-39aff00d3657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a708fc13-7bb9-4013-86b7-8912cf619303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ced619-c49b-4ee9-8a3d-47158068661f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5123b5d7-8d57-48fb-8241-79d58e423d81",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402af8f0-34c5-4319-95f7-69f1937e5d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1a834e-590e-417e-b812-06ce22d3c421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3688ad18-e2c4-44ee-a909-c74ffe445719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e12bb12-e837-417b-8c80-ae6adbb1910a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33709062-19ac-4258-86c7-070a1a1080be",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0a70ee-8755-4a75-9c49-6827eece629a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d718e414-1335-4b93-81fa-b784ba034804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d094d13-ab98-4c26-95e7-0b9a4f3433a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3dc969-89bf-4f1c-a0ad-fa2e6642c3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d51677-24d9-4920-a370-b03c3fb4da72",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7860ef-4f25-4204-97b2-bdcf4dc521d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "133a5cb9-3e1f-4e6a-b7cd-dbbecdf2a294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4eef4c6-7fa4-4e59-9822-c9da9000739b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5b37b1-1a45-4416-af0f-bb3816130865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061697ba-41d0-441b-bce5-a3602b69d618",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3235a606-eb77-4a53-8371-6a9b5bb696b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12151eeb-ec3a-43a2-9fb3-7e48eca99b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b920e1-3e0e-4701-a02f-66a154dba3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad48b57-85d8-4717-be54-aa166aa26c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291865ef-4f2d-417a-84e0-e42fe8a2d349",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be250a72-5ef6-49d7-b509-e1c33cce0c8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5b43c9b-e0c9-47f3-b80d-01263bd9e18b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25228663-2a1e-4397-81a6-9636e7e423e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca235556-736f-4ee0-8e9a-2b88de164f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a443440-df82-4f7d-aeb7-005db9c139f4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3e822a-64bd-456a-966d-ddc56eede3ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e23796-d884-49b3-9148-bf3ab005e3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1044f90-6450-4578-abd0-f48af275df5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b73674-4d8c-44ff-b224-8a16fc95a0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e370fc4-ecb3-47e9-a76c-1fb864cc61df",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee153fae-a7bd-42b4-a5ce-8312cc607752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b9e6690-a544-418e-8275-e3a4ae3312a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ba6de8-9930-4233-8eb1-f3dedba23223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efeee881-4fc1-4814-b641-572ddfaca6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb29aa9-adcb-4725-bd7f-126db003a94e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7eb9860-ee06-4b75-99de-8f00497e6356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84b451c-afed-467c-9a1f-06f95cadaf3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf20857-e621-4741-853d-d3c756c43dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31cb29a-e850-4652-8ac8-26144356650c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917a0b3a-0613-4785-ae89-f6aa0d9d2feb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b099554d-04d2-44ba-8b5d-f42ef8151092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6043c089-2b97-4476-b7f9-8274443904ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba49e42-52c3-4c13-98b5-54aba5a5bfd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84629b83-f464-4dd3-993e-b2ec5d803fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9280f263-f52c-4d60-9558-f5bc6470c359",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1296b3c8-e0e1-49fc-bea9-dfcbdf42203a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c6b88ec-912b-4e30-b4ec-f55d107c4926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1319a4bf-b6d6-436c-b30d-0d9ae8be3872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977ab963-f1a7-4821-87b6-2925a52135ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3410148-9716-4534-8ccb-28f7245566f7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8120704c-bcb2-4baa-93d0-60bbd805ca33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "176868ac-e0cf-4970-abbd-d749001449bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9666b4c9-e901-4a2e-a856-3605cc30f2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d52fef-21ce-43e7-b383-1ffe057d89ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35947675-58cc-4e89-a108-8e0d3496e772",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdfcb5c-e3f4-46d1-a9bd-63a7758f14cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc172c76-9877-4cc8-8e4d-cea9dc0cb616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235e151d-4de7-4553-993f-9c50b7e0a23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158267c4-d088-4775-bd44-fba913923eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb51e01-79e6-4a7d-83ad-2532220cf1d8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db9b7f3-dd81-460a-b080-2259ccebcf49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d211b626-c8b8-42cc-8e5f-a5160f361584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710e5b2d-bc6a-4739-8ab1-fd4bc72ed01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a928a1bb-c152-46bf-969f-e01d899099fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbea100-76f9-4b0f-b0c7-aac704271685",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6cf311-b80c-4631-a3f9-0a5ee8bd6372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d512acf7-8853-490f-97b5-3ad1483278b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318ea601-d26f-4da2-a45b-33b75c495f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c3b1ff-9692-416f-ae81-3ae23cf3d857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6ed57e-b152-466a-85e3-d636417b25e7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cae1175-1f09-4a85-8f68-51ab5edf6c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "114a520b-982a-4ba0-b5ab-a8ed6632eb8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93edce41-7fd5-40f2-8b55-241d63a9eb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd782935-ec5a-4c86-87bc-e3d5fcd9f634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08327de6-e8a4-4a73-83f7-40cf66461962",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114cfdb9-efdf-4d4d-9c7f-d4935ac69beb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62aed270-0a40-4d91-a74a-b4438bb92807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09908702-03ab-4329-bd5b-1ba4a84591ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9becf6c8-89b8-45f3-ba25-5fdcb0c9fda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89c259d-ecea-4ae6-945c-28c215a6f877",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59a35c3-ff31-4f11-9c3c-96fcdf17f941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f42fa9e-c65f-468c-b034-275fdeb1cc2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e2f4d5-2794-4a53-853f-ae357696800c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8530cce7-f96e-4a21-80b4-a1b2bc21002f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c42ca6-a712-4205-ade4-85fa27aa18eb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1821e57a-2d8c-4103-b474-14efab2959fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be26cf8-b41a-4653-9784-196254f766a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aaa30b-296d-4f61-ab13-4199dca389fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d11ae12-4bb1-4e15-bc24-27ef0037e600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a535e9-1b43-4c6a-932d-3cf1772e8b23",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e636a021-4b73-4681-841e-374e92ee4806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac74256-bc60-4b0c-a05e-6196f693e149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525846c2-3351-4b5f-be45-bb64bd7d0fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a708ff-8dd6-4913-b583-db9e96b93719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54ad773-1c2b-4dc6-b26d-9ea5657b0dd5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7591cda8-70b6-4fa6-9a2b-482ed81f7c02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e96c1d1-2d01-46ec-a082-c43e867e4023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db58af41-f129-4155-89dc-8d3278c7cb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcb8fb5-9e68-449f-a588-214bb7a52543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b069923-1c33-4790-8811-43ae81e179c4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef2cc58-8701-499c-a720-d6d8a3766b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9801722f-52cf-405b-9e8a-6cae9123d055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6ce800-d434-4634-9a43-2cd9bba37212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8d9fae-c461-43f1-9a78-07593f7a2130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d820f75-5f9d-4328-95a7-bb8deb2914a3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e831c5e-b8a7-4575-9f2a-2d2d06d8648f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9bc2bc-853c-4960-85b8-33de32b5969d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fe7704-3f84-43b9-b53a-7acfeb012af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acf2592-28d7-4140-937f-e1f8aa7cdd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47dfc1bf-a443-49aa-af5f-15621c8216c2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da64f596-7286-4254-8c0b-418a72dbda02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2876856-ad0e-41d8-a83a-39f3333a0197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b439975-a34a-4482-ad59-6fd641d1790f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ea3d20-7e8b-4a51-972e-c30302cba60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a190b0-72b4-40dc-bb1b-0cde4ee93a60",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9130765-bbf7-40c8-afe5-0a8e4221672e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f4060f-095f-46c6-bc7f-60c12e4995a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f939be74-7624-4006-958b-84107947874c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709ec8fb-f4cb-4d16-84b0-6f2110d7f80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aeb779-03a6-4c65-b2bc-c0d5098a7514",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea9a470-4692-4795-a453-2c001053fb82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2070c9c6-7b07-478f-8da2-dc0040f7578c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068eb8f6-0463-44ad-8d71-fc9c830c2ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1de4acb-11a1-4f2f-bfa4-919b2868b152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03247124-a792-4468-9bb2-871c8e3424dc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c674e5-5da0-41c0-9e97-e3cb334428be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8dd15d4-3236-4228-ab6e-86bc723cd919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2493d2-4b53-4403-a4a4-2435094a6dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ce7b97-a1be-41a1-b2b6-4c860e6d8c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bab1f04-c2a0-417b-955d-da1128445f44",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcc77f9-da1f-4876-a418-33b8a7a501ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d54a205e-1325-4e41-ac8c-3ea3f829288c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067f9d75-3940-48cf-823e-09cafc263a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7082ed91-e246-4b15-90fa-628af3c1532d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53421fe-0eab-4b46-ad02-d5e30e371f3c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2668080-92a6-42e8-869f-5d982b9ac3fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8195ded6-0d35-45ab-95c2-f3895f69d08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a78e51-fcdb-4557-b553-0b1d65b502d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02738b9-7312-40b0-ae79-e3ac739f6ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade0a3b3-2276-4f21-9213-28d51681bf3b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babba5a4-5bc3-4789-969a-25a1dced47b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9135a60b-3f0e-45b1-a644-acf9ebe3b08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770496a0-f8c3-4e50-9d0a-917f8ccd9df0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3483ce-b9a0-407e-827d-1fb0c6a44167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ee9416-28a4-4900-9266-093809c7c52e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5ae932-5f2e-4ebe-817f-0e0311bc46c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a48eb7a8-7dca-49a5-a51f-e82873baa045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b5ff8d-9b77-4abb-8cb9-624099c43df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4940751c-2858-416c-ba6b-1a13397e3790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e721cd0-bcbf-4d74-ab0b-729bac8714e3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c79d20-03c6-4398-8f0a-47f4d47bb404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7acfad0a-3976-4778-983d-1ed392c4b9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d07e195-e48f-4041-96dd-7b199edc9981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ca0633-efbb-4643-901b-78895abcd619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12433e5-d79f-4f9a-8812-3af6a0305ada",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74628df9-af8f-49ce-838d-61477c345a44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb86b2d-2206-4fac-b83e-5c2815e41127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37deb5b8-5f62-4d26-ac99-dda756ec3821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4328ddfb-3cda-4766-8f61-7f2df5640534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633fcd18-50ff-49d5-8688-36a8de9b29cd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392939c5-7480-4f47-8584-a275b42454f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97583a39-32aa-4d71-9520-7d21d2e1ba3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19e70ae-a052-45d5-abb7-ee9adb7d7d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d7ea80-9b00-496a-900f-e6c30520f50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45796fdf-9fa7-43bf-a724-222b6f3da935",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16343159-d4d6-4b0a-be62-383104c6caa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b57041f-340a-4398-b3f0-c8e43d477a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988f3d31-8ae9-446f-b949-780575a9fdbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e32ad8-e750-4aca-ae42-f7fb462c5d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431bbe70-39c7-4604-9ccb-734614503ae7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f04f2d-a88b-49d3-b081-a9e0972c561a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7be8121-e2d9-40f2-a5dd-690c16547d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e17f5c5-349e-444b-a229-30533c29ea65",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65963312-1d67-43de-9875-b5557608aa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31526fd-5c78-4e9b-b415-632e531085b9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b770a4e0-f1e6-459b-9f39-38492985d00c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df38d142-14f4-49a1-8d0e-d41b1dcf781b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ea3a63-739e-480d-8155-7685a8cf7275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5440da5-d454-4e63-b1e4-68722f873c8f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "490bca9e-d04f-4ccb-b284-a2b7ef6a3135",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "057cdccd-298d-4be6-a8ba-b5cd4b18a3d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b44d4017-fc14-46ba-bd23-89bad262f279",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40fce5aa-575c-4c0a-8529-2214ffc8ac87"
                    }
                  }
                ]
              },
              {
                "id": "3f7a2ecd-6895-452a-877e-b03036bd557d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ad5d1d4-18fd-4749-ad4f-e8369ca8c242",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc7967d-198c-4ceb-986c-644de31b51bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dc9b47e0-d6f3-4dfc-b829-60f49cab9139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51438a7-8f59-41fd-bd1c-72a41bbb8362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b61edfd8-fa07-4c5b-8cd3-790017732a3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaa061f7-0cd4-4b58-bdc7-906c917173b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "930f3004-aeab-4a80-b58b-39e0a45a0906"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca01100a-acd7-4af6-bc92-304cc3ffcb65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13e1766a-3001-4b1a-aa9c-c728a91ee5d3"
                    }
                  }
                ]
              },
              {
                "id": "bc37883f-61e0-4374-a5ec-25958f4faa17",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4b5c0aea-72a4-4583-ae1d-9665858bfa8f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8fcbe7-0d92-4844-9065-9e222143ebbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c5ed755f-4598-48b5-b68e-3c6127c50509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec270bac-9034-4503-a377-5bc155c6f698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9322e525-809c-4a2e-a702-27c2052f8ffb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b4af0e48-a681-4ed4-85d9-67e53b404749",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b059eea-eaf8-4378-ae29-7e605f0434a5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64b130c1-57d7-46bd-a798-c6325fd7555c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cd3f62cd-9de3-4315-b9a0-7cf348e1abc9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6accc557-479d-42b2-8c8c-54c8e0c62d44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1f1a6b9-90a7-4695-a759-3faf07d8b68c"
                    }
                  }
                ]
              },
              {
                "id": "93d67c1d-3e51-4eef-9df4-a175e3b12cab",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2be2d610-62be-4acb-9273-4c20623069af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ec0949bf-ba5a-4f37-a2fc-9bf7260a2a33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76084337-1e4a-49ad-afa1-ade6b7f09e20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87a33dbb-a9e8-4aa9-bff7-99f28d72af0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dc161e0-cd75-406d-b846-9bb01e41c0b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f0cd934a-b7a6-444b-b192-407dde71b3f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c14f1d9-dcea-43b0-ab91-3f2b09b9d2b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8eadf4b1-a601-4594-acdb-2d102d9be3db"
            }
          }
        ]
      },
      {
        "id": "93047cf4-4e28-4ede-b50b-7bbd0727bec2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4a62c77e-3095-4892-80c5-6de476f3b096",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2a08466-c0d9-4d47-99e4-166612e5b317",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a96ce48e-0194-40b5-a835-ef2c7439ea6b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac82372-a37f-438c-a230-da91786e062c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0b67bb54-0d6c-41f6-b775-868d0cce2456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d480c313-f0bc-4f9f-a002-7af32a751f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc5a4fa7-c407-4888-b926-a4929b78c09c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a55b1bc7-7cf9-4ef9-a631-4418f85d285b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6ed003c-a7f0-481f-af2a-12ddea20f19a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cd6b90c-7ef5-4f0f-8dc4-12f7ec809c72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61998067-74b2-4d87-8c54-73a3d6ee763a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bc2b715-3d56-427d-9ee9-6cc5dc428b5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3eb9b339-ba83-4bad-a804-2fbdd3af0db7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "092ad5ee-0ad1-4bd1-8227-def7282966fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b711ba50-993d-4354-b306-6b16fe0e2784"
            }
          }
        ]
      },
      {
        "id": "d78ee0c2-9cea-49a4-a968-5e8acd38dc52",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "35dcc551-ea0c-4396-9905-6ff827b245b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f608d2cf-5798-4668-9176-cc9b9ed7452a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1e0868e-9ccd-4695-9e5b-39ea7d4db1b9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3688085b-5b2a-4b6b-a23c-afa45fbe9d52",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07958403-0d2a-4ead-9b4b-5674a33ed7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426373a1-9f34-4ed3-98f8-73a1ae97eeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84947bc7-d06f-4f91-a298-2035243693d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecbdcbb2-b65b-40f0-a758-d3d27305473b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c8b3b3f-d5e0-4870-a867-c899ebda2d22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da39c4b4-d08f-4fc7-a5c4-14ffe9040061",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a11c21a0-c1e3-4685-b264-9dc89792449f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c82a1216-0d40-4756-935d-98c4f0bbae99",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "366105b8-1eb4-463d-8888-99f6b6483dc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e995a0e2-2980-45ae-8011-721d120f2632",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a10497db-a30b-4e83-9876-2ab7e86e7ff2"
            }
          }
        ]
      },
      {
        "id": "fcd8164d-ef1e-454e-a594-208ec5164fa2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bc4bc947-7787-4cf2-8af0-9bf4fc8b8a6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a03c222-9ee7-47f9-8dd1-186963be7bb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb2198e8-3e9c-4547-a1d2-e74dbdedfbc7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feed92bd-142d-435b-87c6-049ad254b351",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d69becee-7a32-4e96-8281-5b669788f730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f44b7a-79ad-44e9-81ee-ab6d949c6a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36aeb19a-4d36-433a-97f9-bc1da9178957"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7600f8f2-98fe-4391-968a-cbe0293d0120",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e93f1cb-daea-4c07-8198-27e7bcb28085"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02784835-22df-46e5-8cd9-1fe3b435fbff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55edb47e-fd86-4368-b229-f0700ffb114c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dfac13c-19b8-47a7-a267-aacb388e1669",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4dc9d8bf-b539-4765-a8ca-fddf452f4a18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c103605-0b90-434a-92c4-6ea6d4cac97d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddba3c51-c322-44b5-b7ae-787dca067f92"
            }
          }
        ]
      },
      {
        "id": "a629e66e-0ca9-4fb2-8c27-e99baad4e470",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac3e9f46-f1e5-4b56-86fb-48614a289375",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef39ca35-58d2-4444-9d0f-5083fd50f047",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7431563c-4a9f-484b-865a-1da6817683be",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a06f2a0c-1cb4-48a1-8ff3-6f9f1090c074",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6b5df84-cc51-4c36-9977-7acef7dade53",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 210.5492957746479,
      "responseMin": 6,
      "responseMax": 5567,
      "responseSd": 361.529839756991,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691109614531,
      "completed": 1691109686367
    },
    "executions": [
      {
        "id": "36a89bf2-7c48-48e7-8c18-d5e5b893bf29",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "92d950a9-6454-44fa-97c6-e492eab6bb74",
          "httpRequestId": "5af5f36d-a37e-4e24-b50a-93b0705a127d"
        },
        "item": {
          "id": "36a89bf2-7c48-48e7-8c18-d5e5b893bf29",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "112180e6-5b54-47a9-8309-ccdb39cb6ac2",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "2955fe46-ebac-46c5-aac9-497c1b360989",
        "cursor": {
          "ref": "ade25aa5-8526-4e3e-871b-2fd1e7e580cb",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8237b3ab-c7c3-440d-a17c-a9d1017eaea5"
        },
        "item": {
          "id": "2955fe46-ebac-46c5-aac9-497c1b360989",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "50387f53-71e9-49a5-a215-565d7d74b43d",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "c15ddf2f-49e3-4d61-92ff-1f79b9949a09",
        "cursor": {
          "ref": "fddebf8d-8843-4076-8bc4-e91bc08a5711",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "eedc3214-a771-48ba-994b-12b26de45837"
        },
        "item": {
          "id": "c15ddf2f-49e3-4d61-92ff-1f79b9949a09",
          "name": "did_json"
        },
        "response": {
          "id": "f4873b26-5a7b-4cf3-bba3-c7ae513c44f6",
          "status": "OK",
          "code": 200,
          "responseTime": 914,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3fc053-571e-4c3f-9237-a46c6eb8b33a",
        "cursor": {
          "ref": "a63988b4-4fd3-416a-92cf-41c26a762a97",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8f6cbfdc-b9c9-49dd-891d-6d68b99f5a0a"
        },
        "item": {
          "id": "3b3fc053-571e-4c3f-9237-a46c6eb8b33a",
          "name": "did:invalid"
        },
        "response": {
          "id": "0c640fe3-0bf8-44a7-b490-5cfd4dd503cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3fc053-571e-4c3f-9237-a46c6eb8b33a",
        "cursor": {
          "ref": "a63988b4-4fd3-416a-92cf-41c26a762a97",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8f6cbfdc-b9c9-49dd-891d-6d68b99f5a0a"
        },
        "item": {
          "id": "3b3fc053-571e-4c3f-9237-a46c6eb8b33a",
          "name": "did:invalid"
        },
        "response": {
          "id": "0c640fe3-0bf8-44a7-b490-5cfd4dd503cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a415499a-8414-4389-bcbb-e3d7c49faf0f",
        "cursor": {
          "ref": "006beb07-9b22-490b-8556-686e4d0fb318",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "644b95e9-1061-48c5-807e-0ff79c4e2b9d"
        },
        "item": {
          "id": "a415499a-8414-4389-bcbb-e3d7c49faf0f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c454603e-4615-401e-8301-210c617bdf8f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 313,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e346eef-9d21-4844-878a-745b3fd415e6",
        "cursor": {
          "ref": "3de014ca-08dc-4b34-871a-bdf47da9d780",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0d14d5f6-3008-4886-b062-4cbe2c23a4c5"
        },
        "item": {
          "id": "2e346eef-9d21-4844-878a-745b3fd415e6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5b3a37ee-eaad-45f2-91b5-fadb768a5a3a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 251,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcce3cc5-d69d-4dfe-9f39-aab3594e85fc",
        "cursor": {
          "ref": "e328af93-09ec-4cc0-8d1c-86721753b781",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "80d98292-34b1-4562-ad11-471a63934537"
        },
        "item": {
          "id": "dcce3cc5-d69d-4dfe-9f39-aab3594e85fc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "231fd9e0-2350-4379-827e-03bc9d25a028",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613a5071-7ee1-41c5-b165-a06d3e0e9bb1",
        "cursor": {
          "ref": "9f9da8c2-eacc-481e-bdbb-473e515d8d1b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "78ff2a5f-ebcd-45e6-83fb-bf8041d82e04"
        },
        "item": {
          "id": "613a5071-7ee1-41c5-b165-a06d3e0e9bb1",
          "name": "identifiers"
        },
        "response": {
          "id": "580358f9-b06d-4e28-b682-dfb9a03af39e",
          "status": "OK",
          "code": 200,
          "responseTime": 1269,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defcad69-84b3-4265-819b-370d897a66e5",
        "cursor": {
          "ref": "27782c50-ecc0-424e-b9ab-70d73d47fbd0",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f075ee12-882f-43b8-a621-14e8518d06e8"
        },
        "item": {
          "id": "defcad69-84b3-4265-819b-370d897a66e5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "eb29e7dd-19a4-4669-b4bc-e0b8b369957c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b722720c-f9bf-441d-b685-a07e5de9b83d",
        "cursor": {
          "ref": "9ec62fbd-1f9a-4415-9e10-e6dde511723e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "10ae7615-a291-426e-bb2e-524a25889e91"
        },
        "item": {
          "id": "b722720c-f9bf-441d-b685-a07e5de9b83d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "03184327-f8d9-4dcb-a6f4-59f9dc2a5677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf794216-f7ee-4628-bdfb-68c58bfc5b1a",
        "cursor": {
          "ref": "5d4a6eaf-33b4-46ae-bfe8-b28b897ad688",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2522d814-9c09-4340-be1a-73cf8d654ff1"
        },
        "item": {
          "id": "bf794216-f7ee-4628-bdfb-68c58bfc5b1a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "769c41aa-5bed-4c4b-996b-700237bae7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78e0201-2de0-48ea-9c9e-2ecfb86a3107",
        "cursor": {
          "ref": "90921f80-a103-483f-8670-32df6ec242cd",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e26d3149-085a-479e-b6a3-8e24af98d07c"
        },
        "item": {
          "id": "b78e0201-2de0-48ea-9c9e-2ecfb86a3107",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d3874865-8ef1-485a-84d8-5bd11bf086a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e1c0c1-cf75-43b9-b1d7-4c10f5b68e66",
        "cursor": {
          "ref": "aaae07d8-69cb-43aa-b6b4-84cd4292b454",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "457888cf-3f5d-4db6-9025-ce28af9c0683"
        },
        "item": {
          "id": "d9e1c0c1-cf75-43b9-b1d7-4c10f5b68e66",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "af417b73-4caf-4d61-bd54-abfce5401480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2073bd6-d381-46ae-a369-843babceee5b",
        "cursor": {
          "ref": "4a654081-6ac1-4cc1-9bf3-a30e5a2787e7",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e67490d5-630d-459f-a330-23e06f631a2b"
        },
        "item": {
          "id": "b2073bd6-d381-46ae-a369-843babceee5b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1355ec95-1757-497c-a35d-9e537bfa244d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c9343a-0b92-40db-9869-b87c1a43f8aa",
        "cursor": {
          "ref": "d56950fc-84dc-43fa-93ab-1afb405ebadc",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fd32849c-fe6a-4b6d-b20a-a9051294f50c"
        },
        "item": {
          "id": "75c9343a-0b92-40db-9869-b87c1a43f8aa",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c58e95a6-b809-40e9-9ae4-53dafbee5822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2b7af1-65a5-4269-84e4-cc1ab2cb21f1",
        "cursor": {
          "ref": "28827430-3d41-4526-b442-969711736d41",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c35dfd30-4bc6-4c2b-a264-dee593164e08"
        },
        "item": {
          "id": "4d2b7af1-65a5-4269-84e4-cc1ab2cb21f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b9da78a6-6014-4eb5-bad1-7ef2d88614de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d574359-295b-474a-93d3-d28226a3440d",
        "cursor": {
          "ref": "7e4b0a2a-2f71-4d7a-b863-3baec2283032",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "46f13b8e-cdc3-44aa-8a53-b68d3f7cc9a0"
        },
        "item": {
          "id": "5d574359-295b-474a-93d3-d28226a3440d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "149bbf86-eda5-440d-820c-4b6bf7de4349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbf6f79-7214-4c8b-9b22-cf0d8dfe995b",
        "cursor": {
          "ref": "36ab61c6-2799-480c-a873-b4aa6ab464cc",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f1f90946-a2b4-40f7-bc72-639ff76b3f12"
        },
        "item": {
          "id": "1fbf6f79-7214-4c8b-9b22-cf0d8dfe995b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0879b10c-e9c5-4d31-9dcd-be013f0a37a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6ffdba-becc-4893-933f-108c09e62e5c",
        "cursor": {
          "ref": "fa0dd437-6a00-4697-aa39-179bf8a017d0",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "46747cbd-4106-49b5-97ae-e56af6d0bcda"
        },
        "item": {
          "id": "cd6ffdba-becc-4893-933f-108c09e62e5c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4e8a405f-d521-4075-b3a9-cf3759d5424a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d3cb01-94d6-4b3e-96dc-800792dffdd0",
        "cursor": {
          "ref": "69545631-897e-43b4-a609-97f01cd1cda2",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c0fb0876-4e78-421e-8483-ec8214860934"
        },
        "item": {
          "id": "44d3cb01-94d6-4b3e-96dc-800792dffdd0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "71e06ad8-9f5d-4a25-b156-18578f8e4d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36befb1-90fe-4886-8e8c-ae01495f3c7c",
        "cursor": {
          "ref": "1bb3d9af-8b0a-46b3-8bed-f96a55fde1b7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5d4cdb64-bd83-44af-9733-9357da2ff191"
        },
        "item": {
          "id": "d36befb1-90fe-4886-8e8c-ae01495f3c7c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f3c45e29-fb01-451a-b09a-f85995f5e9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a5b54a-7d5e-4855-8f07-4037f3e7daa2",
        "cursor": {
          "ref": "a4e432b1-0ea0-4504-b2fe-f42bb1830063",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "34ea26ea-8436-4a32-80bd-b90306386138"
        },
        "item": {
          "id": "e9a5b54a-7d5e-4855-8f07-4037f3e7daa2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "33660f7c-fb80-4641-aeb6-76907a197091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b9aaec-fac2-4799-95ff-9a619f68a5e5",
        "cursor": {
          "ref": "8a8621eb-7d7b-4f69-990b-88e70a536720",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "152ed32c-8738-4066-9df0-f26a8eec8776"
        },
        "item": {
          "id": "a0b9aaec-fac2-4799-95ff-9a619f68a5e5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "17f62715-d442-4a76-bfc4-578d94a54849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad88260-352b-4ca5-af53-f1098768e905",
        "cursor": {
          "ref": "ce3d3a90-c81e-4a6c-a3df-65c0bf27b082",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "335c198a-40f1-47b7-a357-d08d8d2ef90a"
        },
        "item": {
          "id": "0ad88260-352b-4ca5-af53-f1098768e905",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2def1ef6-d3b4-4303-90df-1c6df84798dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88113ee1-57ed-4fb6-b4b6-195229db4459",
        "cursor": {
          "ref": "cb60d19c-c01e-4ed4-bef0-b9354935f6f3",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "46462fac-b3de-4a3c-ba90-671a0b3ec433"
        },
        "item": {
          "id": "88113ee1-57ed-4fb6-b4b6-195229db4459",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "89bb7e78-1c34-4db0-9da2-c62c96ca278a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e95843-d228-4ab0-9be4-bb4706b56cca",
        "cursor": {
          "ref": "a7e59cd5-cf5d-452e-8ad7-f096d1ccc58d",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "78625c80-67d1-462d-9f23-3594cb5eaf7c"
        },
        "item": {
          "id": "f3e95843-d228-4ab0-9be4-bb4706b56cca",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "63160088-efd2-42dc-a27c-cbb480099941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58e9822-5d7d-41f9-82e5-a613f2015fff",
        "cursor": {
          "ref": "08b00037-6e8f-413c-b1f0-e213ef619d4f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "55ff0e4c-11e5-427c-aca5-9359b3c56d83"
        },
        "item": {
          "id": "c58e9822-5d7d-41f9-82e5-a613f2015fff",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "01c4cfed-213e-4274-80e1-4bb3b44f7135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1743cdea-933e-4cdc-ad75-4c1c5b2c6fd2",
        "cursor": {
          "ref": "07d1fe07-75a9-4ca7-8028-6dcf1e081f22",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ba32e303-252a-4ac1-9b71-0f4ad6d41fd0"
        },
        "item": {
          "id": "1743cdea-933e-4cdc-ad75-4c1c5b2c6fd2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "11b8403f-55aa-4e55-b96a-bb32972f24ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3c07b9-cf1b-4763-a0ce-93650c711c92",
        "cursor": {
          "ref": "dc6f9229-2717-4239-b45e-2b059efe9d19",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9385f465-fd48-467a-8df2-a899223144f7"
        },
        "item": {
          "id": "3e3c07b9-cf1b-4763-a0ce-93650c711c92",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b219e2e2-819f-420f-a672-13a6676e28b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0007b1b3-244c-49b7-b192-df0052969fad",
        "cursor": {
          "ref": "b8778256-a745-4eab-b98d-d6485bb53c14",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fd1919db-083d-4899-827a-195d1d3c98de"
        },
        "item": {
          "id": "0007b1b3-244c-49b7-b192-df0052969fad",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "724c18c5-f557-4daa-b0b1-4304866672ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252593bd-99d7-4c2b-a0b3-28f75459bd6c",
        "cursor": {
          "ref": "d7ee4970-58c7-4f8c-87f3-d00f661661a1",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "359eaf8b-3e75-495f-a5eb-ae6faefaa2d3"
        },
        "item": {
          "id": "252593bd-99d7-4c2b-a0b3-28f75459bd6c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "449bdd71-6586-4666-a7ad-f50132265f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c3a8fe-4607-44d1-b73d-9311cdfd4f63",
        "cursor": {
          "ref": "636ef850-2996-4138-825a-00964f996bba",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5a7a67a6-da00-4218-842b-266cfef7dc55"
        },
        "item": {
          "id": "52c3a8fe-4607-44d1-b73d-9311cdfd4f63",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f65cfe36-79f3-4fa5-9f21-2b38d660c68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b605781-e62b-4e72-893a-b8217dbe2906",
        "cursor": {
          "ref": "ab9157ec-e192-4182-8535-fad0b69db596",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "944def53-d0d8-4ab2-acd8-0951c9c4d39e"
        },
        "item": {
          "id": "2b605781-e62b-4e72-893a-b8217dbe2906",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ff156b29-5cba-41a4-8c37-a424896450dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d84f1a-cbe8-4d48-a90e-16dc09fd745b",
        "cursor": {
          "ref": "d403feb0-c84e-4604-95d8-7a463dd1225a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "27d85a7d-9763-430e-befe-3a21507685bf"
        },
        "item": {
          "id": "29d84f1a-cbe8-4d48-a90e-16dc09fd745b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "79bd6ca8-7dda-40a5-a63f-edc2e7ce79b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869c6e0f-126d-434e-9061-4311912255d4",
        "cursor": {
          "ref": "2d70e47c-6a61-41e6-8534-e53faef37b77",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "450fa8a2-63da-407a-b6ab-944e21ad1639"
        },
        "item": {
          "id": "869c6e0f-126d-434e-9061-4311912255d4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0e212566-2e95-440b-904f-477bd8db60ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d48cabb-d230-4ca9-84f1-a87cd0864d10",
        "cursor": {
          "ref": "a301160d-d36f-4b48-896b-1303ade6c5e8",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c74080cb-0494-43f2-bbb1-9435c045d8cf"
        },
        "item": {
          "id": "1d48cabb-d230-4ca9-84f1-a87cd0864d10",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "23231e3d-f3e8-4dc0-a0a6-461ac6143dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89da8aa2-d552-4f18-bfdc-f0cf36aed1c6",
        "cursor": {
          "ref": "9a00ef20-b5e3-473b-8f62-7dea4241d382",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e31c329e-7be2-4734-aeb3-58ba526250ca"
        },
        "item": {
          "id": "89da8aa2-d552-4f18-bfdc-f0cf36aed1c6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f3dddcff-37c5-403d-a080-9f8601643f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b482bbfc-6410-453b-935e-e1dee74709dc",
        "cursor": {
          "ref": "a3f03213-6666-4d60-983b-0c6f318b8f84",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "398d108a-2d8e-4300-b963-96b017bad1b3"
        },
        "item": {
          "id": "b482bbfc-6410-453b-935e-e1dee74709dc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6f040492-ccf9-44f8-af92-121bcc49ed9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fb1393-c19b-4d49-b47b-3383887837c3",
        "cursor": {
          "ref": "a7e55332-b8a3-4f60-8a50-69974bd9cb04",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "34c1a051-04ce-4215-8ac3-ae186b0a2e71"
        },
        "item": {
          "id": "08fb1393-c19b-4d49-b47b-3383887837c3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "05f1714f-1c18-4b35-8d73-01deaed39321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a40a21-a297-40d3-b524-117b9079a49b",
        "cursor": {
          "ref": "1e5843a3-625f-4a22-8af2-9a9940b0c121",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f99eebf0-fabc-4009-8cda-0a6ac9b79cce"
        },
        "item": {
          "id": "68a40a21-a297-40d3-b524-117b9079a49b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c67d242f-b0fc-457b-9e40-b71170496fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abccfb9a-268e-473f-a0b1-43cddebe8da7",
        "cursor": {
          "ref": "f3398394-8c1f-4188-a5c4-39e58c8deed1",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a3754e02-956f-4b66-ab3c-9acc1ee726b1"
        },
        "item": {
          "id": "abccfb9a-268e-473f-a0b1-43cddebe8da7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7b5da753-8084-4f0d-bd6a-4f999239be9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e4f042-9444-4af4-837f-b8ea6e3352fd",
        "cursor": {
          "ref": "615a7931-6580-4129-be0c-8ff7ccf1d624",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3099647d-202d-44f0-8d4e-328aa7833d14"
        },
        "item": {
          "id": "a2e4f042-9444-4af4-837f-b8ea6e3352fd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3a12275d-aebc-4f0f-a348-c9d57588d4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45757f1f-3c11-4231-b82b-0189fa66db36",
        "cursor": {
          "ref": "971242d7-83f4-478f-b578-592b2a955357",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "459d5b01-b06a-4320-a8fa-7c7ea81009ff"
        },
        "item": {
          "id": "45757f1f-3c11-4231-b82b-0189fa66db36",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bf22e644-03c1-41db-9fb3-01bcde34fc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e244614-37c5-4bb8-bbe4-218a257b76b0",
        "cursor": {
          "ref": "0a9d2801-9566-4234-8bab-615da193b947",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "10855339-241d-4f00-b9bb-701077a9cca3"
        },
        "item": {
          "id": "7e244614-37c5-4bb8-bbe4-218a257b76b0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1f942078-b879-4be6-9c97-e54a6e9f2568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f991762-da64-4f4e-a04b-d693026ca563",
        "cursor": {
          "ref": "54b56681-517c-4876-aa3e-5888e9dcf022",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bddf94bc-2ff8-4235-9491-91def1f0f430"
        },
        "item": {
          "id": "6f991762-da64-4f4e-a04b-d693026ca563",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "579544ae-5c67-4102-acb3-5e1f08e2fdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2836ac24-a881-4392-8811-253b8ac42347",
        "cursor": {
          "ref": "71a84e27-44ae-4bd6-b1e0-d528e7953f86",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8476a04c-d6b8-4aee-b1de-f25c22e4b2ef"
        },
        "item": {
          "id": "2836ac24-a881-4392-8811-253b8ac42347",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b13a0b30-25e0-4920-8e55-e8301d3d6831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6f4640-d9cf-4e88-a88a-6a57c3e72ce5",
        "cursor": {
          "ref": "b5c60504-ecda-4c93-ba57-5f245a50500b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1691427e-ace0-4900-8ad4-fba1ce42df18"
        },
        "item": {
          "id": "0a6f4640-d9cf-4e88-a88a-6a57c3e72ce5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c825b433-c139-4413-a4d5-84ea21bc1d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759481d0-3941-4955-bc3d-140f2993aa4a",
        "cursor": {
          "ref": "7f2bc6cb-575f-498a-8696-599896ab53da",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9403214d-0ef5-4559-918c-70bf366a93b9"
        },
        "item": {
          "id": "759481d0-3941-4955-bc3d-140f2993aa4a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a8ec84b4-1d44-445b-b988-6c012d51fa44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3ed879-011d-4336-8b9d-cc6dd4f765cb",
        "cursor": {
          "ref": "f20ddc12-6bd9-4228-9e90-efccebf14a08",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3ffe6e63-c545-4d54-a708-9686167cfb6d"
        },
        "item": {
          "id": "af3ed879-011d-4336-8b9d-cc6dd4f765cb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "04ba833f-daa4-4c2a-9cea-10032fcbb88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2b5b16-bcae-457e-9795-d8646942378b",
        "cursor": {
          "ref": "bbe1a5f8-b133-436b-b842-4d6d54024deb",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c5b21916-7741-403e-a358-3f3aba45c710"
        },
        "item": {
          "id": "cb2b5b16-bcae-457e-9795-d8646942378b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "396921f4-0a47-4dd9-8263-2186b4aec240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aceb2a3c-1421-4149-8d29-4fdefe6b279d",
        "cursor": {
          "ref": "118268f5-369b-4eb9-8763-fe35aa7f4549",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e28b9ea1-8213-4300-9109-4015a870ad22"
        },
        "item": {
          "id": "aceb2a3c-1421-4149-8d29-4fdefe6b279d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b57f87bd-d81b-4cf0-9b9d-28f35255a1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a9d8d7-c334-4fa8-be79-1b306ef7d562",
        "cursor": {
          "ref": "9185d303-520c-4107-83cd-87bb2e564c68",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5ee8ffac-11fa-4a84-8cde-03705a5fcd30"
        },
        "item": {
          "id": "39a9d8d7-c334-4fa8-be79-1b306ef7d562",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2eac68fd-431f-4f2d-af4c-30c5010b0da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4538e1f2-9dce-492a-9cea-c1ae3cf22c59",
        "cursor": {
          "ref": "2666d2e5-9a88-4e5e-b04d-0ee93acc5049",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7c4de5ba-79c2-4ce4-9a81-72e503098884"
        },
        "item": {
          "id": "4538e1f2-9dce-492a-9cea-c1ae3cf22c59",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e215d0da-8461-45ae-90ff-088a4f58d9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b58e7a-49f1-4a4a-8227-bba056823545",
        "cursor": {
          "ref": "cad0db86-b74d-46c5-9d5a-b72b215b1d29",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "089952f7-702b-4b1d-b3d4-a8fee2f14941"
        },
        "item": {
          "id": "23b58e7a-49f1-4a4a-8227-bba056823545",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "27bb2bd1-622c-4715-8ee2-4c3e09b9f48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3720da58-1994-43b0-89e2-68ec71cdde0d",
        "cursor": {
          "ref": "338e1697-a6ab-4bf7-99af-7267e5fbbf5e",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eddc64da-8cfe-4465-9860-ec47fb5a9f8d"
        },
        "item": {
          "id": "3720da58-1994-43b0-89e2-68ec71cdde0d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "943b4e38-78f0-4797-bb58-498529627063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2a3242-4c5c-4728-a86f-02d6cd6625e8",
        "cursor": {
          "ref": "6cb0b31d-1c14-4708-8d1e-85db4786bc67",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4ff7f15c-bf10-4cd0-be62-afb7ea97b096"
        },
        "item": {
          "id": "df2a3242-4c5c-4728-a86f-02d6cd6625e8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "50c99e39-558f-4406-9623-24a79554a774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738efbbf-83f3-440b-8c00-fe49dbdfae21",
        "cursor": {
          "ref": "c9932344-6d01-4e03-8822-8231aa57ba06",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "51ea9e60-ac24-46ee-8f94-98c949c5e8d5"
        },
        "item": {
          "id": "738efbbf-83f3-440b-8c00-fe49dbdfae21",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f49aa07b-85f1-4e3d-a5d5-919cba04f204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b819077-afd1-4aa6-a8d6-3572d090173b",
        "cursor": {
          "ref": "c2fdde74-cc7c-477e-8a23-6d439d7b4fb8",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "995faaad-ce89-469b-aa77-025f58e0d7ae"
        },
        "item": {
          "id": "4b819077-afd1-4aa6-a8d6-3572d090173b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3652cc51-595a-4f05-bf9f-a78013445b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94ba49b-38e2-4296-9940-9a9e7e5bbc67",
        "cursor": {
          "ref": "24ea8360-46ea-49bc-a403-1196f8217f39",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "072f8a15-cc07-4f5e-97ae-b1efd48f48d6"
        },
        "item": {
          "id": "a94ba49b-38e2-4296-9940-9a9e7e5bbc67",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fbff37df-f2db-4805-84a3-f898ddb67610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364d4eb6-d31d-4f88-82a8-8c901116be9b",
        "cursor": {
          "ref": "0420ea24-1729-48b5-8100-e5ec56f5348c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "83200b49-5bab-460f-a705-9f374d37885c"
        },
        "item": {
          "id": "364d4eb6-d31d-4f88-82a8-8c901116be9b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0c485d10-85d6-4523-972e-2fbdf1af2a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c8f6ca-fa7a-4576-b51d-ab41d57f0257",
        "cursor": {
          "ref": "82df7536-0189-427a-952d-5d72462d754f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "48068b50-edb7-4205-b507-12fc9674c0e0"
        },
        "item": {
          "id": "24c8f6ca-fa7a-4576-b51d-ab41d57f0257",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "06b9426d-6a53-482c-86e7-f564bcc4351f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e54cbdd-5fc3-4374-8e36-29e4e72faf58",
        "cursor": {
          "ref": "16e2ffc4-237b-4041-8da7-6e0a2e67a8e4",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "997b30db-bbe2-4150-8d59-ede1461841ab"
        },
        "item": {
          "id": "2e54cbdd-5fc3-4374-8e36-29e4e72faf58",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0cf0b014-3a69-4bd7-b8d9-865c451d1621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc2e9c9-2d07-4f17-824b-58afbe75c903",
        "cursor": {
          "ref": "88ae509a-ad30-4ceb-a03d-1e479d248b4d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "58d197e2-b1ad-44ed-a404-2d16672d19b7"
        },
        "item": {
          "id": "6dc2e9c9-2d07-4f17-824b-58afbe75c903",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1c7cba8a-468e-4b5d-a7ff-13bbc66f4fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52aaa3cb-09af-4d57-bf31-be2e0971876b",
        "cursor": {
          "ref": "c10a01d4-3d0c-4d44-bd5e-a67bde757f43",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d6a1c3bd-d9d7-4dec-8833-e7ce66e6d9ca"
        },
        "item": {
          "id": "52aaa3cb-09af-4d57-bf31-be2e0971876b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2440aedf-347b-466f-a914-34063f3c1ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9075dacc-f02d-4ab1-86b5-2e978f88b0f5",
        "cursor": {
          "ref": "dcf101cf-629b-4e86-9c7c-c210282a5dc6",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ee6629e0-513e-44bb-9794-c3ddf9c15e91"
        },
        "item": {
          "id": "9075dacc-f02d-4ab1-86b5-2e978f88b0f5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "05cc1395-3f84-497f-be62-745fba5c8e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788b501a-8eb0-4139-b73c-773638005e3a",
        "cursor": {
          "ref": "c13fb370-2c66-4dd1-9c6a-42d56d5eca71",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "762d032d-1b48-4234-a274-d67854013522"
        },
        "item": {
          "id": "788b501a-8eb0-4139-b73c-773638005e3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6f9b0db6-27dd-4595-8613-46fb85132da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34b58ee-27dd-4005-bbff-e04a09dcf8f0",
        "cursor": {
          "ref": "855ce98f-2a52-4b81-a2fc-3d73917cb900",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "10ca381c-2250-4c25-87b9-6cbf8bdf2908"
        },
        "item": {
          "id": "e34b58ee-27dd-4005-bbff-e04a09dcf8f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0dbdb0f5-5a57-4a69-b516-bcd00e55e7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc860bc-5c6b-45b3-ac19-dc3b8fb5fb9b",
        "cursor": {
          "ref": "48f12a4d-3089-4652-9458-1fb099460ccd",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b5641047-19fb-4b5e-a57f-fd83b7d8dd28"
        },
        "item": {
          "id": "efc860bc-5c6b-45b3-ac19-dc3b8fb5fb9b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1809cfd9-4192-490f-af34-4605201d6bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651dbce0-ae94-4c06-982b-85ecd934cb85",
        "cursor": {
          "ref": "49de6a66-0c23-4e97-b5ca-1db776caea27",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e79f83db-c5c6-49af-ace2-d19509e7142f"
        },
        "item": {
          "id": "651dbce0-ae94-4c06-982b-85ecd934cb85",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "09548843-21c4-4b75-b6a8-5d7a53a4e911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e07277-02f0-401a-9452-7ff797bf6c9c",
        "cursor": {
          "ref": "e8c79281-ce65-473f-83b8-b5eda2191e93",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "28508e01-a24c-4924-a35e-dca5e43c40d9"
        },
        "item": {
          "id": "f2e07277-02f0-401a-9452-7ff797bf6c9c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c071b27a-c8d6-41ae-8038-c6dd1fdf460b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a43c9c-6206-472e-bd9c-7d0215131813",
        "cursor": {
          "ref": "62ea19b4-2d81-41fe-ae37-d47dce156879",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "280738fc-b3ad-4a5a-90f2-917e2a5119f0"
        },
        "item": {
          "id": "04a43c9c-6206-472e-bd9c-7d0215131813",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c30dc719-97b4-48db-9fd2-0b0aa6310b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b99c4e3-dc87-4a5a-a631-69df762e20e0",
        "cursor": {
          "ref": "c16326fc-f8d7-4f29-92ce-195a51d03501",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0092c8d1-a1b7-4bf0-bfde-d2eafcdf059d"
        },
        "item": {
          "id": "4b99c4e3-dc87-4a5a-a631-69df762e20e0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "65f0e271-479d-4503-82c1-8dd8ec33f424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22298a6c-0878-4b31-b30d-542dc9f312f5",
        "cursor": {
          "ref": "89e69a8f-4336-4bb7-9531-f8c68b20895c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bf1324cd-1b3f-49c2-bec1-b58676a68949"
        },
        "item": {
          "id": "22298a6c-0878-4b31-b30d-542dc9f312f5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "291d2b73-d717-4ac5-8a04-14fe2d53f924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09934a3c-3123-4cd2-b2ab-1cf683a16fe0",
        "cursor": {
          "ref": "be0e6b0f-575d-468a-98a4-1e214413a387",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "74d392c4-02db-46ac-8299-5d0cedc8b693"
        },
        "item": {
          "id": "09934a3c-3123-4cd2-b2ab-1cf683a16fe0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "213e1727-662c-4bc8-94c0-c38066d44cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a47ffb0-dcb4-4aa5-bc3e-610fba2e8acf",
        "cursor": {
          "ref": "46ac8f6e-4ab1-4082-88b8-0d154f51ea34",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4ff429b1-e125-4f96-80a4-54adcd9d3b4c"
        },
        "item": {
          "id": "9a47ffb0-dcb4-4aa5-bc3e-610fba2e8acf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3c2b30d4-16ce-4783-825c-464aaa413a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49beb756-70e0-42e8-a487-f9929ff0e7e1",
        "cursor": {
          "ref": "2ed6af2a-5299-4800-87d5-3b4a5a88fa24",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "68846eb4-1636-45db-b0af-d175689b1327"
        },
        "item": {
          "id": "49beb756-70e0-42e8-a487-f9929ff0e7e1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "07623def-80a6-45b6-b6e4-a3cb8506f545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af4f9ff-053c-44db-86de-c35007460dda",
        "cursor": {
          "ref": "c2c0988a-0fe5-4f45-bc6e-dceed4da418b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e0237157-92b0-4d67-9c8e-cb615e41712d"
        },
        "item": {
          "id": "2af4f9ff-053c-44db-86de-c35007460dda",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f8324875-ee90-499e-a514-e1edc9df271d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d566fbb-9a54-4a88-b1a9-e76ef3370769",
        "cursor": {
          "ref": "8d1d6537-2c1d-4349-aff7-b99a1f13ddfb",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3a90fd1e-cd27-4202-bf0d-748367e16364"
        },
        "item": {
          "id": "1d566fbb-9a54-4a88-b1a9-e76ef3370769",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "28788de1-8393-4743-8045-088bc8d4623e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7cedac-1ba6-4118-9b71-229f9056a3cc",
        "cursor": {
          "ref": "74eb0690-f579-41d8-9a0d-b35f09fa56c6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7a138d50-f266-4782-b4f4-ee9be3f5c5e4"
        },
        "item": {
          "id": "ba7cedac-1ba6-4118-9b71-229f9056a3cc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b7b48215-31ea-4022-adfd-3735435695cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befe29b7-47cb-47b0-a047-1797c50dff15",
        "cursor": {
          "ref": "8511459c-19e9-4c50-827b-89a33baf2846",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a52a79d9-6a94-4295-a283-3124ae63005b"
        },
        "item": {
          "id": "befe29b7-47cb-47b0-a047-1797c50dff15",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8aecde06-db92-4195-9936-1274ebbcc559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e017991e-da10-457c-80a4-0ec9b2051664",
        "cursor": {
          "ref": "4f83d501-8a31-4e15-a825-8bc7585685eb",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "86b6f5a0-7dee-4de8-a901-7250eeb77847"
        },
        "item": {
          "id": "e017991e-da10-457c-80a4-0ec9b2051664",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6e9341c5-64d1-401a-834d-bbe0c4018442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581cbbe6-0799-4c3d-8781-5295b82beff5",
        "cursor": {
          "ref": "e06a81fc-6729-41f5-88bc-22d48c8bb378",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "003b669d-b9bc-402c-ad46-32929536b413"
        },
        "item": {
          "id": "581cbbe6-0799-4c3d-8781-5295b82beff5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "688206c7-aa2a-4cad-8927-bf84d75a306d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942c24e8-c5f6-43a9-91ad-1d1ad1d7d30e",
        "cursor": {
          "ref": "57eabbeb-30c4-4694-a7e1-7040ff41a4bd",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "90153f7d-75b5-4e43-9d5b-d2e8a526c041"
        },
        "item": {
          "id": "942c24e8-c5f6-43a9-91ad-1d1ad1d7d30e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3ed1108a-8000-43f0-8d4b-1ed6b7cdde18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6d874d-900c-4bcb-bc41-f0fcdd49d1d8",
        "cursor": {
          "ref": "adf4ef08-8cd8-4fca-9ffd-2808d71b163c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "63db1e80-12c7-4e5e-a92d-fc43a1bce7c7"
        },
        "item": {
          "id": "aa6d874d-900c-4bcb-bc41-f0fcdd49d1d8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6d673312-43b9-4937-9d46-dfc099679e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fea4ba4-5e0b-489b-9c10-53faddb84ca4",
        "cursor": {
          "ref": "6d85e229-ae7e-4632-b20c-c88d39080559",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0b7c550a-24b3-4d61-985b-a94e4c28ba8d"
        },
        "item": {
          "id": "0fea4ba4-5e0b-489b-9c10-53faddb84ca4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "09594f79-f9c5-4641-8074-29ffd2feb147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67732922-d5a6-4a3e-8aed-ef81bd651e35",
        "cursor": {
          "ref": "2a8da8ea-b4ff-47d7-a228-781da38a95d8",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8879ae82-f345-4fd8-bc22-8aa8ba56ea6b"
        },
        "item": {
          "id": "67732922-d5a6-4a3e-8aed-ef81bd651e35",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dea53436-15e8-48f9-bbcb-111ef2a61fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2ae1be-ba55-47f0-bd46-42d1aa29e1e1",
        "cursor": {
          "ref": "95d4c0a8-5c69-40a3-b65e-7fc2f5963f7b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e6b3fbbe-30d6-405f-acbd-620482c4d822"
        },
        "item": {
          "id": "1c2ae1be-ba55-47f0-bd46-42d1aa29e1e1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0c9c902b-376d-4ad3-aec4-317f12a4f629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc709840-0cc6-4d34-980c-c45f7e407971",
        "cursor": {
          "ref": "156de414-4282-4f8f-a361-cab578a165a7",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "12c7b617-1b70-4a5f-be13-b6a83ec7fb40"
        },
        "item": {
          "id": "fc709840-0cc6-4d34-980c-c45f7e407971",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "53606313-2660-4d41-8d47-56c663030a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc95ddf-ce30-4b51-a279-094a4f30d219",
        "cursor": {
          "ref": "3eb1ebb5-4ed5-4f4e-8822-f278001f2eb2",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a8078cf5-cd8d-4a16-bf55-280d975cafa2"
        },
        "item": {
          "id": "6bc95ddf-ce30-4b51-a279-094a4f30d219",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4e9526a9-2bb4-4f2a-8fa4-7945a9e58c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801eada2-e00a-4065-83ef-a8a645b9935e",
        "cursor": {
          "ref": "6813eea4-171b-4dc8-88aa-48d5867a2889",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "faf4ff30-28af-4a9e-94af-68449cce64d4"
        },
        "item": {
          "id": "801eada2-e00a-4065-83ef-a8a645b9935e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "91d88fd6-1bbc-490b-a4a0-2b4c02f41906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45739c7e-9ea7-4655-9a59-ce71b7537f86",
        "cursor": {
          "ref": "92e05ece-f4d6-441e-900f-2cfbf67260a3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "91ab45a3-9344-440c-943e-f7a0e903fb93"
        },
        "item": {
          "id": "45739c7e-9ea7-4655-9a59-ce71b7537f86",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bec2e7ee-cb5c-46f4-8547-3b72fc4699af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea990c7b-55b7-4e0d-a759-8c9aaa0bd2d5",
        "cursor": {
          "ref": "11da4d5f-26f0-4c00-896d-b2c1f4247090",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2515c6ae-c469-4515-90b6-ce97847d571e"
        },
        "item": {
          "id": "ea990c7b-55b7-4e0d-a759-8c9aaa0bd2d5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f49858db-a9a1-48a2-89fd-15f25f160a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de4d139-25ee-457d-9448-ea543b9b758f",
        "cursor": {
          "ref": "d9653a1c-8cf0-4692-8f01-982867952723",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b4bb9509-5d8f-4f8b-b100-d90482f53379"
        },
        "item": {
          "id": "0de4d139-25ee-457d-9448-ea543b9b758f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "15f27a37-2d90-40ee-b945-91b3571e369f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf4d6eb-6e6c-45f5-bf36-c5a28f330ee0",
        "cursor": {
          "ref": "0a486919-85bb-453f-b95a-9777716c1416",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4ebb9a37-506a-4774-8740-9bf3c0b73050"
        },
        "item": {
          "id": "bdf4d6eb-6e6c-45f5-bf36-c5a28f330ee0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b23d18b1-bdf4-478a-9a9c-d270ecaae91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b814febb-aa65-45af-8883-ac8deaf0806a",
        "cursor": {
          "ref": "f92fc770-7a5a-476e-a991-e3d3c26e0dec",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1807d622-9e30-447e-a305-51adf303d673"
        },
        "item": {
          "id": "b814febb-aa65-45af-8883-ac8deaf0806a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b561efe2-65e5-49d0-aade-e118bd10bb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1157f00e-4b5a-42a9-844e-b7e7d3d3c6a6",
        "cursor": {
          "ref": "702b3203-393b-48f6-a2d2-9c4e52bb4dd8",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cdd913b8-0e13-4edc-8978-797fc59d866a"
        },
        "item": {
          "id": "1157f00e-4b5a-42a9-844e-b7e7d3d3c6a6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "be628a0b-e426-4d91-baa3-9a7fc2d8c544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06285d41-3720-4343-bc76-2676acd36f12",
        "cursor": {
          "ref": "b91f8fb5-1dac-4e2c-9494-f4e1231c7577",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fc050576-e130-4ddc-886f-1e8ac6ac27fb"
        },
        "item": {
          "id": "06285d41-3720-4343-bc76-2676acd36f12",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2f2d8670-9daf-45da-8516-8c33bafbb636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233ce9fa-dbf3-4e13-a4d2-f3c6eedfe652",
        "cursor": {
          "ref": "650c2bf4-1310-4e2e-a3dd-ddc00605301d",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a6399118-b716-498c-a5e7-4d50d636d889"
        },
        "item": {
          "id": "233ce9fa-dbf3-4e13-a4d2-f3c6eedfe652",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "609cf97b-e3f7-40c0-af70-1cf05d4ae3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5baad7-d97b-4a12-9eb0-10b4c5f43a64",
        "cursor": {
          "ref": "f4dc64f4-36fc-464e-b1f5-19ca1bc8cc5f",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7dd7a36c-86ac-4a9b-9924-88a609faa1ce"
        },
        "item": {
          "id": "9c5baad7-d97b-4a12-9eb0-10b4c5f43a64",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "19778fa9-38ad-4e28-aff7-4258a873b336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a1c49a-c923-49fd-9208-15f880c19f5e",
        "cursor": {
          "ref": "0ac6181f-f7f6-4457-8d8e-15d0cca33aa2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bd6f574e-a7a9-4439-b999-e3c7899dec76"
        },
        "item": {
          "id": "03a1c49a-c923-49fd-9208-15f880c19f5e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9539f809-69e3-4c0e-a31d-6d7a854f8660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f0dd46-a6e1-4d50-b2be-8fbf5c2975d6",
        "cursor": {
          "ref": "567479e1-d2cd-4328-b362-b3ff96a991b3",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e87bab81-8fe0-475a-a934-71f44258c9f0"
        },
        "item": {
          "id": "a5f0dd46-a6e1-4d50-b2be-8fbf5c2975d6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7d8ca16d-17d2-410e-bca6-809a8860c701",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f985f03-43e9-48be-ae53-2471012ba1f7",
        "cursor": {
          "ref": "c16b9896-9990-4c4b-a87d-fb0dfe11a91a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ddc6bdcc-7ca8-495d-abe4-11af9e1bed06"
        },
        "item": {
          "id": "2f985f03-43e9-48be-ae53-2471012ba1f7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ecabe8c8-f3ac-419c-b909-833da8f430b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "2b6826b5-d432-416b-bbda-0fa351c20253",
        "cursor": {
          "ref": "14b95f5c-ed93-4e2b-97a3-e7cbf1c4ce0b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b7b20743-6bfa-4bb5-8041-bf5022363717"
        },
        "item": {
          "id": "2b6826b5-d432-416b-bbda-0fa351c20253",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ca3c470a-f5c3-4d3c-aa5c-7ed21f221bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "5ea637ee-0407-4530-960b-a05b9c34007c",
        "cursor": {
          "ref": "2779cbdf-6d16-4d32-8df0-cd1047787ee3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2d407c3f-8664-4ea0-8688-06f8482d18f6"
        },
        "item": {
          "id": "5ea637ee-0407-4530-960b-a05b9c34007c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "54b09337-8904-4d67-b001-f94d2cbcc397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0aa2bf03-565e-419e-992f-d4a4ca45213c",
        "cursor": {
          "ref": "0960f93a-21a9-4aa2-b1d1-959dd7cdf684",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "863786a8-87aa-4400-9780-c5971b53c336"
        },
        "item": {
          "id": "0aa2bf03-565e-419e-992f-d4a4ca45213c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3e8d06b0-fdc5-4652-9a3d-91d3e47b8ef0",
          "status": "Created",
          "code": 201,
          "responseTime": 5567,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "75533e3b-5fd2-43a8-abb1-d42a62a0778e",
        "cursor": {
          "ref": "148697f7-0564-4b2b-ae26-064bb1f90bdc",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a16b87a8-c908-4db1-a125-31b60439a009"
        },
        "item": {
          "id": "75533e3b-5fd2-43a8-abb1-d42a62a0778e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9e6803db-92a9-49eb-9eed-0fd079ab655b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "58368650-f380-4a88-ac4e-e3fc8ed63089",
        "cursor": {
          "ref": "cf7a1ad3-21b9-4c32-96e4-99f0e7b8d8c0",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f2c79474-ea6c-4c76-9840-b08f6de48650"
        },
        "item": {
          "id": "58368650-f380-4a88-ac4e-e3fc8ed63089",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6f3f7d6e-2d2f-48d2-aa87-48621adf9791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "766eee70-c60c-4b73-b9c4-251c3f40142d",
        "cursor": {
          "ref": "6b46fe48-a2ba-4256-9e02-95c36932972c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "93f7c69e-8f8c-44ce-8090-585827444484"
        },
        "item": {
          "id": "766eee70-c60c-4b73-b9c4-251c3f40142d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "946e9726-c1a6-4c47-bdff-bd093d9a433c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ecd9fb-98d5-448f-8322-eedccabfafed",
        "cursor": {
          "ref": "7092b416-d558-49f9-8e51-55258e2f45a7",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fcc5cbca-5716-4872-945a-dd4e5f1f2da0"
        },
        "item": {
          "id": "41ecd9fb-98d5-448f-8322-eedccabfafed",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f618c437-3252-4980-8d33-b79b6b618b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e185c0-7aa1-4616-b0a1-fb27c110fc53",
        "cursor": {
          "ref": "11829d77-294c-4b07-b979-191810948751",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5d0f1d1d-646a-430e-8dbd-bf89b13085d8"
        },
        "item": {
          "id": "a0e185c0-7aa1-4616-b0a1-fb27c110fc53",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "265c9ccb-3839-4cae-a928-02ad74f7402f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da35524-bc0f-45f6-9f3c-dc5e07c67924",
        "cursor": {
          "ref": "721cac24-f865-4931-8745-2a86051f91f6",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fcb41348-72fd-4c09-939a-a8f328310ac7"
        },
        "item": {
          "id": "0da35524-bc0f-45f6-9f3c-dc5e07c67924",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "44a4f996-8180-4b1c-bf1a-b7dff2a1dc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354789f2-1600-437a-8f71-b99bfb06f7f3",
        "cursor": {
          "ref": "fb97e2f9-5ad0-4782-9fd4-cbd437d834b0",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2afd9ee7-a90d-4567-86e3-b8900e086d2c"
        },
        "item": {
          "id": "354789f2-1600-437a-8f71-b99bfb06f7f3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0ae7314c-b55f-4a36-80ad-cd7e06261ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d36a1c-faec-4444-b538-b2a160f5f3b0",
        "cursor": {
          "ref": "58e5b7ea-1e7c-42b2-b71a-4afb0835156e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "59d48ee2-9bbc-4413-acac-6efad36768a7"
        },
        "item": {
          "id": "e4d36a1c-faec-4444-b538-b2a160f5f3b0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "591c8f8d-2e3f-4c10-b234-3fac8108b441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955c9fb8-e7fd-4dc5-88e0-26d6a3a3c6b5",
        "cursor": {
          "ref": "4c1684f1-1255-4a0c-876d-db150004bf9c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "21cfd3ff-ba23-4486-8f40-b16d341262a0"
        },
        "item": {
          "id": "955c9fb8-e7fd-4dc5-88e0-26d6a3a3c6b5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "aec164ea-8fac-4429-afbf-62abdf58a169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38699b4d-951f-4e0e-aa68-1888f70f2bfd",
        "cursor": {
          "ref": "c17056ff-c881-4c45-a851-41fe15dee538",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "18dae884-94d4-4138-9748-fbd0811730dd"
        },
        "item": {
          "id": "38699b4d-951f-4e0e-aa68-1888f70f2bfd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "81faabd5-c1b0-4849-837e-87e930fa2287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79cba73-efce-4e68-85a5-ff3529b7b667",
        "cursor": {
          "ref": "43a72e44-0f76-4c76-9d39-92da6c78657d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1b7cd4f3-41fe-4cea-9c9f-9853b2331b0d"
        },
        "item": {
          "id": "a79cba73-efce-4e68-85a5-ff3529b7b667",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f839e7ab-9be4-4767-bc2c-77b0e9d732ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aba843a-be9a-4ba0-a7fb-0bf81a70e44a",
        "cursor": {
          "ref": "7d639029-3b25-48c6-94ef-2ab9b6101ad1",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1f1ad060-455a-4c70-879f-517740d38f07"
        },
        "item": {
          "id": "1aba843a-be9a-4ba0-a7fb-0bf81a70e44a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c1444678-bbbf-4122-82ad-4453f88a45ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119668f7-1b4f-48db-b4bd-9946d3f0ed30",
        "cursor": {
          "ref": "1dccf31a-aba1-4b22-9d9f-b250904a650a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "56b2f34d-1817-47ea-8a75-ac500375a03f"
        },
        "item": {
          "id": "119668f7-1b4f-48db-b4bd-9946d3f0ed30",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "75601962-b806-4356-b7cc-32774e3e59e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f934ead9-c06c-4796-82af-2e9ed8d8da7a",
        "cursor": {
          "ref": "115d8866-96f0-4dfb-a23e-2b2575125733",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9b1a2f7a-5aad-44fd-a8f4-7139556283f5"
        },
        "item": {
          "id": "f934ead9-c06c-4796-82af-2e9ed8d8da7a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7044ca92-8dce-4b72-ab4a-6e7825077ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae30fb33-bac4-4b07-b180-2b10217bc555",
        "cursor": {
          "ref": "2a5cf57d-a53b-4dd2-879e-29836f371c08",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e623d63e-9c94-4d5a-b2c9-6184714f3d1e"
        },
        "item": {
          "id": "ae30fb33-bac4-4b07-b180-2b10217bc555",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9415c6d0-5ea6-4edd-877d-9ee5732d3b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5db4545-515c-4c52-8778-ab7cc12d5468",
        "cursor": {
          "ref": "ad289e89-c4ab-4fb8-be14-6386080c8259",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "566b5214-9d4f-4570-b07b-1194972c2bb5"
        },
        "item": {
          "id": "e5db4545-515c-4c52-8778-ab7cc12d5468",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "12a11f11-7a7b-449a-92de-b1755843a0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654affdf-7940-4614-94ae-348b6ade57ae",
        "cursor": {
          "ref": "b2ce228f-2a12-4453-a8e6-fa01007b293b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9fa0dee8-09e7-4f15-aad5-9d47e2dbfe0d"
        },
        "item": {
          "id": "654affdf-7940-4614-94ae-348b6ade57ae",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "16d9d04b-bcc6-4ad8-b237-649762450250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2348454-e90c-487b-967d-045ea20628a2",
        "cursor": {
          "ref": "f9b51df1-7b53-43cf-a96b-54a0a40cf863",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3906ef1a-0e31-4d27-8dfe-e90469162272"
        },
        "item": {
          "id": "d2348454-e90c-487b-967d-045ea20628a2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5bd248c4-905f-455a-9273-1b74c63ee88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def20b0b-16c4-46e3-8696-b98ba9147bba",
        "cursor": {
          "ref": "0fd0d77c-115c-412e-b835-7adfe89e3071",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "04f5947d-e079-4da8-8ca4-07f8da67ad4e"
        },
        "item": {
          "id": "def20b0b-16c4-46e3-8696-b98ba9147bba",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "95b90d7a-7f65-47cc-914f-77f1ecafd407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67707a5a-5c14-4ec1-9192-84425a5ee490",
        "cursor": {
          "ref": "c7724e74-9d51-4fee-b6e2-6766cb3b335c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ce445033-2cee-4b03-818d-9c5adaf10e42"
        },
        "item": {
          "id": "67707a5a-5c14-4ec1-9192-84425a5ee490",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "61cd989b-a574-4e4e-ad63-a8c9a4c2e910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53399759-f3a4-41af-ad92-0092d3e0f036",
        "cursor": {
          "ref": "3d0accbb-0ae4-46a6-b142-fa9586442d20",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "86323f39-c86f-4238-8b1d-5adcf37400b2"
        },
        "item": {
          "id": "53399759-f3a4-41af-ad92-0092d3e0f036",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6e793999-332d-411d-9df2-10b1a1ffcb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08990f4f-3d1f-4df1-9788-4b9bf7edefd8",
        "cursor": {
          "ref": "61c33b30-ee08-47e0-9f0e-d6e9ae68f78e",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "121345c8-d6ce-4249-987c-e15a3268bd74"
        },
        "item": {
          "id": "08990f4f-3d1f-4df1-9788-4b9bf7edefd8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6d083cb0-0ac3-44bf-9bce-c86467590739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3c8fa3-aa13-472e-9bd9-f4ebefdc2d39",
        "cursor": {
          "ref": "b76d3f75-4ac3-42c0-a261-5d967bff3506",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "881f96f5-9b1e-4bc2-8dc1-869abdf2b6a5"
        },
        "item": {
          "id": "8f3c8fa3-aa13-472e-9bd9-f4ebefdc2d39",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f840ca28-b2bd-4c2f-acb8-77c4e1ec8986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b01715d-bac4-46b2-a529-4723a8c6da25",
        "cursor": {
          "ref": "b44e2949-ea87-4483-91a4-b7fbf313330d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a98a408a-55e8-47a4-868b-77c633450ff6"
        },
        "item": {
          "id": "1b01715d-bac4-46b2-a529-4723a8c6da25",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "64bd1ed3-ac5d-45d7-897f-2910fe84aa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68321188-36b8-4041-97a1-028e3d1b28ea",
        "cursor": {
          "ref": "c4466f37-2213-407d-90fc-f699cd41e04c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b2e47c72-bb81-4302-966e-ab023ca81601"
        },
        "item": {
          "id": "68321188-36b8-4041-97a1-028e3d1b28ea",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "704c2398-32e3-427c-8a1c-2c35bd7c088f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d299821-b719-4090-a3f4-b6288826fd08",
        "cursor": {
          "ref": "91d3e86a-3ca6-4a90-a444-83f7b552a5c6",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "07b8fafa-4a3e-4034-9400-fe38c5f6f597"
        },
        "item": {
          "id": "6d299821-b719-4090-a3f4-b6288826fd08",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "13f032de-2c85-4f19-97c7-f07d55370175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12194630-59c6-4ae1-bf93-08a9adbe4ad8",
        "cursor": {
          "ref": "e2d96941-0415-4afb-98fd-320f0c3376b6",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a88d8b1c-d5ae-4c9a-96f1-1cf016d65a8d"
        },
        "item": {
          "id": "12194630-59c6-4ae1-bf93-08a9adbe4ad8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b048f920-0c62-40da-8023-85681beef966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c8e7ad-75f6-4b76-88b3-519caeb220b5",
        "cursor": {
          "ref": "f31161c6-0e42-4663-a7a2-c7923173a0ce",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a6456e1e-2872-46d6-a6aa-b6a8a25eca72"
        },
        "item": {
          "id": "99c8e7ad-75f6-4b76-88b3-519caeb220b5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "36afa4fd-8a33-46d4-8133-02776481299c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6a1809-a8af-44d5-b0e2-a18770c5ade1",
        "cursor": {
          "ref": "58aecc38-5763-4156-9438-e15bcc59d615",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6836b5f9-345d-4b77-91af-ce0aa4c383ce"
        },
        "item": {
          "id": "5b6a1809-a8af-44d5-b0e2-a18770c5ade1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "015bba27-c1cd-43bd-a675-fe7ba40015c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61067773-091f-4619-8c77-b80b0ad624c2",
        "cursor": {
          "ref": "8dce86f2-d102-4059-b922-ceef64fd7f24",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "26e15cee-9184-4eef-9f72-2df5694d59a8"
        },
        "item": {
          "id": "61067773-091f-4619-8c77-b80b0ad624c2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5c8caa84-8b0e-4ff7-9b33-4c4cf4c2123d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1476a2c3-8545-4ef3-97ef-274bcc17a0fb",
        "cursor": {
          "ref": "14830452-73ff-4bef-8149-64d8f8337a57",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7e082abc-482e-4bd8-b542-65e517975b11"
        },
        "item": {
          "id": "1476a2c3-8545-4ef3-97ef-274bcc17a0fb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6e8782f0-489e-4727-9daa-a938452ba379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542a9ed8-6ac8-4b18-9529-36620fe2a842",
        "cursor": {
          "ref": "c8ed32ba-c8e5-4fe9-875c-d542e41af096",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b504ae14-6c20-4f84-ada0-a475b7692a0d"
        },
        "item": {
          "id": "542a9ed8-6ac8-4b18-9529-36620fe2a842",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "500cfc12-6307-44c2-bbf7-e5732555d2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b060c5cf-32c0-400a-a057-99de97fc390d",
        "cursor": {
          "ref": "105522da-bfcc-48a3-9e9f-d88f95c30a41",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6fb86337-e7f4-4b5b-a3d1-7b6243861629"
        },
        "item": {
          "id": "b060c5cf-32c0-400a-a057-99de97fc390d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "95f9e1a1-d6d8-400a-adb7-24a183d60384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37959750-b375-4bed-82ad-60b5b6312b55",
        "cursor": {
          "ref": "b4eda547-b70c-4520-b1cf-e735cfcaf4ff",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c2344998-cf39-4ca2-a070-0151fc976e81"
        },
        "item": {
          "id": "37959750-b375-4bed-82ad-60b5b6312b55",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4119a282-fa83-4d3e-a63d-18a69e150071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70af2534-69d1-4354-9beb-8d075bd2c5d5",
        "cursor": {
          "ref": "0a05ed40-5f8d-4376-85d5-16d83dc13fb9",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7edf7b80-ae3a-4f19-a031-317eae9009f1"
        },
        "item": {
          "id": "70af2534-69d1-4354-9beb-8d075bd2c5d5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4650b94a-00d5-4f1f-b57c-f8e5e30f2b78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a724599-67c9-405b-860a-f2a611996f37",
        "cursor": {
          "ref": "7ff57be6-f3c9-4233-b9d3-c72cc3f43ebe",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fcdf6b98-d7a0-47b4-893a-b82913438321"
        },
        "item": {
          "id": "6a724599-67c9-405b-860a-f2a611996f37",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "03af2e7d-b286-4e24-8e9a-04a97b58d819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f48b12-02d6-435e-b7b7-1fed3b513db2",
        "cursor": {
          "ref": "edc7353d-4b30-4bdf-85f1-d1a3e47ad41e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5d324a01-d38f-4760-bae7-78bd606247f5"
        },
        "item": {
          "id": "02f48b12-02d6-435e-b7b7-1fed3b513db2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2157a390-b6bd-442d-843f-e1973118ceea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7ddcc1-660c-4814-8004-de2f33a57a53",
        "cursor": {
          "ref": "e3375ac6-329f-44f7-8d87-2704d2a8b548",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bc3bc679-cc87-42b9-9c6d-5b504ceea8a3"
        },
        "item": {
          "id": "3a7ddcc1-660c-4814-8004-de2f33a57a53",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2501895c-72e0-452a-93e0-2ae10793689f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23866fd-5876-445b-b763-4018669fee17",
        "cursor": {
          "ref": "fc83071f-1fb2-4236-8705-ccce8af4a0a2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "60642b9c-f5ed-4c86-9efe-c7cc3abd8683"
        },
        "item": {
          "id": "c23866fd-5876-445b-b763-4018669fee17",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9d6f528c-b28a-4bba-af3b-bffe9d316ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1f41d2-d8c5-40b6-b378-fee248bad066",
        "cursor": {
          "ref": "c60521b9-9017-4149-bec0-694990452472",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9e5293a3-f452-4769-a0f9-e52f07a300b3"
        },
        "item": {
          "id": "3d1f41d2-d8c5-40b6-b378-fee248bad066",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "54733ffb-c1e0-45cc-880a-52072bc8049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe36e4d-56a0-426b-94a6-2334d547e787",
        "cursor": {
          "ref": "2c671d3a-20d0-4522-a16b-c9d8eacca23d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5b5a3722-c9f8-487b-bf69-66b3250ebcb7"
        },
        "item": {
          "id": "ffe36e4d-56a0-426b-94a6-2334d547e787",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "78bb313e-3dc8-434d-8141-37f85705436c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de867b71-068a-4c50-8ff9-d87f80496323",
        "cursor": {
          "ref": "53abffd8-8361-439a-9703-9379330837d2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "843960c2-b8dd-46d7-b636-9cccd8435ed0"
        },
        "item": {
          "id": "de867b71-068a-4c50-8ff9-d87f80496323",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e4355495-4642-44b0-819d-617544a6af18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f677e27-2ed8-4a31-8c08-0a39aa125104",
        "cursor": {
          "ref": "4881e86c-dac1-4c8e-b405-b73abecc4812",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "936098dd-ed38-4e04-b2f7-2d6ba6e024e2"
        },
        "item": {
          "id": "7f677e27-2ed8-4a31-8c08-0a39aa125104",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dd47860c-13af-4516-8e0f-8ea1cd91141c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f369c2-7ad5-4b74-9717-28bc28ff989e",
        "cursor": {
          "ref": "ceec852a-4416-4244-ab96-891e801d59d3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3ecf3a76-89ed-4ff8-80f1-a3b9d0e12188"
        },
        "item": {
          "id": "c1f369c2-7ad5-4b74-9717-28bc28ff989e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "309c7e14-a41a-4f11-9f00-83dd1cd193a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b13931f-5d2b-460e-8812-4e70ac4b4f5d",
        "cursor": {
          "ref": "05bd57cd-8bf3-482f-b21b-08c58452cd22",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ea642954-1eb5-47bc-a8c3-ab6e15246e8b"
        },
        "item": {
          "id": "9b13931f-5d2b-460e-8812-4e70ac4b4f5d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "845a961f-0e7c-4ab0-a678-f1fcac08b9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4d6169-740b-44f0-8d75-a84c90eab6ed",
        "cursor": {
          "ref": "07fd4c13-c4b1-4624-865a-9a0e05d8b142",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1a8f3762-8515-4dc2-a20a-c82ba62c4430"
        },
        "item": {
          "id": "bc4d6169-740b-44f0-8d75-a84c90eab6ed",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "54f68bdd-936c-4adb-b6e6-8d60deea5722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065f55b8-7fa5-4cca-a25c-e05836eb6afb",
        "cursor": {
          "ref": "782349da-704a-4c93-97b4-4420424f3bb2",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c6926030-a6f8-4907-b262-b84278094fba"
        },
        "item": {
          "id": "065f55b8-7fa5-4cca-a25c-e05836eb6afb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "56bcfa4e-e997-4c81-b3e7-44a92beadeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eadb45a-251d-423a-903f-c96aad5e7484",
        "cursor": {
          "ref": "c355cbf5-8883-40b0-bf89-d67fd7b4d8c1",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7c671484-b2b8-4a66-a230-b5be6a2a923e"
        },
        "item": {
          "id": "5eadb45a-251d-423a-903f-c96aad5e7484",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e0e2c441-5f4f-4619-9685-442cf78f2cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9d8858-538e-46a1-b7da-77a93a3aa5ba",
        "cursor": {
          "ref": "3288a30e-a111-4563-a14a-c7f6d822d62c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e832e082-c003-4940-9bcd-5e712d4a87b1"
        },
        "item": {
          "id": "7d9d8858-538e-46a1-b7da-77a93a3aa5ba",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "560704ab-267c-4421-9cb0-ed00b81bca32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc32c0e3-0a84-4092-9394-3f1223ead5cd",
        "cursor": {
          "ref": "ce45cef4-c799-4c55-801b-46b4a1ee41e9",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fbb43d79-0e42-4ac2-ad86-f26a503325bc"
        },
        "item": {
          "id": "cc32c0e3-0a84-4092-9394-3f1223ead5cd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2e8ea364-e9f8-4eac-b75f-2abd3503f3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f79e3f8-aac1-43da-853c-b8b547f3ea56",
        "cursor": {
          "ref": "6fcb5d29-c18e-4e68-96c6-08da0d3b874b",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8d6fa505-5304-470b-b3de-4054b278f8f8"
        },
        "item": {
          "id": "1f79e3f8-aac1-43da-853c-b8b547f3ea56",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f6e280e-3dee-41ea-b1d0-09f375c0245f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd79695d-fdb2-44a4-b6b9-92a308ba354c",
        "cursor": {
          "ref": "cc130b6c-00df-42a6-8210-65075b455c2a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6d2f11d3-ee31-42a2-9486-4c958e67277c"
        },
        "item": {
          "id": "cd79695d-fdb2-44a4-b6b9-92a308ba354c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1ab0f7d0-b0a2-4267-bd48-8c945f037e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb2abcb-c447-4c9a-bff6-8dec0730adfa",
        "cursor": {
          "ref": "f20e4fb7-4773-42ed-879e-a17d980fcbea",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "30168cc5-8da7-482b-a7f7-364f7e474c0c"
        },
        "item": {
          "id": "deb2abcb-c447-4c9a-bff6-8dec0730adfa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "83d0e087-5a5d-41d3-a062-920b0d99a5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3af0712-a1dd-45bb-8db3-098a4eb7a6a9",
        "cursor": {
          "ref": "97934c6b-5f50-4624-8844-25dbb2720afe",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "53d87b43-102c-4312-963f-a232004d8469"
        },
        "item": {
          "id": "b3af0712-a1dd-45bb-8db3-098a4eb7a6a9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d7438488-f125-4c2b-b34e-b85d7550b238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64978a20-0e37-4e2b-b2f1-5e55770d25c8",
        "cursor": {
          "ref": "de7deb6a-21da-439e-a99c-1e8189924c10",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "47fb2770-6ce5-444e-b009-42b9fb24eaee"
        },
        "item": {
          "id": "64978a20-0e37-4e2b-b2f1-5e55770d25c8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "584f8bad-739e-4722-8286-55f611ab8e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af39a172-0a6f-4a4f-9680-d8b298ff2325",
        "cursor": {
          "ref": "6b703b5f-9ee9-4d1e-bcb9-ec7a5c1a8203",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f8aada2f-e399-4a9b-9ffe-09de29ab8b18"
        },
        "item": {
          "id": "af39a172-0a6f-4a4f-9680-d8b298ff2325",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "855744aa-6a1e-4043-a5be-9e9a3ecc3b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed9eba3-aba1-4c39-8ae8-6aa26cc022f9",
        "cursor": {
          "ref": "d459f5f1-f83e-4331-ad80-5a477c6dbbb5",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1ad8ad3b-67b9-45b4-8ca1-530ad3e7caf7"
        },
        "item": {
          "id": "7ed9eba3-aba1-4c39-8ae8-6aa26cc022f9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5ee4f97c-5e40-4d26-aed4-ccbb9b2cc343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81832261-a86a-4baa-a8a2-00755514b736",
        "cursor": {
          "ref": "a86bfe15-bf33-48a7-899f-2011a7d499d1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "21883e58-c3ec-4c1b-93f7-984fb3cdf142"
        },
        "item": {
          "id": "81832261-a86a-4baa-a8a2-00755514b736",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "969eb6a0-f843-4d5d-8df5-00a3d532d668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38436aff-3fe8-4417-af37-c98b3a974a50",
        "cursor": {
          "ref": "7b852143-e182-4c41-9d66-288d3f5ad375",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c51deb05-e10a-4d07-98d4-a1bdb2ac7906"
        },
        "item": {
          "id": "38436aff-3fe8-4417-af37-c98b3a974a50",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "30318562-e2c5-4ede-91c2-09ac542b57e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97515d03-70cb-45ce-9bfc-9ce2523f8492",
        "cursor": {
          "ref": "a9dec726-fa12-4f15-85f0-5570e8ef6934",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0ef62da9-2a83-4db0-8839-2f47d6ac6e78"
        },
        "item": {
          "id": "97515d03-70cb-45ce-9bfc-9ce2523f8492",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "07db2176-bd51-4a89-a701-929e9ca41aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3e06b5-9ebf-4f0b-8468-163d54b5d116",
        "cursor": {
          "ref": "d1caa171-ff8f-440a-ac19-0a1260f97cde",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "09844d0f-46ce-49fd-8129-aca12262842d"
        },
        "item": {
          "id": "da3e06b5-9ebf-4f0b-8468-163d54b5d116",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d0de0693-052c-46ea-8c80-419a982e2d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95837006-4c5d-41f4-8195-1bb51ce42fe7",
        "cursor": {
          "ref": "01df855c-9367-499f-8b04-5c7774792cfa",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3d2d710a-ed4a-4d8e-9cfd-f5e7b7336553"
        },
        "item": {
          "id": "95837006-4c5d-41f4-8195-1bb51ce42fe7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "55f25650-a91b-4607-9453-14f866233007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3676272e-6320-445e-a5fe-e2a30c77cbe8",
        "cursor": {
          "ref": "0fed01f8-9de8-46f3-b6cb-96009b8664e9",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "64170aa6-86b4-479c-a8f5-1c919d39ca65"
        },
        "item": {
          "id": "3676272e-6320-445e-a5fe-e2a30c77cbe8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "05b45523-fcd7-47e1-b9c3-1165a99c0128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3c9b46-7ed5-4a9e-b86c-c5b0f123f338",
        "cursor": {
          "ref": "49b9de67-3db8-4a12-9796-d33b739b411d",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d9297339-0c22-4d09-a866-baf00092ae87"
        },
        "item": {
          "id": "fb3c9b46-7ed5-4a9e-b86c-c5b0f123f338",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b243187c-88b2-4830-8e98-fe2ab90617b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a2371a-4f52-4fdb-a08c-99545dc2d2df",
        "cursor": {
          "ref": "0e49169f-cfc0-4e2c-9aac-058812b5b219",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e1feb6b9-a4c9-49d5-b6fb-7a738b98f9f0"
        },
        "item": {
          "id": "19a2371a-4f52-4fdb-a08c-99545dc2d2df",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b3301059-bd85-4d1b-9724-00163984e0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768977b0-3724-4426-9d13-5364e9be12b4",
        "cursor": {
          "ref": "b2a0e3c8-f0f8-43d9-b7e9-2d67e6d76270",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f3e3cecf-ab23-491f-b959-1aadede482b2"
        },
        "item": {
          "id": "768977b0-3724-4426-9d13-5364e9be12b4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "292566df-c2ab-4809-bc0d-082c07faf517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735c8b32-8968-4c9f-9059-49cf7231d1cd",
        "cursor": {
          "ref": "e952b851-316f-41ae-850b-d1cddb43ee43",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c5ac6b70-e2e8-4519-b3d6-d8afd6c54b29"
        },
        "item": {
          "id": "735c8b32-8968-4c9f-9059-49cf7231d1cd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ef31a24a-0d1f-4cab-ac6c-6b650382157e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc334842-ae89-4fd1-a644-f90d12b6dba5",
        "cursor": {
          "ref": "c896827a-327d-439f-8d9d-6f7cf183ea42",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0ce228e3-fa10-41f1-8c44-6660210cd9e3"
        },
        "item": {
          "id": "fc334842-ae89-4fd1-a644-f90d12b6dba5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e8d5f1bc-ba00-4d20-af4e-0f711d091472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd67d34e-a9d6-48bf-a027-004e7b949789",
        "cursor": {
          "ref": "1ddf7b45-2858-4995-ae5e-ead9d7961944",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d4bb9562-7b12-45f8-ad56-7bb8ed6b4683"
        },
        "item": {
          "id": "dd67d34e-a9d6-48bf-a027-004e7b949789",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "569b956d-51bb-4aca-8ba7-76137b9badcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9d7a02-1231-45e2-bad9-97cf5ff2462e",
        "cursor": {
          "ref": "bcf24c43-8e34-4714-8957-b0324a0b5d8a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "040b2ad0-0320-4bf1-adaa-5525ef293c40"
        },
        "item": {
          "id": "ef9d7a02-1231-45e2-bad9-97cf5ff2462e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f88a1656-c316-4d1f-9981-991e2239adde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ada3979-6a87-4d8b-9672-a3d5a4b18c15",
        "cursor": {
          "ref": "d04a1164-224d-4613-a4bd-6dbc955d0be7",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b23214c0-9a8a-4cac-a6b8-40f38f4da118"
        },
        "item": {
          "id": "8ada3979-6a87-4d8b-9672-a3d5a4b18c15",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "55c32526-bbca-42f2-accc-932ee4fe7a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24347019-fc40-4f07-a10c-b710fa50dc04",
        "cursor": {
          "ref": "edb26ac9-b8da-492c-9b41-266eeb76ca40",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "870534e8-af06-4826-a8b9-5f059f0ef7bd"
        },
        "item": {
          "id": "24347019-fc40-4f07-a10c-b710fa50dc04",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "777fc1fc-7573-48f9-ac32-4e86e2fae5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a783bf95-d4bd-41e8-bf35-ebd833f5d2b2",
        "cursor": {
          "ref": "c163e71f-8f72-4036-8f7d-94669751769b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f7b2225c-97ae-4b70-8942-c46d7f8991bd"
        },
        "item": {
          "id": "a783bf95-d4bd-41e8-bf35-ebd833f5d2b2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a3d742d3-3763-455b-9e6f-8a8bad17dd3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa10ecb-cb62-491d-ae46-e3199ba51e57",
        "cursor": {
          "ref": "92874199-f996-4e5f-9bde-2970aadada9b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ca97564e-4e15-4545-8350-56f9aab09ddc"
        },
        "item": {
          "id": "0aa10ecb-cb62-491d-ae46-e3199ba51e57",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f8a74fd1-70c2-48ac-a907-85ee8a709828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d283edf7-d9de-4f5a-8193-787b012b4603",
        "cursor": {
          "ref": "ed8c1d4e-81fa-4169-a93f-163cb8cc58da",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8443c339-c7c5-46b9-bdbf-d188bd623db2"
        },
        "item": {
          "id": "d283edf7-d9de-4f5a-8193-787b012b4603",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2aeefa31-7a5d-44d5-8b9a-63617ec5e38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef157abe-e1e0-49ec-a54d-5f2f75df5877",
        "cursor": {
          "ref": "119a6635-dc84-4404-bdbf-c6761941149a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ed876f20-063e-4c98-a7c4-8ea31e067f3b"
        },
        "item": {
          "id": "ef157abe-e1e0-49ec-a54d-5f2f75df5877",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2dd3bff3-93a8-451d-a264-371b9c3413df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38f5289-b6d4-42f3-9982-81bdf832947d",
        "cursor": {
          "ref": "696e36fc-6922-4767-8f14-ac1d77fbc880",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "152dc279-5fb0-4f8c-9859-8b6ba8a607a8"
        },
        "item": {
          "id": "b38f5289-b6d4-42f3-9982-81bdf832947d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "feaab908-5e31-4274-a60e-747cea09d85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3eb096-e41b-42f8-88f0-f469f47badaa",
        "cursor": {
          "ref": "267932fa-ea43-4dac-94bc-0298212d262c",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "27815290-d6bd-481c-af28-ebe8e180ad69"
        },
        "item": {
          "id": "9c3eb096-e41b-42f8-88f0-f469f47badaa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "db41afa1-7e2c-424a-8e1b-2308c3ada53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1afcf8-36d7-4888-9098-de6b03881c26",
        "cursor": {
          "ref": "e525ed74-4b56-4833-9a17-497c63f1c4fa",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9fd9ec11-f1c4-4760-904c-ce18812bff1e"
        },
        "item": {
          "id": "fe1afcf8-36d7-4888-9098-de6b03881c26",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ade39cc1-d1e4-4f63-8919-9cc90a061b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e80b2f-1c96-449d-b67b-464476665fcc",
        "cursor": {
          "ref": "8c4cdb40-b660-42d3-8dc7-e0b18a2cc0d3",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9f7e5fc9-09ec-4af1-a193-d83ac4849d79"
        },
        "item": {
          "id": "68e80b2f-1c96-449d-b67b-464476665fcc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9c6fd0a4-abca-4771-98f4-76d56c859cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3474ba-8273-4929-82b7-b1d0695c0e65",
        "cursor": {
          "ref": "d0bf8e88-1d71-4959-bb66-38a75dc07302",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d9b1405b-5417-4916-92a0-7a7e713089ab"
        },
        "item": {
          "id": "6a3474ba-8273-4929-82b7-b1d0695c0e65",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ff36ce6d-3426-4204-ac39-145888b7b8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3b4918-7e57-4da8-bfa6-16277e4359be",
        "cursor": {
          "ref": "1b53bde0-f034-46d3-a350-993780054027",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "39b8e31a-49a3-4262-83e2-dc6ced4153dd"
        },
        "item": {
          "id": "4a3b4918-7e57-4da8-bfa6-16277e4359be",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b88afaee-0aaf-46c2-a420-f9a147f12e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a977d900-a94b-46af-b008-fa42b5902309",
        "cursor": {
          "ref": "8388acae-f03f-4496-866a-163269326faa",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "35ab21db-1fa2-42a2-911b-b8d19dd63350"
        },
        "item": {
          "id": "a977d900-a94b-46af-b008-fa42b5902309",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b65552fb-e100-40e0-8509-f062c8970e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7e570a-1854-4984-81cc-9d3cdbe52746",
        "cursor": {
          "ref": "6a92e742-d3bd-4741-946c-0f53ef0355ce",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0e1a8c5d-09f1-44d6-ad27-85fbcfabf9e2"
        },
        "item": {
          "id": "ce7e570a-1854-4984-81cc-9d3cdbe52746",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fffcacb4-4b40-4dc4-bed0-2220c570d41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889956bc-ed0e-46b4-ad97-a51795d39e7a",
        "cursor": {
          "ref": "343cd5ee-22c3-40a9-9ccc-6c1a93117f37",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "480a7e49-55c6-4583-9b9d-a71e42606004"
        },
        "item": {
          "id": "889956bc-ed0e-46b4-ad97-a51795d39e7a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "55f4f204-71c7-40eb-a477-a47849b75041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fdd752-2859-40c6-bafe-2479f69f180a",
        "cursor": {
          "ref": "2c50d971-cfe5-40d3-ab7b-052a39618724",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7bbea606-2b66-4047-bf78-f87d9c20988d"
        },
        "item": {
          "id": "37fdd752-2859-40c6-bafe-2479f69f180a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0370e274-2ec6-4f77-bcca-116e027f6f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a459d8-9274-4c7e-ac0b-361cc87c306f",
        "cursor": {
          "ref": "db3ef885-008a-45ec-9733-e87c4854f3d6",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "571c92c7-7325-485c-945b-a2607f1c9faa"
        },
        "item": {
          "id": "01a459d8-9274-4c7e-ac0b-361cc87c306f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5fc64152-3640-44fe-8f75-9b406e0a6fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b9ccfe-627b-43c2-9d38-6f55c095d109",
        "cursor": {
          "ref": "cf6f92a6-fae5-4f6b-bc0b-5ab752378e7d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b0dbdf90-f8eb-49d7-bc2d-3532d3d1980a"
        },
        "item": {
          "id": "93b9ccfe-627b-43c2-9d38-6f55c095d109",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d7628017-72e7-464e-a8c0-93b1ba9bb3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49827961-0017-4a12-850e-70c2842048fc",
        "cursor": {
          "ref": "be15129e-90ea-44ba-a625-ce3d59f71356",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bcdd6684-47fe-433a-a509-a15d36230adf"
        },
        "item": {
          "id": "49827961-0017-4a12-850e-70c2842048fc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d66746fb-df64-4c62-a814-a346776f2b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d71dbd-85f0-4e3f-8f2b-b5a5afc6914d",
        "cursor": {
          "ref": "ee8cded0-8d12-4959-827b-63b50f2cf65d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "04c3bacd-e01b-4ed8-8f41-f0de5095f8af"
        },
        "item": {
          "id": "74d71dbd-85f0-4e3f-8f2b-b5a5afc6914d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f850db51-6295-4ea8-bd32-07880e8ff51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3addba-4ff6-4e9a-a8ad-d8ccc68adf5d",
        "cursor": {
          "ref": "f7c20e5b-e909-4aff-9676-dc671c48a23f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c5a01649-0b8a-4b20-8ceb-3fc32e1d9d2c"
        },
        "item": {
          "id": "7f3addba-4ff6-4e9a-a8ad-d8ccc68adf5d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d91217f1-ede0-4bbb-89a2-a5ce55914bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ba0318-c8fa-4a52-8cb9-33058aee4ebe",
        "cursor": {
          "ref": "b245d57c-56d2-478c-ae56-935622083221",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2fa6688d-bcf2-4d7e-b37e-7a2e40aed94b"
        },
        "item": {
          "id": "f1ba0318-c8fa-4a52-8cb9-33058aee4ebe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5ec852e5-db90-41f4-8af8-aed0e7a0650d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c033ff4-5cb8-4cea-bdaa-5e6ba0b23d30",
        "cursor": {
          "ref": "2d80949f-8b2b-4176-a707-4a06de13a4db",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "51c39967-0ed3-4803-a484-ca9e7e9194d1"
        },
        "item": {
          "id": "8c033ff4-5cb8-4cea-bdaa-5e6ba0b23d30",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8889fbce-7e47-4e83-b7ba-ea8a2df925ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f98e945-270b-4f0d-8d73-d6ccd5bb2435",
        "cursor": {
          "ref": "7f92e8dd-fdce-47e7-94f4-004cb0f0821e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e3e39f4a-071f-4f0f-afcb-0d96d08ae8c8"
        },
        "item": {
          "id": "7f98e945-270b-4f0d-8d73-d6ccd5bb2435",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9dab9455-2222-469b-ba5c-987a4c6d17be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa104b0-a230-4b64-98b6-e51aef96d2ca",
        "cursor": {
          "ref": "fa615ea5-3cc3-4484-bb27-d68f1f5c9ad4",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5aee905f-877d-4a69-8274-f00d90e966ae"
        },
        "item": {
          "id": "eaa104b0-a230-4b64-98b6-e51aef96d2ca",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "57ae409b-96c3-4bc1-bd55-e82c8e9a66d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ea3837-2667-4618-a780-bbd50367f332",
        "cursor": {
          "ref": "a22c8fab-e56a-4cd6-a03a-581398c3942e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2e1a7736-e7cd-4d7d-a38f-95bcb70834cc"
        },
        "item": {
          "id": "a9ea3837-2667-4618-a780-bbd50367f332",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2187502d-d3b3-42af-9830-bfd67fefc792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba4030b-8e09-4194-80d6-b863cbe3313f",
        "cursor": {
          "ref": "a0ef3b1d-4197-4043-8cd0-160f55836594",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "83ebd7d6-e183-44ab-be28-9aa8c9342297"
        },
        "item": {
          "id": "9ba4030b-8e09-4194-80d6-b863cbe3313f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dd9aef7e-5a52-41c5-94f7-17f74c697f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e24c427-6bf6-4031-ae24-4792e8278eeb",
        "cursor": {
          "ref": "a9e358f4-400e-4b38-99e9-7ce62a341045",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d299861f-ab35-44a2-b791-688381375235"
        },
        "item": {
          "id": "4e24c427-6bf6-4031-ae24-4792e8278eeb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9de6c35c-ed86-4291-ac9a-4a828b284dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929c2c4c-3d56-41a8-8615-6daed8d270da",
        "cursor": {
          "ref": "a9f64436-96fd-45aa-8a3e-f03990017f28",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "543cd231-86f8-4a90-a326-a82b981b1ccd"
        },
        "item": {
          "id": "929c2c4c-3d56-41a8-8615-6daed8d270da",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "086194e6-2a4a-4475-9952-ce5ea01c77d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd67c37-8988-4506-b7b1-6d7684f3a816",
        "cursor": {
          "ref": "fb4cd299-0a63-4e29-a85f-10576d0829fb",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "07ba9226-de86-4159-8a09-94ce1e7b8e8d"
        },
        "item": {
          "id": "ecd67c37-8988-4506-b7b1-6d7684f3a816",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e53d1f3e-2681-4dff-b487-6920e4d17bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb25669-80cc-4e01-9be7-268d7b7ef1d6",
        "cursor": {
          "ref": "352dddf9-c558-41d9-a9fc-eced3dccf629",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "492f184b-0311-4f1f-bbee-8e8c8124092f"
        },
        "item": {
          "id": "0bb25669-80cc-4e01-9be7-268d7b7ef1d6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b492025c-81fb-4b79-90dc-8cf648a6af4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6d5bb1-b863-4bc0-9b9e-1d0fa3d2b6e9",
        "cursor": {
          "ref": "35a71875-f5ae-45b0-8e83-3285b47e675b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e17a37cd-bd69-4479-b4e6-189aec79053b"
        },
        "item": {
          "id": "4e6d5bb1-b863-4bc0-9b9e-1d0fa3d2b6e9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a0e62882-2f27-4dd0-87f2-42d7c98f8740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab23b7a2-0aa7-440a-a5eb-6a839a0aa841",
        "cursor": {
          "ref": "8db60c14-2ca4-4a03-813a-065b471c0955",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d1d94275-577b-44c1-852e-d0b365efb9c9"
        },
        "item": {
          "id": "ab23b7a2-0aa7-440a-a5eb-6a839a0aa841",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3f0792f3-4368-4fa7-81ad-062642da01bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fe0575-27b5-4612-86fc-8b114714b3fd",
        "cursor": {
          "ref": "9bd4f1bf-f49c-4626-9a0f-e86b7cff85c4",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f7cf1bb6-b881-4045-bc04-a1032a61a254"
        },
        "item": {
          "id": "f1fe0575-27b5-4612-86fc-8b114714b3fd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "72b8807e-b561-4f33-bcb0-dec4c9541ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8095ea-605d-4115-beaa-e14a96dfe96e",
        "cursor": {
          "ref": "ac9dc0a0-111a-45c3-994c-571ed02a71fa",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "544f07cc-8e3f-49e3-8037-fb7d1f3f2aa0"
        },
        "item": {
          "id": "ea8095ea-605d-4115-beaa-e14a96dfe96e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3afcf919-85d3-4469-81a7-b653397fea38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32079947-d8ec-4d33-b717-2eac67956660",
        "cursor": {
          "ref": "5c6b7c7d-ca70-443b-b534-240f6c1522be",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1c1fd7c3-fe4e-46f4-b253-9ca0171ee5ff"
        },
        "item": {
          "id": "32079947-d8ec-4d33-b717-2eac67956660",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "437a5a43-a0db-410f-b321-ccc8b23396d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184b3dd1-45fe-4b38-ab4d-259392465d1a",
        "cursor": {
          "ref": "c5e51e70-3e4e-4780-86b2-d7b0af20ac31",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f04f9c28-a73b-4ccd-8066-df3830583309"
        },
        "item": {
          "id": "184b3dd1-45fe-4b38-ab4d-259392465d1a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e47563d7-6d12-419b-8ffe-88ed9b5847af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b503e14-f66c-4a08-8a04-856a95504754",
        "cursor": {
          "ref": "6decb2ee-9988-46d7-8f02-aa3b32da710c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d84cd9c6-0abb-426d-823e-c71cc13f94f8"
        },
        "item": {
          "id": "6b503e14-f66c-4a08-8a04-856a95504754",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4196ec6d-1724-43a6-9304-ff3ba4d86a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d235f3dc-1c03-42b7-9f84-312292faf98e",
        "cursor": {
          "ref": "80742818-c0b2-4e6e-9e7e-d7132f8b3f62",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "43945f1e-a560-42df-925b-a683aa75eab0"
        },
        "item": {
          "id": "d235f3dc-1c03-42b7-9f84-312292faf98e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fb1fa9f4-1d28-4ecf-85e4-b91c5e2851aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f3d74c-1f08-40ab-84bc-1067996aaacf",
        "cursor": {
          "ref": "a63e2b62-85a2-40cd-862a-8cbe57693de0",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "32a1d24f-b39e-4998-9f41-cd4647138dd8"
        },
        "item": {
          "id": "c2f3d74c-1f08-40ab-84bc-1067996aaacf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f4bea0ec-d300-4c7d-8462-d790a756d4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22df12b7-332c-4eb3-922b-6ad43c3eb97e",
        "cursor": {
          "ref": "42b0c555-5a67-43b9-94a6-75f40f68c86b",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6c623107-5acb-4a23-944c-541b178f9df7"
        },
        "item": {
          "id": "22df12b7-332c-4eb3-922b-6ad43c3eb97e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cb741e42-6860-4d85-8081-04163deb0e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca58f5f3-d8da-43a5-bba3-6cd36876449f",
        "cursor": {
          "ref": "1fcd8259-5e2d-4f5f-bfe7-530200f30239",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "278cea5e-3fe2-408d-9c08-f9c550ee6b39"
        },
        "item": {
          "id": "ca58f5f3-d8da-43a5-bba3-6cd36876449f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9eefa3c2-642c-4ab2-8e6d-1ef5dbc9f059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a84af48-cda4-4dfa-8b1e-d96fa28a2716",
        "cursor": {
          "ref": "29ec43f0-59e0-492f-94e5-12648bc962a9",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5459eb70-a618-4b31-ac7f-4674c68ee4e8"
        },
        "item": {
          "id": "5a84af48-cda4-4dfa-8b1e-d96fa28a2716",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "affaf3f0-f58a-4a8e-8236-49df8835a403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed129768-5213-45da-9367-4a174f23d728",
        "cursor": {
          "ref": "1f0c4d24-12c6-46da-a40d-0878cbd6fac2",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f0abbbb4-62f3-487f-aabc-85cfe962dd04"
        },
        "item": {
          "id": "ed129768-5213-45da-9367-4a174f23d728",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f64e3060-ea48-4151-a8c7-d9ee8c93882c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0278b37a-1ac6-48be-beca-b46d460a4be3",
        "cursor": {
          "ref": "9dcec6fe-2663-49c3-b7e6-bafc8dc1ba82",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2ec9c628-cdd9-41d3-be44-832ad66ad476"
        },
        "item": {
          "id": "0278b37a-1ac6-48be-beca-b46d460a4be3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "066cde90-6a04-4556-af6b-a42d806edd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f43ecd-f0d0-45f1-be22-20ca61908b79",
        "cursor": {
          "ref": "07edca70-ecb3-4313-ab13-9bc073197b00",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cca11472-a119-4ad6-8665-ac2843d125d5"
        },
        "item": {
          "id": "62f43ecd-f0d0-45f1-be22-20ca61908b79",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ebdb1c2a-89c6-4731-b67d-e3e740d1b9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ddb6fe-0ac9-4342-b628-9a9670d8b9c9",
        "cursor": {
          "ref": "08e386f9-e664-442a-bd5d-f2e578a93937",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f175a049-9629-460e-8034-146986f84131"
        },
        "item": {
          "id": "c8ddb6fe-0ac9-4342-b628-9a9670d8b9c9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "99acd853-9e37-4741-82e2-2d8d85dbd480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606c1d0f-9299-48a7-aeee-de9476243e79",
        "cursor": {
          "ref": "1b109561-7cbe-4d19-8c55-bad39012a206",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4cec7894-dfec-4fb4-8060-a9280f3605bd"
        },
        "item": {
          "id": "606c1d0f-9299-48a7-aeee-de9476243e79",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6d193fa5-7fde-43af-8d2a-243b0a8993b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb56277-1a66-4519-8ad6-e8f3a2d1f66b",
        "cursor": {
          "ref": "d8e12c98-3062-4d09-b9da-bf40e12d1c41",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ebd667f3-516f-4b90-a924-0332038c799b"
        },
        "item": {
          "id": "dfb56277-1a66-4519-8ad6-e8f3a2d1f66b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a5235128-66c3-4096-9ccc-69403ff7175e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a500e231-a246-473c-b1d3-905d6230ea29",
        "cursor": {
          "ref": "370b2fc2-3296-4b85-a897-ae99cff6421f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "eaef1c4d-48e2-418a-98d6-59d910b31d32"
        },
        "item": {
          "id": "a500e231-a246-473c-b1d3-905d6230ea29",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "806e0da5-5266-4c46-8553-3f337a864acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b074644a-d77e-4db2-bbcf-fbe160f898ce",
        "cursor": {
          "ref": "fe567578-4d3c-48f1-a56d-5f58cdc38974",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6bbf5f40-51ed-4bf4-9e38-ba20c6c83b35"
        },
        "item": {
          "id": "b074644a-d77e-4db2-bbcf-fbe160f898ce",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ba7a14f1-9aad-4a98-81bb-df102b81469d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd7c55e-86e2-4d4d-87bb-b2eb858bc93a",
        "cursor": {
          "ref": "60cceffe-b38b-4a26-b60d-7f19935822c6",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e2bb4cb0-4add-43c6-837f-6c9739ca63b3"
        },
        "item": {
          "id": "8cd7c55e-86e2-4d4d-87bb-b2eb858bc93a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3fda28ca-c6a3-4c34-88de-4eccc7391ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8ae72f-629c-462b-967a-05cb41743777",
        "cursor": {
          "ref": "3b7056b9-8abc-41d4-afe1-d50d408bd994",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "17aec0bc-581d-4528-a6fa-002e3d704cc7"
        },
        "item": {
          "id": "ae8ae72f-629c-462b-967a-05cb41743777",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "915636c2-350c-4fb2-8699-7292bdcfcec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372c0fe4-d33f-4265-a24a-a705c9690bba",
        "cursor": {
          "ref": "a4f37c8a-2029-4524-b5fd-ea87f550a8fe",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1890f287-4df7-4c4c-a21e-659966f7eda2"
        },
        "item": {
          "id": "372c0fe4-d33f-4265-a24a-a705c9690bba",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4e135fa8-3a77-420d-bdc0-12bd3628d7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad5ff2a-26bf-4776-9129-9a6c7a38c0fa",
        "cursor": {
          "ref": "fb08b139-0eed-4a91-8268-2879a5d771c4",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "27579192-873f-4bef-a1eb-0dc236ac255b"
        },
        "item": {
          "id": "9ad5ff2a-26bf-4776-9129-9a6c7a38c0fa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d100719d-fddb-4af6-bca6-7755e42599f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4818037a-76c2-4ebc-8418-450fd86eef6e",
        "cursor": {
          "ref": "9fec27ed-0dd8-4e56-87a5-299ff20f17d7",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0b616132-d84f-4ba4-8390-5ded375ee8b5"
        },
        "item": {
          "id": "4818037a-76c2-4ebc-8418-450fd86eef6e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "14e4c86c-85a4-463a-84b7-7a36a2220883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36879e7-cf45-47a1-9043-58a09e088000",
        "cursor": {
          "ref": "6a2de3a1-fe03-426d-8a81-ad71dee2898f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6451217c-ce05-4071-b7ab-27bcacc336b8"
        },
        "item": {
          "id": "f36879e7-cf45-47a1-9043-58a09e088000",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3b2fc0dd-f0cd-4050-8f66-4c825c22c253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3b9c03-1a7f-484c-a07c-1a89dbcc40a0",
        "cursor": {
          "ref": "5f85bc29-3164-4082-b2bb-b93dba5f982b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9ce2c90d-037f-41b4-81d6-2a6325624e9f"
        },
        "item": {
          "id": "fb3b9c03-1a7f-484c-a07c-1a89dbcc40a0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bb1e535d-300e-4e7a-b989-28a310574c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d75a0f-d6ec-460d-a3f3-981120b5d00e",
        "cursor": {
          "ref": "bc52b399-46b6-47bc-9435-4949fac1aba6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "eb259c97-5f48-454e-a877-35f221c4c973"
        },
        "item": {
          "id": "a6d75a0f-d6ec-460d-a3f3-981120b5d00e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6189d720-e47e-4f99-939c-f3eb281be3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8976a29a-96c9-4984-96ab-720349aa51f0",
        "cursor": {
          "ref": "c196f544-bed6-4256-81a9-34b3c146120e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e9a41d66-c5c1-4784-a6e6-85fb806aced9"
        },
        "item": {
          "id": "8976a29a-96c9-4984-96ab-720349aa51f0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4cb085b9-b167-4286-b9b6-d0b459ed26be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0390dbaf-fc50-40ea-8e10-66d64cacb3bf",
        "cursor": {
          "ref": "432a4654-c5b8-40d2-81be-c0c95bb86601",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3e9ca304-694a-4ffe-9233-f9c9331cbd62"
        },
        "item": {
          "id": "0390dbaf-fc50-40ea-8e10-66d64cacb3bf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0b592be2-adfd-49af-96f3-92ba20325eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c57e006-81f0-43cb-898c-d93b163535bc",
        "cursor": {
          "ref": "0a7b3895-fc31-4311-b2f5-85789971f69a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aa761d27-6706-45dd-b262-8abe3af41de7"
        },
        "item": {
          "id": "0c57e006-81f0-43cb-898c-d93b163535bc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e65e7379-fbb1-464d-ab5b-b8c4ae3daa06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff70ba51-8376-4a15-b0b3-3fefe0ded77f",
        "cursor": {
          "ref": "455eac70-951e-4b01-9588-10df5202e268",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "93cdd57a-20b1-4bde-a3d1-a52a5eeb01b6"
        },
        "item": {
          "id": "ff70ba51-8376-4a15-b0b3-3fefe0ded77f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "491cfafd-34d5-4f29-b07e-4e19eaf64980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3193fbb8-30c0-4e3e-95a5-39dbd697e9ff",
        "cursor": {
          "ref": "98e751cf-8139-457a-ad45-1f4db8f245da",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "50121a61-a2d1-4ebc-aa8d-68d3f8d4e523"
        },
        "item": {
          "id": "3193fbb8-30c0-4e3e-95a5-39dbd697e9ff",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bdd9592d-3555-46c4-89f7-17a6cae7bdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5123b5d7-8d57-48fb-8241-79d58e423d81",
        "cursor": {
          "ref": "8a97f845-9b2f-4dc3-9cd9-e3085491337e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cca02d66-a726-4347-a28a-9f0f471f82bf"
        },
        "item": {
          "id": "5123b5d7-8d57-48fb-8241-79d58e423d81",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9b6dfb63-7d67-4bb1-a7a2-3b695f98d980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33709062-19ac-4258-86c7-070a1a1080be",
        "cursor": {
          "ref": "8cffc11e-32f6-4ae8-b602-fb8fafbeaf96",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "100f779d-ebf6-4862-a801-9960766735be"
        },
        "item": {
          "id": "33709062-19ac-4258-86c7-070a1a1080be",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a633f2c3-0595-4f93-8f52-19becec2d020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d51677-24d9-4920-a370-b03c3fb4da72",
        "cursor": {
          "ref": "723656ce-77e7-461d-b86f-77dbdf2b1ebb",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "22b1902d-dc38-4b52-9ce6-4ffa10bb9d6b"
        },
        "item": {
          "id": "05d51677-24d9-4920-a370-b03c3fb4da72",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "08367fa5-1cca-4d10-9806-074d8ed39405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061697ba-41d0-441b-bce5-a3602b69d618",
        "cursor": {
          "ref": "8d774aaa-390b-42a1-95e3-f783e754a1e2",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "385b13e6-0265-47b1-96bb-86798d70c132"
        },
        "item": {
          "id": "061697ba-41d0-441b-bce5-a3602b69d618",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b6789088-8857-496a-a858-169c462d64e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291865ef-4f2d-417a-84e0-e42fe8a2d349",
        "cursor": {
          "ref": "6e9c2923-ecd4-4780-8a41-6bf7a6b7aacf",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "de554209-87ff-4194-afbd-51f86dd7f509"
        },
        "item": {
          "id": "291865ef-4f2d-417a-84e0-e42fe8a2d349",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "efdaee4c-ac5a-4d8d-93ad-09c57cff98ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a443440-df82-4f7d-aeb7-005db9c139f4",
        "cursor": {
          "ref": "175f4008-5291-406f-96f6-c01d9bd78fae",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "961b256a-f20b-4c7e-bfd8-2105dab6ae8b"
        },
        "item": {
          "id": "3a443440-df82-4f7d-aeb7-005db9c139f4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a53ad95d-accc-4c4e-852c-0e97d08c0245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e370fc4-ecb3-47e9-a76c-1fb864cc61df",
        "cursor": {
          "ref": "6e4ec385-5265-4081-9398-ee940a71b64a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4c9b20a7-d955-46f4-9513-a67899945975"
        },
        "item": {
          "id": "3e370fc4-ecb3-47e9-a76c-1fb864cc61df",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "833ebcb4-3b4a-423e-9c78-46765ca14270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb29aa9-adcb-4725-bd7f-126db003a94e",
        "cursor": {
          "ref": "a0bb6350-24da-4614-9a70-d37fb1bb87be",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "98503759-2415-4cc1-912a-fee159797dc8"
        },
        "item": {
          "id": "bbb29aa9-adcb-4725-bd7f-126db003a94e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "759ea8e4-f191-4ab7-a71d-cf96d84b415f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917a0b3a-0613-4785-ae89-f6aa0d9d2feb",
        "cursor": {
          "ref": "33002f0b-17d9-4138-a0f6-3ba90dabb730",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "15277d30-c848-4e10-94e2-b8ad2d10eb09"
        },
        "item": {
          "id": "917a0b3a-0613-4785-ae89-f6aa0d9d2feb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "38d5e360-3b43-4084-8d69-52fc452ff991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9280f263-f52c-4d60-9558-f5bc6470c359",
        "cursor": {
          "ref": "f54d36c5-fcf0-4890-b967-3307a0aa885e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "35326810-01fb-4519-a71c-3700c16d2cd8"
        },
        "item": {
          "id": "9280f263-f52c-4d60-9558-f5bc6470c359",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "00e27ec8-79c3-41a7-b4b4-3d2122d5a2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3410148-9716-4534-8ccb-28f7245566f7",
        "cursor": {
          "ref": "c33f61e6-4e6e-4748-9294-5b7a112eb19a",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ca9cf83a-664c-4a88-96f6-8a7b5a725f43"
        },
        "item": {
          "id": "b3410148-9716-4534-8ccb-28f7245566f7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "42fee4c1-3c7f-45a9-9d14-e6c7570c4449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35947675-58cc-4e89-a108-8e0d3496e772",
        "cursor": {
          "ref": "a2771c53-abd3-41ad-b269-6a2c93fc6d9a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "050f65ab-311f-4ec8-bb36-5f00644e7cea"
        },
        "item": {
          "id": "35947675-58cc-4e89-a108-8e0d3496e772",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "da2484c3-52e9-4596-babb-5072e291323e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb51e01-79e6-4a7d-83ad-2532220cf1d8",
        "cursor": {
          "ref": "798db74f-8e6b-4d7e-ba05-6661a80dacd9",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "79ecb7be-977a-4642-9682-ed95e4127e8a"
        },
        "item": {
          "id": "4eb51e01-79e6-4a7d-83ad-2532220cf1d8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fec7d6eb-8b8b-4a6b-b81a-6cb7bf3c371b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbea100-76f9-4b0f-b0c7-aac704271685",
        "cursor": {
          "ref": "a8901608-1f97-4b74-bc58-a4f30ef3c913",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f100018c-5a41-4d1a-b60f-27f03b8689f1"
        },
        "item": {
          "id": "5fbea100-76f9-4b0f-b0c7-aac704271685",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b462edb7-bca3-46c5-bc08-60d949c564f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6ed57e-b152-466a-85e3-d636417b25e7",
        "cursor": {
          "ref": "8f0e0375-7b83-4554-8d47-f75869f7fb81",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "17bb4741-7251-46fc-a298-c224a759510e"
        },
        "item": {
          "id": "3a6ed57e-b152-466a-85e3-d636417b25e7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "59600816-18f6-442e-b2a2-b88f46eb851b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08327de6-e8a4-4a73-83f7-40cf66461962",
        "cursor": {
          "ref": "32288928-a189-4073-95e9-df45bf24b2a8",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "aa11140a-5848-462a-939d-4803cc7ef43b"
        },
        "item": {
          "id": "08327de6-e8a4-4a73-83f7-40cf66461962",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "af32a3d3-e2c1-4b6d-8839-059a75090608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89c259d-ecea-4ae6-945c-28c215a6f877",
        "cursor": {
          "ref": "4e24f610-fdc8-4be2-bc9d-60b3658eeb88",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4c1b5a52-6670-4ced-8509-879ce20c1c53"
        },
        "item": {
          "id": "e89c259d-ecea-4ae6-945c-28c215a6f877",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a29abe13-a65a-436c-b1fc-29b670c59972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c42ca6-a712-4205-ade4-85fa27aa18eb",
        "cursor": {
          "ref": "dc850a44-d636-4065-9c0e-73723b6bfecc",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "550f642d-d52e-42f8-aae2-244602730981"
        },
        "item": {
          "id": "e2c42ca6-a712-4205-ade4-85fa27aa18eb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ae84be3c-f183-493d-8986-ee98220d6985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a535e9-1b43-4c6a-932d-3cf1772e8b23",
        "cursor": {
          "ref": "a34ba528-a3e2-4354-8e6e-0d9d9e5c72e2",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2e09f40e-0a3b-4cd8-9d22-0db6fce0f76b"
        },
        "item": {
          "id": "66a535e9-1b43-4c6a-932d-3cf1772e8b23",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f053e3f6-4ad2-4f1f-8bc5-516fa7a97e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54ad773-1c2b-4dc6-b26d-9ea5657b0dd5",
        "cursor": {
          "ref": "46c513db-395a-46bf-b3a4-d207c6a594f5",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3f89d503-0b4a-4fb9-99e3-313f06f32de1"
        },
        "item": {
          "id": "f54ad773-1c2b-4dc6-b26d-9ea5657b0dd5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b8011b9d-6519-40b4-9677-e5a9f389e360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b069923-1c33-4790-8811-43ae81e179c4",
        "cursor": {
          "ref": "bc753f55-d18b-4027-a79b-3d1ed6328f91",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "96b79614-3e99-4468-9918-3e19603a9ff8"
        },
        "item": {
          "id": "5b069923-1c33-4790-8811-43ae81e179c4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0538ced3-d7af-4188-92cf-65138c8f39ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d820f75-5f9d-4328-95a7-bb8deb2914a3",
        "cursor": {
          "ref": "d25730ec-c388-4047-b792-9324552424fe",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fd9b2430-61e9-4f95-aad8-84a83a883be5"
        },
        "item": {
          "id": "8d820f75-5f9d-4328-95a7-bb8deb2914a3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "52874dab-5779-4159-86c1-e88b6bac427e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47dfc1bf-a443-49aa-af5f-15621c8216c2",
        "cursor": {
          "ref": "9182746f-49f1-4fb3-b3ad-b973b93af4fd",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1d0ebea8-2271-4645-a1ce-fcbe2225fa88"
        },
        "item": {
          "id": "47dfc1bf-a443-49aa-af5f-15621c8216c2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ad4633f1-802c-41b2-afcb-2651847049b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a190b0-72b4-40dc-bb1b-0cde4ee93a60",
        "cursor": {
          "ref": "56bbbb3c-4809-45ae-a44b-a37e813adaea",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5695772d-64a8-4384-9342-3fe889cfd287"
        },
        "item": {
          "id": "f8a190b0-72b4-40dc-bb1b-0cde4ee93a60",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a4576ba8-ac51-43fc-abcd-3caf5915bf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aeb779-03a6-4c65-b2bc-c0d5098a7514",
        "cursor": {
          "ref": "ef2479f4-3281-4a62-9d93-f1d1ed9518a0",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "83cab03a-85ef-4163-b622-0e8ef98f537d"
        },
        "item": {
          "id": "28aeb779-03a6-4c65-b2bc-c0d5098a7514",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "594572e3-ccc2-4b61-8992-cfe05ef32b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03247124-a792-4468-9bb2-871c8e3424dc",
        "cursor": {
          "ref": "23e51fc9-64d7-4ecf-87e3-4b3534bf58b5",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f8c6bb07-0e36-4125-bfc0-84096e0653ae"
        },
        "item": {
          "id": "03247124-a792-4468-9bb2-871c8e3424dc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c7745671-c12c-4d50-a4d8-3edb09b315af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bab1f04-c2a0-417b-955d-da1128445f44",
        "cursor": {
          "ref": "23ec00fa-72f4-40d9-8644-d47aec8c61c9",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c35d5692-2bb0-4149-bdf4-fb2e13ffe5f5"
        },
        "item": {
          "id": "3bab1f04-c2a0-417b-955d-da1128445f44",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8fe760b7-d8a3-410f-9827-947fb5a5784a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53421fe-0eab-4b46-ad02-d5e30e371f3c",
        "cursor": {
          "ref": "e7f13ec1-3e0b-4a6e-9e81-caa1325904d0",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "03a85fbf-058e-4a28-94b6-06a0de874db4"
        },
        "item": {
          "id": "b53421fe-0eab-4b46-ad02-d5e30e371f3c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a8d1a6b4-347e-414d-84ac-06b7c55f3264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade0a3b3-2276-4f21-9213-28d51681bf3b",
        "cursor": {
          "ref": "83642def-f567-4b2e-b570-3d6e2e7bed78",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fdc32c74-ff37-4c2b-8b3c-b2c5d52dbb9a"
        },
        "item": {
          "id": "ade0a3b3-2276-4f21-9213-28d51681bf3b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "be9c449e-d928-41c3-a52e-fd8a2703d9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ee9416-28a4-4900-9266-093809c7c52e",
        "cursor": {
          "ref": "3b88d6ad-3c67-42c4-af64-b595f899a13d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9988dd29-b8ff-46b5-86f5-1db9c3b71ecd"
        },
        "item": {
          "id": "80ee9416-28a4-4900-9266-093809c7c52e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "65c8bb7e-8496-4e37-9189-7a214ce93163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e721cd0-bcbf-4d74-ab0b-729bac8714e3",
        "cursor": {
          "ref": "597c36e0-494c-426c-af4e-ec29495c810f",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "805d1aa4-fbe1-4db4-8ea2-43aac7562a55"
        },
        "item": {
          "id": "3e721cd0-bcbf-4d74-ab0b-729bac8714e3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2b573736-b472-489e-8254-816031bbcad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12433e5-d79f-4f9a-8812-3af6a0305ada",
        "cursor": {
          "ref": "388b414e-2e35-4708-8dab-5885e8aa6556",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "426770e1-1c7c-4db4-9ab1-e5473d110387"
        },
        "item": {
          "id": "c12433e5-d79f-4f9a-8812-3af6a0305ada",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6f5843bd-7057-41e4-b26a-dd6f3882c95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633fcd18-50ff-49d5-8688-36a8de9b29cd",
        "cursor": {
          "ref": "e27c9262-86a0-49ce-86e2-96d6bb2da7e5",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "659e616c-a814-439e-a9dc-435eb02c5e7d"
        },
        "item": {
          "id": "633fcd18-50ff-49d5-8688-36a8de9b29cd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "676544c1-cfd7-4011-bc34-e5da1a148b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45796fdf-9fa7-43bf-a724-222b6f3da935",
        "cursor": {
          "ref": "f82c5123-face-4483-b128-b520c4c1c049",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4627c61f-eb23-4caa-b66a-242c52c929c4"
        },
        "item": {
          "id": "45796fdf-9fa7-43bf-a724-222b6f3da935",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "58c6dac6-bd31-4b7a-893d-976c1d4317bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431bbe70-39c7-4604-9ccb-734614503ae7",
        "cursor": {
          "ref": "fd6088dc-53f1-4bdc-bcf9-1e2c7d5ccad5",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9eb77481-ea14-4034-aaec-f43d5dee3f0e"
        },
        "item": {
          "id": "431bbe70-39c7-4604-9ccb-734614503ae7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bff8e77d-9bbd-4984-9730-4da3f933c53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31526fd-5c78-4e9b-b415-632e531085b9",
        "cursor": {
          "ref": "37943972-29a7-41c4-ba4a-e91750fa8be9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1d9ca449-8cf9-44da-82ea-9ac83ac2fd89"
        },
        "item": {
          "id": "c31526fd-5c78-4e9b-b415-632e531085b9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c0596f98-141e-4721-85ac-8113516700e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad5d1d4-18fd-4749-ad4f-e8369ca8c242",
        "cursor": {
          "ref": "1e66e8b7-9c63-43df-aff5-932a67a82be6",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fe62927a-22ff-4691-a9d7-bab4f0a58244"
        },
        "item": {
          "id": "4ad5d1d4-18fd-4749-ad4f-e8369ca8c242",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b3225513-e772-4307-b27c-2a9803ad057f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5c0aea-72a4-4583-ae1d-9665858bfa8f",
        "cursor": {
          "ref": "8257d0ae-af57-4acd-8c40-11f5fead532c",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1c1b1978-fde7-42dc-880f-c22ef86b805c"
        },
        "item": {
          "id": "4b5c0aea-72a4-4583-ae1d-9665858bfa8f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "af186fe2-f2bd-4ca9-a378-0a4b744fa7b0",
          "status": "OK",
          "code": 200,
          "responseTime": 127,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b059eea-eaf8-4378-ae29-7e605f0434a5",
        "cursor": {
          "ref": "4847e05c-320b-4378-a88b-a28ea14a44c5",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7a4a7561-56b3-471f-95cc-dd5c96f5bc44"
        },
        "item": {
          "id": "2b059eea-eaf8-4378-ae29-7e605f0434a5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "703d769c-01c2-4955-aa03-585d96f653dc",
          "status": "OK",
          "code": 200,
          "responseTime": 1407,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d67c1d-3e51-4eef-9df4-a175e3b12cab",
        "cursor": {
          "ref": "753c2e98-607d-4e9f-b430-b7a9a892b9a9",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2c55a203-a87a-4abb-8606-953f63c262a5"
        },
        "item": {
          "id": "93d67c1d-3e51-4eef-9df4-a175e3b12cab",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "236e010e-76bf-48cf-9d16-79f5d8cc25fb",
          "status": "OK",
          "code": 200,
          "responseTime": 1586,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96ce48e-0194-40b5-a835-ef2c7439ea6b",
        "cursor": {
          "ref": "fd83e1ca-20b0-4515-a16f-ccd787154c23",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f0c6c11c-5b8a-4511-9ebb-2e64c7c2ef23"
        },
        "item": {
          "id": "a96ce48e-0194-40b5-a835-ef2c7439ea6b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8f85b96c-8a33-496d-9ed5-749d240443c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96ce48e-0194-40b5-a835-ef2c7439ea6b",
        "cursor": {
          "ref": "fd83e1ca-20b0-4515-a16f-ccd787154c23",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f0c6c11c-5b8a-4511-9ebb-2e64c7c2ef23"
        },
        "item": {
          "id": "a96ce48e-0194-40b5-a835-ef2c7439ea6b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8f85b96c-8a33-496d-9ed5-749d240443c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e0868e-9ccd-4695-9e5b-39ea7d4db1b9",
        "cursor": {
          "ref": "d4fcbdab-f686-4945-b020-617e45669df9",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fa6547bb-573e-4d69-ad43-7d780a20e35e"
        },
        "item": {
          "id": "c1e0868e-9ccd-4695-9e5b-39ea7d4db1b9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "530bb5c2-b723-441e-bedb-2e462a356e75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2198e8-3e9c-4547-a1d2-e74dbdedfbc7",
        "cursor": {
          "ref": "402a9de3-8d8d-4c84-adc2-2ffc4bec12a7",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "aa836ee3-3ed0-484a-80bc-1f79793d74b1"
        },
        "item": {
          "id": "fb2198e8-3e9c-4547-a1d2-e74dbdedfbc7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9ac7aa18-fc1f-4902-8e5e-68ef7e63abe9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}