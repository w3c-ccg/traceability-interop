{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7e6c6220-1757-4250-86d4-9489a84a1446",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3acdc267-0ee1-47de-b60b-d0305d2b15bc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78402069-64c7-45ae-9c73-5d919e7c3769",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "94a76af7-c329-4b48-a5c0-1b8c3f5ba66e"
                }
              }
            ]
          },
          {
            "id": "6b2bafc0-0d70-4094-9d0d-f5ced3b0babc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00d4c313-62c9-4309-884b-13a13e45487f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f69d9cc4-7d75-4b60-89f2-3ea314ae42a4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "84d33c34-e138-4327-a976-7180d15a50bc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "78a73c74-f3ce-4416-a39b-84113e20ba62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e2670d90-0552-4fd4-8705-7ef599655c26",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6d9e8e4-7c8e-4468-a1ed-0277a89e04a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41e9d948-1e4c-4b5c-afcb-c00bb2c044e8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73fb76db-095c-4518-809b-76562563819a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba27826c-a112-46a6-ac34-171a79261020"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "14d38b83-c3fa-428d-9884-abad828ffab5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85d2367a-774e-48e3-ad26-44c8cd099a9c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bf46a8b-0293-40f1-be2d-c9be89632355",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "afcfb7cd-8c33-46d7-aec7-852ca1c2f38c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef32ae1f-96d4-490a-a7a0-8d0220149f58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6554b8a0-261d-41c9-99ba-4ed11546bf7d"
            }
          }
        ]
      },
      {
        "id": "1d85eaac-4054-45cd-880f-a99b5d2a9230",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bbab9ceb-439e-484e-9061-a9d44e4cdf68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0db6f483-1560-4d15-9d90-f8abc35ee74b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "048839fc-42f4-4504-8cf7-42185ff15502",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4099be42-7393-4ea7-bcb3-51d5da870229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3829251-6756-401e-bdc4-764ad58d729f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efa0418-5f9b-4e7c-8677-bcfd6fe7762d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdf3964-fa3f-4412-9a24-84cbc2281897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1f07dfe-9455-4b3d-a64c-21124864d09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2262b3c8-e529-45f0-a597-7ab6b8445a75",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361fa612-272c-45cc-afcd-d6fcc1b82dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d2eac74-2609-4cbf-a689-5dd4c1e64349"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "edb468ce-70e7-434b-b63f-51bc83037f1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f29d1cb-f911-4846-a025-ed88895deccf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5a4649-b5eb-4446-a964-a4f7bbabfe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3d5abd0-607e-4031-adff-1dd521da713a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a03a5e-4d61-4f91-ab52-d60f804fa29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f228c6-edc3-4fdd-8923-eac02d00b8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e47ce1-0600-4a9d-927a-8039ed315f03",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7079aa24-4fe5-41fa-9b98-806ca24fd3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18821d3a-c400-4f65-807a-209fad7ed753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e25809-b684-451f-9bff-06c2e0bf0538",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "5901843d-795e-4d8d-b4d9-2723f1020b26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "66736f8a-696b-4746-bf79-7752b59d1034",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8640d83-0660-4fb1-8c72-ca35a1c473b3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41a5f64c-2aa1-419e-80a4-242b61843d00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7a844f4f-593c-478b-8a45-64903aead891"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca611f2c-faa4-4725-91de-ccb5f038372a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "80303c8d-eead-49a4-99eb-f814f25a0c58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd6db836-612b-470a-8cf4-7e2feca921de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d72e51d-fec4-4aed-8134-3a1d5fb3aa10"
            }
          }
        ]
      },
      {
        "id": "c1edba04-fb5f-4916-95d4-a0358417f6ab",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4a813dec-c890-415c-9ba9-88297213984c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21125ee7-ebd5-4cb9-be55-6a34cf458e65",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9ce82196-7a00-4de6-9cc6-5b8ee0dd394f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8785a2b-7773-4971-b38f-3f490ee86b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157eb2b5-6921-44ea-a850-f7e020036c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d185404a-8bdb-4019-a74d-af842d3817f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ee3d616-d68f-4834-9776-09d401f8c3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b393d5ba-81e7-4296-8d61-28d05f2dcab9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c667ea-0513-4826-8678-c1a9da48ffa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdf1715-3077-4c88-9bc8-522636fdd60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1b8a15-95ce-4bb8-a0fe-a471c3df5710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb7b9a6c-b151-4e63-8e10-f074ad9c34a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f81e53-0754-46a5-b6ac-1b0568dec4c9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ba45d7-445c-4faa-a69b-3db0ca52116d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b0af1b-dde0-4dff-8106-c9bbfa2a9753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaa0dda-257e-4dd8-aab9-0154514ac1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "622848f7-738b-4726-94ac-cd2f6103b6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7249e1-4770-44c8-bd54-b03d9213511b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1250f6d3-613c-4010-a01a-e2c082edf5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64c7681-d70c-4e9a-8a18-97de68c9d087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946b31cc-c05d-456f-b5c7-65d616f53a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c189d8a5-1f79-43d2-a02f-efe1843d036a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7900b75-ce99-4b98-8705-9de20b752d81",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0518a2dd-2ec4-4e27-a41a-3f6caa0cee10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5b3ba0-8c8b-4f2b-a639-ab556f3af804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd54096-670d-48f3-b136-181ea19600fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fd05d19-62cc-442a-9da1-82ef393cafaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6efdc74-5494-437d-afe6-6d158a91fc54",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b909fdbc-f318-46bc-b160-c6a382ea8971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564e7f11-172a-464b-8e62-ab1c6147c215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8eee4b-845a-4756-b3ac-bb7ede4050ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "859c2f05-1df1-4ac2-ab2d-03c206c83f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8878ae9-10ca-4757-848f-8f55ab550da0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4369c07a-e992-453e-aa54-163700273e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840588a9-649c-4983-ab81-9f116a309dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b82255-d627-4715-a226-01531d05e304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f92e39e0-b899-4625-bdd2-6654a7b0878d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eab54fb-7b56-44b2-8f8d-06e445e9d280",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464cf5cd-97c1-4ddb-b5fb-163924a5ea35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba3326f-7471-4c30-870c-8d21597d2f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962bb5ef-77b8-4432-97bb-b5ae6e820278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b8cedbc-bc06-412d-9f65-8ee3a66572a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e55bb8f-8b02-4d5b-bebb-c293f77111bb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea7a327-735b-4c41-9f4b-c94fb9014134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1511ce9c-5b40-4b6d-af85-3390fb874e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46ee232-fd6f-4c7a-9f10-452c3863e05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc57da8c-7b95-486d-b7c5-7ca24adc1ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aacdec8-2865-4707-b125-bb6aadfe526e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6372f6d-bdd0-4995-a054-b51bc21ee128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e4960d-98af-4f6f-98eb-ab7d0d29947e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82651eb3-0f98-4409-82d1-a276de673569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da51b6d3-b1da-4301-b560-d3cc4bf15c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ef0767-25cf-4d32-9908-ae27fec44cfb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae66f68-052a-47c1-a778-97591edac118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb58812-6763-4334-8e3d-b7ae9c06bd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0604c8b0-42ad-4ea0-9bfa-2ffec3008a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64349d09-26fa-4bf4-b131-7b5169f4a999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0667cd3-295c-4441-a805-529ff65aef54",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49ae12a-ece4-4557-9c1c-5b01583c7f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ea7fd8-071f-4cb5-8b4a-49894c20232b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37867f87-e95a-4ec7-80a0-039f1ee22bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79d0bc72-9a80-414c-b0f2-979aed14cb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f987ecf1-34d2-482f-9430-80e39173e180",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d34ef52-6658-4bd7-979a-c23e27497c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b789f04a-6640-4b40-a350-32d4deead9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a831d6-e9a9-413a-b758-d63ea61f1402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7f213cf-aef1-489b-b464-1dcc92929721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1462685-ed7f-4a33-85e5-cb832ac39aac",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7353a2b1-f88f-4b35-95f4-62aa828088ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa524b9-a411-4eda-8486-a4364828ab00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f58d389-e30f-4a81-87f1-6ed9b691a49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3158d8b-7470-47c1-8834-f11637d748f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774a8490-682e-42f3-8565-1d0543563d4f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9491c9a-04bd-450f-9716-b9678bc9b7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13777624-d3f1-43d4-abe6-8a91e13959ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095aa704-4702-4c44-b374-905c4ad03955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd0078c4-46b7-487b-9062-de8b7b7c6ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad1e7bd-748b-4648-94fb-e147aecfc418",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfd495f-21fc-4077-b968-fc91fe467e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8332be59-0f6b-4ade-a843-9c4724e76593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504d720e-ec41-4a08-9b11-0f9b97a2cc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04925912-bac1-4bc6-8423-b504fc192c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9d0a93-b2f0-46a1-bda9-9c799a12c913",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c3f812-dab9-4c6f-b923-23c7f63724f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8496d800-02f2-4128-868f-3ac1410e90f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f949675-9cfd-4575-addb-84a4c2d348ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95f11322-a2d4-4cd9-b12b-6f154fffcbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba963367-42c5-4bad-961f-8aeeeb745e0f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afee269-4b2e-428c-9167-4b330daac8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8d00b7-ea60-4863-9b3c-dea8dd7b1848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0c916b-6109-4925-bf84-e62341144b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "730eeb32-08f6-41c5-b982-ff8e1a44c2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e844cac-675a-4081-9c9a-e8b2c17b7497",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ad2dda-b407-4b80-9075-40eee4341d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942768ad-240f-4c5d-82f6-cae53956973d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fabe2b2-c0c5-44b6-8837-e69be72f816a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ed2c81-5e53-4f61-9cf8-2d18ba1314c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca46e442-c057-4193-90c5-af4901c5aade",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275c8e31-3836-4cd9-99a4-cab83b9f4cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c7c22c-dde6-4ec5-ae29-7c85cbcf4929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c7488d-7914-4b0b-9a88-57c38dac54df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f23e87-517c-47cd-b647-96a937b594a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50409e3b-3730-4dda-bd91-6d47899b8ae7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa569ff-d7e4-4a76-9938-f1b57c34a0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e72d027-aab0-410d-acef-e821914f84aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9750757d-b3a6-4c42-8b06-00189a7e25bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "593248af-65e4-4f10-8487-61db5e642b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2ec309-8c6f-4f42-b6e5-0f97b5cd1920",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708631c6-b6cb-4605-9020-00f4cec55bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31613b4f-d171-4b7d-9252-1a138862be10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a211b6-fecd-44b3-bfe1-c38aaff19013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b056c34-b7b9-41cf-addb-4fe660299b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d162a06c-4089-4e9f-9230-5c235c201b4a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bb021a-2b5d-484f-9203-1757b9516564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06164ce-a3e0-4158-9b97-a95ba30c6cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23bb315-66d4-47a3-ac26-d9d45acde9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2512fb9-30ab-47cf-9654-d3a93041019e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09d5c89-0143-4862-9491-e6a0e403b9c6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7b7844-ca0a-4b21-921e-1bffe292e658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e010b3-9ae3-438e-bd02-2c34915cd921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c042a554-87fc-441e-abdc-792627fe67ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7180680d-c738-4506-8cf9-fbc6f36ca2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2725e4c9-396b-4040-964e-df81f587af07",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06389b01-58eb-494b-b540-eddf382fef33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac5d7af-dcbc-4a40-99fd-867e546ced08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0733c56-5044-44ee-98c8-2257c02b7c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbb1fad-5ece-4da8-98da-714141f6bb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327e6262-c251-49a4-9f00-dd8269735dae",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec87c35-59b7-4278-a9e5-1a10db3defb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cd903d-9fad-4211-a21b-47a67c3e75b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18f789f-51f7-44e7-893c-fa23b8b985f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53e23808-0c16-49ad-be48-00a1ea45dc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d38a5e-e30f-492f-8e37-ca2e146a3749",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f5fd12-c311-4d32-a5d7-e425a080a30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e892349-9d47-4b96-9724-31e4eb405216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cd9bf4-73cb-4c04-a181-dd8964ea11e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9342cc08-a511-4e0f-85ed-9f037d095e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a98ea1-95cc-4577-8be9-a1fcc099088f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfbdbea-4fd5-45da-a24f-1938d8e42296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bf2293-1b9e-4fcf-9eb0-e360444eded9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51887d1-e216-4940-95b0-6d6e4a308907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6fe5d1-3e65-408e-9673-30b98f46d7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1b3548-da17-4dd1-a65c-24438e8e6ece",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49273fe-ed28-4b8c-b816-6cd7b7f5e092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c9ab21-0b29-4acc-85ae-f8dc3dbb3f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9421f53-02b8-4a42-ab05-c42feab4acc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2c0a1a-53fc-4e58-9a65-0a0c3f9c62a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45367b64-fa2a-4f0b-9707-be5d74e521cc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e07366-8b0e-4879-82ab-db5b0ed2ec26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308b774b-caa6-4e6c-b55b-3b1b7ad7dde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab60bb25-3af6-4101-8d8e-1d373ad27171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "daef5917-6c33-4465-bc21-9e0041468da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5caee709-c0af-49ea-91f6-b418f89050d0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0baecf9-628f-4df4-b9f2-c715b9fa8cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a26aa1-0bce-41bc-9457-ff19b9d749fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040adef6-065f-44e4-876c-2e7308dd2eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e61e3cd0-e309-4aaf-a4cf-e976359a6c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd61ef72-01fd-4081-9cdd-c1abe8a5dda1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558cc86d-401f-4589-ac34-07a2a236527d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0e3775-3a6b-4a69-b346-78462c8e640c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64844134-9472-423c-bc18-c2bc2cfe1e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee30ffc5-65b2-4e80-918f-72a4b73ad6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924c73ae-870b-417a-ae20-b9d4078a8bf5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004cbc08-fba2-46f6-a6e4-4927b87c26bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f9b405-29fc-4fb9-b13a-33af5028d93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b903653-cb41-488b-bd5c-12ee843c9a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1ed7bd-18ea-4a15-a86b-0310218a72ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b62dcc-d182-4371-9817-4ac95682c0d1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc72cf2-a84d-4b87-bcf7-407eceec18f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f677f54c-831f-489c-ae6f-f11a4ed0ba9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a090a0d-ce8e-4d4c-9b27-4e0b8d7fffd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96cf725b-7012-4a22-9ed2-055e2baa8ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1891d52-dac4-4f46-862d-b987dccfb221",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfe946f-1a4b-4b8d-a89d-6d198c5883e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5704073d-e360-4468-b07e-6d45625a0bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb75ace9-7551-4a5e-a38a-bbec86d201ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8092385a-0303-48c5-8377-b646a69f73ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ece2be7-a4fd-4bce-82dd-ad433a190907",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d5aad8-8aa3-4595-a133-547e237b7ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9253f34-2f63-42c4-9222-ecc011807370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5538259-6883-4928-a862-f811beca069e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bee027b-fa30-45ba-8b9a-08e843f9e847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7842638f-8f87-4a4c-96f8-1d6da8ded240",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99652140-de20-4820-ba30-2066aec10e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35e0150-2c5f-4d1c-9d1c-e89d124f06a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82c8555-cf30-4a3d-aa52-dc2d8d242bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80b2961a-ad09-42a4-bf4e-5025af38536e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b76d72-da20-4339-af0d-51bad396c067",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc64955-44fa-4c20-9628-c0a730339e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca35b365-35b7-4fe0-bf15-6284f3ec79e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bef4b9-7ddc-4138-9ac2-bd9a19e4bb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c326931-3ae0-4e23-b3f3-8f377726b582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd8322d-1b91-42c5-b4c5-e27f67979fe9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73343a7-eb32-4e0c-acb8-3eb8624c68ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a178726c-f45e-4f53-a65a-e2f4e8932a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed46ef46-af1f-4758-912e-ec4c58e016ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7dedf1d-9b65-4bde-8a94-87f92265e1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c35496-0108-450a-82b0-7cc866d61903",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8318ce6-b03a-4ce1-b232-bb5bfdbac338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e91c89-5682-4c04-b4a5-9287016387e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49312219-20fe-4dde-b59c-a1dc5dfb5e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a96df15-3fab-4e29-bea9-11d46458ee1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf74553-aec2-426c-b0a0-1c87d3f1bf49",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96494557-74fa-4043-9453-cbc738a76b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4c68bf-0387-4dea-a350-b2236c985c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a08444-f3ab-489f-b8d2-3ac675ee4cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "148b2bf9-02cc-4c55-9e08-5b81d422efb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007e11c5-01fb-4bfa-9420-564bf7808c7e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbce65d-36a6-4641-bf13-02e54fd3266d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d7adac-239b-47d9-a1f5-56b893781c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad37663d-cb33-498b-8179-7dfc2711178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2be1d134-2bd5-4bcc-83e6-b086eff02618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89da2b72-3bdf-4d13-a4ea-d779bc119a7a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a1a5bf-493d-4c84-a59b-3d2a2562d717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2e02fa-8af1-434f-86d3-cc75b80d1e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c6d8a7-cc85-4134-9083-143fc3f0a3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef2f0cf-b212-484d-9860-c6be22735eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2182783f-e721-4c8a-92f9-5e2b38fb9429",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5369599e-256e-4342-ac47-e17b4217f2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2b7544-7cb8-4906-b7a2-f3c9ede01f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184e5a73-e853-4e28-8820-7afaa90c01c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "511d848c-e86e-436e-9c22-0c47498e0d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8660a222-e33d-4f5d-afc1-b826a066dd4f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdc0358-3dec-411f-9c87-b02ac8104613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a673177-6f6d-46b3-9607-a6472bb947b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13056ed8-fe37-43ed-918d-b1720d98ab80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffba986c-93f2-4aee-9044-576957c1c3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011581f6-dfac-4f7e-947b-60854a485476",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ff358c-2182-41f8-9ffb-08bdf5d59c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5749fc4-809e-4231-994a-123ec0aa5b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811a840b-445e-4d34-bbea-20f52d32304c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef63634-4284-4419-b3e1-776b0941e3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a79b7eb-d00f-4f99-acc3-e2b43be0b881",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101b3d55-9d6d-4720-8f01-29f4a55e07b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a233c10a-bb1a-4bd2-a54b-c2c4ad662161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c1dd66-9357-411e-8b2b-4f9077c7761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93c26bf9-067a-471c-b808-e6db80c97015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd2d19b-9427-4159-ba0b-1d09dac779af",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d568521d-fb1a-48a2-8060-5439b17b1b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c1996c-3adf-4572-89c9-f54b8709dd6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984fa7ab-6cb6-4c08-bf49-74146add066d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "700b7ad6-ca82-4507-999d-199b10d02462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc2acea-e7a7-4d9d-a606-927ec9a12744",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc08c0b3-2a15-49c9-9f32-fb7c9a1864ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d331decc-8d03-4222-b5f8-81824a3c722d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cecee1-b552-461b-8b71-a0160ade99c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe6d156-68a5-4cac-a4e4-3b002e95341d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4f3a2f-f1a9-4ac0-99ac-0fe67604511b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f76baa-b896-4192-b882-a953c7c16ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fb2198-a224-4c91-be80-beaa1daeebc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef18568-48d8-4dec-ac6f-30aff8a36fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f1220b-49ab-4e22-a512-ee39ca4055ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83394d16-cb5e-45f8-b51e-410f430ba22b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1a1c18-b346-4531-9f7b-6fc7b2d38556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2de673-92ce-446d-b379-9c9d178d5c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17169e4-4c99-4f9a-a356-975af6df44c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "59faf3cb-9229-4d00-aee8-53e06b9e46d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8648f282-6a02-434c-9807-f2bf7ccac05a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079d61c0-f521-4cf5-a04d-f4f5c790c8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8a2346-99da-48d3-a29c-f666062603ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e33d63-8474-44b6-8311-08f9c7b2b375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29344167-8482-480e-a93d-76a8a21d1a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74b6212-3839-47ec-bd3b-835522fc3fb9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edafc25-81ca-4bdc-b206-009d79b085b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8296e609-d40e-4bf7-9a09-a8006271b182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65e8ba5-e363-4fe2-9cbb-56c16289c245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f304121f-cae3-4a58-b7dd-a13b456c4de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e614380b-693e-4b83-b27e-3bd28828a89e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38439e16-a6cc-440c-bd42-2d5eee2b3994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f769d15b-3a55-41ed-8099-beab99a233a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb29f0a-d4fe-4e9d-a6a0-f505a7a77589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbc1a31-ffd3-47ef-bacd-5120158f3230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1139ba73-787c-4e8e-a750-db0c5f289cd0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bb4598-625b-4ed9-819d-f73a9bdf73e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb09f3e-032c-4b09-862c-4c9c5f50bcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbd54e4-8a0d-4b92-bbdf-c7815c4d7bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0eb9242-fc97-4d31-ac6e-ee3f1cd9f005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffdbb0e-acf0-43ea-beb5-65461e7c4766",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1b7f00-d3ed-4dbb-9d9b-c16b9b28f515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ded3aa-6538-4cca-85cd-2f6fd76c630c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a071522-5780-4b1a-aa18-e69f30b5e340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8674a6e9-c965-4177-8cd6-7b22bfb62d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3665af46-a2b6-45a1-99dc-4fe16ae141d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f15875-60a7-4954-99b0-6e874bd8240e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf2e503-f285-49f1-8cb7-04e894387bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab3df67-f491-4644-b213-a6b754a78457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d516ee8-1ce5-4ba8-9128-81d965a8d8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46672af-cf49-439c-9567-cfff189b965b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47579918-2c4c-46f4-94bc-7826be9926b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40b7e66-bbc0-4dc2-90ac-5b1bff0637a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37448e31-de6c-4300-9a76-ee4018c1cc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12cc9c70-df8e-4c3a-8c10-98530536ebcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b94837-9baa-4e93-a7a1-555d9529bf45",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e0a1d9-5936-4af9-8ad8-3df5980c3712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5e66f7-cdf1-4749-8e28-9e948752ef2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef1dcb8-0476-427e-9b35-2ff58a662330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f09554c9-232d-4cf0-b433-0014d3d33335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e74982a-046c-4573-b3b0-ed8ab4b676f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee91e29-442f-47ea-ad33-b70c72a45265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71243d22-d985-4475-83ee-aaddad0a5b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da43796-24f2-4ae9-af65-2b09dbb4c435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "517d47fe-82cc-43c2-8ebb-37580f667e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e069a799-024e-4e73-a212-ee3dbdf8b10a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91c990f-d042-444e-b58a-1ddc054de040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9265942f-76fc-42e6-a986-03c76d0bc4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9721da-a04a-4be3-87bf-c6405d679140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5870849e-a861-4acd-a816-dc2f629a1c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3770ecb6-126b-4f2c-bcc6-8193703f92d5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff12249e-746c-4656-a148-41f74d11561f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c6a845-eba8-4ae1-9078-a2dde83106d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85ac4b9-64a8-4faf-9ad2-eab92b64d3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "69027633-0f31-45a8-9bc1-a8585bb5c49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f66412-ea96-4779-95ad-c6aef711e130",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b78599-47fe-42d0-85ce-5d0b9094ec5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fa3e49-8e56-4178-831c-2e2779bb4064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7653accb-53a7-41a3-8ac2-c83ed715edae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "34de13dd-1900-4c03-b6a9-55b878cb0c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bd58d7-be36-407a-a08d-adf37db6024c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1944f39f-21b6-4789-90d1-9e54350bd271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed9e326-0681-4461-8ca4-07b2a3fa78d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8924f4f-cc5d-419a-87e1-01d4d31c0955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b50e88-d34e-440e-a0fc-496b60c776b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1895d818-9f7a-443c-be5b-e0cebd8c8a1a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648a57e0-b313-4906-a66d-bcb7f8308c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f89cb44-867b-4954-b160-e08355165e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedc08ea-9b3b-42f1-b303-47ee651243ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "765bac3b-203f-48be-966d-01fc71a2ed2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599d12c4-b981-4324-9ed7-9bf035a01d00",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91b7e60-1b25-455c-9f35-62e4dbf7f305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77aa5b52-ea3c-4b79-972c-1aab566d2782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0150199-6adb-4fdf-8e5a-1ff10f76693e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "821ab481-0f9d-4bab-a6a9-3ace4b75a37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbea77e-3d7b-4723-9a8b-a9114f088458",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dfc164-8a7b-4e67-bc3d-9f06d8687cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c1aa0e-b4f7-436d-a742-fb9115a4c3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa45186-2d69-4afc-94c6-86eae3d4575b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1da7b8ac-1a23-4d5f-afa6-befcbad437ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00ff3c0-a5db-4c6e-a4c5-97a618f7b16c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1c9475-f973-4c4b-820b-6e21441a23c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56eef4ed-5ea2-4111-87e0-0894ac6a5ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb7bc8c-a642-452f-aab5-f6068831da9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5f5a34-4bad-4211-816e-5657f23dca64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74462874-2c59-4da6-85a0-f13ed4a14ba8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d40524-6a68-450c-a805-c1d7985ad412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8eb34f-2f9c-4054-bfa1-55f0d6b25e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd5ec8a-1b03-4ad9-9e76-36cba448745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e33e79c6-146d-4400-a523-3b21092bcf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3d3dd0-b8c5-4553-b349-c925fac0b985",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa2db82-411b-4ef4-9284-74dc989a6f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666a095e-7eea-4ff8-b625-bc21f5140342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8089bb9-aaaa-46c5-8937-90eecf2fb147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1188fa4a-5d6d-4615-8af2-9d67d18c4231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719b4d62-e390-4c79-a171-03ff242818f0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b688275c-c35a-4f4e-aaf8-6a6e76238e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ed88d1-0102-422a-9140-3c00bafb0758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bacd10c-ca52-4bd7-9cd3-4305c27a33a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f3eae3-241c-4217-9032-2674e3c6021d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb981164-d4ef-45e2-9d97-ca24e17c65c5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82693d2-212e-4d5d-a493-59faec637d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33af19f5-4996-4385-a690-cec1ab7eddce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06137d0f-d9bb-4b52-9852-21bd73e8ff8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6939b62-5a08-4915-a198-6665c5c51f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3164cd-d19b-4d79-901a-68c5ceee61fe",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b086f364-6e44-4131-aea1-0209965aa4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91343673-e55d-4e8d-85ee-f6659736161a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851fcbfb-9e05-488d-bdf8-3d04292ae263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef18831-2d64-4dfb-b340-34372bf7ee6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eec2ade-89e4-4e2c-85cf-24c13c93678c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ec9f7d-8959-453b-80bf-99ebbdbd1983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a7f011-8d51-4535-b5e2-0580fe368f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d02392-b5b7-452f-97da-df6ccc3414a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1dfd48d-2072-44be-be19-9acb6d9c7b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc8e181-6cad-43c7-bbbb-e29fb79b4fd7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca81bf8-9356-448a-9f81-194d6227809b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664e8cc3-c303-4831-ae9f-df8e525fc8b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a28828a-5975-43dd-930c-5dea8f829fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f32420db-0d63-4f96-a491-dbdfa08252d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87b8732-92d2-4c83-9465-a476c9dd527e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa69418-1db9-471a-8e2c-eeb5eb93ad51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6db5dbe-236e-44f6-af35-9d3ec1b3f163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4b4384-a900-463f-ae8b-20c79690fa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1034d816-c6f9-4c45-9d7a-bdcecbebbbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0ab37f-1c96-482d-8f27-4d513b744d52",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8854be1b-0263-4d15-954b-9d9ac6ae6541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2127b94-f7b6-4021-aa24-378cc8b94c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabe9cb7-69dc-4a0a-a1ad-55952277fa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56824b21-c097-452c-91aa-339294d13c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f008025-e562-4a05-a759-e435c68da81d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe9b6ff-5634-4031-8d9b-2703827e602c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b66b4eb-2f52-4498-99bc-ba07a92b48dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89294fc4-e177-4af1-88e9-fe63705ee5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50230b71-3d1b-43a6-808a-a939a6dd4024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00efe11-bcec-459b-b974-e5bf143d51ec",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed9b357-4fee-47e8-82ba-b3dc3b46220b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05d9fe7-534b-4bf9-b3fe-b8c1d44ec33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d2f4c0-8c17-46f9-829f-759e6f766511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c2f7f0-4ced-47dd-949c-4a9dd54543cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515b2fd7-53ce-41d9-8953-2436ce768bfc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6382f1b5-9eae-48bd-978e-8b986a1b2c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4be8d1-fbc2-4b6d-935c-2a51607b79c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d115ee-c58c-402b-8fcb-c92fbfa994b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b78b28-e9ba-4f24-a80f-ff41d5abb9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3e0b55-dccc-48b5-a18c-90910a5d99de",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f257510b-9d68-443d-acb9-1aac9130b114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae3f3f5-f17a-4730-8651-e088c1239e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c530436-89e1-4985-8744-aca991f53be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b78732-7006-4f41-adc4-de2ce569c90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c97f20f-3186-42be-8c27-0ec2df29422f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ef73a4-ba12-4f23-977f-138d8dbd2ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce820e30-7eef-4edf-b8e4-ed41c8b96bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e29d2e-a606-484a-8a8a-0aac03d0eee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24696f73-b658-4d41-97a8-a51ddcc819cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe536ff-3560-4aa6-8d0c-f1b55e8c4600",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9339d8ce-aa37-4813-ab1e-0c64c54644a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ebc84d-ba7e-482e-9908-63851fbe281e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc228f7f-0c51-4e48-995f-48023bf08c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61711c17-c89b-4c19-912c-93e98a9f8010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21d86d9-c02b-4332-856b-f169afc8ebae",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b7ab69-d20e-48df-81cd-9b5b2bbe0945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4778e1e-2456-4a88-b340-93755e760cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e712831-4ef6-4e10-a1ed-c5c9181677a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5ddb33-f187-4125-825d-3786f4a66497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8568aafc-0477-486c-b8ba-f3b4036815c6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8f749a-b389-4895-b8f5-766466660ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b6d0df-0548-4109-8a76-21ec8a1ced5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504d3b92-5805-40dd-a3fe-3d1c7756f717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "994e03b2-3619-4dff-b79d-14798cbcbe17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f0e116-001d-4a78-8015-7ff53833a691",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e580cf-84dd-4bd0-9f40-bd925ce18518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2395aad-4cd2-4410-8ade-2a80692d408c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dd3474-47b3-427e-bd1e-ae7b10d1fce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdf4b63-8528-46a3-ba96-060b0be3faa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4a8626-9406-41f4-acc9-cd888ea6b5f6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f1eae5-ec77-463e-996b-acd473bf35dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538a5a8a-d640-4b2f-9384-8c86c853ff9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e896f24-2788-44b2-9d17-b5ef45b72445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b931ea-ad0d-4f4d-8b48-0f2b4f73024f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18b102a-2883-4aed-a0dc-094454c00ebf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bb8e4c-b46f-48b7-bd7b-6d0974aee271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f83a0d-4744-4fef-8a1b-22abff302b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f476de68-abe0-4850-977f-d09ac9314a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f0ed51-0146-47a7-991d-0519708707e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647147ce-54f3-4513-b454-b24ae4f938da",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b50fd9e-52cc-401d-8cc3-834874f94916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b1e16b-43d0-4a45-8035-112b9aa93927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa6174a-1e60-4c74-8e44-2d99b073a613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "857ff656-4268-4d01-93e8-5847360a10fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9ac500-8d5d-4008-8c48-7c9e8d7349cf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225880f8-5b25-440c-bd35-39eab64241e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c35f2a-088e-4b62-bd36-1cbdbe2b193c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecda2a03-7123-46d3-ae2c-b346e629fa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aba4a235-4965-4a8c-a9e5-2d97056020ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78985ca3-9874-404b-a401-8ffbf7007abd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c56d4dc-57f9-4241-badc-4d73a5a3c65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c1dce6-606c-470a-a465-c8b797fd0a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db81374-1bbf-4b1c-b2ba-7ad0c31569d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bde18c41-0110-4d62-a255-44174b92dc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea294aaa-16ac-4fa8-975f-aa27514cf2e6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d7bb32-cd5e-404b-9fed-7641fc4796e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cd6e8b60-cd69-4f4f-8dc6-d30b6f363d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81d82f5-47cc-4f8a-aa81-e73f5a1e9e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "47b96565-db9e-4b59-a589-b1380e94d011"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c4827eb-1f5f-4790-be0d-1163058000d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d970cd05-e21c-4d6a-8e01-ae1bdfce7252",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2c246e-8dff-47c6-bd32-8ab9c947cca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "781777c1-0adc-409d-a48c-61eaf9541e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ff6b73-f0f0-4862-97d9-7106ad0fb6f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3fdf2a8-2f93-41bb-a9a8-b7505d28081c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139dcd95-5f3f-4546-b285-5c8912b102a2",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c77367-0851-43e8-abbc-d78dfd1b1134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9680620f-58f6-46ec-ba9e-876477718a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d91f7ef-11e1-43d6-9920-80f16cb2083e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a363b58-76c2-4237-809a-9d52722d5d62"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86139c57-fba0-4e8d-9e04-210bda524d3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d186392b-76d3-439b-8801-99a536659b3a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35f7000d-55a7-4df1-8c5a-894027b35496",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5edd82d2-1e65-45a0-bafc-9d309eeb0161"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8caec612-afcf-42cd-b05e-4e8b02c667ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "325518bd-1526-4818-9119-9f05cf3d9558"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "916d8239-b056-4c73-8c8f-081139f6186a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3f74eb3-35a3-426e-a2fc-953034083dda"
                }
              }
            ]
          },
          {
            "id": "6efe4c38-46c9-4c8e-9cf2-0f49d3817894",
            "name": "Positive Testing",
            "item": [
              {
                "id": "152124cd-134e-4c06-ad04-bc1a86b048e4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22b15e12-0c0a-4837-b9f9-bc09a1b69671",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30f6ae02-c861-4afa-936e-64a5229303ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d8d3386-47f1-4a0d-a8cd-2831ef04eaf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae1188da-b763-484a-87df-55e234f57a4e"
                    }
                  }
                ]
              },
              {
                "id": "6df527c3-2de4-49d7-bea5-bb294db629d7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53610467-4404-439b-86e7-14819ed22e22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b939d364-0729-45d4-a35f-5fcec27b9754"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a31717c0-953c-4f34-9a52-7a9f3edeef20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ccaa8381-b6ba-45f5-862f-d0f25c8936be"
                    }
                  }
                ]
              },
              {
                "id": "26e645fc-aa78-4aa4-9244-f9d257043c72",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b93ddf1d-f29d-46e3-ad80-66c6283094b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd4f3e63-f689-459b-8ba0-b8999de47ca2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f26adde8-deb6-43eb-a36d-431fc82abca0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cad6b8d4-fc12-4082-8847-d9e6873c2254"
                    }
                  }
                ]
              },
              {
                "id": "8930aa63-d4c5-419e-bfe5-53c4a2ec103e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "626580fa-0576-4943-b806-203c91ba07b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7529193e-cf63-4eed-8dda-d5e7d10d3851"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e490d86-7651-4311-905e-561cfc671f73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9db1cb92-a9be-4cd3-88f5-39f11fd9bc78"
                    }
                  }
                ]
              },
              {
                "id": "9c8695da-7649-4631-8b73-a2a48739862f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cad77d41-96e7-4ce1-bfe4-9e14f4f66c49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11c2ead4-19ff-46d2-a4d3-a74254f18291"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "650a67bd-3801-4c1f-8df6-502d64e65f26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3bf2b413-d041-4b87-8595-6969515778e1"
                    }
                  }
                ]
              },
              {
                "id": "8efb1efb-9895-46b5-85b5-3922ee2be00f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd05a1a8-95b7-42ea-a36a-e23ac8618b11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b37b4c2b-7f0f-45ed-934b-9850f9dcc9d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfa0c87f-250d-4ca3-a4fb-011c8d36f21e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c6004361-cfd0-4337-b7bd-819b6cd6ef92"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6bc6aeee-ab26-4b81-bf02-34d67eb50db8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9abd5c56-371d-4d42-a38d-8c5d19201e5d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b78eaae4-7e50-483e-9242-42119c18bf7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96892185-2ade-41f9-89a5-140e9b68b56f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3da1a07-c94a-49d4-929f-ef5d51304c38",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7479b2f2-23ba-446d-a33f-d9ba49c61054"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbb61b8b-9384-461f-86e0-89600079e341",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c9fd578-ca2a-4319-b0ef-145a2e3b647b"
            }
          }
        ]
      },
      {
        "id": "de923f40-0a31-4e7a-b9a9-caeee8eac111",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "096862fe-efdc-428d-93b4-df627b3b7421",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afe2c5fc-e779-477f-886c-ee327fabfbfe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4e9b8a3f-c348-4287-90cd-fdb23757892d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539f6633-cfe6-4894-970e-8e655aadfca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558091b6-ae87-40ce-8243-ca1e655c6124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4652f6f-141e-4747-87e6-72db7c3b30ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "96f2747a-069c-45a1-96a6-e8c7cbecce1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666c1a47-bcbf-4c3d-85d3-00a394d41d40",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735b5ebc-c120-4e3a-a818-2bd9d8b67176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab03d85-5615-4632-83d2-ba72ee02c973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025b79d3-078a-4fd7-b0f2-f7445a227ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cad088c-ceaf-462e-84bc-e54eca445889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe26e6c6-7e29-4a68-9242-35ffc285153d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b12031-61b1-452b-839d-e325bd46c229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c73807a-2c27-44c3-a113-2543424416bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3753e474-b74f-4b16-97b3-9a88260458e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7321116-5510-4a3f-93a1-5871da5bd95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aebdfc1-1cee-4152-bec9-9de0a6804716",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff300434-d3be-43d1-8356-260311314dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba9759e-9764-474e-b59b-67ccb4428391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9eb1f7-db67-49b8-90e9-aa57ec259b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5489af44-f702-413a-a6c1-0713975fcfc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a8c5bd-850f-4321-bd0e-0ca2be9ebc42",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0662a25b-1b0f-4711-8bab-7d3b8f45cfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e00ab0-3111-475d-aba6-4f51623a325f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bb5517-e224-47ab-af4e-2e0ac8ff5c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b15dfd4b-a239-45df-9af1-ae533ae61432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5310aaa-4bfc-42d9-bbe0-82cc1bc4037f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9324bc8d-c3dd-47e8-9ff0-84d911a679eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32942bee-5186-4f8d-84fa-d79f28b81a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5b2c64-2793-4b52-bef5-28ce2211ae6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04308aa6-a422-4bda-905a-0224573af48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce81008-d282-4f61-a4df-192a7656a0c6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fba5bf-f793-4d60-bcc7-150ff2326e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0c913d-3b0f-452f-9e7b-ab3babaf7655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ad6fb5-35ff-4b63-8d82-5df375d5fbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a99e5a6b-00d0-4373-bb4e-05e4d1ee4d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd476717-76cf-4766-bc16-7ec696b85aaa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c93684-cd2e-460c-987e-062369d8e6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1aa5241-59e2-426e-9993-7d2138926ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4b3094-d1f0-4d0e-a103-f21c6a55aa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e76ef38-b771-4350-9a4b-c4adb3c8b876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c48f5f5-fcf9-4fcf-909c-81172f6655cf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527655df-4dc6-4d8a-b0aa-48e39bef2040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7445d095-be98-4d3a-94a1-b93cada0acb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0d048e-fff5-4ac8-bea9-aac9645e627f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e58517d0-53df-48c7-8882-16de9cc38fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d73effb-fae9-4b6c-883c-1a79996332ff",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea07360-24a9-4530-a768-eeec4c5a81fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b262a37-0ced-47d7-8a75-0e215d748860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0fbab9-3338-431b-baad-27379f89609c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be7b34ac-5d46-457e-9fe3-17b9dd1d5068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaae21e-452c-41ad-9ee1-28099e5e35f1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f01a71-b9c4-414e-aad8-dbcb0acbac8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08377b7c-5ebb-4e81-aa84-3cf29d8e9d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741275b0-ff02-4e58-8247-3aa07e853f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b8264a80-348b-4357-a5ce-6c051dae3531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee71b608-0c49-4d70-99c8-c20c7e4e6f19",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2d3222-7c1a-45ed-815d-93b4348abcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317085e3-3845-46d5-87e1-6a310051bc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d07c552-e1cf-4d07-921e-c4ce003fb09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4addec1a-64ae-4874-9207-4f496965763b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571113b2-1083-4e40-ab70-1a83b0fcb668",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65decbc-55f7-4454-85fe-a36523a73b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01cdd81-e57c-4fc0-8660-b5eb202904db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b01b03-acd8-4b72-8223-46623a09e4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a5e931-3b68-4a99-ac28-c1600cfcbf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e5f22e-5841-4d14-b649-3ec01c50869e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce15106c-67ba-4958-8655-f43f75bf741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc71caf-5220-4af6-929f-a77bb5b7c301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0644e63f-6f93-4b02-aecf-256bdbe21d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc2486c-fe76-41b9-b162-973fbdf27c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbeb624-b6db-4e5f-ba04-6354084046d9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a91a42f-2fde-4e21-857c-89cea50cc01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea244eb-bc20-49ac-b20e-34929a55dd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7585a066-6e8d-4290-ac9b-e59a75cc617c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "af823777-7519-4963-a591-4f22f3ba415e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772c8203-f76b-4f3f-8063-26c4accd4dcf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab4cb89-5b13-4766-9c75-19bbb257af14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3cee54-d562-4efd-8e2b-e32428673ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f93368-8826-4497-903e-4a2e89e24361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc69817-2d9c-48d1-9457-c9dd4ec29121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54c97e1-06c9-41b3-ab15-f478d91b685c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba67eb4d-28d5-4ca9-a9e4-0bc611966431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0cae1cc-380a-4348-adce-45cea01dcf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8484479f-16a4-468f-84cc-c86cf3be6dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0a8436-a520-457c-ab18-acb9559c6a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15606f20-f8b6-461d-996e-28558744e722",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6156c284-2217-4f81-9954-23bd88420a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b59f9bf-9055-453e-bffd-ac2700ea536c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecce34a6-ded8-415b-a46f-4b353dc18f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0244be0a-8d03-4bd7-9215-c9a64263b84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689e979d-46e1-4a36-96f8-711cc8b57166",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909cabdc-204e-4a82-b443-f8b9139b3849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650a6d93-4dff-4b89-81d6-628cae88d4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e05b79-185d-4034-a7d5-2c0d90ebb142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d68cee3b-d56c-4f17-9e80-0518d58b3c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3421e68-692c-4119-8a83-aed9dff044f4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0de0ce-9281-403b-8263-78ea37f2d641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5abcaf4-1f52-444d-bcd5-fd2d4a847561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a5fa57-4dde-468c-a131-5c2e40167614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f6b1d4-a9f1-4734-bccf-eb0a2488a121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25c3088-6ca7-43d3-97ea-f5c794eb0bb7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a352cb6a-bc14-4ad6-98cd-7f9194d169a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78029a9d-6785-4ca2-893b-14f3a4c423c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67174fed-fe7f-49fa-89fa-a13a8d8f5efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc1696d-7bfc-455e-bf53-8738d928d8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b171008d-bc51-4e69-a5c8-b792ed7bb697",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46aca032-cc26-436e-aba8-8e21608c483e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20de44d-756e-4828-8015-163df85acc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45418b4b-d4d4-4c81-8eed-05efd5d0fad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "390f653a-dd2f-48e0-8ed9-fe1394c7627c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ea865b-8e6a-4665-8548-b1ab2c1f8e65",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6089a76e-7fc3-4200-871f-3538bd410100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd7a6af-c7a9-4590-8ef9-a7eb4764af74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89eaf2f8-2649-47c4-9e29-635a2f7fac30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f88a6c5-c494-4c16-913c-3c39049881c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd28ade-bbcf-4492-aa01-ad4391f94d4f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae16bcf-1da7-4460-b2ac-cd5c09690ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099fa0c9-3379-4a03-aef7-bc422ae25b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e253ccb-ea6d-4736-a64d-6c588619458d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbd9c9f-bba5-47f2-82f8-d0130284a996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a6daa3-e917-4f69-82cc-b1baf94fe03c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2069cd6c-41a5-4bae-aa1d-5c73d73b2baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4c9c86-ccc1-42c4-a92c-efb2af927d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38621d97-2a63-4175-ac33-e6b0a5285020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad7cfa5-f120-4d36-b31f-e1aad858eb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d685084-4cf3-4e6e-992a-8846f624f804",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b848cb-4f56-4c12-8e8d-83cdcb3811ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905cd766-d519-4e6f-8a92-9a38243c1dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608b3c03-2074-44da-9057-236788c4e607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f132d39-df53-4bd2-aa97-3708ebe5d9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c3045a-9fda-47c9-9450-fa740dc31d41",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c90decc-1447-4dc2-98ff-3135a7072cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c98f28-2142-4b65-94f2-ac43e0d16827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c293151c-81a2-4905-a4dd-e3de40b528c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90eb4874-d0f5-4702-aa50-0532c0072027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e562890f-ae3a-47b0-be22-e005f9428165",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae4fe49-6f2e-4052-a52e-34ec14f99d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f8166e-edb2-4bcd-be4a-2147c939e3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648b05b2-25fb-4d0f-abb7-3de54e563a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50975743-27d8-4894-b9e1-45e12f93f6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d41f717-01b8-443a-ac68-ef5071c4f8a3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce25688f-1d51-4fd9-871f-c9a5ef7a6cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b414273-8ee9-4fd4-bb14-0376da9ddc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc6c992-e30f-4fb4-a724-1230839f0782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abd19dde-7e00-463c-ab10-8d1ec9fc16a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90521b9e-0eda-48d1-a942-c540ac9062c1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d23c12-7ca4-4a56-87a2-5f01141f8657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfd780c-9528-4b3a-9bea-f5c8053d5413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b6901e-0400-42a1-8c83-6d9799940825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95292751-b195-4cca-90c5-9f1bbb3096b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb480237-5234-40e5-b47c-3a618cd404de",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3986ff-12b7-42bb-8897-9b8094b823a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12adeedd-ef59-4ca8-96d6-2940850716b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7d37a4-df1a-4951-ab09-a1970819fe8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f911337-c7a5-4746-95e3-413701e132d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c980be-b955-4cdf-8c69-fb70b54aafd0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974025e4-e48d-4b98-a7ce-c358ec2efe07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db7be71-61f9-4d09-b2de-01e13366ffdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d84a28-6da6-48e0-93de-7b1d3d5287b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ca2f29-2919-42e6-92e0-aac685ca988a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4f608224-ef62-4d45-88cc-6b41563cb222",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "296866f9-decb-42a1-873c-c0b8c1ee612a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bd3b11-9f81-46aa-a909-abacf0c2268b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d0083862-0be1-4e8e-83eb-008d1cfc73df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd024d6-ea67-4a02-a2dd-47a5849db669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4ea8c29-f6e7-45d4-83c7-ffa2cc05a188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcde037-c533-4682-bd4a-6552231895ef",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29721f1b-fea4-4a07-827e-f8e12fc6bb8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5c51ef45-e410-4871-bf31-44d47b1bb894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b566f3-1c35-4122-91cc-5a7769ab7da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fa013a5-75a7-4095-a967-fe00722c6c1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c722910-dfbc-47df-8d83-15018c2ba229",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c408407-987b-460c-9862-5752f5d1be5e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3ad5f67-b392-4326-84cb-bd496ca1e2f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bcdb6ce-dcdb-41ee-a893-0a97b41dc275"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "773b5274-661e-417c-8108-ee99607f0bdd",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d1981c4d-1cc0-4da4-859e-f90d180f409c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71f5de85-2f50-4d57-b9c1-7a01b0a18ff6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90fd903e-3f3f-43ad-82d4-31197aad9bf0"
            }
          }
        ]
      },
      {
        "id": "cbcafe98-c12a-4ca5-8edc-ceddb9ddba63",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "220f1411-36ab-4821-9da2-31d17b2e8045",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0671ccd7-bd3c-4e52-a024-38131d812f27",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5dc713ce-cb85-4d70-a1ac-a1e11bcb6f36",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68336946-5bda-49fc-96da-2446303f7e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f06135-a85e-4892-ab9f-84aec7d974d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e621fa-c083-42d7-a119-66bd0282310f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663b4405-ecfd-4bba-a566-f78fb579bb1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edf9062-7893-402f-a44e-c10be90742fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c821dac-a204-422c-953b-634fdbeeb888",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7825d5-bb61-43db-be30-71df978e473f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea54781-4929-4158-a1ef-551a7656833b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e362490-0c13-4ca4-bc12-e9c3d8eb0185",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f975de28-37b8-46cc-b426-86c22c7df790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e038c1a3-b221-4484-9451-be1cba89707e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f31ede-10c5-442b-8e6f-5fb8762fc3e3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce00d1c-cb13-4906-b611-a2c2da4bdfbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94f0831-94aa-4b40-9151-43cc4a000561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0cd98c-79ce-403d-b999-9a0c1b8de9ef",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff176f31-6c78-4ed4-84f1-adddb0fb0951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb23d37-2c9a-4640-b64c-8a2ce830bdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f5e633-81ff-455a-92db-74790fcffd3a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3105a87-45dc-4e26-b66f-532a4612aa60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca3c06c-f85f-41e5-97ee-6869bbedf8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff909a4-ff96-4232-b0c4-704cde961f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459f76ac-5542-4d18-8983-2d58ef07dcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c841e8f3-68e3-4c92-8bab-9b434440a79f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea0f671-64fc-4861-86f6-8ffc236746f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d77a6a-6c74-4ccb-b093-c6c29d71466c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d92004-2046-499a-9feb-ba18edcb9bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2773cf63-5926-4ee5-a41d-bd3589cf2739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ca4b15-24a7-48d1-a7ee-2dce3c1ce5de",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c105ff-8400-4946-867e-d1ccf2acb6d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab79a12e-1b15-44ba-b014-060a2c3c4385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d736d5d6-d02e-4627-a6a3-7537f0c76a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0778f88c-0bd1-4dc9-a828-f6c36c13d775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d17c2a-3dc2-4222-8585-bb2416b3e481",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acfedab-680a-404d-9966-274eaca41b08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a05db81-1022-4ab0-be2c-59b3d03bac91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ee525b-e578-4dec-bc63-926f939b16c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6dbf739-249b-44c9-ab29-489da8c79101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a171ae-9518-4d14-a22a-99820793d478",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbd831b-60d1-4d74-bca0-9d0337c0ed32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60adad6d-5bfc-470b-afab-c1910ce81570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feb79fa-9067-48de-8db5-c2fbb608c571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e87f7a-2b73-4cef-a606-fa857569e728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3f66d9-f63f-41d8-bca4-f443ce539410",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ae6cbb-c965-44cd-9281-989adf1995fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e72a8b3-e847-47f9-9d54-7485a7a30dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1889267-357a-4156-9bd7-0fa33221a246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c882537-80ec-4e39-917f-9dc4f0c58dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9228a0d4-e8e2-4bcf-8304-c59058c53080",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eb490e-8d2e-4147-a7e2-dd50d41d7bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "740a2a08-d7cd-40e6-9638-eacf9026b5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e318872-e50a-49b9-a338-f210be0a0101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c1808d-fb3b-4e25-922d-885f559f2b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2001f11-c348-48b6-8e30-351d20bd87fe",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a48c1e9-c77f-4fd9-9c17-494f4db062cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1306ff03-3c58-4ed6-a5f4-c2926f377a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2cd141-4702-4993-b713-9666ed923883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4885f37-781d-4abb-ab0d-494bc5e5a0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0af7604-e5ab-461d-a242-e4397a0bba89",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57306d52-0857-42ce-95ed-6bd1808943d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bc5d47e-ab1d-4702-a271-77b54bc6c7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ac11f6-7b8d-428a-b99f-0670374014f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9570c2a-ef28-49b8-b4d6-1a04aa44ae8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e6f25c-1605-453b-8daf-5fecaa852499",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0e9b27-9c21-479e-b0ba-0d5a21f7a688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6219801-33c8-4006-8806-5f442f1905a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07fece7-fd73-4343-a39a-ac5af4f215f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f121141c-3438-48c2-94a5-0534059cc530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85858fbe-79ed-481f-b2e8-ee476f32169e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83e6f2b-f3a9-435b-a93c-60c6ac0ba2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e6851f-5457-46ed-b659-bd3f17827b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0f6400-e4da-47b7-8152-a525c0a65527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5aaf7c-9382-4705-bdda-bd0b81e77144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431bcfa0-e3fc-4c3f-830b-8556671d6872",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19330f4d-509e-478e-92c5-fa4e4043c26e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5906b257-7d49-4c27-8754-da2e8bb1bf2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353008f4-5bbe-405e-8c1e-2a81eac7687d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9018589b-dd35-456d-bbaa-2485263734d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de9e021-3116-4bc6-ab27-9d0eebe61be9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725af182-cbd1-4503-ba03-b7ecf0b26955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e5e90f-9025-4681-a000-5492339574ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d44fcb-28f6-469c-8601-e201e5cc3d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29cdc40-af31-4174-821a-031fd359a9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8a6342-cf98-4e16-8d42-22c6db2256f6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b143769-5ae1-4624-a01d-5761f019f92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde88fba-d863-4eba-bbc1-f8b4746fe755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32472485-f6da-4607-b868-4035656df305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724cd6e1-21ae-43f8-8ef9-2a1063b86c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1676b59-4960-4107-99f9-30494b6c5d0a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcf116a-9f11-4ced-8584-d59b1220bf14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6535b9d8-a30d-4025-b1ad-34966a77212c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4bce68-dd34-4547-96a3-a0c48eb5b556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f3726f-8e48-474a-89ca-87dad46290ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b883b5-8fe2-4884-9b62-b6fad1997322",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53371cd1-0095-42e6-a38e-f182d4a0ae76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9754b0a-b18c-4f10-9d8b-6b49e588bac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4ec54b-c369-48b8-9b4d-038faf821a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f2b1d7-de1c-428a-bb50-2ff0b1f366ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79cabe5-9460-41ab-9135-45d0045dd2d4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37630d0e-5659-4530-b758-1e910caa0c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7457c74-8bc9-424b-80ca-5a472de169d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e816db0f-f8ce-4676-a6ee-9857335a042c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ed5a26-cd41-4905-92d5-893d80450e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da73f5f7-3f90-4ea3-b5e4-091c6c93ffcd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465f3f69-c857-4d2e-a0e3-99ab0a023e8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bde527a-dd72-4756-9ebe-eb200ead853f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81649b8-de2c-4b8a-9eab-3ed5829fbc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f37912c-88f6-47bd-819f-14738a14996f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a850d96-f900-4aeb-b116-7d0388b59176",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1453faa-76bd-408a-92d9-cbb4d7988934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "233f8cfe-585a-45b5-b389-92babbbd6410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fddd0af-9271-4cb9-97a2-816fa101a064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389d7550-0f92-4391-8f67-f718f1c7e851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0428472-8aa4-4e72-9a78-2864626199fb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bffa494-ea43-45af-b784-830747c09212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "177e08ec-b7c4-4d15-8f72-a0d487f858c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cacbf0e-f880-40ed-91a9-5b3a5c82d885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7952cdfc-0c6e-4862-aec4-e15398a17ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d546d47-4f7f-4db4-8b3d-bb58df796bd5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d56beb-48d8-442f-9fb7-1d9f1c5cdb66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37699989-2fa2-4dd3-b910-ec8355bb21c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8704a24f-8a4b-432a-8ca1-54cf73ffc2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e1302a-594b-42b0-a148-ba64ed2a7f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2117e4-6c62-49e8-833e-d417b9eb01a7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8437f9ed-489e-4386-8dfc-0e232ca692c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aeb7609-5821-4682-ae06-412fb09b67a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f0c36f-750c-4ea0-ab8e-c71e8103ff34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b41b39-f5ec-4f9c-8cd7-2835d1c0cf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d24b759-ebd8-4bfe-8949-421fc1ed55f9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f8f0bc-0377-4b02-a7f9-743b678f499a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f68485c5-4d8b-486c-9465-a8d4cb76a41e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7184226-c5e5-4cf2-954d-0c99f0060972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ceea8b-00bf-48bb-b9bf-4dda71ac4157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dda1d4-6cf7-4633-8063-42b252d67ad7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72eefd56-2f99-4e3a-9838-78d0e2253ed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a4b474-b070-4c94-9f41-3199c9bb4f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ee51ee-6b1f-4e3f-bf55-e00c25ad4313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a5971f-7b73-4504-820f-5551988e4055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a85efd1-ef84-4b6c-864e-3389dfeb6090",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5063b630-c577-4d4e-8bc2-fab814c39331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b1c9e3d-d284-4703-adcf-158a409596a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5feffae7-81d9-43e8-87d2-18af12b0d587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8190083c-8b43-42eb-a617-2d4b7b143b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502f83b4-94d2-4259-9e5e-10084776605f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3df609-dbf9-416f-bfc3-e13bb7f4f6d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a755bf-5f83-41af-83bb-ff2b50f15d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e4f97e-267a-4678-8b08-23efb4c5ca5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c74c0d-64f5-4557-8a4c-1230fef64db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10c8cf6-7383-446a-a7b6-2491b99b11e3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2089086f-579f-4dd7-bb14-c1b9060271e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "241182c3-1cd2-42f4-b0b5-b1ea31a867ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d25b06-645f-4338-b09e-1c993e62b670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8151f257-2dea-4040-b901-185adb5654f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb47092-648c-4b69-93fd-f5cf870db91a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c85353-fdcf-43b8-bd19-6c47674116d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061598b2-38ce-4fd3-8d1b-e473ab3e9e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83162ae-72d7-43e3-b3cd-e7d590c2c939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f3cfc9-29e6-4c0e-97a5-2dae64f25055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483b3986-83e8-4ebf-a625-203814a64738",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6755bd-e406-409f-a114-c0be221b13ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8af204-74d3-4355-b820-e2bf2875ed47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58396cb-aaac-4051-9381-0e3be6ae7107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4238008-de8e-4129-9c96-229e62a11d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f5d696-a0f2-4031-977c-86ca2a098582",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1daa628-b1ad-4aa9-b5e3-47184359b901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8873abff-869b-403d-8c6b-d6dcee8e040c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c74f32-8a51-432f-9c6d-f60ed6c46e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add4c590-6f9e-4cce-a165-2eb44ef05f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df675fc2-8883-4f84-9f19-342a4264395d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cde639-bc02-4a3f-b0b1-5d46ac87e95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30375703-ce6b-4444-9a5a-4c5be84a5e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6636b69b-e120-4572-821a-58d581e00270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cb09ad-306b-41b5-9553-92b00a2c3bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2e64ef-2c10-4c1f-9125-fb8716ea6976",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4de793-6c43-46c7-a115-3ab616df37f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfa6887-26d8-428e-af8f-1981f01007cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b59c491-2d93-4914-a5cb-020c15fbd087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6b8024-690f-41fd-8b18-a6b44f072f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62ba9e5-b107-4652-a504-357990b98c0e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba308bd0-b8b3-424e-b375-4e9f1c282e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e58c76d-fc27-4010-b960-540250a6dee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4644c7-efac-4b2d-9a03-9a40c0e0ffd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea96593-3876-4c11-8895-be8baad599d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe37d37c-1dd2-4fc5-9682-582ae6496e7c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e050aeb5-9316-4498-9612-24936551427e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242df4c5-95d4-48a4-a14c-51acfe30b350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cf6978-a9c0-4a97-9e08-6daec09a17f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e9fc90-982b-4793-b7e0-f24a69d6b9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42eb71b9-95a3-4d96-863e-cb1ca5f03819",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fc0b9f-e283-4532-96e7-23a179f27469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42949fd0-14a1-4322-8eca-c42dc4d738eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d12ad6e-b363-4d10-8abc-183b04728169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d071f3-964a-4dd7-8930-255a1f1feb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5076d36a-5d61-4206-a49e-8f3330512912",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470ac6c7-37b0-4dba-9002-8adf079b8131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8469ebc1-6a50-4131-8038-14daab83aeb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fdc8de-c6b4-4a5e-833b-9dd53bc18e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272623e8-1010-4823-b334-875c122e5f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791130c2-8c60-4516-bfa0-60a83c2d8090",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9d4014-4b88-49e4-928a-366633d288d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b51ba57-7e3c-48f3-b188-4483cf4a8f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5073540-6f91-4895-bbf7-ed4cc5c7be57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bab8bf-e243-4917-9177-859b0b70eb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7b8cd1-05fc-4b63-9582-016a11b23488",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6368ab-d292-4e77-981d-65844c805633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4905b551-dd1d-49f9-93b0-41a934fc65ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bd00ec-f32a-429c-a171-17ffcc0622f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c112e6a-adec-416c-a866-88c6b044f07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889eebaa-c2be-437b-b8bc-db1f6658d396",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0967d3-493f-465d-b79d-975100a61b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c527a1e3-6bc8-4eb7-b744-c6f6375bbae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e88dfb-9d19-4482-8b8a-91a3fe8e2d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb25fa6b-b663-4f62-adda-b00c152ea96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e229da21-76f8-4291-8c16-39f64f4f92a2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ff70fa-8253-429b-bdef-18f3ca493835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a472c1-ef71-43f4-980d-82e4a93e23d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91a0a42-bd23-4556-a0b9-27135b336a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c4c0d5-06cd-4edc-9c62-624ebfb53379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff83d953-2c9e-4713-90a7-005e43bc69b3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7980f22-5798-45ba-9641-ea5b529bf6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d54322-7750-447e-b9ec-aa9d7e1de36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf50f30-90a1-45eb-b9be-cad4284ca14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec70e32-7bef-41bf-a43f-9a3d4abd20bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45287422-65d1-4c38-91d1-6c4e0449ac10",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d993f8f-e744-46bf-9a73-d8e1342703d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce66f1a-db76-4100-88c3-67d763a0ae0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9a4ef1-de33-4f18-a9fb-6cdc3859c3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3550b666-330a-417c-8786-cb35212c75d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647c5e8b-3e31-4f6c-b53d-f8d8e14f60b1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fbb1b2-f3d4-4006-9fcb-13365be23e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68646b28-fff9-4254-a556-836310efb388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22614043-8acc-447c-8a15-e76b6e6dd478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4c9f98-ef6f-4137-ae5f-bd6daa95b639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c33ea9-a524-4067-95fd-7121fde9e6ec",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7851216c-92c9-45fb-83ef-b02ec7cb16ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753aeb0d-3d59-4c32-8bbb-618db2198c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644c2270-559c-4e7c-883e-aca41720c75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df0c442-094e-4862-b163-1973138edcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb40ebd-7937-4f0c-b036-e60b5d79c736",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b36218d-6d2b-4d3c-b54e-10783f4afd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5cfc2aa-723a-466a-b793-35af8a9bcf11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a33f7e-2ecc-4e6b-9a97-fb47009692a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d29374-0f15-496c-a69b-d33394c2fefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20d2ae7-d78f-4249-960e-c3c039262190",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3109666f-4936-43ed-a4d4-7f8a8936a903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52d4f18-11b7-4109-b411-3b288d39488b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac64eb3f-b74a-4c62-bf3a-8222de15c997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25dee19-cd83-4312-9b41-6f0f0ebc0e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f4b7a3-1f92-483c-bad5-fad18092565c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dadb34e-8211-403b-b3c5-5618f614d901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e4ea7f-f023-49d0-a4a2-eb27157d33ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168d9f3c-ead4-4553-ba68-fc2ad12934e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9411490-199b-4503-8ec4-743885fb4861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81e668c-0dca-4185-a8a1-ee94d5c55585",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336d65d2-c0e6-44b1-bbf8-8cb217c4411b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85c2c14-9d36-44ff-a412-6d72b6fa753f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c4aaf1-d371-4baf-b4d4-039cdb53a514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4831d154-fe2b-46e1-9c26-d2fab7ec163e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a850ade-833f-45e3-9da5-09fa41104a6b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad94095d-04db-45c7-bc80-1e71ba7a672f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b99936-9c37-497c-8c83-833181b13d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb3cbd6-1186-4d24-b9e8-a710bde1e8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ccaf21-c08f-4fff-9447-6da3481f6548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79827431-8d35-499c-ab67-dd0e298bc437",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a025fd8-257e-4268-a778-5186a591b9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d135ee9-278f-432e-8d8d-b03f20093164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5215659f-1b18-436d-a7d2-6614229eb6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88824ca5-2091-4c8c-84f0-e36c3d10dba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad81c33-e798-4035-820d-13f320913d52",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d983988-c5e0-4430-92b6-4839033d5d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f05340-64f7-4adc-bc41-caf4a89bf16f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72de4044-6e36-4fb4-b6bc-b2050501f657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cffc4a8-cdf1-47c5-87db-d056dc883ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d341928e-22e3-4c42-9d7c-50dc46cf4a76",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49963ff-5fcb-4572-90b1-3dfd6d57d57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24203d31-e6e5-423e-a275-1b13f7e7c778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc61a47f-716d-476b-84e5-d9c086d2c58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9268e04d-41f7-43c6-8b73-91a753551d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79aa293f-fce1-4669-9a73-ab1c63036752",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82371128-a3bc-4d88-b797-a25829c76792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7739fbc-d4f9-4ebe-b4e3-84f067817a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc42e8a8-4dc1-4dd0-8ae4-a39bf82e5fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0bb418-73b0-4ee4-a7c6-f1cc117f31c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd94be7-66ba-4e22-8b3e-461f9a4399ff",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcb0198-4799-4066-9f72-69498907bb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e0b3a0-3ea3-43ed-92dd-f10685d8ff48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9dd2b4-c48f-4509-aad1-a808ecb0a3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7c1759-f3de-4ee5-aae1-38327531efb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba858fb-17c8-4f5f-9001-4f4f16bf77e1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47f2b8c-9971-4f48-964e-19941792048a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb06678-500b-4480-bd8e-e2e9ddc2454c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca1c52e-44a5-451d-9373-af02f871d052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27bb90ae-65ca-43c8-8769-fd16f752f530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f5bf36-d4ba-4590-8894-4b3793c0837c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498ec1d5-e9d1-4fab-8138-421b5b36b4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68593e38-f766-4476-9767-7e3b32a3764b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8bd6ff-4da6-4bb5-9dfd-9293b835a53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa104f1-67bb-48e4-947b-041719059e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887debe0-0aa3-49ae-932b-9f4a63932ce5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d6f93e-3ebc-40b3-a79b-fc460817788a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d2cd1e-426e-4a7a-8694-eb5b06972bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e27e728-b001-482c-a24b-00c625499268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20089a90-6cb0-45a0-8f70-ef760325ccd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4da4df6-5422-4653-bd9d-a0af704123b2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1171d24-71ad-477a-8589-54e9091319d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eeb1ba4-c430-4564-8d0e-96075f727650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38648598-eec7-418b-af19-1538a30f2f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3044d4f3-6e4a-4004-ae70-404a771fd9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff697b1-596b-4fc6-895a-2cb2a41db0bc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efadd6e-3ce4-459c-b26e-d37ee8161ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a823fc8-23bc-4509-833e-b12ae21efa42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4824e657-dd2e-4336-b663-f011dbcb5369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b30216b-4fab-4de9-889d-f9134e634d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90e806c-cc27-46db-a3b0-c48a38d621e7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4cf79d-be31-45d0-b6d5-ffef5d138695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a79476-2b23-4965-80a0-38fb42394d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e310be-8108-4f2e-a48e-d4c8033948fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f82644-9fd5-4955-b17a-b84fae3b3f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dfaa03-4b76-471d-999f-d7891d129434",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23aa5c82-1264-4829-8dcc-ef510d2b4e79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c8e0cc-9f19-4b9c-be0e-052169f78de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df9a67e-bb01-473a-816f-6082c86d7209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47e747a-a7e3-4a13-b6a4-9fef17bb1350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e561f5b9-a053-4b70-810e-318e893451aa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6299c143-d1cf-483d-8268-0a1c99b02ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2c577e-5607-417d-8060-d4ae5c0077df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060ea883-f5dc-416f-9e6f-d3cf75f793a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb72580c-0b08-45d0-8c46-5e7ce964b2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2cf211-bf29-4bf5-8b96-8d6a6e69fb08",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c30e65-42cc-44b2-99ce-e91a77984477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f954c87-77f8-4aee-a4db-e3502ffa251c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a31e5d-c6c7-4a1c-8bc3-80bfd1e37185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00cdc6f5-b3cd-4a48-9c37-241bd619ba8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaebd7c3-3636-4ce3-85ac-3bb58aa83bcb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e7f911-c0a6-4444-a86c-818d507be175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "479f35ce-4372-4cbe-bf53-ad21cd9a76f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d142241e-9a3d-41b9-a3b9-d57576c50e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efd5591-6b60-4cc7-9d10-2da6409574da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663649e8-6ad1-459d-ad69-91ec143c3fbd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7b0bb0-f46d-4b93-91f2-778043b2ce51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1c7cbb-638e-41ce-9c29-4d1635046435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb387f1d-cc06-44fd-a921-cb6c4c763571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690ca19d-0895-430e-b274-d8f528684709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c4e2b7-f220-49de-a7dc-aaf3496f2e91",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8187012d-d123-4309-b562-2bea9121a023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d528fcd-143a-4baa-b6ff-1719d9a58d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317f3a7f-45b4-4e1a-89c5-fcd121021cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cd0066-3b38-4dd5-91dc-1009d01e8337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c46135-a06c-4e48-9430-dd2a76ef8e64",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54372fab-9622-472c-a524-9e0fc0a7b607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3872f976-4d4c-42d5-8bc2-aaf337a44ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a6a7b2-a3f7-42ae-b453-bf3e846e0642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d233ce71-cc53-47a0-bd1d-ebb8c46b1e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327149f9-af19-4487-9aa3-6b353d90bc2f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d07925-809b-48b9-bdba-53b2180ac3a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12b3949-a99a-4cb0-ba76-31a4b02e8419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606fe47b-71f6-4223-99ba-1ba336294cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b628be-0d7c-4e84-898b-9ada70d353f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b129cf71-3e93-45ab-b075-0cf8d812580d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a51762-b514-4a57-9fcd-b3c7289124a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563ed8f8-e1e9-431c-b73e-4ced9fdcab05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a314dff3-6de5-4900-a3fb-65e8b524942f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a19bf21-dfb7-43d7-a290-51be08c2f63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d7cef6-7336-4b6e-b3f0-bdc3f7e44981",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3492cbb6-6e1e-4e3c-b144-181ae215bf44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d9d2a6e-f433-4b20-9f3f-bc5af75a0b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac42718-5f08-4a9c-b40f-f0b14de3ab86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ddb8fa-6063-436f-a7af-c13f9a2ffd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3ad3d4-4b35-4a2d-a0f0-941692ff44f8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324da36c-7db5-45ca-b961-676a295624f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1627dc75-f031-48fd-8369-c74e859b15cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde85a63-0df2-49ac-9f73-fc84c54bbaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b11d9c2-3062-421e-a5c7-add97b7fd884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484bd794-c183-499e-9682-640ab3692cac",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc2bddc-69da-46f3-88bc-d6a4b8972ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5510d771-8054-4d41-98eb-0a84c248841e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cf7de4-43c2-4195-a1fe-89341279ec79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4423fb10-df67-4909-9ea0-116553604f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77556921-5c2e-4243-8e1a-c385b6b8e6e1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c8b698-f126-4c60-bac6-3284b0690ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05afebd-7bf6-431e-991a-962e3b21fcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4632ab5-5111-4949-a0c3-82addd68e472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c3fd0f-0ed5-4425-8bba-a5bf14f25a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7477003d-9d86-4bb4-89d1-1147c96407b6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ca9977-deee-437f-b8a1-633264bb384b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac06d22-baaf-4d1b-8c4b-c2217dfd8be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4874c4d7-331b-4782-89b0-2e229ce6e2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b991d98-8e78-4244-b709-f9a6689a7262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2801456a-f058-495c-aca6-d360f1aba74f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e38ef0-4a91-4235-82a0-1dcb30ac6010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036dc6c2-f50c-419e-9900-e57117e56117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72daebde-2ceb-43ce-b6e2-51510f0ae35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5f0ce1-8629-4289-8a35-86e3cbd9890c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49492705-4f5c-41a7-ba74-545196eff096",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c59d6a5-86af-4c1f-8c44-65b4b101cfc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eaa8626-795f-4b78-8b8d-edce30bf612b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd40c1f-890f-4409-a984-22da9206f321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e09b1d2-6797-4a91-9e1f-9b278ff422d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaa542a-08c4-4b80-bd92-dcfa5e445bb2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa4f7a5-d13f-44ee-88a3-e1e87938a72e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796b3699-01db-4f4b-b364-50830214d18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a981f773-cb85-4d84-a089-1fbd337f5271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe059735-455d-412f-a95a-e81211bb2703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca94696-1258-40dd-9a31-12d6232526e4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8021bf2f-55cc-4d3f-8052-b9bb4ba15859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c477b68-9649-4c4d-b62b-cfde214054cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4196505c-7e60-46bb-8b9a-e81be99ba65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8e3d3d-51fc-4cfb-ab1b-aab638f16908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272af3f5-b674-458e-852f-ecb33b5819e3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b53fefe-067b-42d5-b755-dd49dd13e7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb2f8b95-4916-4a57-a6bc-1548f4d570b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b10805-a97a-4f1e-add4-7419d7934ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dc5a91-375e-41a7-a531-d91807f6f835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebcde35-5575-4e3e-84c8-e1297858db67",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c866c31-3ed6-4bc2-9aa2-cc78bac327e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73fa7d4-40ba-414e-b453-78c4e9ed9a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdb6b88-41c1-496f-8965-646dcabb54c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0a256b-4373-4075-a279-61d90f6c2b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d241a2-f5ed-4f54-9938-7df85a32025b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31ef439-e53f-4016-bc44-7038e93575e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85f54702-9ba9-4569-85ff-761dd2ed8e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec743f7b-9611-4567-9cfe-6568fafa05c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93701d88-367f-4e76-aebb-e1eca46f1a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4519534f-b5f7-45db-bc15-853dd2a4d7b8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb42d54e-6a63-4ac9-9463-f663289d760d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb46795-fe23-4a93-bf83-4132167f582d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27608ab-f1b6-43c9-8f4b-d356e493e511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee65f70-a649-4f39-b09a-fee7b876f991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6b09b6-8982-465e-8cca-0227da47aec3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95620642-8c1e-4cb6-8db3-2ac29c82b0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e15b3361-cb6c-4fbb-b37b-1b1bc703f73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f1313f-1028-4252-a6e1-533ecb8006c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c765f78-e462-4c9e-8121-8659aa7fd895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19be113-4628-4c3c-9613-d42c0cbf01cf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf3a2ba-e5fc-41c2-8970-43e7584d6ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adef341e-3b51-4477-94aa-c93d52c8c6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d147bbfa-ed36-4ef4-a8a4-1e6d29075b5a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d17965-3e9b-4d1f-83ae-e3227a7f37b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3c1e2b-8412-426c-9d56-febc30886cbb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda5a9ea-1f8c-46f8-9d18-f12b8b4ae956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f27be10-4fb3-46eb-b5ea-7a26fb605b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8a9e0d-d373-4827-9d14-ee01af324dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469db590-f1a8-4ed2-91a1-4ee081d35d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbb5e0b-7a25-4605-a120-ba1d6d2f9537",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fff22e7-47db-4d01-8440-2428e38b4454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1795df41-a9e5-4d62-a1d4-48ce535794b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60317bca-f952-4973-8b4c-beee14d17cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee0f756-667a-402b-93b7-62238365faa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a0cfce-e447-4e67-a9a9-c01ee4cf6907",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1ecc3f-89ab-4de0-9d1d-f157a24f22ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c09d9ea-41f2-4207-af3c-58595abc0d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b424a937-27ad-4c6b-a374-af89ab97d9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd7193c-3c8a-490b-9851-837070d5273b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410ee18d-d0b7-47c3-a19e-f07097bab4bf",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86547f03-1f2c-4c1a-ae81-9ce5092793f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76ccdca7-09ef-4bc4-812c-e4765c6ee623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc8f3d0-5cc7-4e6e-b52b-cbeef9608ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd449c4d-705d-4c86-9531-2d034af14215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1112a1-0dbd-4825-91fd-86d0a27236dc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9341ae2-9716-488b-8fae-443708c3e8ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c5ab34-cfd3-4c49-b025-4673b287e41e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2762459c-3a9b-407d-89e3-d2c3f140ce66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cc30a6-0462-4122-a6ab-f8b250b2d1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13b13f4-71e5-4e21-a2f5-5a7cdd59eb44",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4e47b2-d3aa-4f99-9083-ebff489a25cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4584c86e-52ea-447e-98df-1d87688e8a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dff840-6c24-4e02-93e9-f20c3137a702",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c3fd7f-da32-45a0-83d8-e813d39bb957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b40f55c-bd14-4ea8-9146-a7f2a432c14a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02c182d-5d6a-4d56-a5b1-b62864c9beab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b235068e-7d0f-416f-9bbb-709dd34cf209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b999e8d9-d1f6-4722-895d-0bd005e98bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe91a401-165f-471c-9d78-2a75b579e09f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e8b6ecf-7fa3-4a18-a5dc-c86abb986bdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9bcdab4-8fc5-42fc-9b42-98ec71567968"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2f4b457-33f9-42cf-a9cb-94c6303a8178",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1973c2a3-eff4-47ba-bc5d-d43692db095c"
                    }
                  }
                ]
              },
              {
                "id": "3246319d-e011-43be-b6ec-920318f11916",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b60c5dd9-b74b-43bc-93aa-f4591c9b9840",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9199e19e-137b-4e15-87d1-cd68da96ad9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "27eb1f85-48b4-4e52-b27b-785e34ce1919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df88735-b796-4d1f-bf0c-d3b0ff657c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af2bb9ae-5afd-4e03-a783-efdef1cdc146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec32f929-fdea-453f-9148-cc6e97fa0e3f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c08b811-0ff9-4129-a7bc-a8e050467b63",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "78400222-2935-4450-b24c-45e695e119bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f546bdc1-0f15-4c4e-9de2-e9a46d8c9089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13a4629b-a583-4df6-ae71-45f1abcfd65d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22d6c1f2-9e7f-472b-b869-272534aca9cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2073cfe1-3d5a-4c67-b524-e29996c2ba78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "baf2c43a-22ba-4c8b-a89e-a65bbdd219d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54674274-a117-4f37-8de4-a5b18f77ef1e"
                    }
                  }
                ]
              },
              {
                "id": "975a067a-f97c-4283-96e3-9339b44edd17",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "af4571e8-cc04-4016-aa57-f1be2c0191b9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2688a954-dd45-40aa-bde0-1eeda3673c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b0e89cec-68d2-4b6d-8249-3c01422aabb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88959cd-1add-4c78-8e89-e8b38380fdfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ee93c6-43d3-4c1f-8d3e-80af7068bbe8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "adbb1e0b-fb4a-4125-b92a-4796447014f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a3e4348-b182-45a5-93c8-38226b17dee9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18520f2b-f727-4f70-8915-107f814a556f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "70233cff-5479-4663-86b9-1b9a0e98cb3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9f8a1f0-34fb-41ed-9a05-4da1e1e25b08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18ecbc62-cdf6-41e6-ba24-2b026d628446"
                    }
                  }
                ]
              },
              {
                "id": "d5985a32-d86c-490f-9413-92e9bfbe075b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77157f33-351c-42e6-9138-7c7633020945",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8f61e4a9-aa94-4049-8dc9-fa7d79c8d394"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c0a9ec9-9762-4442-9aa9-e716bec05ec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb8869e3-523f-44b0-87da-21788eedda68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7205104-e779-4b25-b649-485b5991f265",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9ffc7404-a9af-4a89-aaf8-2f65be4119c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47cc8997-2a46-4dbe-a8b6-1fce61e1319b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da43eec3-c005-4d9f-b414-10714fcb2f13"
            }
          }
        ]
      },
      {
        "id": "c0e66567-f944-4a89-ab20-56c376ebebd5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2c7ed381-b61d-4127-8b74-daf63ae4a6b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d72cc8f-aefb-47ed-bf93-39e6c3f4df7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c135a7c7-0cba-443d-abb8-03c23f25b276",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0f1a77-1794-4e66-ae12-ca04156c7f4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6bea2a99-465c-41ad-86a1-edaeac1d88de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae5f25c-19ac-4ca3-8a1b-e9dae9815fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f21731ab-672a-41da-bbec-6636353b4eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432dbd48-0112-49c4-b602-2ae0499d6b19",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18a1a96-ca30-47b3-b0d5-ed0363c4fe34",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "149576a5-78fc-4a58-a34a-386044d63170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cf86cc-4ba8-4888-8b53-1e2c0d33dd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3062e44-72b2-403b-b867-c94e711593f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1c6ecb0-0199-4443-9ed3-57ce5f5b270b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eb4aabb-1d59-412c-b72c-00d591473f05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43f92fbe-2939-4822-b242-84f9d9042ff0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1866b6d0-82e6-404a-887c-e41f40a1d8a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c208cc4-3900-43eb-a32b-85874ab9c2e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "30b95abe-4f0f-4d27-ba80-e4b2ebb75f7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc4011b1-22b0-4f2a-abc5-c1e01bddf827",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64b8d4cb-14b2-4a60-95c2-562b556821aa"
            }
          }
        ]
      },
      {
        "id": "1a8af936-b693-4a90-80b4-4b2a06f26019",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c6ec7a4c-0b63-45f7-8b3e-71c563e66fb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c3c27a5-9da4-4622-af3f-ba70cc114e0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f0f0bab-1ead-4a42-8518-28f278a2f8d7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9aeb9f-8d8e-4d08-91c8-cdb5034b980f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "811b20ef-816a-4bac-ba5c-b765e2688d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c0c394-a612-4ab0-994d-046ed986a679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29427835-47f9-4815-82da-8d5f37af5400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58190a7c-88e9-4157-b6fc-40546fab18b2",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb421a6-b7cc-4ad2-afac-cf6c45dfc85e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "505dc322-48fe-4c56-b0a7-f0f6679b228a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986fc202-685d-4ae1-8b0a-9b36e0bb410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "588e0eba-2f2f-472e-8df6-ba618a2f0a94"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07daaf74-162a-40b2-9b59-86a768ff60ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5696ab96-77b6-4d88-baee-f3653b03ccdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97a5ba75-1bf0-4743-b497-19a5c487024c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08f92ffa-ada8-4cc6-8207-a1f1c9aea873"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "667965cc-4aa2-4bbc-b8c9-f98abbca6f8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67294bdc-aee9-468d-b9e7-9745be33103e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ad4f1c4-efbe-4c12-89c3-7c76a2bd0e57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bf3e6de-66d6-4556-84a0-f2be61554aa0"
            }
          }
        ]
      },
      {
        "id": "77bc8c98-3ec1-4595-8b38-bfd0ec2f3517",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "697645fd-1316-4829-a4a4-569e6411e0b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35135de1-444e-426c-9796-f1b1177db16c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "658ed00f-6b08-4704-a8ef-d914e1f070df",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9caaea-cbcd-4614-83dc-4db641eac1b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66e1b207-5833-4a41-96cd-553b6a88e3d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bfda8d-903c-417a-8845-c9d1d2b11530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2586cded-435c-4dcc-861f-fe7b356cc415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e844e8e1-d547-4e06-9318-192183577ffc",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cc8ecd-7c5a-4b53-a870-5d82b6b487cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "38fce613-1d53-48ab-805b-ac7e015b7d85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b5a385-f8d5-4995-bd22-4b132582f80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f67ce344-00c9-45c9-b168-e52db53e9c98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55d5f122-e5cd-4f52-97f9-2b0b3f82347a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d01702cb-c9cc-47ba-91e9-3e7dab470eee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2d6ff34-5478-42b2-9720-4215d07c4279",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48c571b1-ab68-4fdd-9402-859e50f9c357"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec9860d2-796c-4d29-b230-1fe42b74afad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d9717b2a-7b03-49e8-959a-e92029cee221"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4ba13a7-cdc3-4c80-b159-d62a8727563a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67d2ccf3-d5c7-4627-9492-6e235abb3203"
            }
          }
        ]
      },
      {
        "id": "1b59dc96-1ad6-47ca-861b-3b1c1febe5b3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a48a3df8-cf9d-410f-a503-2d92445f5a4c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58ddc83b-67fe-4a14-8063-744ca3beecb3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5db9914f-7bad-411f-b3f8-926658834107",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81e659e5-f437-47c4-8fd4-78ce6f575f68",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2c998d4-aa7f-4d29-9b8e-717d8c762725",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 71.93846153846165,
      "responseMin": 7,
      "responseMax": 314,
      "responseSd": 30.218245595399882,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682642298599,
      "completed": 1682642330260
    },
    "executions": [
      {
        "id": "3acdc267-0ee1-47de-b60b-d0305d2b15bc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "feab558d-3ae9-49ce-aa81-fbae2368b0fe",
          "httpRequestId": "c2acba3a-130e-42bb-bcb7-0595ec2e612b"
        },
        "item": {
          "id": "3acdc267-0ee1-47de-b60b-d0305d2b15bc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c6cdb2e7-12d0-42b2-9cd6-aca97653fd64",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "6b2bafc0-0d70-4094-9d0d-f5ced3b0babc",
        "cursor": {
          "ref": "f486c39a-90ab-4a3f-b343-9fb99e18f28a",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3ba589c3-9922-4f0e-94d3-72407c28a366"
        },
        "item": {
          "id": "6b2bafc0-0d70-4094-9d0d-f5ced3b0babc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1839c6eb-b731-40e3-98c8-2a3ec459edf9",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "e2670d90-0552-4fd4-8705-7ef599655c26",
        "cursor": {
          "ref": "31be1446-1d00-4356-8fa6-d83fa9a43dda",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "32c0e065-13a6-4ebd-8357-246b5320a1d1"
        },
        "item": {
          "id": "e2670d90-0552-4fd4-8705-7ef599655c26",
          "name": "did_json"
        },
        "response": {
          "id": "757899cb-8177-42c1-9857-69a943d610db",
          "status": "OK",
          "code": 200,
          "responseTime": 216,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048839fc-42f4-4504-8cf7-42185ff15502",
        "cursor": {
          "ref": "37eb84a3-3c68-4356-9236-c0b1af338cdb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6acd05cb-e948-418e-b261-e637e1260e4b"
        },
        "item": {
          "id": "048839fc-42f4-4504-8cf7-42185ff15502",
          "name": "did:invalid"
        },
        "response": {
          "id": "b29ddec4-030d-4c3a-aa60-0137d6c61fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048839fc-42f4-4504-8cf7-42185ff15502",
        "cursor": {
          "ref": "37eb84a3-3c68-4356-9236-c0b1af338cdb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6acd05cb-e948-418e-b261-e637e1260e4b"
        },
        "item": {
          "id": "048839fc-42f4-4504-8cf7-42185ff15502",
          "name": "did:invalid"
        },
        "response": {
          "id": "b29ddec4-030d-4c3a-aa60-0137d6c61fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efa0418-5f9b-4e7c-8677-bcfd6fe7762d",
        "cursor": {
          "ref": "3c3cac20-5dfa-4f49-9f76-4a9280065e4a",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7f870db5-541f-46ef-b8f8-bdb452ae5e2a"
        },
        "item": {
          "id": "1efa0418-5f9b-4e7c-8677-bcfd6fe7762d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "80b61724-78c7-4c4e-a858-5d2831150740",
          "status": "Not Found",
          "code": 404,
          "responseTime": 166,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2262b3c8-e529-45f0-a597-7ab6b8445a75",
        "cursor": {
          "ref": "2e565a9d-0783-4962-9c3d-74e3a61435a5",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cc0635df-e319-4525-b454-f63c51137ba9"
        },
        "item": {
          "id": "2262b3c8-e529-45f0-a597-7ab6b8445a75",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "265b8249-c68a-4f31-86d9-07bdd6d9ca43",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f29d1cb-f911-4846-a025-ed88895deccf",
        "cursor": {
          "ref": "40c79beb-5b6c-46b5-9ae5-778ba733121b",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5eca12c8-22cb-49db-ada1-c8de2a769243"
        },
        "item": {
          "id": "1f29d1cb-f911-4846-a025-ed88895deccf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "67c9ace3-f3af-4478-8cfe-5bd0a833f58a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e47ce1-0600-4a9d-927a-8039ed315f03",
        "cursor": {
          "ref": "4da4527d-1d67-48f6-81ad-026e614a3238",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "64baa879-fc78-4e95-911d-ea65fd2138bb"
        },
        "item": {
          "id": "b4e47ce1-0600-4a9d-927a-8039ed315f03",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e9fe5f9b-e9b3-43f2-9d1f-d2bc1047945b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e47ce1-0600-4a9d-927a-8039ed315f03",
        "cursor": {
          "ref": "4da4527d-1d67-48f6-81ad-026e614a3238",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "64baa879-fc78-4e95-911d-ea65fd2138bb"
        },
        "item": {
          "id": "b4e47ce1-0600-4a9d-927a-8039ed315f03",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e9fe5f9b-e9b3-43f2-9d1f-d2bc1047945b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8640d83-0660-4fb1-8c72-ca35a1c473b3",
        "cursor": {
          "ref": "6b858e48-a268-48db-9cea-2e8d29354a11",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "288ebafe-074d-4ec0-a6fd-73d293827408"
        },
        "item": {
          "id": "c8640d83-0660-4fb1-8c72-ca35a1c473b3",
          "name": "identifiers"
        },
        "response": {
          "id": "fd36a796-1edb-4433-8735-b3ff2c31277a",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce82196-7a00-4de6-9cc6-5b8ee0dd394f",
        "cursor": {
          "ref": "4eca59d5-2e09-4df6-9c31-2a68da3aaf2d",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4da250c7-12ac-456e-b7b5-052a60635264"
        },
        "item": {
          "id": "9ce82196-7a00-4de6-9cc6-5b8ee0dd394f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2c5281f9-e3ab-4afb-b300-ed08a959810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce82196-7a00-4de6-9cc6-5b8ee0dd394f",
        "cursor": {
          "ref": "4eca59d5-2e09-4df6-9c31-2a68da3aaf2d",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4da250c7-12ac-456e-b7b5-052a60635264"
        },
        "item": {
          "id": "9ce82196-7a00-4de6-9cc6-5b8ee0dd394f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2c5281f9-e3ab-4afb-b300-ed08a959810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b393d5ba-81e7-4296-8d61-28d05f2dcab9",
        "cursor": {
          "ref": "d35e36bb-4a43-4011-a2c7-c6ca62318418",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a60f9ff0-e121-4aab-9c7a-3ecdc20bdf28"
        },
        "item": {
          "id": "b393d5ba-81e7-4296-8d61-28d05f2dcab9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "965d2224-3dc3-49d2-903e-0d793e498c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f81e53-0754-46a5-b6ac-1b0568dec4c9",
        "cursor": {
          "ref": "fe092e8a-69c9-40cc-b7ae-a0bb1216ccc4",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6b83d3d2-1a76-4b7e-890e-e7ff177b6eea"
        },
        "item": {
          "id": "57f81e53-0754-46a5-b6ac-1b0568dec4c9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f932c0c3-7d4b-4e01-ac63-2c77d34114f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7249e1-4770-44c8-bd54-b03d9213511b",
        "cursor": {
          "ref": "0e87d26f-11fd-47dc-8fde-39b13f9375dd",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9ca65883-680f-4552-9993-e354943595b1"
        },
        "item": {
          "id": "ee7249e1-4770-44c8-bd54-b03d9213511b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2e1c9bf3-7bbd-48f4-a584-7e970a63cafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7900b75-ce99-4b98-8705-9de20b752d81",
        "cursor": {
          "ref": "1c966e61-d248-4930-99f4-0bd262f1e236",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1a6907d5-ee27-4f2a-8035-5417db0de9b1"
        },
        "item": {
          "id": "e7900b75-ce99-4b98-8705-9de20b752d81",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dd006a29-c2a8-44bf-a425-524e1a7b3810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6efdc74-5494-437d-afe6-6d158a91fc54",
        "cursor": {
          "ref": "974f5753-f2e2-4fc1-9306-4ae385e0dc5e",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "401594c3-347e-4a46-939e-88897578c20b"
        },
        "item": {
          "id": "f6efdc74-5494-437d-afe6-6d158a91fc54",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c2600fc5-de24-4b43-8480-6017eaf83cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8878ae9-10ca-4757-848f-8f55ab550da0",
        "cursor": {
          "ref": "575e79cb-81ac-4e68-82ba-087301614c55",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "539bd608-3bc0-463e-8633-7ce9c4c73d35"
        },
        "item": {
          "id": "b8878ae9-10ca-4757-848f-8f55ab550da0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ad4d6f08-769c-49b2-8723-089db6283aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eab54fb-7b56-44b2-8f8d-06e445e9d280",
        "cursor": {
          "ref": "a3671e5c-5b77-4a07-93f7-312f86a317f3",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "00af1738-e655-4430-9cb9-b56bc82e2d35"
        },
        "item": {
          "id": "1eab54fb-7b56-44b2-8f8d-06e445e9d280",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6cc20170-cf40-436f-b5ea-92771f85a626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e55bb8f-8b02-4d5b-bebb-c293f77111bb",
        "cursor": {
          "ref": "82c53223-5221-41da-a14e-120c4df044da",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a9480b60-3eef-4604-8918-8d9f6f424e01"
        },
        "item": {
          "id": "3e55bb8f-8b02-4d5b-bebb-c293f77111bb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e6117095-f7df-4554-8e1c-41232e1e84f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aacdec8-2865-4707-b125-bb6aadfe526e",
        "cursor": {
          "ref": "386d6156-baf6-463e-9c36-daa9fe029a2b",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3bbc2515-fa38-46de-a472-f5f1842bc265"
        },
        "item": {
          "id": "9aacdec8-2865-4707-b125-bb6aadfe526e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cf4a83e4-f3f9-4616-9b4a-deb221c36bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ef0767-25cf-4d32-9908-ae27fec44cfb",
        "cursor": {
          "ref": "76fd1984-8720-408b-a6b4-7ed3130463c4",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2f82f4d2-ffc8-4b8d-a403-06a755fe3fde"
        },
        "item": {
          "id": "65ef0767-25cf-4d32-9908-ae27fec44cfb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "25133ebf-07a3-4a98-b5a8-d699f1a2878f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0667cd3-295c-4441-a805-529ff65aef54",
        "cursor": {
          "ref": "86cc5d61-b601-4099-a611-f0fa21ecb920",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "16746356-c617-4c55-9532-5412d3033017"
        },
        "item": {
          "id": "a0667cd3-295c-4441-a805-529ff65aef54",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7940a4e6-74b3-47f7-bccd-4803dfe73e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f987ecf1-34d2-482f-9430-80e39173e180",
        "cursor": {
          "ref": "635606cc-2348-4741-8bb7-6d61eafe7ece",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1af87c46-c2dd-495e-aec7-aaae8d3b8b38"
        },
        "item": {
          "id": "f987ecf1-34d2-482f-9430-80e39173e180",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4ca56948-e232-4488-8ec3-890c90ad279c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1462685-ed7f-4a33-85e5-cb832ac39aac",
        "cursor": {
          "ref": "40e5643c-8985-4a83-ba36-210eb9f93bc6",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d7165abb-98e4-412e-81e6-58f2a4fc0772"
        },
        "item": {
          "id": "a1462685-ed7f-4a33-85e5-cb832ac39aac",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fe107281-7347-4aae-bec2-fef5be4c98e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774a8490-682e-42f3-8565-1d0543563d4f",
        "cursor": {
          "ref": "76923ba0-6a01-4548-8652-e73ee9ef7ff4",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ece86675-6b0a-4a84-89f9-1b8e6070bcb1"
        },
        "item": {
          "id": "774a8490-682e-42f3-8565-1d0543563d4f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6feadd33-14ad-42fc-8ce6-a29a12d2a653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad1e7bd-748b-4648-94fb-e147aecfc418",
        "cursor": {
          "ref": "998b7db0-7d60-4a75-8c3c-88146e49e11f",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ee21dc7f-0885-46ef-9ecb-c63a241be12c"
        },
        "item": {
          "id": "dad1e7bd-748b-4648-94fb-e147aecfc418",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "61666e94-56bb-402e-8a0c-c209a1bd43c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9d0a93-b2f0-46a1-bda9-9c799a12c913",
        "cursor": {
          "ref": "00e5711e-6bf6-4b2a-96c7-664bb2ec3e0e",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e49baf71-af9c-44f0-b4b1-2d0ef26c39f5"
        },
        "item": {
          "id": "8f9d0a93-b2f0-46a1-bda9-9c799a12c913",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "003c7586-7acd-474f-8cf7-746dcb840c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba963367-42c5-4bad-961f-8aeeeb745e0f",
        "cursor": {
          "ref": "f61f9684-c4e8-41d9-80c4-9531a0390078",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d9627d9a-9306-420f-890b-fcfab99dfc5a"
        },
        "item": {
          "id": "ba963367-42c5-4bad-961f-8aeeeb745e0f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f99dc303-52f9-40b5-b8fa-d9092ff795a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e844cac-675a-4081-9c9a-e8b2c17b7497",
        "cursor": {
          "ref": "b1b17bd2-e63a-414b-a700-35ad9b818862",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "96f7fb1c-7534-4467-80bc-3c15cf3ee023"
        },
        "item": {
          "id": "8e844cac-675a-4081-9c9a-e8b2c17b7497",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7d75f463-7293-4af5-a83b-c1f6b55133df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca46e442-c057-4193-90c5-af4901c5aade",
        "cursor": {
          "ref": "e1007f6c-5ebf-44c2-a4c1-a979ef4108ca",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8cb64cb5-5ea9-4319-9ec4-fa0b68494297"
        },
        "item": {
          "id": "ca46e442-c057-4193-90c5-af4901c5aade",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "61c5a3a5-b602-45b9-81b6-84264e17af30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50409e3b-3730-4dda-bd91-6d47899b8ae7",
        "cursor": {
          "ref": "451ca99f-3467-455f-984e-ea50760f6c47",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "470656e1-c291-4f99-9ea7-437f5a749340"
        },
        "item": {
          "id": "50409e3b-3730-4dda-bd91-6d47899b8ae7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "943e3de8-9f77-486f-b986-4f5f18f93020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2ec309-8c6f-4f42-b6e5-0f97b5cd1920",
        "cursor": {
          "ref": "e8ce8b2c-e7b9-4c4a-b1d7-94516ef02d28",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "858972c1-95c6-44e4-9e30-582969a682bd"
        },
        "item": {
          "id": "0c2ec309-8c6f-4f42-b6e5-0f97b5cd1920",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0ad3a95c-fd5d-443e-8f3a-d72b31530040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d162a06c-4089-4e9f-9230-5c235c201b4a",
        "cursor": {
          "ref": "4c2d9503-d240-489a-bb7d-ddf53133888e",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "902790cb-9f8b-42a5-9acf-2ec3b187bab2"
        },
        "item": {
          "id": "d162a06c-4089-4e9f-9230-5c235c201b4a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "141cf908-0530-4bc5-a918-ec7029e7188e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09d5c89-0143-4862-9491-e6a0e403b9c6",
        "cursor": {
          "ref": "9a70bebc-40d6-42b6-a413-43baec037df9",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d34ce641-56ce-4d80-af19-ac7f16c7906d"
        },
        "item": {
          "id": "e09d5c89-0143-4862-9491-e6a0e403b9c6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8bd50e9c-5d2f-47e8-b263-8a7e49eadf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2725e4c9-396b-4040-964e-df81f587af07",
        "cursor": {
          "ref": "f238ea14-cf64-48a3-8e2e-c58a75f1cd94",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9b81964f-a127-485f-8fcb-d4d4d7fc21f6"
        },
        "item": {
          "id": "2725e4c9-396b-4040-964e-df81f587af07",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2bcc209d-0173-492d-b40d-6a61095c3a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327e6262-c251-49a4-9f00-dd8269735dae",
        "cursor": {
          "ref": "45c87a05-aa77-4647-9581-11cd2445db8a",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c0c2488e-a86a-4ead-99b0-6483bf842729"
        },
        "item": {
          "id": "327e6262-c251-49a4-9f00-dd8269735dae",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1d7dfa28-6202-4bd0-854d-889dd05a3497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d38a5e-e30f-492f-8e37-ca2e146a3749",
        "cursor": {
          "ref": "b372b5b3-4bb7-4a6a-bafa-fc489d3f221b",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c29fbc6f-1f59-46c1-a6ee-57e151ec1e54"
        },
        "item": {
          "id": "f4d38a5e-e30f-492f-8e37-ca2e146a3749",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0f37b20d-3c9d-41ed-8db4-aed6be1e84bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a98ea1-95cc-4577-8be9-a1fcc099088f",
        "cursor": {
          "ref": "c946de1b-2367-406c-abf0-63c1b20438f4",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "73b9acc4-5853-4aec-bbe0-4db32dbc4437"
        },
        "item": {
          "id": "c3a98ea1-95cc-4577-8be9-a1fcc099088f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9b4e76e5-282a-4cca-b629-d38771f05ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1b3548-da17-4dd1-a65c-24438e8e6ece",
        "cursor": {
          "ref": "10e67221-e9c9-4c91-955a-23642f7f1521",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "76633dc9-71ab-48eb-9dc2-7914db3a29e1"
        },
        "item": {
          "id": "7d1b3548-da17-4dd1-a65c-24438e8e6ece",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7fee3af0-3a0f-45f8-a4be-86bf5ca63513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45367b64-fa2a-4f0b-9707-be5d74e521cc",
        "cursor": {
          "ref": "b380b6b6-a411-428f-99cb-d9863f166e1e",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "71f9f893-9753-44a6-b739-c6920588b7be"
        },
        "item": {
          "id": "45367b64-fa2a-4f0b-9707-be5d74e521cc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "372c7532-4590-46f9-a75c-e24092b1392a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caee709-c0af-49ea-91f6-b418f89050d0",
        "cursor": {
          "ref": "1bf2c682-7eb3-4a3f-836e-e64f7fc1dd46",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f4f88830-d233-4589-94d8-79dc1e159d64"
        },
        "item": {
          "id": "5caee709-c0af-49ea-91f6-b418f89050d0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fe7768fc-6cad-4b7a-a411-c7bd51f3890f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd61ef72-01fd-4081-9cdd-c1abe8a5dda1",
        "cursor": {
          "ref": "5866bdf0-eae5-4152-81ab-7f1b98bbf536",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a0ec8f61-d2e5-47ec-994d-11cf6c42c0a0"
        },
        "item": {
          "id": "dd61ef72-01fd-4081-9cdd-c1abe8a5dda1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3144f605-eca3-40c7-9c07-c12b008d2358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924c73ae-870b-417a-ae20-b9d4078a8bf5",
        "cursor": {
          "ref": "ea1846a7-c307-4cef-881b-f91007794ccd",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f249c540-e3e7-4b5a-89ee-5acdb42b27a5"
        },
        "item": {
          "id": "924c73ae-870b-417a-ae20-b9d4078a8bf5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "487c3a09-419a-4f88-9a67-34f07807db49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b62dcc-d182-4371-9817-4ac95682c0d1",
        "cursor": {
          "ref": "60de094e-1340-41ef-be5f-f6236983c60e",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "33e36731-13ca-4931-b7a3-544a4bfbab90"
        },
        "item": {
          "id": "f4b62dcc-d182-4371-9817-4ac95682c0d1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "97b1694a-1b67-4616-9c9a-432d35f1a030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1891d52-dac4-4f46-862d-b987dccfb221",
        "cursor": {
          "ref": "9a2e67c0-5199-4b7b-8d81-f0538c1dc745",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7fb2c05d-54a5-4ba6-946a-7200b8f49e1c"
        },
        "item": {
          "id": "c1891d52-dac4-4f46-862d-b987dccfb221",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7752317a-68e1-4df0-97a4-a7d0c3201517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ece2be7-a4fd-4bce-82dd-ad433a190907",
        "cursor": {
          "ref": "284bd280-c4ba-4632-ad4c-62594c555ce1",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0f2d6983-4f57-4a96-aa76-be57ca92c041"
        },
        "item": {
          "id": "4ece2be7-a4fd-4bce-82dd-ad433a190907",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dead210f-38d2-4b33-a617-5d292f430dfc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7842638f-8f87-4a4c-96f8-1d6da8ded240",
        "cursor": {
          "ref": "4baf5e65-40c1-43c5-9829-d0a9e2465307",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a62014cd-7a1c-4a97-9a4e-9b32838401bd"
        },
        "item": {
          "id": "7842638f-8f87-4a4c-96f8-1d6da8ded240",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "eafd3101-5dbd-415d-96dd-53a70b9b1872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b76d72-da20-4339-af0d-51bad396c067",
        "cursor": {
          "ref": "afd398b1-a5b1-4c4b-92e8-42a7b0542aa4",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1eff0fb2-ecaa-4766-aa53-b549b68ccfed"
        },
        "item": {
          "id": "f1b76d72-da20-4339-af0d-51bad396c067",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f7b9cd3c-ec45-4523-94b3-3f3607d5e375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd8322d-1b91-42c5-b4c5-e27f67979fe9",
        "cursor": {
          "ref": "0a05bd24-c8e4-4ea0-88b7-5ac15e7269b0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ade0bd83-634f-48e9-bf70-259ece9f991a"
        },
        "item": {
          "id": "bcd8322d-1b91-42c5-b4c5-e27f67979fe9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "331f1bab-f43b-480f-a764-4d7478d4ebe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c35496-0108-450a-82b0-7cc866d61903",
        "cursor": {
          "ref": "90798749-540a-4a26-a654-b0a88a2bed72",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e870e830-50e7-4b84-a172-a66248d0dd5e"
        },
        "item": {
          "id": "c0c35496-0108-450a-82b0-7cc866d61903",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "493d6d75-cef4-485f-baea-f41a577ddc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf74553-aec2-426c-b0a0-1c87d3f1bf49",
        "cursor": {
          "ref": "b1495a6d-9bf6-4449-9bac-7e49ccb10361",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "21e2b07f-f328-408f-bbbb-8b5b7629083b"
        },
        "item": {
          "id": "8bf74553-aec2-426c-b0a0-1c87d3f1bf49",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b9e47fb9-4869-4a8d-801a-f99c18afa9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007e11c5-01fb-4bfa-9420-564bf7808c7e",
        "cursor": {
          "ref": "0d55dd69-b2d9-4a14-aac1-9e01ad6af0fc",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6626c414-4e25-4579-b22e-9b04f546d911"
        },
        "item": {
          "id": "007e11c5-01fb-4bfa-9420-564bf7808c7e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0b495cbc-3d95-4c48-879d-9d234ca4425c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89da2b72-3bdf-4d13-a4ea-d779bc119a7a",
        "cursor": {
          "ref": "28fc957c-960d-4095-bcfc-a4e0d84e555b",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1a433352-71b9-4449-8998-a8f7577fb79c"
        },
        "item": {
          "id": "89da2b72-3bdf-4d13-a4ea-d779bc119a7a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f12dbe0e-a79e-495e-99d2-25632008a4b0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2182783f-e721-4c8a-92f9-5e2b38fb9429",
        "cursor": {
          "ref": "c14cca18-26de-4a61-89ff-a0434be04437",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f5da5f55-98ef-431d-9821-b1328093bc49"
        },
        "item": {
          "id": "2182783f-e721-4c8a-92f9-5e2b38fb9429",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "496fd791-13d8-4db2-b617-12f5fd327304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8660a222-e33d-4f5d-afc1-b826a066dd4f",
        "cursor": {
          "ref": "25131c0b-eebd-4572-b3ac-8e00b157b483",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "24554ebb-9292-4f2e-959b-85f8e6bb439f"
        },
        "item": {
          "id": "8660a222-e33d-4f5d-afc1-b826a066dd4f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "50b1a794-b4dc-4e0b-a58e-02251bbae859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011581f6-dfac-4f7e-947b-60854a485476",
        "cursor": {
          "ref": "9297747c-05be-45e4-9461-8f4a91b557c7",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c25dd425-98e0-487f-9eeb-64a8f4c51e5b"
        },
        "item": {
          "id": "011581f6-dfac-4f7e-947b-60854a485476",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "86a1d8a2-6c20-4666-af0b-d5cb7fa83c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a79b7eb-d00f-4f99-acc3-e2b43be0b881",
        "cursor": {
          "ref": "74b762f7-795b-4462-b4a1-16af71583864",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "379360c3-fe66-4f42-af0c-82ceb00fa0f0"
        },
        "item": {
          "id": "9a79b7eb-d00f-4f99-acc3-e2b43be0b881",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6d924a0c-59fd-4497-97e0-88ede2cf2494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd2d19b-9427-4159-ba0b-1d09dac779af",
        "cursor": {
          "ref": "4265a890-8c2c-419f-8804-fcaa7f5045a9",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1cbe1f56-13fd-4591-bf54-bb4e4f07cfdc"
        },
        "item": {
          "id": "2dd2d19b-9427-4159-ba0b-1d09dac779af",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a9949395-6ff9-4e49-aac6-1b5da48dbe43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc2acea-e7a7-4d9d-a606-927ec9a12744",
        "cursor": {
          "ref": "03be2974-d4da-4a1a-8811-4818582cbc0a",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5c013af4-9d92-4bd2-8299-54453b4535f3"
        },
        "item": {
          "id": "adc2acea-e7a7-4d9d-a606-927ec9a12744",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "896e56f5-5a96-45de-9989-238e7566df4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4f3a2f-f1a9-4ac0-99ac-0fe67604511b",
        "cursor": {
          "ref": "9559bbbe-ff6e-4a87-877a-a5c3c67ef7ff",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1b616e90-3548-4eb3-98b4-a3d368966b06"
        },
        "item": {
          "id": "3e4f3a2f-f1a9-4ac0-99ac-0fe67604511b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "aade8658-0a3c-4744-8f5c-ae39f37f5848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83394d16-cb5e-45f8-b51e-410f430ba22b",
        "cursor": {
          "ref": "fccde28d-01c5-4bd7-ab11-9e259232fb7b",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "55985e38-b3de-4731-a735-0fe16d8f5158"
        },
        "item": {
          "id": "83394d16-cb5e-45f8-b51e-410f430ba22b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "274c62d3-6236-4146-a4fb-4196755fe831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8648f282-6a02-434c-9807-f2bf7ccac05a",
        "cursor": {
          "ref": "60d6f930-1341-4867-855d-fe47699d3522",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "28ab3b6e-7f75-4dd0-8928-9f7076aadadb"
        },
        "item": {
          "id": "8648f282-6a02-434c-9807-f2bf7ccac05a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "da61c4ea-5197-4793-af98-c25c0f6ac51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74b6212-3839-47ec-bd3b-835522fc3fb9",
        "cursor": {
          "ref": "cc62f3ab-c899-4bec-8bde-d89a7a987fd7",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6c560434-9623-44cc-ad8f-ddba55c23e7d"
        },
        "item": {
          "id": "f74b6212-3839-47ec-bd3b-835522fc3fb9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9fd97ca7-9dc6-4e17-929d-e5e59ff66c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e614380b-693e-4b83-b27e-3bd28828a89e",
        "cursor": {
          "ref": "68ebbe6b-0d39-48e9-a880-fefeebf4263e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "247b89c9-502e-4bc9-9b75-1b5fb3e0a74f"
        },
        "item": {
          "id": "e614380b-693e-4b83-b27e-3bd28828a89e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "214244e8-b7d0-477e-8fbe-038aa6b6019e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1139ba73-787c-4e8e-a750-db0c5f289cd0",
        "cursor": {
          "ref": "c9cec3f1-f2bd-46f8-98ce-cc42f8d15939",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4d92ef14-b65d-47de-b48b-c3da0630a5be"
        },
        "item": {
          "id": "1139ba73-787c-4e8e-a750-db0c5f289cd0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2630dc31-b1fd-4066-8950-f7d6e3c1ae77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffdbb0e-acf0-43ea-beb5-65461e7c4766",
        "cursor": {
          "ref": "2046002b-9d74-4791-a823-9a618f129436",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e35e30f8-4b6b-4919-9ba9-63b7544e414a"
        },
        "item": {
          "id": "6ffdbb0e-acf0-43ea-beb5-65461e7c4766",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e771bcce-47b6-45d7-87a7-9239823ca004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3665af46-a2b6-45a1-99dc-4fe16ae141d3",
        "cursor": {
          "ref": "38ba8986-0478-4bf8-b67f-94998ff7a6d9",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fbf41064-54c5-4735-841a-c6978a02aa10"
        },
        "item": {
          "id": "3665af46-a2b6-45a1-99dc-4fe16ae141d3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9079b76e-1200-455b-a652-724b99e4d07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46672af-cf49-439c-9567-cfff189b965b",
        "cursor": {
          "ref": "2f3a88cd-e07a-45fa-92bc-fcb993b446ff",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e68b2ed0-faa5-46bd-bba7-dc6ad77ddd50"
        },
        "item": {
          "id": "f46672af-cf49-439c-9567-cfff189b965b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0f65c444-3640-468d-bc0c-2082147ad03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b94837-9baa-4e93-a7a1-555d9529bf45",
        "cursor": {
          "ref": "49554ae1-2b63-4545-ac22-7b2255d8e5b6",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "19aa2a3e-da34-4a09-b82d-df0379766ed1"
        },
        "item": {
          "id": "c4b94837-9baa-4e93-a7a1-555d9529bf45",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7e48765a-6275-4223-bf3a-12c756414d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e74982a-046c-4573-b3b0-ed8ab4b676f3",
        "cursor": {
          "ref": "1b60ee49-bc13-4deb-99c7-8113007b98a3",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "887a81ee-e857-4211-96c1-5c5f44c0130e"
        },
        "item": {
          "id": "0e74982a-046c-4573-b3b0-ed8ab4b676f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "de533e29-f98f-4b49-bd9e-7c171928a8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e069a799-024e-4e73-a212-ee3dbdf8b10a",
        "cursor": {
          "ref": "3fa35dd3-b140-4b4b-8084-e9eeefbfcf79",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "17539f4b-3a7a-4b96-83f1-d8169d4126d3"
        },
        "item": {
          "id": "e069a799-024e-4e73-a212-ee3dbdf8b10a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27a22d5c-fadc-40d0-9149-cf9c58cf0590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3770ecb6-126b-4f2c-bcc6-8193703f92d5",
        "cursor": {
          "ref": "c5729b65-702c-4c3a-b1ff-7afe22e36c9e",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "93370085-b6d4-4ad0-a3b4-c3cebaf18f8f"
        },
        "item": {
          "id": "3770ecb6-126b-4f2c-bcc6-8193703f92d5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9028528f-b7b5-4ba3-87ba-cfa937852842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f66412-ea96-4779-95ad-c6aef711e130",
        "cursor": {
          "ref": "7e377f2d-8f8c-4c50-9c0e-a8fdd9521472",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "67cdb927-57e2-4614-9a7b-91bb6a3193b8"
        },
        "item": {
          "id": "c0f66412-ea96-4779-95ad-c6aef711e130",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "35011f1d-3b1e-4bd6-b515-8b9e8c6ae9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bd58d7-be36-407a-a08d-adf37db6024c",
        "cursor": {
          "ref": "770aca7f-7e84-4aec-a826-b440e4c541f9",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "11b13bbe-d396-44ad-9897-382a206a15f5"
        },
        "item": {
          "id": "99bd58d7-be36-407a-a08d-adf37db6024c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "52e69ebd-b2b9-462d-b223-363efc8d2ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1895d818-9f7a-443c-be5b-e0cebd8c8a1a",
        "cursor": {
          "ref": "9391992d-212f-4c43-98fd-9bb17b46b576",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "022787c5-3c1a-4343-a95b-3b3c5fd25d23"
        },
        "item": {
          "id": "1895d818-9f7a-443c-be5b-e0cebd8c8a1a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "90f81d37-bdb2-471c-b352-a20fbd1f350f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599d12c4-b981-4324-9ed7-9bf035a01d00",
        "cursor": {
          "ref": "f339fd05-df41-4617-9dd0-916a93b068e8",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "04118c06-a07e-43fd-bf4d-0b932c7196ee"
        },
        "item": {
          "id": "599d12c4-b981-4324-9ed7-9bf035a01d00",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a7f5ad8e-1dd5-4324-b4f3-99cf351e54a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbea77e-3d7b-4723-9a8b-a9114f088458",
        "cursor": {
          "ref": "a45f8ea7-03a0-4e15-8437-d48cf4a96435",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9af8ad2d-b07a-4674-83fa-4cd94d08c10c"
        },
        "item": {
          "id": "1cbea77e-3d7b-4723-9a8b-a9114f088458",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1afc367f-f304-447d-b240-bedad35db359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00ff3c0-a5db-4c6e-a4c5-97a618f7b16c",
        "cursor": {
          "ref": "c5acbb45-97be-4945-87d1-46e73607e57a",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "35c61630-6fc4-4727-bae2-a9f5c7772acd"
        },
        "item": {
          "id": "b00ff3c0-a5db-4c6e-a4c5-97a618f7b16c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4a73b446-f323-47b8-89fa-24fa9e456786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74462874-2c59-4da6-85a0-f13ed4a14ba8",
        "cursor": {
          "ref": "cd8c69e7-a924-4a51-9f7b-235137ee30e7",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "081e9445-8650-4384-97a3-d610a7940280"
        },
        "item": {
          "id": "74462874-2c59-4da6-85a0-f13ed4a14ba8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1a96341c-311f-4b58-9117-0a0f8773458a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3d3dd0-b8c5-4553-b349-c925fac0b985",
        "cursor": {
          "ref": "2ccafca3-dda3-4dd2-839f-90dc48465509",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "965a7da7-2246-4564-9448-1100a50218d4"
        },
        "item": {
          "id": "cb3d3dd0-b8c5-4553-b349-c925fac0b985",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3a40b850-fffa-48ba-bf36-418a798ff8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719b4d62-e390-4c79-a171-03ff242818f0",
        "cursor": {
          "ref": "4c1f36ff-a52e-4279-8c44-c532a30a1ef1",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3deaa434-2da0-4e19-8ce2-3260f992ddf2"
        },
        "item": {
          "id": "719b4d62-e390-4c79-a171-03ff242818f0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "235092ac-b8e7-4f61-addf-a654918a30e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb981164-d4ef-45e2-9d97-ca24e17c65c5",
        "cursor": {
          "ref": "5a305fff-05c9-4c13-8d0c-b3fe25cf7e6f",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9a79fe6a-1191-4e57-9e58-d2bf897e7d6f"
        },
        "item": {
          "id": "eb981164-d4ef-45e2-9d97-ca24e17c65c5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "63a22183-67a8-4171-8350-47df7a74e51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3164cd-d19b-4d79-901a-68c5ceee61fe",
        "cursor": {
          "ref": "9f23f544-f9c5-4569-bb32-c151701d945f",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "be610e88-681e-4f0a-8127-51ecb12e1b13"
        },
        "item": {
          "id": "bf3164cd-d19b-4d79-901a-68c5ceee61fe",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ed104c00-49f1-4015-a574-d6bbd30e1a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eec2ade-89e4-4e2c-85cf-24c13c93678c",
        "cursor": {
          "ref": "9139431e-44e0-4181-9ace-dabdc2dfd4a1",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e221d7e5-ec75-4f7f-a0ed-f6e5ce2dfcd6"
        },
        "item": {
          "id": "2eec2ade-89e4-4e2c-85cf-24c13c93678c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d67e1da6-cc8c-48ea-874b-110a82a9ddcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc8e181-6cad-43c7-bbbb-e29fb79b4fd7",
        "cursor": {
          "ref": "3855045d-60fd-4491-a117-8a5c765470fd",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5e9d104d-7598-47ab-a6e1-430e73b0b839"
        },
        "item": {
          "id": "1fc8e181-6cad-43c7-bbbb-e29fb79b4fd7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "022b2fcc-a726-43eb-afe9-1af8973bec3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87b8732-92d2-4c83-9465-a476c9dd527e",
        "cursor": {
          "ref": "ce5b6879-8f83-4f13-8f11-8cd3568f807b",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ab44ee09-f4ca-4cb4-ae1c-fa18a182ca32"
        },
        "item": {
          "id": "c87b8732-92d2-4c83-9465-a476c9dd527e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "808b164e-2fd8-4d8b-807b-cfcb41b2ceea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0ab37f-1c96-482d-8f27-4d513b744d52",
        "cursor": {
          "ref": "d56e30d7-9012-458c-af90-695b1408e31f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "83677cc2-7f1d-4c2b-b5ea-188f185bb284"
        },
        "item": {
          "id": "cd0ab37f-1c96-482d-8f27-4d513b744d52",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9c257017-76ee-4ac9-9952-8ed6d1dda094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f008025-e562-4a05-a759-e435c68da81d",
        "cursor": {
          "ref": "a89f7df8-74f3-4b8b-8a90-f548877e00f5",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b0a016a2-07b2-49e4-8413-40d3b84a6458"
        },
        "item": {
          "id": "1f008025-e562-4a05-a759-e435c68da81d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "82cbce4e-7536-43b9-aea4-374f07e189f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00efe11-bcec-459b-b974-e5bf143d51ec",
        "cursor": {
          "ref": "30347ae6-c338-43fe-a5ac-3720d39cf3c4",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "462b0b55-3a37-4ad1-98f7-f46645e759c1"
        },
        "item": {
          "id": "f00efe11-bcec-459b-b974-e5bf143d51ec",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fc6ed3a2-3c60-40c4-a0de-78c7ca438d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515b2fd7-53ce-41d9-8953-2436ce768bfc",
        "cursor": {
          "ref": "6e8aa82c-5681-49d2-bb16-83ea677214de",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dc0c359e-9e67-4a86-a7f5-40cce103f2d1"
        },
        "item": {
          "id": "515b2fd7-53ce-41d9-8953-2436ce768bfc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b4153a05-c30b-45c0-9f7b-39dba8532dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3e0b55-dccc-48b5-a18c-90910a5d99de",
        "cursor": {
          "ref": "7a5ed5a4-8abe-4c77-a59b-ef58abd3f1cd",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e0d942bf-0d49-4ed4-a9e4-f79fb4dc3767"
        },
        "item": {
          "id": "cf3e0b55-dccc-48b5-a18c-90910a5d99de",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d7bad3a2-902e-4445-b39c-8fa271608c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c97f20f-3186-42be-8c27-0ec2df29422f",
        "cursor": {
          "ref": "f7b0a97e-3b6d-47bb-96a9-7fa5ad06376d",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bb709259-ccfb-4abd-b9ed-dd1d20a114fa"
        },
        "item": {
          "id": "3c97f20f-3186-42be-8c27-0ec2df29422f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a12f3392-421c-4a06-bf85-a1541e969f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe536ff-3560-4aa6-8d0c-f1b55e8c4600",
        "cursor": {
          "ref": "f0932c86-ca4d-4032-951b-c7a1b4b9cc87",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1e720828-6571-4ad3-ba3a-4e27bfb3aa86"
        },
        "item": {
          "id": "4fe536ff-3560-4aa6-8d0c-f1b55e8c4600",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fd1a3b74-afd2-460e-96ac-a3e5a490ba2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21d86d9-c02b-4332-856b-f169afc8ebae",
        "cursor": {
          "ref": "6c63c452-32d2-4457-9cde-2087de3dbc59",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e94cc9dd-b8cb-4361-8eda-2767a41310c3"
        },
        "item": {
          "id": "e21d86d9-c02b-4332-856b-f169afc8ebae",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bc8a342f-ae28-480a-b020-3e9e06a855df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8568aafc-0477-486c-b8ba-f3b4036815c6",
        "cursor": {
          "ref": "d101c5b3-db1b-43db-a04b-0259b95786b1",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "354eea06-5a02-4b18-9004-c3126363fd86"
        },
        "item": {
          "id": "8568aafc-0477-486c-b8ba-f3b4036815c6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3dc7f960-3382-4135-96e6-bced2574b01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f0e116-001d-4a78-8015-7ff53833a691",
        "cursor": {
          "ref": "7dc6d86f-37af-48d4-b7b9-4bc80ac6ea08",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "48773328-8791-4b77-bc52-45343f27998a"
        },
        "item": {
          "id": "41f0e116-001d-4a78-8015-7ff53833a691",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c3569c62-b264-4fd7-8b05-a366d70bc7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4a8626-9406-41f4-acc9-cd888ea6b5f6",
        "cursor": {
          "ref": "6b1ee97a-9bb2-43c6-9c93-2c0a855a95ce",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cc50d269-4c73-448f-a20e-3648241b09a1"
        },
        "item": {
          "id": "2b4a8626-9406-41f4-acc9-cd888ea6b5f6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "abd33108-e005-4084-ba8c-0bdf0a98649d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18b102a-2883-4aed-a0dc-094454c00ebf",
        "cursor": {
          "ref": "a40b49fc-0916-42aa-9adc-22cf0833c37d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7b993d0f-6566-43cf-86c8-aa726c3e3238"
        },
        "item": {
          "id": "b18b102a-2883-4aed-a0dc-094454c00ebf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "75751533-882d-4440-98d8-91e23cd09189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647147ce-54f3-4513-b454-b24ae4f938da",
        "cursor": {
          "ref": "bedeeb4f-5c31-48a8-82eb-c12bc82a5fc2",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a004d217-24d4-4cca-8ecc-4731533ba6f9"
        },
        "item": {
          "id": "647147ce-54f3-4513-b454-b24ae4f938da",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5b8ba1c3-cde7-4f51-803d-fdf69c8a04a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9ac500-8d5d-4008-8c48-7c9e8d7349cf",
        "cursor": {
          "ref": "ba9b70ba-e8e5-4a0b-90bc-3f8fb6f9a41a",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c703cc9f-519a-4e56-834d-359e8dc9ef0e"
        },
        "item": {
          "id": "4f9ac500-8d5d-4008-8c48-7c9e8d7349cf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ea8c3837-68f7-4c16-9339-76da97517825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78985ca3-9874-404b-a401-8ffbf7007abd",
        "cursor": {
          "ref": "b2fdfba1-9f8e-45c9-8a03-f222a700477a",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "642b707a-030d-4a63-962b-eb459fb4a5a2"
        },
        "item": {
          "id": "78985ca3-9874-404b-a401-8ffbf7007abd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b94a7a50-7231-479c-9075-e157e21e92a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea294aaa-16ac-4fa8-975f-aa27514cf2e6",
        "cursor": {
          "ref": "c9647896-8ab9-468e-889b-5784af7aeec7",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a30d4a29-2630-4774-aadc-b10c9d7923eb"
        },
        "item": {
          "id": "ea294aaa-16ac-4fa8-975f-aa27514cf2e6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9a503cd5-1b7c-4121-9bf8-edf91e8d4983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d970cd05-e21c-4d6a-8e01-ae1bdfce7252",
        "cursor": {
          "ref": "b7087ffd-ba1c-46c6-a14f-848b4055da42",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fe0faa2b-d282-4629-ae61-40e50a84bd51"
        },
        "item": {
          "id": "d970cd05-e21c-4d6a-8e01-ae1bdfce7252",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1c1f2fd5-01fa-4ed6-aba3-355b1bd09827",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139dcd95-5f3f-4546-b285-5c8912b102a2",
        "cursor": {
          "ref": "69fd00cb-aa31-495a-8552-e9874ba5f521",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "de23c77c-92ea-40c9-b6fd-b0e4060ce5d3"
        },
        "item": {
          "id": "139dcd95-5f3f-4546-b285-5c8912b102a2",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c365ba71-535a-4565-8518-a1f280e45b5a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 220,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152124cd-134e-4c06-ad04-bc1a86b048e4",
        "cursor": {
          "ref": "223610ee-2421-46fc-b2d1-024ed72a64b2",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b011ced7-3561-445c-ac7a-0f64f5ac67aa"
        },
        "item": {
          "id": "152124cd-134e-4c06-ad04-bc1a86b048e4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3e132d2e-182b-40c0-830f-825ab1f652d9",
          "status": "Created",
          "code": 201,
          "responseTime": 95,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df527c3-2de4-49d7-bea5-bb294db629d7",
        "cursor": {
          "ref": "eaf7b412-0279-45ae-9d26-1cc956d1af30",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c3ccde71-066a-48a3-b69b-0aa85422f598"
        },
        "item": {
          "id": "6df527c3-2de4-49d7-bea5-bb294db629d7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6fe287ff-6062-4ecd-8b5b-2334d73d6718",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e645fc-aa78-4aa4-9244-f9d257043c72",
        "cursor": {
          "ref": "48eefd39-97ef-4cce-a846-51aaa5e63016",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cb6048af-b0b1-4a05-b6ed-77ca3c61addd"
        },
        "item": {
          "id": "26e645fc-aa78-4aa4-9244-f9d257043c72",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "98833ac9-6138-44c1-b10a-74e15c6fbd53",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8930aa63-d4c5-419e-bfe5-53c4a2ec103e",
        "cursor": {
          "ref": "cd786842-cbac-41c8-9dc2-52aa1298a159",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "afc193c8-1424-483e-99b9-74d67de18830"
        },
        "item": {
          "id": "8930aa63-d4c5-419e-bfe5-53c4a2ec103e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cbe7043e-6333-446f-9488-7f5c679c1084",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8695da-7649-4631-8b73-a2a48739862f",
        "cursor": {
          "ref": "df0a9ab1-fd37-40a7-9d87-0862f2e464e0",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "427622e7-f676-4418-a0eb-9c21b29226bc"
        },
        "item": {
          "id": "9c8695da-7649-4631-8b73-a2a48739862f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3d54af1e-cf5b-486a-83a1-a428af82fc96",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efb1efb-9895-46b5-85b5-3922ee2be00f",
        "cursor": {
          "ref": "e9f21a88-f086-4474-9627-ae3d677e15b8",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c96ded89-543b-49db-9c07-dc3dfafc349e"
        },
        "item": {
          "id": "8efb1efb-9895-46b5-85b5-3922ee2be00f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ece69ae0-68cd-4ab4-8c27-0256cece91ee",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9b8a3f-c348-4287-90cd-fdb23757892d",
        "cursor": {
          "ref": "13342ed8-9974-4267-9601-763d6d167773",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "08064da4-3ae4-4fcc-bad1-e7ed29ea0276"
        },
        "item": {
          "id": "4e9b8a3f-c348-4287-90cd-fdb23757892d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "60bf5590-3e17-45d0-a325-6b25774cdf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9b8a3f-c348-4287-90cd-fdb23757892d",
        "cursor": {
          "ref": "13342ed8-9974-4267-9601-763d6d167773",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "08064da4-3ae4-4fcc-bad1-e7ed29ea0276"
        },
        "item": {
          "id": "4e9b8a3f-c348-4287-90cd-fdb23757892d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "60bf5590-3e17-45d0-a325-6b25774cdf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666c1a47-bcbf-4c3d-85d3-00a394d41d40",
        "cursor": {
          "ref": "6ef563e6-44f5-4b05-8886-c990a60ff215",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6ea05228-e158-4e27-a778-5e4772d945b8"
        },
        "item": {
          "id": "666c1a47-bcbf-4c3d-85d3-00a394d41d40",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ecb08e0f-ca18-4a09-9525-ca6f00938684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe26e6c6-7e29-4a68-9242-35ffc285153d",
        "cursor": {
          "ref": "e88bf2ce-e50e-4ea0-a25b-d861da8b2151",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7a7c2601-d627-4ee5-9cf5-241b58a9f68b"
        },
        "item": {
          "id": "fe26e6c6-7e29-4a68-9242-35ffc285153d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dfe16f39-fb35-41d7-82d8-f1dc550b8a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aebdfc1-1cee-4152-bec9-9de0a6804716",
        "cursor": {
          "ref": "20a18149-3898-4e1c-a377-95b9601fef82",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "db06dbb7-f9d7-4a09-8814-78fed5a7819b"
        },
        "item": {
          "id": "3aebdfc1-1cee-4152-bec9-9de0a6804716",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cfd3878b-74cc-406c-b05e-4faa01a471bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a8c5bd-850f-4321-bd0e-0ca2be9ebc42",
        "cursor": {
          "ref": "32153d7d-2073-4a54-83ea-677fb5014591",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "21acdff6-75b9-4433-92db-48c1234144bb"
        },
        "item": {
          "id": "50a8c5bd-850f-4321-bd0e-0ca2be9ebc42",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e7922f66-374a-4d3e-a34e-2e4d520271d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5310aaa-4bfc-42d9-bbe0-82cc1bc4037f",
        "cursor": {
          "ref": "4830a61b-2da2-43e4-a94f-79d24f47f775",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "48452432-fa67-4f6e-8e02-f5349afd0570"
        },
        "item": {
          "id": "a5310aaa-4bfc-42d9-bbe0-82cc1bc4037f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0ac7b929-5343-40f1-a2cf-4457182dc380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce81008-d282-4f61-a4df-192a7656a0c6",
        "cursor": {
          "ref": "87787892-3e27-4817-97a2-1ff2807734ae",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cc8d58fe-eb5c-4c29-b3c4-28d3f7f87f60"
        },
        "item": {
          "id": "8ce81008-d282-4f61-a4df-192a7656a0c6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6b45e560-a9c4-4df2-8501-32a5263f218e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd476717-76cf-4766-bc16-7ec696b85aaa",
        "cursor": {
          "ref": "fd661f18-d1d1-4646-b999-c3e61c8e79b8",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e2decb1b-058d-4cc7-a18f-84bdb8635fbb"
        },
        "item": {
          "id": "bd476717-76cf-4766-bc16-7ec696b85aaa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a8690e81-fe72-4804-985a-5434184d708a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c48f5f5-fcf9-4fcf-909c-81172f6655cf",
        "cursor": {
          "ref": "4c339eb6-c1cb-4ffa-bd3a-970829250771",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4578cdc3-73c0-4269-9b3f-ef1e03e3f369"
        },
        "item": {
          "id": "5c48f5f5-fcf9-4fcf-909c-81172f6655cf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4453199e-ee7a-444f-a42b-5dff60421ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d73effb-fae9-4b6c-883c-1a79996332ff",
        "cursor": {
          "ref": "57aefb31-d9cd-48ba-863c-2b097555441d",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2f9dd9d1-a3c5-443d-8df2-3845f2e852a9"
        },
        "item": {
          "id": "8d73effb-fae9-4b6c-883c-1a79996332ff",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "69be0614-e842-443a-92a9-9eabf102fe52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaae21e-452c-41ad-9ee1-28099e5e35f1",
        "cursor": {
          "ref": "96752de1-995a-4a2d-9eda-be91aa3c4fc8",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ecb196dc-a6c5-424a-9033-3a10ff9396be"
        },
        "item": {
          "id": "caaae21e-452c-41ad-9ee1-28099e5e35f1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2b896db9-78eb-4a30-9c63-0209bab0e600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee71b608-0c49-4d70-99c8-c20c7e4e6f19",
        "cursor": {
          "ref": "ba9c5657-d2c0-446b-8448-131b384f5353",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cef323f0-0437-4334-be75-80d576173a46"
        },
        "item": {
          "id": "ee71b608-0c49-4d70-99c8-c20c7e4e6f19",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a0cf4c44-9b6a-46db-a119-84ef28cf2d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571113b2-1083-4e40-ab70-1a83b0fcb668",
        "cursor": {
          "ref": "5d751c9b-29fe-4228-8684-a59919aa37be",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "572a5072-16c2-487f-8607-2362504ecf1a"
        },
        "item": {
          "id": "571113b2-1083-4e40-ab70-1a83b0fcb668",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4c61f12a-1a39-4f98-b812-91ec1743214b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e5f22e-5841-4d14-b649-3ec01c50869e",
        "cursor": {
          "ref": "cd0ea186-de79-41ff-b62b-06fd9f228a8f",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2d8d0d66-1a0b-4f5c-9fc8-e9949de23180"
        },
        "item": {
          "id": "30e5f22e-5841-4d14-b649-3ec01c50869e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bbf79714-c13d-455f-adea-a067ad6a30f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbeb624-b6db-4e5f-ba04-6354084046d9",
        "cursor": {
          "ref": "6f1a7d9d-5877-41bc-82e8-038639535017",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d294bd77-a5d3-4175-bded-dc73dbbda5cf"
        },
        "item": {
          "id": "7bbeb624-b6db-4e5f-ba04-6354084046d9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ef1b8599-9267-43df-b171-d44a067dabec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772c8203-f76b-4f3f-8063-26c4accd4dcf",
        "cursor": {
          "ref": "b099dde0-07f6-4265-aa65-c7b6e50a563f",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bc52aa81-c239-4a7f-8420-b26864063132"
        },
        "item": {
          "id": "772c8203-f76b-4f3f-8063-26c4accd4dcf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6e6690fc-96c3-4d7d-b72f-ffb48f742981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54c97e1-06c9-41b3-ab15-f478d91b685c",
        "cursor": {
          "ref": "b7b3850b-eb91-4681-9932-7b550abbe704",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e9ee3752-e956-4a60-89be-f6a004cd9587"
        },
        "item": {
          "id": "d54c97e1-06c9-41b3-ab15-f478d91b685c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1ef51756-6e37-4f47-b26e-095255a56653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15606f20-f8b6-461d-996e-28558744e722",
        "cursor": {
          "ref": "2ed6ce60-5217-492b-87c4-437cdc62e515",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "400c8d6e-daf5-489e-8edb-85a29fdacb26"
        },
        "item": {
          "id": "15606f20-f8b6-461d-996e-28558744e722",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "40096812-93f6-410d-8c3b-e75b9bee104d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689e979d-46e1-4a36-96f8-711cc8b57166",
        "cursor": {
          "ref": "09f78fb1-df8c-490a-b903-b549b579ef5e",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "47b798ee-9314-4be5-b1a0-c9594aa26bf9"
        },
        "item": {
          "id": "689e979d-46e1-4a36-96f8-711cc8b57166",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3cd4da59-3393-4108-b276-df5c625567b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3421e68-692c-4119-8a83-aed9dff044f4",
        "cursor": {
          "ref": "f62633f8-5802-4806-9cfc-1a04d1248c0a",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9c9c3f91-4058-4d30-a185-b39cbf7b0c80"
        },
        "item": {
          "id": "a3421e68-692c-4119-8a83-aed9dff044f4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "117df291-79b4-40fe-92a4-d81270fa7a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25c3088-6ca7-43d3-97ea-f5c794eb0bb7",
        "cursor": {
          "ref": "94d42541-8049-4bcd-8a54-4ad727878163",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7b3ec665-7c48-4f11-8a26-b6c2a5666a23"
        },
        "item": {
          "id": "b25c3088-6ca7-43d3-97ea-f5c794eb0bb7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ef0dc025-6ba9-43ff-ab26-a686521aef0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b171008d-bc51-4e69-a5c8-b792ed7bb697",
        "cursor": {
          "ref": "ad35f4ec-f597-4a73-b07d-bc7251608577",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3cafb876-6ecb-4da6-ac50-94f9c72323c3"
        },
        "item": {
          "id": "b171008d-bc51-4e69-a5c8-b792ed7bb697",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "523cca69-f648-4e28-a345-fe57c5cecfea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ea865b-8e6a-4665-8548-b1ab2c1f8e65",
        "cursor": {
          "ref": "89490c84-7c4f-4967-9af6-6872bc888d7f",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c384cbda-ba62-422d-a297-9536806c1aae"
        },
        "item": {
          "id": "22ea865b-8e6a-4665-8548-b1ab2c1f8e65",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7d6f135d-1f7e-41b6-8e3d-d3ea2534b85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd28ade-bbcf-4492-aa01-ad4391f94d4f",
        "cursor": {
          "ref": "37edc0e6-c75a-4996-b672-137da1b58f98",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3dbcd48c-b48c-40a1-9f38-020b28e3485b"
        },
        "item": {
          "id": "7dd28ade-bbcf-4492-aa01-ad4391f94d4f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f8c30b95-82a8-4c67-86b1-d5bc17db5ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a6daa3-e917-4f69-82cc-b1baf94fe03c",
        "cursor": {
          "ref": "c40ea4d3-0275-46e7-b919-d18ef9312026",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8dadbd45-db2f-4eea-9455-ed18d8112c38"
        },
        "item": {
          "id": "e2a6daa3-e917-4f69-82cc-b1baf94fe03c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "36e1f0de-a369-46c3-bb77-fb7de8306b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d685084-4cf3-4e6e-992a-8846f624f804",
        "cursor": {
          "ref": "078413c0-acd8-4fc5-af02-da0e383dd3f8",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "092cc308-0143-4141-9749-eab7c5a7f35e"
        },
        "item": {
          "id": "7d685084-4cf3-4e6e-992a-8846f624f804",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0cfd3ae0-de97-41fe-ac0e-357da0bc8e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c3045a-9fda-47c9-9450-fa740dc31d41",
        "cursor": {
          "ref": "cac1dd4d-1d1b-49f0-add0-4ae758fb01c1",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "85856a9d-6e62-4bf6-ad75-eaf63f4e07b0"
        },
        "item": {
          "id": "54c3045a-9fda-47c9-9450-fa740dc31d41",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "37886897-2679-4b76-946b-36463821afa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e562890f-ae3a-47b0-be22-e005f9428165",
        "cursor": {
          "ref": "27c3073b-5c6e-4abe-a2c4-b14b2e5343a9",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "34cebcdf-c7ec-4ba9-9ca1-745bd9967e08"
        },
        "item": {
          "id": "e562890f-ae3a-47b0-be22-e005f9428165",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8a0234b2-e3ae-4d81-9f44-fe976437458a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d41f717-01b8-443a-ac68-ef5071c4f8a3",
        "cursor": {
          "ref": "61587f21-ffa5-4b6e-8815-fc347bdc66d2",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "30083d77-3e45-4680-9590-53ccce855e49"
        },
        "item": {
          "id": "9d41f717-01b8-443a-ac68-ef5071c4f8a3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1dbceb2e-f730-4357-894a-66e59391b2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90521b9e-0eda-48d1-a942-c540ac9062c1",
        "cursor": {
          "ref": "0940a117-ea27-4d99-92c9-5f05791f9cf9",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4b33b3dc-aede-405d-b086-a7da7e680b1c"
        },
        "item": {
          "id": "90521b9e-0eda-48d1-a942-c540ac9062c1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d78237ed-e36a-41cf-884b-f2a7d48e9c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb480237-5234-40e5-b47c-3a618cd404de",
        "cursor": {
          "ref": "92e12e79-e3ad-4e65-ac8d-2945a542e9fd",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0df5282f-5f5b-4644-aad0-a267aa8d2db4"
        },
        "item": {
          "id": "fb480237-5234-40e5-b47c-3a618cd404de",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "173e4951-42cd-46ba-89d2-b5e6d600a17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c980be-b955-4cdf-8c69-fb70b54aafd0",
        "cursor": {
          "ref": "3ba023e0-1d7d-492c-9bd6-f253e21d286b",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a9fcf063-a02f-419a-b997-8b31cc01f2ff"
        },
        "item": {
          "id": "e7c980be-b955-4cdf-8c69-fb70b54aafd0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "410706a5-ddc5-4f77-9bc9-ed575d08066d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296866f9-decb-42a1-873c-c0b8c1ee612a",
        "cursor": {
          "ref": "e30df4b1-af22-4c8d-ac73-645f54da2758",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "62c32c8c-1ccb-4400-bf89-95fc88a5a164"
        },
        "item": {
          "id": "296866f9-decb-42a1-873c-c0b8c1ee612a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a4833adc-9a0d-480f-ab66-124a1be930cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcde037-c533-4682-bd4a-6552231895ef",
        "cursor": {
          "ref": "6eeade36-c67e-488f-a115-0c9644281325",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dffd78cb-f317-4794-ba8a-d143f5d45285"
        },
        "item": {
          "id": "9fcde037-c533-4682-bd4a-6552231895ef",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ead8017a-a1c1-4c95-811a-44f7d262d165",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc713ce-cb85-4d70-a1ac-a1e11bcb6f36",
        "cursor": {
          "ref": "5d4ef6de-7788-4bfe-8f48-b25929a5be58",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7efb288a-8796-4019-a343-1a30db2b15a9"
        },
        "item": {
          "id": "5dc713ce-cb85-4d70-a1ac-a1e11bcb6f36",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "55f7c09d-c1a5-44b9-9109-c458afd8839c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc713ce-cb85-4d70-a1ac-a1e11bcb6f36",
        "cursor": {
          "ref": "5d4ef6de-7788-4bfe-8f48-b25929a5be58",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7efb288a-8796-4019-a343-1a30db2b15a9"
        },
        "item": {
          "id": "5dc713ce-cb85-4d70-a1ac-a1e11bcb6f36",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "55f7c09d-c1a5-44b9-9109-c458afd8839c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e621fa-c083-42d7-a119-66bd0282310f",
        "cursor": {
          "ref": "79ed9332-009e-4d53-8618-1357e985ce2e",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bdba7e70-d04d-4fc8-b6ce-273d845dd161"
        },
        "item": {
          "id": "e8e621fa-c083-42d7-a119-66bd0282310f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "adad4b24-4725-417a-9341-660a3ffbfdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c821dac-a204-422c-953b-634fdbeeb888",
        "cursor": {
          "ref": "51c051cf-899b-491f-91f4-b5dfde7d5c06",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "67c3a065-1fe7-46b4-8bec-d1ff02107a9f"
        },
        "item": {
          "id": "5c821dac-a204-422c-953b-634fdbeeb888",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b08da553-f366-45e2-b30c-882a0e679ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e362490-0c13-4ca4-bc12-e9c3d8eb0185",
        "cursor": {
          "ref": "c5ac731d-7dd7-4b7c-a8a5-dbf07c989614",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "069a439a-4e03-4bc5-86a9-0598bfb5b00b"
        },
        "item": {
          "id": "5e362490-0c13-4ca4-bc12-e9c3d8eb0185",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7fc48fec-ee3c-48c2-9845-c99ebf132ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f31ede-10c5-442b-8e6f-5fb8762fc3e3",
        "cursor": {
          "ref": "857722e0-ce05-4022-b4e0-b8b43196bf8c",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "391cf916-2f5e-4644-8dbe-d0c0a5c33dc6"
        },
        "item": {
          "id": "e3f31ede-10c5-442b-8e6f-5fb8762fc3e3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "085890a3-a62b-4d0c-93f6-62c59e8cdaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0cd98c-79ce-403d-b999-9a0c1b8de9ef",
        "cursor": {
          "ref": "9971aa37-821f-4e86-84f5-9bb9eba11346",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f6b289bc-799a-4567-80ba-074ebe2dca7f"
        },
        "item": {
          "id": "da0cd98c-79ce-403d-b999-9a0c1b8de9ef",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c09dd615-6bc2-413c-8a50-c3593a1744e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f5e633-81ff-455a-92db-74790fcffd3a",
        "cursor": {
          "ref": "a6aa4928-e6dd-4534-9d68-825099392039",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cc9d819b-791b-421d-b38d-ba04b4056ab9"
        },
        "item": {
          "id": "d6f5e633-81ff-455a-92db-74790fcffd3a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "925627eb-3070-470d-a488-ce97c0d74eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c841e8f3-68e3-4c92-8bab-9b434440a79f",
        "cursor": {
          "ref": "5bc87e14-ff8e-4c2a-b147-c36eb7c4fa60",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9e2d700d-24ac-4254-b600-1071e2645382"
        },
        "item": {
          "id": "c841e8f3-68e3-4c92-8bab-9b434440a79f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d7e476b9-b813-473a-bd0e-f2f5bee00235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ca4b15-24a7-48d1-a7ee-2dce3c1ce5de",
        "cursor": {
          "ref": "264d937a-c33f-40dc-bbae-df558ac65d10",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "532f989d-f930-48b1-aae8-b622a05344b6"
        },
        "item": {
          "id": "f2ca4b15-24a7-48d1-a7ee-2dce3c1ce5de",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1a6320aa-191c-4b8a-96d9-64798a97ec82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d17c2a-3dc2-4222-8585-bb2416b3e481",
        "cursor": {
          "ref": "566a752f-8dcb-420c-9506-4949a7cf746c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9dcafd27-59bd-40b7-82e0-f3a7bc123633"
        },
        "item": {
          "id": "c5d17c2a-3dc2-4222-8585-bb2416b3e481",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c02d73e0-32bb-466a-a817-bcb80b160364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a171ae-9518-4d14-a22a-99820793d478",
        "cursor": {
          "ref": "2b764fb9-1777-4e32-b835-e14a6328c9d4",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e38315e4-62f1-4ad4-8e89-8c442577e74c"
        },
        "item": {
          "id": "04a171ae-9518-4d14-a22a-99820793d478",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "371ea6a7-045d-4b09-9dd0-ce4938510a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3f66d9-f63f-41d8-bca4-f443ce539410",
        "cursor": {
          "ref": "fc25aefb-4ebf-4509-bce6-b905928e75ce",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "02dbee11-6f9a-4e94-92ff-e90affce977f"
        },
        "item": {
          "id": "ee3f66d9-f63f-41d8-bca4-f443ce539410",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "501972a9-5365-489e-8245-6f59f107f5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9228a0d4-e8e2-4bcf-8304-c59058c53080",
        "cursor": {
          "ref": "5cb85c0f-a754-499c-83da-7c7b35ef2714",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c57ed525-44c1-467b-a9d8-745146c3494d"
        },
        "item": {
          "id": "9228a0d4-e8e2-4bcf-8304-c59058c53080",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c4036a11-e887-4f04-864e-58e38f348fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2001f11-c348-48b6-8e30-351d20bd87fe",
        "cursor": {
          "ref": "ce38aa7f-8dc1-45c6-a7b2-a301ba7a1726",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9f270ce9-6ee2-4c2b-8f39-aa9a213b8784"
        },
        "item": {
          "id": "c2001f11-c348-48b6-8e30-351d20bd87fe",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e5b5224d-7572-4ee3-8c4b-3dcbf176d5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0af7604-e5ab-461d-a242-e4397a0bba89",
        "cursor": {
          "ref": "98e72710-cab9-4e35-a592-85579625366c",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "038b685c-be09-4209-929c-7aa1aafe6f06"
        },
        "item": {
          "id": "e0af7604-e5ab-461d-a242-e4397a0bba89",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "38aa1705-c516-41ad-a390-a51048434663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e6f25c-1605-453b-8daf-5fecaa852499",
        "cursor": {
          "ref": "01d94197-b52f-43b8-82b5-0af1d3c6de9e",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "44682f1b-fa25-4bf3-a392-dccdc19d41ff"
        },
        "item": {
          "id": "09e6f25c-1605-453b-8daf-5fecaa852499",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "02839c91-0e1b-4b4b-93c1-c2a7a24554a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85858fbe-79ed-481f-b2e8-ee476f32169e",
        "cursor": {
          "ref": "4e6f2a1c-23df-465b-89e9-065cdbbfd143",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bc8cad3a-da6b-4d6e-82d2-12fbed5bce8c"
        },
        "item": {
          "id": "85858fbe-79ed-481f-b2e8-ee476f32169e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a2cf5e3c-5e54-4bdd-8ace-324a958f06fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431bcfa0-e3fc-4c3f-830b-8556671d6872",
        "cursor": {
          "ref": "1b26232e-d1d5-4ebd-affe-5d6069f512dd",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1d329e73-c9af-4bc4-9d82-b9a9cf68dc50"
        },
        "item": {
          "id": "431bcfa0-e3fc-4c3f-830b-8556671d6872",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ecc6ee7f-2eb5-4ad2-8557-574086161191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de9e021-3116-4bc6-ab27-9d0eebe61be9",
        "cursor": {
          "ref": "7008f750-96d4-4543-81e8-64312a0aac45",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0c998d04-ee5c-413b-8ae8-0bece2c66110"
        },
        "item": {
          "id": "3de9e021-3116-4bc6-ab27-9d0eebe61be9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7a2d701e-7794-44aa-87b8-17a089995e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8a6342-cf98-4e16-8d42-22c6db2256f6",
        "cursor": {
          "ref": "0bb10629-b1a0-41e7-9efa-05546c6493a5",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cdb99d51-2cd0-49cc-9bd2-b60c2ef2efb0"
        },
        "item": {
          "id": "ab8a6342-cf98-4e16-8d42-22c6db2256f6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "66d6e493-bec2-4430-a6a3-5c6fbb622669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1676b59-4960-4107-99f9-30494b6c5d0a",
        "cursor": {
          "ref": "2229cd12-f6ff-4989-a404-f4a9abc247e0",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6e7ea7ae-7ea3-4fa5-857f-b61856c9bd4d"
        },
        "item": {
          "id": "d1676b59-4960-4107-99f9-30494b6c5d0a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8f22a7ce-74e2-4e6f-9ae6-1cefb323cb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b883b5-8fe2-4884-9b62-b6fad1997322",
        "cursor": {
          "ref": "0fd362ec-8015-4457-bf64-e70322419ed5",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fc8b08a7-cb81-442b-9a23-f6dd7c4e8d5b"
        },
        "item": {
          "id": "05b883b5-8fe2-4884-9b62-b6fad1997322",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7db80dab-6fc8-4357-9350-be2118bf28ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79cabe5-9460-41ab-9135-45d0045dd2d4",
        "cursor": {
          "ref": "d0491e3c-ffe3-4ce8-a929-3161cee00236",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "20301e6e-5857-451b-92a9-76b604c4336c"
        },
        "item": {
          "id": "f79cabe5-9460-41ab-9135-45d0045dd2d4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fcf8e4c1-428e-4b42-b5dd-6a095fb816c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da73f5f7-3f90-4ea3-b5e4-091c6c93ffcd",
        "cursor": {
          "ref": "849e903c-090e-4920-a91b-b506ae71db19",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "61f6128a-82b6-4afe-8408-002b4e9d033b"
        },
        "item": {
          "id": "da73f5f7-3f90-4ea3-b5e4-091c6c93ffcd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "abe4de63-8f80-473c-8752-dfff2c5befda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a850d96-f900-4aeb-b116-7d0388b59176",
        "cursor": {
          "ref": "cb4c4422-75e4-4e87-afc7-74f1d98559ae",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "81a79e99-436d-4716-9ecc-a07ab386d3de"
        },
        "item": {
          "id": "1a850d96-f900-4aeb-b116-7d0388b59176",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "10762fe6-d6f3-4d8a-8946-ed273f98820f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0428472-8aa4-4e72-9a78-2864626199fb",
        "cursor": {
          "ref": "69a65dfa-572c-4e35-90cc-2ba4e24a0383",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1c1b855b-ca26-4797-8f1f-5241f64425e1"
        },
        "item": {
          "id": "f0428472-8aa4-4e72-9a78-2864626199fb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b127a117-28b4-48bc-9841-ed9da54cf8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d546d47-4f7f-4db4-8b3d-bb58df796bd5",
        "cursor": {
          "ref": "037cd115-9e6a-436d-bb1c-bf4688bf1071",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2066e1c6-ca36-46a3-a823-69185e7f8677"
        },
        "item": {
          "id": "2d546d47-4f7f-4db4-8b3d-bb58df796bd5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c79bd251-1e30-40fe-84c5-92a1b392234a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2117e4-6c62-49e8-833e-d417b9eb01a7",
        "cursor": {
          "ref": "028d8c0a-7c65-44d9-a852-3a9c37558997",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7e31c320-d6bd-411d-9d76-d9062c363be7"
        },
        "item": {
          "id": "bd2117e4-6c62-49e8-833e-d417b9eb01a7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "946692ea-d9fa-4eb2-a7ee-0a837967bea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d24b759-ebd8-4bfe-8949-421fc1ed55f9",
        "cursor": {
          "ref": "846881f0-6b8a-46a5-9ffc-63cd2a0faf08",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "80da203e-ba46-411b-bdc9-a661b8ac50f9"
        },
        "item": {
          "id": "6d24b759-ebd8-4bfe-8949-421fc1ed55f9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4fd5d936-fef2-4de9-9296-ab0f8f353de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dda1d4-6cf7-4633-8063-42b252d67ad7",
        "cursor": {
          "ref": "0407ec18-df60-4fce-b16f-bf2235bb9018",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bc1dc4fe-7c8a-4813-899b-4a5d08dbb792"
        },
        "item": {
          "id": "24dda1d4-6cf7-4633-8063-42b252d67ad7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "05c9cca3-5f8c-4b8d-9e91-1a8d6d722d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a85efd1-ef84-4b6c-864e-3389dfeb6090",
        "cursor": {
          "ref": "e1837de2-bd28-4d89-823e-83c528e0f54f",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "af794e12-1a9c-4507-97d1-de54060e9126"
        },
        "item": {
          "id": "6a85efd1-ef84-4b6c-864e-3389dfeb6090",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "af075aa1-4557-4236-adb8-06735d7c907b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502f83b4-94d2-4259-9e5e-10084776605f",
        "cursor": {
          "ref": "e44c4cc1-26f9-4f81-a11a-2acf464fd9de",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2b4ecb69-ddd8-496a-9e22-1c13ab2e7521"
        },
        "item": {
          "id": "502f83b4-94d2-4259-9e5e-10084776605f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4cd8a23a-98dd-418d-ae1c-a78ef00778e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10c8cf6-7383-446a-a7b6-2491b99b11e3",
        "cursor": {
          "ref": "79c13fa4-1bf3-4c8a-92fb-97f3cd4a5eb1",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c892d793-a60c-4721-add0-663dc4bf16bb"
        },
        "item": {
          "id": "c10c8cf6-7383-446a-a7b6-2491b99b11e3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "33105264-5886-408a-a8d3-5c2705f1b8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb47092-648c-4b69-93fd-f5cf870db91a",
        "cursor": {
          "ref": "54525619-5a12-4f80-9585-88d80074f607",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4b7ec7ee-2500-4460-9202-a909e96114fd"
        },
        "item": {
          "id": "acb47092-648c-4b69-93fd-f5cf870db91a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c4647de5-406c-41b9-80e4-c61987ec4c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483b3986-83e8-4ebf-a625-203814a64738",
        "cursor": {
          "ref": "094f4ac5-9c91-49f4-8d45-eb6a44f60bc9",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "81cc5525-5d32-4034-8810-c0fae18de0d2"
        },
        "item": {
          "id": "483b3986-83e8-4ebf-a625-203814a64738",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "800e574f-c4e6-4b0a-b26d-cd95d17a4ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f5d696-a0f2-4031-977c-86ca2a098582",
        "cursor": {
          "ref": "5bc8a5fb-ddbb-417b-8e7a-acd7d4c41ec8",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3c7031cc-96a8-4324-872c-d0d9932084ab"
        },
        "item": {
          "id": "a6f5d696-a0f2-4031-977c-86ca2a098582",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9358845f-b93f-4ba5-88b7-2a084439da62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df675fc2-8883-4f84-9f19-342a4264395d",
        "cursor": {
          "ref": "276c31ac-d194-431d-b745-4493b7fd8ded",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d73be850-4042-42ce-a97b-4bce05451de7"
        },
        "item": {
          "id": "df675fc2-8883-4f84-9f19-342a4264395d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ba59c06f-8fe2-47df-a6e3-14851cf3cc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2e64ef-2c10-4c1f-9125-fb8716ea6976",
        "cursor": {
          "ref": "ffae0f6f-2c31-4de7-a18b-50333d6529b9",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "47396c98-3f1c-4ec5-9694-f3f2501cc48b"
        },
        "item": {
          "id": "ad2e64ef-2c10-4c1f-9125-fb8716ea6976",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2d1bb400-775b-481a-8ae6-b9a97a6447eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62ba9e5-b107-4652-a504-357990b98c0e",
        "cursor": {
          "ref": "e69fb5c7-1ad2-4710-92f1-2dbd2c839b87",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "818fd216-b660-4ad4-a2d1-043f4694f445"
        },
        "item": {
          "id": "d62ba9e5-b107-4652-a504-357990b98c0e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e509da6a-d7aa-4a75-bbbe-6732d3868e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe37d37c-1dd2-4fc5-9682-582ae6496e7c",
        "cursor": {
          "ref": "8c8b1988-2c67-4eca-b223-cbc6969b92b7",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4b448acf-5cf4-4d4b-974c-d11379393ce2"
        },
        "item": {
          "id": "fe37d37c-1dd2-4fc5-9682-582ae6496e7c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "733055e2-7301-4db8-9bb3-08f2d322e8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42eb71b9-95a3-4d96-863e-cb1ca5f03819",
        "cursor": {
          "ref": "38a370d7-3fe7-429a-9124-0383823057a9",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5822469a-4516-4067-b7a8-1a4fc2a23b16"
        },
        "item": {
          "id": "42eb71b9-95a3-4d96-863e-cb1ca5f03819",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "84e49186-5d49-4ab7-9fe9-c43e48741d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5076d36a-5d61-4206-a49e-8f3330512912",
        "cursor": {
          "ref": "30680536-6a76-40b6-9ff3-7318777519a7",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ad922977-c75d-453d-8b90-62f1679c8186"
        },
        "item": {
          "id": "5076d36a-5d61-4206-a49e-8f3330512912",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "41d2ac31-a105-4c84-808b-f434217ac531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791130c2-8c60-4516-bfa0-60a83c2d8090",
        "cursor": {
          "ref": "cc104942-2ada-4196-8e14-05b701cbf013",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "44a7a055-ee21-4dd3-b44a-1681c574c062"
        },
        "item": {
          "id": "791130c2-8c60-4516-bfa0-60a83c2d8090",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2f564f30-85d8-4e31-a970-dac6d3bbac92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7b8cd1-05fc-4b63-9582-016a11b23488",
        "cursor": {
          "ref": "01c6b530-3b78-4447-b627-9d408f89b870",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "93bb974b-5f96-4d0f-ac05-22c39a3eabd0"
        },
        "item": {
          "id": "df7b8cd1-05fc-4b63-9582-016a11b23488",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "764c846a-7c36-4f0a-a951-75f0cddb45d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889eebaa-c2be-437b-b8bc-db1f6658d396",
        "cursor": {
          "ref": "124d8993-c584-4495-89d7-cd5b722188c3",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "014cc972-9472-4864-9edb-10be71f98c88"
        },
        "item": {
          "id": "889eebaa-c2be-437b-b8bc-db1f6658d396",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "11a58905-7233-4e1f-90c5-423b8b44ccd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e229da21-76f8-4291-8c16-39f64f4f92a2",
        "cursor": {
          "ref": "75c7865a-4c86-4824-b9b6-037f2bb02373",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "56bb081c-f8b5-44b1-8dc9-9dbc29844061"
        },
        "item": {
          "id": "e229da21-76f8-4291-8c16-39f64f4f92a2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "25ece778-5068-4242-bc97-d917844dbd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff83d953-2c9e-4713-90a7-005e43bc69b3",
        "cursor": {
          "ref": "4187cb41-e420-4910-ab7c-33937384e6db",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4bd6a958-fcd6-4e94-a798-a3d97631f729"
        },
        "item": {
          "id": "ff83d953-2c9e-4713-90a7-005e43bc69b3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "13bd36a3-f430-4167-bb37-7fd08651c6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45287422-65d1-4c38-91d1-6c4e0449ac10",
        "cursor": {
          "ref": "2321b128-eb2f-4fce-a14e-2cddcc3c19da",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "538fa201-897f-403b-b422-8091e56c2569"
        },
        "item": {
          "id": "45287422-65d1-4c38-91d1-6c4e0449ac10",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2f776a2a-ce3a-4bcd-997a-4114e508afc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647c5e8b-3e31-4f6c-b53d-f8d8e14f60b1",
        "cursor": {
          "ref": "b49e342c-cc01-4aac-b921-21ba93352e59",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4d76eda3-6e9a-4558-b2b4-3bca5056a2ef"
        },
        "item": {
          "id": "647c5e8b-3e31-4f6c-b53d-f8d8e14f60b1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fb628355-218a-43aa-b270-75aab6876111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c33ea9-a524-4067-95fd-7121fde9e6ec",
        "cursor": {
          "ref": "59788b2f-9b8d-4275-9502-646900e0b6f2",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b90c711b-54d7-4c24-b6a0-1789bca60e51"
        },
        "item": {
          "id": "e0c33ea9-a524-4067-95fd-7121fde9e6ec",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f834dbf3-f031-47f7-9f80-e2db596b56ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb40ebd-7937-4f0c-b036-e60b5d79c736",
        "cursor": {
          "ref": "46b0f3db-2b90-41e4-b41a-c85e05cbc7dc",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "58bc3fe8-8265-4957-a451-6379d31042ab"
        },
        "item": {
          "id": "3bb40ebd-7937-4f0c-b036-e60b5d79c736",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "86ad02fc-30be-4377-a855-6aa3510d663d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20d2ae7-d78f-4249-960e-c3c039262190",
        "cursor": {
          "ref": "db81f5e5-cc90-4bef-ae7f-bf41640866b0",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3d50031c-1ce4-4093-b03d-e90ddaedc417"
        },
        "item": {
          "id": "a20d2ae7-d78f-4249-960e-c3c039262190",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9bd0ac6d-31c3-466c-99ac-774cab1f02a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f4b7a3-1f92-483c-bad5-fad18092565c",
        "cursor": {
          "ref": "a0daece9-c48a-450d-971f-18f4f3991b9b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5fb7c387-8575-44c2-b28b-22ac691069c3"
        },
        "item": {
          "id": "c0f4b7a3-1f92-483c-bad5-fad18092565c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e4a7c51a-eb94-4dc0-bb6a-154b477e24e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81e668c-0dca-4185-a8a1-ee94d5c55585",
        "cursor": {
          "ref": "c9504c68-792b-4cb8-a428-ef3d35a9a2b2",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2cc241bb-3b06-4ed3-8ae8-b04fd09f0e2a"
        },
        "item": {
          "id": "f81e668c-0dca-4185-a8a1-ee94d5c55585",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e47735ca-4b94-436b-9e6c-5a32c3c11ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a850ade-833f-45e3-9da5-09fa41104a6b",
        "cursor": {
          "ref": "9f3313a4-91b1-4a2b-87a7-1d5ac4f70c49",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a08947ee-59e1-43f6-83f3-61dba7319c58"
        },
        "item": {
          "id": "1a850ade-833f-45e3-9da5-09fa41104a6b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0e2d675b-fe10-407f-8e59-1e56f6f62901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79827431-8d35-499c-ab67-dd0e298bc437",
        "cursor": {
          "ref": "facb4ad0-9f24-4ebe-a307-68e51ab661e7",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "01c137e0-aaf6-4749-b62e-363cf41696a2"
        },
        "item": {
          "id": "79827431-8d35-499c-ab67-dd0e298bc437",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0d2f3d64-7bea-4c3b-b770-0a625c1992dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad81c33-e798-4035-820d-13f320913d52",
        "cursor": {
          "ref": "4820591d-865d-4d58-9f73-6a93adb97dca",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "39eabee0-1d4c-433f-953e-7dc10ad85265"
        },
        "item": {
          "id": "aad81c33-e798-4035-820d-13f320913d52",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f54dc778-c5e0-4e35-aba0-1d49cd5ee9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d341928e-22e3-4c42-9d7c-50dc46cf4a76",
        "cursor": {
          "ref": "f924e5ee-f142-4b98-8c7e-1a6fe94e85f9",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cd7e180e-2e68-4881-bd54-18609889ebeb"
        },
        "item": {
          "id": "d341928e-22e3-4c42-9d7c-50dc46cf4a76",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1108cf7d-95fa-4246-a3d2-0da516d4b266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79aa293f-fce1-4669-9a73-ab1c63036752",
        "cursor": {
          "ref": "f3172bbd-ad79-42c2-8000-e7af326b5680",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c7acafca-10cc-443f-b190-c1dd1d91f624"
        },
        "item": {
          "id": "79aa293f-fce1-4669-9a73-ab1c63036752",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fdf14e4b-e126-430a-814f-c02955ddf7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd94be7-66ba-4e22-8b3e-461f9a4399ff",
        "cursor": {
          "ref": "398a04f4-7d7b-4403-a67d-0330ded90854",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3b0ae2d7-1f6f-4c81-a068-fcbd0dec27c3"
        },
        "item": {
          "id": "acd94be7-66ba-4e22-8b3e-461f9a4399ff",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fa1bf565-1a79-4e64-84f5-0719d423a104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba858fb-17c8-4f5f-9001-4f4f16bf77e1",
        "cursor": {
          "ref": "447f5335-ee07-4402-9582-975ed8522618",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2d4af105-dd8f-4077-beb7-faf4828325c8"
        },
        "item": {
          "id": "9ba858fb-17c8-4f5f-9001-4f4f16bf77e1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4be3af1a-50ec-4753-a8ab-5ffef1057091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f5bf36-d4ba-4590-8894-4b3793c0837c",
        "cursor": {
          "ref": "11075746-b199-49a8-8a3a-3740ffd3693c",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c097a77d-7633-406a-8a44-7814a74d7a8c"
        },
        "item": {
          "id": "51f5bf36-d4ba-4590-8894-4b3793c0837c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b7f7fa7d-4b45-46ae-8ee3-aea7d6b0a8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887debe0-0aa3-49ae-932b-9f4a63932ce5",
        "cursor": {
          "ref": "6f71ec1e-49a6-43d6-962e-a80402c3a04c",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6950d6f3-ac82-4098-8da2-da4b5cac88d6"
        },
        "item": {
          "id": "887debe0-0aa3-49ae-932b-9f4a63932ce5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2905aae1-7693-4e5e-91b5-ee790239fd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4da4df6-5422-4653-bd9d-a0af704123b2",
        "cursor": {
          "ref": "0d5111c0-4070-450d-828e-b7da300babfe",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2dd96e8c-581a-41d9-ad42-c020035ba8ad"
        },
        "item": {
          "id": "a4da4df6-5422-4653-bd9d-a0af704123b2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a517ad85-bef0-4d4b-a792-7f5cccbacfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff697b1-596b-4fc6-895a-2cb2a41db0bc",
        "cursor": {
          "ref": "6ac72a41-9b86-4764-9ea1-8c5e21085fd3",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7761320b-4d28-4637-95f2-494279383ebb"
        },
        "item": {
          "id": "9ff697b1-596b-4fc6-895a-2cb2a41db0bc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a2461be1-079a-485f-8f5e-4773578edc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90e806c-cc27-46db-a3b0-c48a38d621e7",
        "cursor": {
          "ref": "f3c2ccc6-7d0e-4194-83e4-1706ba897b56",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c8521992-cae3-4023-b2ad-10c0c0e69978"
        },
        "item": {
          "id": "e90e806c-cc27-46db-a3b0-c48a38d621e7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9b6aea1d-099f-4de7-a80a-301b836f76e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dfaa03-4b76-471d-999f-d7891d129434",
        "cursor": {
          "ref": "839c9a43-0a56-46ae-b17d-c6d0c33744b0",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "104cd3dc-66c1-4a4c-9808-7805f0acfd39"
        },
        "item": {
          "id": "a8dfaa03-4b76-471d-999f-d7891d129434",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7e0d5774-9911-4f11-a5a7-5ba369915279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e561f5b9-a053-4b70-810e-318e893451aa",
        "cursor": {
          "ref": "4d35d0a2-e492-4312-b265-6adb5551197b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ceacf6d2-1672-4869-aede-d456ff3327d1"
        },
        "item": {
          "id": "e561f5b9-a053-4b70-810e-318e893451aa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2575fb7e-7c09-4147-a154-5409473ca177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2cf211-bf29-4bf5-8b96-8d6a6e69fb08",
        "cursor": {
          "ref": "55e9996f-e10e-4d0b-b529-4eabef35c670",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2e620ffc-78d5-4e98-a59f-79611ad23edd"
        },
        "item": {
          "id": "5e2cf211-bf29-4bf5-8b96-8d6a6e69fb08",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "00ca4b9d-082c-432f-a014-67f68701b663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaebd7c3-3636-4ce3-85ac-3bb58aa83bcb",
        "cursor": {
          "ref": "f5a6e53f-0d6b-4e57-9e23-c605a957b084",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "72d19eab-ab9f-418b-867f-c5994228ee03"
        },
        "item": {
          "id": "aaebd7c3-3636-4ce3-85ac-3bb58aa83bcb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "381b0f55-f140-4ca1-8b3b-b42c40f66b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663649e8-6ad1-459d-ad69-91ec143c3fbd",
        "cursor": {
          "ref": "e0c639af-b614-4c1f-8480-67c408841af7",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dfa1c2fa-ad79-4175-a2dd-0c5584fce8a6"
        },
        "item": {
          "id": "663649e8-6ad1-459d-ad69-91ec143c3fbd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ac83093e-4d84-4f5d-8dbd-c32419243e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c4e2b7-f220-49de-a7dc-aaf3496f2e91",
        "cursor": {
          "ref": "082c3f0a-773e-48bd-b2c5-8ca629109187",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a347706e-e7f7-4be3-af5b-25d02372c3b9"
        },
        "item": {
          "id": "89c4e2b7-f220-49de-a7dc-aaf3496f2e91",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "11c89d4d-17f2-481a-bcb9-40dd099f03d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c46135-a06c-4e48-9430-dd2a76ef8e64",
        "cursor": {
          "ref": "6a6a06ae-abe9-467b-972b-0110b61319b6",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1c7914e3-2bae-4e4f-9b83-534029b821fd"
        },
        "item": {
          "id": "29c46135-a06c-4e48-9430-dd2a76ef8e64",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e9f254b8-7362-493e-937e-818f63f8101f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327149f9-af19-4487-9aa3-6b353d90bc2f",
        "cursor": {
          "ref": "7cf90582-e5ce-433b-b8f8-a0795c50c8c7",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "74a7c17e-c064-4dc0-888c-7e4d3c747efa"
        },
        "item": {
          "id": "327149f9-af19-4487-9aa3-6b353d90bc2f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5850e3ab-401d-4f7c-8c92-70e8a773c4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b129cf71-3e93-45ab-b075-0cf8d812580d",
        "cursor": {
          "ref": "b7341be6-8637-4771-85fb-c6fcb27af266",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4fc7a122-6702-4405-aa35-d53c601bab51"
        },
        "item": {
          "id": "b129cf71-3e93-45ab-b075-0cf8d812580d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9a48d091-43cc-4655-882e-a115419424b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d7cef6-7336-4b6e-b3f0-bdc3f7e44981",
        "cursor": {
          "ref": "23d0f667-9a04-4d0a-acfb-8ba8df233442",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f8e0f33a-0bb4-4a5c-8b90-ab110013987b"
        },
        "item": {
          "id": "e2d7cef6-7336-4b6e-b3f0-bdc3f7e44981",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0eefe2cb-bba9-43c8-9df1-4d4b5ef39412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3ad3d4-4b35-4a2d-a0f0-941692ff44f8",
        "cursor": {
          "ref": "0671241c-a43c-4c15-8c1e-06babb7bb099",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d8adb312-7e7a-4e27-a744-014e9e8c9b97"
        },
        "item": {
          "id": "ad3ad3d4-4b35-4a2d-a0f0-941692ff44f8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b2435b1b-2d37-44c0-a71f-1f48136bd8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484bd794-c183-499e-9682-640ab3692cac",
        "cursor": {
          "ref": "5905345c-3ef3-435d-ba42-d062d10c099a",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "511be4ab-663f-4b59-84d3-8ada3319cc38"
        },
        "item": {
          "id": "484bd794-c183-499e-9682-640ab3692cac",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fff11e7c-bd0f-4dcb-be80-a286a0cca038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77556921-5c2e-4243-8e1a-c385b6b8e6e1",
        "cursor": {
          "ref": "10d38a2e-73fd-462b-b743-d8919c20cb2b",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "65f6a60b-8272-45e5-b1c9-e778383ffaa8"
        },
        "item": {
          "id": "77556921-5c2e-4243-8e1a-c385b6b8e6e1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "12a60d93-c73f-4492-8ce6-ea377fc71a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7477003d-9d86-4bb4-89d1-1147c96407b6",
        "cursor": {
          "ref": "25c987ed-cfd7-4b98-9037-23cd6010d071",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8fc04c67-8107-4ed1-8fc7-2252375ffd7c"
        },
        "item": {
          "id": "7477003d-9d86-4bb4-89d1-1147c96407b6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1e8bc590-c354-42e3-9f9e-b538430fd4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2801456a-f058-495c-aca6-d360f1aba74f",
        "cursor": {
          "ref": "97a67787-988e-4e09-9c1e-a859e07e3a48",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3e99d521-6167-46fc-a55d-346302bf1069"
        },
        "item": {
          "id": "2801456a-f058-495c-aca6-d360f1aba74f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "514df75f-b567-46ac-b377-755ea7289ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49492705-4f5c-41a7-ba74-545196eff096",
        "cursor": {
          "ref": "c184ae94-6646-4f6b-b0e6-e52a4e8a6873",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "463ddeb4-1a32-46e4-87d3-95d055b78ca5"
        },
        "item": {
          "id": "49492705-4f5c-41a7-ba74-545196eff096",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9ab0672f-3ebd-4413-b8c1-e889ba1523d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaa542a-08c4-4b80-bd92-dcfa5e445bb2",
        "cursor": {
          "ref": "79281d3d-0a12-4960-bbeb-bdfdee42e991",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "73674390-ef9e-4434-856b-8bb28b0c5b6c"
        },
        "item": {
          "id": "feaa542a-08c4-4b80-bd92-dcfa5e445bb2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "028abbde-68de-4e30-bceb-b4b1881962cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca94696-1258-40dd-9a31-12d6232526e4",
        "cursor": {
          "ref": "4d14eb16-0fee-4a08-be08-ed46db7b8d8f",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b4eb265c-cec9-4d68-986f-74e3ba17db7f"
        },
        "item": {
          "id": "fca94696-1258-40dd-9a31-12d6232526e4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "acb009cc-90b4-40a6-b98c-20317d880de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272af3f5-b674-458e-852f-ecb33b5819e3",
        "cursor": {
          "ref": "680cf618-2714-482a-a87c-dfc6876ba5c7",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2587b853-cc8b-491d-a7bc-6716eef4d710"
        },
        "item": {
          "id": "272af3f5-b674-458e-852f-ecb33b5819e3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9604dfe7-eb0b-4674-bee1-17f09806ad61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebcde35-5575-4e3e-84c8-e1297858db67",
        "cursor": {
          "ref": "4d8ab564-16c3-420a-8f2e-d3002f7fb897",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ffaf3b7f-9b5d-40d5-b403-9971a8d04edd"
        },
        "item": {
          "id": "aebcde35-5575-4e3e-84c8-e1297858db67",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "da109a86-f5a8-4163-a622-0a809ee6eb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d241a2-f5ed-4f54-9938-7df85a32025b",
        "cursor": {
          "ref": "f490a37d-99d4-4511-a9b5-6b35c06932d8",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "01c62625-1836-47db-854e-91a30e8cc3ea"
        },
        "item": {
          "id": "58d241a2-f5ed-4f54-9938-7df85a32025b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "25b89ab3-c604-4c91-b272-b4ef70b9d247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4519534f-b5f7-45db-bc15-853dd2a4d7b8",
        "cursor": {
          "ref": "f3b6219b-b149-4d3c-ad4f-6769074d6668",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "965cc6f0-31a5-4272-b9d1-b6c8a45bd591"
        },
        "item": {
          "id": "4519534f-b5f7-45db-bc15-853dd2a4d7b8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8791c106-220f-418d-94c1-5ee88a0a03b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6b09b6-8982-465e-8cca-0227da47aec3",
        "cursor": {
          "ref": "46394d88-0077-4074-a542-134c67cff842",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ba954fc0-7359-4308-abd1-f46ae6577142"
        },
        "item": {
          "id": "6a6b09b6-8982-465e-8cca-0227da47aec3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7d7222aa-bf68-42d6-96d0-881481ea03c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19be113-4628-4c3c-9613-d42c0cbf01cf",
        "cursor": {
          "ref": "610d2fa5-8fa3-496e-8b5d-7269a0342e58",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fcc4b2a1-98b6-408c-b65b-64260b0f41e4"
        },
        "item": {
          "id": "c19be113-4628-4c3c-9613-d42c0cbf01cf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f18323b0-6322-42f5-865d-328fff4b263a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3c1e2b-8412-426c-9d56-febc30886cbb",
        "cursor": {
          "ref": "f29459ac-1c65-47fa-96be-c3bf34a6a373",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8b8e8c52-cc04-4e0e-a5e1-013e15db0971"
        },
        "item": {
          "id": "5a3c1e2b-8412-426c-9d56-febc30886cbb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f84ee4ca-1056-4c1d-86df-966202f760b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbb5e0b-7a25-4605-a120-ba1d6d2f9537",
        "cursor": {
          "ref": "baae2108-1382-4833-9864-abfb5a55b29f",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cc424d40-d477-40c0-a9d8-d207a682bb6b"
        },
        "item": {
          "id": "0dbb5e0b-7a25-4605-a120-ba1d6d2f9537",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c2dc7d20-dcea-43e3-add4-9682acb1d554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a0cfce-e447-4e67-a9a9-c01ee4cf6907",
        "cursor": {
          "ref": "6528c33f-cfad-4cae-9488-e8b71a50e706",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "205660b4-aa00-4757-b847-f1795093044a"
        },
        "item": {
          "id": "c9a0cfce-e447-4e67-a9a9-c01ee4cf6907",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f2b669fa-1369-4ed6-bd17-3add7eb98990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410ee18d-d0b7-47c3-a19e-f07097bab4bf",
        "cursor": {
          "ref": "79e9e6dd-45ac-4a26-a64e-f6b53e6679cc",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1b662061-06b2-49eb-a7cb-0b17d0bdd091"
        },
        "item": {
          "id": "410ee18d-d0b7-47c3-a19e-f07097bab4bf",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d9eb7a20-9b27-4908-bda3-59071ac64cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1112a1-0dbd-4825-91fd-86d0a27236dc",
        "cursor": {
          "ref": "537af11e-ee0d-4964-99cc-f8d9a783a1e4",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "33a3430d-a581-4cc8-bac9-7523844638d8"
        },
        "item": {
          "id": "bf1112a1-0dbd-4825-91fd-86d0a27236dc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3f6a1a53-740c-4e7b-9431-008adbf724ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13b13f4-71e5-4e21-a2f5-5a7cdd59eb44",
        "cursor": {
          "ref": "2bf4d492-fee6-45b3-b2ad-ab67300eb8a1",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d88b56e7-26a4-4307-8302-f0ce7956b0f6"
        },
        "item": {
          "id": "c13b13f4-71e5-4e21-a2f5-5a7cdd59eb44",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "39769309-7248-4b8b-8c62-d206f4d98ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b40f55c-bd14-4ea8-9146-a7f2a432c14a",
        "cursor": {
          "ref": "1370e521-8f5b-4788-9e76-d2a6618872d6",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "be547de6-0f93-4c78-9e8a-f03a9a28bf0d"
        },
        "item": {
          "id": "7b40f55c-bd14-4ea8-9146-a7f2a432c14a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "be841185-5c97-4f78-b8f0-798caac3bdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60c5dd9-b74b-43bc-93aa-f4591c9b9840",
        "cursor": {
          "ref": "98badaa4-46a4-4e1d-a994-11cce0429c87",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "40f5b437-73a1-48f8-9fd3-adc7c57d29d2"
        },
        "item": {
          "id": "b60c5dd9-b74b-43bc-93aa-f4591c9b9840",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a16407c5-c86f-4b64-bc66-77842f3a9b72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec32f929-fdea-453f-9148-cc6e97fa0e3f",
        "cursor": {
          "ref": "e1cd75c6-4697-403c-b966-551daaa4d52d",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "128b854b-2ca0-4c0f-9753-e3f6abb540dd"
        },
        "item": {
          "id": "ec32f929-fdea-453f-9148-cc6e97fa0e3f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e2ea4b94-28b8-4ad2-bc09-29e1f9c9a260",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4571e8-cc04-4016-aa57-f1be2c0191b9",
        "cursor": {
          "ref": "6d810408-1ecc-493e-8155-8ad30523f6a8",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1275bfee-1896-4dff-a5b7-eee9b6b12104"
        },
        "item": {
          "id": "af4571e8-cc04-4016-aa57-f1be2c0191b9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e19d803e-d036-418c-b427-c7629245577e",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3e4348-b182-45a5-93c8-38226b17dee9",
        "cursor": {
          "ref": "8e39f06a-3129-4ad2-8bfd-288de02dc063",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "57560196-fb7f-4e79-a425-4e10e1c61618"
        },
        "item": {
          "id": "9a3e4348-b182-45a5-93c8-38226b17dee9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c0114041-191c-45b1-ab35-ecb1a289087f",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5985a32-d86c-490f-9413-92e9bfbe075b",
        "cursor": {
          "ref": "eae9fca1-8b72-458d-916f-b65fe9867fcb",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "16934edd-0b67-4c4f-8419-1bf7de9b8b41"
        },
        "item": {
          "id": "d5985a32-d86c-490f-9413-92e9bfbe075b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6816e877-dcaa-46eb-b026-5b7dd4079efb",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c135a7c7-0cba-443d-abb8-03c23f25b276",
        "cursor": {
          "ref": "a752a849-c5be-4ffd-a7ab-a980ebb6b10d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b6adfc5e-9e9f-437d-8d58-6f5aee409ff4"
        },
        "item": {
          "id": "c135a7c7-0cba-443d-abb8-03c23f25b276",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9223ad25-a427-450f-aeaa-e9e297cfca1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c135a7c7-0cba-443d-abb8-03c23f25b276",
        "cursor": {
          "ref": "a752a849-c5be-4ffd-a7ab-a980ebb6b10d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b6adfc5e-9e9f-437d-8d58-6f5aee409ff4"
        },
        "item": {
          "id": "c135a7c7-0cba-443d-abb8-03c23f25b276",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9223ad25-a427-450f-aeaa-e9e297cfca1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c135a7c7-0cba-443d-abb8-03c23f25b276",
        "cursor": {
          "ref": "a752a849-c5be-4ffd-a7ab-a980ebb6b10d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b6adfc5e-9e9f-437d-8d58-6f5aee409ff4"
        },
        "item": {
          "id": "c135a7c7-0cba-443d-abb8-03c23f25b276",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9223ad25-a427-450f-aeaa-e9e297cfca1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432dbd48-0112-49c4-b602-2ae0499d6b19",
        "cursor": {
          "ref": "f4eb38f8-1c37-42cf-905e-03620cc9074f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4db5faae-ddca-4049-89d0-c92cfc51c2ab"
        },
        "item": {
          "id": "432dbd48-0112-49c4-b602-2ae0499d6b19",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "65e8e710-582d-4427-ac5c-1d13478cef78",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0f0bab-1ead-4a42-8518-28f278a2f8d7",
        "cursor": {
          "ref": "0cafb965-aa66-4071-b30f-f92a746b9ef1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1a2e9cae-3b7d-4c97-8c74-00a0ae7a496d"
        },
        "item": {
          "id": "5f0f0bab-1ead-4a42-8518-28f278a2f8d7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dd0d1d90-fbb9-48fd-b796-e34d07272b22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0f0bab-1ead-4a42-8518-28f278a2f8d7",
        "cursor": {
          "ref": "0cafb965-aa66-4071-b30f-f92a746b9ef1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1a2e9cae-3b7d-4c97-8c74-00a0ae7a496d"
        },
        "item": {
          "id": "5f0f0bab-1ead-4a42-8518-28f278a2f8d7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dd0d1d90-fbb9-48fd-b796-e34d07272b22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58190a7c-88e9-4157-b6fc-40546fab18b2",
        "cursor": {
          "ref": "e82cd0b8-a520-4254-98f7-5fea478d5a2f",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dcfa5e82-e52b-4db2-bc2e-9364ac0a7ce1"
        },
        "item": {
          "id": "58190a7c-88e9-4157-b6fc-40546fab18b2",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f5bc6e95-ef83-468d-8057-93b6ef408d81",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658ed00f-6b08-4704-a8ef-d914e1f070df",
        "cursor": {
          "ref": "88adc9d4-0985-4f30-be55-c15a2ece55a7",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1a4db3e8-845d-40db-9375-83b53a912082"
        },
        "item": {
          "id": "658ed00f-6b08-4704-a8ef-d914e1f070df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cd79f8a7-f9b8-4f0b-a709-1ff878cacd57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658ed00f-6b08-4704-a8ef-d914e1f070df",
        "cursor": {
          "ref": "88adc9d4-0985-4f30-be55-c15a2ece55a7",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1a4db3e8-845d-40db-9375-83b53a912082"
        },
        "item": {
          "id": "658ed00f-6b08-4704-a8ef-d914e1f070df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cd79f8a7-f9b8-4f0b-a709-1ff878cacd57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e844e8e1-d547-4e06-9318-192183577ffc",
        "cursor": {
          "ref": "204f11a3-ac57-424e-b2d5-24d74b0e6966",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4fd7d895-04f5-4dad-9df9-fcac1e16e11c"
        },
        "item": {
          "id": "e844e8e1-d547-4e06-9318-192183577ffc",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8198cba9-feee-414a-b6b8-f18b6f58866b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}