{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a9a4eb14-6d00-4e5e-821b-2d0b51c487c4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "26b1747a-84be-41c4-aada-c272061ec40c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2bd4d65-f0fb-4709-b0ad-aa84ff0802f0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f217d8d2-c882-4de5-8a3b-101e3e8daa27"
                }
              }
            ]
          },
          {
            "id": "3e290c22-77a7-483f-a093-252f77b0b499",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "515068d9-4a3a-4834-b514-553d01b60101",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b5c78540-7a4f-4804-8d8f-177b1ca6871e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7ea70245-e06e-4f8d-b3cb-feae0d8b6906",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c57133a5-1e90-4a74-87b8-951b2cfa75b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92e12d12-5417-4b59-8cab-4e5e6484a0c8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88bbcbf7-9a19-4f4a-97bb-cdbfb84adcc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "426752b5-6d91-4b52-8609-c92a0ed8a316"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d66bfd0-8b2c-4aac-98b8-ccb217601266",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e266ca68-2ac0-4d3b-b046-f62c047b744e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "abca6d35-8134-48d0-a07f-5b7e4793efe6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b08bd4e-669f-4b90-988d-335be7c1ee2c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "727b78aa-b9ab-4568-b45b-67870010aa59",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e3147a9d-f8a4-4999-af26-e148fe37b602"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "354963d9-f186-4768-ba42-78977aa4fff2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b15ea7d-acfd-432e-b2c0-95654518d878"
            }
          }
        ]
      },
      {
        "id": "6f87e81c-4546-426f-8af0-0b2088224a43",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "86a41c47-da62-4acd-8669-231d5994c678",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba6831b7-2d6c-406f-b029-4c5021b72620",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "062ef0da-3939-4070-99d9-4ad5675f65f8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39588fde-a4ea-4f74-87f1-028c552afedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "895829c1-05e8-44ed-874d-d15d5759dc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e063629-d152-4e3e-8357-5bb5c42a9870",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887c0257-21f5-4579-ac27-b70bddc605e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "803ac3bf-cfeb-4ba7-8bf4-199e2e201dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503c3534-5458-4a4f-87c2-600aa3356f74",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6990caea-9ca1-4aa8-b6da-30f453459380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e40fb75a-5efd-4975-9eb3-a9e2f2b87348"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2594e9a0-a321-477d-bcd8-6c5ebd87eba4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "961dc866-959e-46a0-b558-c17f83df8fcf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce6f903-12f9-46c3-82bc-be1a99eb5dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98c0e28a-3870-4d44-94f4-0ba932c6b797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98da5228-d6c6-4a4b-8e47-fd8d0edc12fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ecaa23-d00f-4051-8d1f-bd85a7bb1edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669b06b2-81ae-4b2a-9238-6a750cd60f0c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60056cc-a453-42ff-8f82-f858178e395c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "259e49d8-0657-4d90-90e5-cffb8d094c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b132bc33-49c0-401c-bb5b-b3d32fc1a2e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "45305198-f155-44b3-83a9-122b2fa4fe9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ae42f80e-35e4-4864-8a1f-56a7ef86e6dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a09e5d1-748f-430b-ba11-412dace54486",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e668288-a9ef-4b2f-a4f0-46073a2c7778",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7b5ca07c-7780-4d01-9d6c-fff02321fe6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f4c3d02-d975-447b-af57-4f0f16a70e27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "23b46fe2-f4e6-4716-a65c-69eff06fd72f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ba2dc71-bdb3-46ec-a568-05888515b19e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f5f87ae-718f-47f6-9a1a-1b414fb111be"
            }
          }
        ]
      },
      {
        "id": "4b5bda49-8cbc-4511-a987-7a8acfe157c5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4e94c48d-8b85-437d-ba7d-acab7b013540",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67acf846-554d-4a30-9adb-f19457e81316",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d184db5d-e926-4b95-8bde-eb629aac7117",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2263678-c1cd-4ac3-95fb-1d7c9be37ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59ac51c-7915-44b5-aedd-91a5be0acee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b12092-a3fc-4bee-96d6-a606b4d1ea5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e2a23dd-fd47-46b5-8ba5-137e00e1d7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95808d6-d77a-4c98-9963-64c4af90ff5f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ad9683-2afe-43be-8030-30ed288038c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5fcd47-ad27-4cf1-a61f-e6ba861e4716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b5526f-1d6c-484d-be8c-9781814c87a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77b11360-18cc-4b32-8e14-e7ce68fd693e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb686c0f-24dd-41c1-9264-ed1cc17be9bc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a504a7ad-0802-40c4-a976-d1d94bc56268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50dff94f-c2ea-4010-b802-788e31376391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4110f2-8b8b-4a45-a8bd-129f96f9893b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bd92d2b-d3f0-4141-82f2-0909868fb755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45cd740-c99f-4acc-a0ed-07e3c9fb70bf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7d1c8d-1d00-4fa5-859b-d158f153cbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88bc275-f72d-47c8-9731-e60cd0e6ce56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7245e91e-f994-4cbd-ab67-a0890e65dfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f2ee765-8cef-4530-9f16-bb8e338f840f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f04122-a907-4da4-91d1-ef21be50f777",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea2412e-2336-4f96-9494-03ff11c7f54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5596b9-ddda-4f4d-81c7-07c3d5d90c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70c195c-3ea1-4d96-8c36-d93edba03a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f921aaa-fd8f-4631-afe5-792451ee70ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486a3f44-ce69-424e-a2f2-7fabbf161c9b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d98e9a3-2262-40ce-8956-0ef4d33e61c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd43cca-a67f-41b5-8f58-636fb2219dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6476236b-125d-4539-9c97-4b269516b579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa9f32c-6b06-4d4f-a7c7-3a8d637d3388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6012ba48-3418-47b0-ad4f-b704f184a116",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9785a8b-5536-415e-bcc8-0bd478129a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f24dbd0-12f2-4d48-aed4-ba0119a3712e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f941ff-bc53-4976-9e6d-1c444984d6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35c1e737-c849-4873-a3f1-87e40eb1dbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a088009-0e86-4ccd-92f9-9869627a87b2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eea43be-3b7c-4582-bf70-72c9007d8302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830a3fb5-1188-461c-86e4-0e79e848b5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f47fe02-3396-4f0b-8dc1-1e0fb7ffeae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1d08d27-af99-4602-afab-4a89164c12d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4917bdbf-01d0-4f1e-a6de-16d73ac18bb5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baf5dfd-56e7-4554-9014-9843cdd09864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858a3cef-6885-4797-9a7e-bf62f78dc4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c435204c-3063-46eb-9ea9-a03f576aef59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26299126-1adc-48c7-8ad2-11fcfe7983a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e30672-caa9-4206-8470-5c62878ac758",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bd3ef8-ebf1-4e4e-858d-f1c04cd49115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509ff412-15f3-4f73-9b89-421c498d6901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2332f8-aa73-4b6a-b51a-6a6d1db57ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d508879c-5835-4771-be1b-3b458fc7fc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4cca66-63a1-40e6-9dad-54c4c8d3fc12",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6b790c-1230-4dd4-a4e5-b8392ce4c777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e12f10-ca06-4b3f-96da-74a1222254e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045e3525-a687-466d-b0da-3b8a9d2e69fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b841814-c784-436e-9ee9-9fbf3e0a1796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1b9379-be1b-4802-8b00-cf816f41be9b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3425f2e4-1d04-4ac3-8ae1-8876f07d2c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053c9492-3b95-43e5-8bec-6da454171ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83195a64-5767-4404-8e77-cf8cb94a7399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be2cf77c-2dbf-45c0-af8e-fb10cb683a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4c53cc-80aa-4244-a613-61051d4eca1d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283ccab2-f566-4280-bb6d-1a6440257389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a977126-fbcb-41f8-9ac3-682ee0837ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b6d4dd-732b-4225-ab7f-7568a84598da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcebd56e-72f0-42c2-8816-e62524046cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bccf715-b69b-47b1-a2f3-b372d20af76c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0625376-8a86-47ea-833e-3f85bf58ed33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d712b8-903e-4ecb-8e6e-615886e17d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28d05c1-eeb4-4f0e-aefa-486dcd96805f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f7e1f23-3c80-4df2-bf12-768e1d7d8ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5f0189-7ad9-4c6b-9f13-7b3bb71bccf7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a626a1-2734-4496-8b92-6026df8440d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b74c0b2-378c-49e4-84ec-e85a898b8140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2559c777-168e-469f-af21-8b70af5889c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7bd5513-3312-405f-8c40-22aa3d4fdb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dc6d05-02a7-45ac-8f68-46d628eabb33",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f8627e-4360-4f50-9458-5f776964dfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2c6e52-11d2-4646-b3ec-1cc926bfa7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac24d908-04f3-4f9c-a57e-bb79f3f9123e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a51a5b21-1dd1-4311-98e0-66fe0bade390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81de79ff-5e8a-415c-b813-8bffd1221497",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbde0a8-01da-4346-92cc-6648c6dc5539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b77f6a-2c8a-452f-9b9b-cf2dd74969ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696077a7-b7cc-4d37-b0a8-a23a38d3cf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e738127-83e6-43d8-81f0-15814d9faccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e14e376-4ee9-437a-86b4-b1ec4e2b2f3c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab69a1bd-5fdd-4479-890d-664a588912cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55917b1f-1776-4a6e-8dc4-8ede9e5bba2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037ccf6b-6801-4d31-9717-8271f35a71ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be0468c-79cf-4bfd-b223-071bdde22e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdcaf6a-4584-44e7-89b7-0d98d8118387",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27abe9d6-bce7-4fc7-b70b-b2eb3ed05931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a584aded-32bc-40b1-a803-6cc25988e66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e891dc9-9917-442b-9856-5eb99284cb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdae851-d52c-4b62-ae72-82f63b7862cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5524b38a-3c75-475a-a20e-e3a27a2c5630",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0b7cde-8271-45f4-be2d-2e20f4d5b550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb3b372-46bd-4a4e-9637-b89d3c1fa1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7553398-a895-4618-ac32-fbe7159b848e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "139c7b8b-f632-4818-821d-0277e838722d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75792941-2411-490e-ab5f-529c8c91a430",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627a461e-dfce-4f72-b4dc-342552a51913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd3a5ff-27ac-40d6-afaf-c5a1ec5434c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519bf8e2-0ca0-463a-894a-06e507f01efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c711e7-54be-45e8-ab01-291b42ab0062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19aeca47-6e93-4e9a-b45b-ecf92baa8886",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11028a87-7d01-4da5-bd6f-a5b76ce47675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cbe8e6-6cff-4b56-99ef-c2ffc12c64fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94512771-d651-46f4-ada7-081f8666fcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6b60d2-4a5d-44dd-8ec7-fc1c3857a179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bed3d76-ebfb-41e7-8c13-12c46ae14326",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a94653-96ad-4072-9f82-f1e5a611f355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b491b82-5273-4eed-9853-8ac7c959b1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e94bd5f-1c62-4f68-aa88-67041a79ef74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9955216a-1bc0-4fd8-aa4a-0d0980f5cb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac757a25-d961-40e8-bae2-fe6814ccdc04",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6074e0b-f1c4-4bff-a77b-cead89cc3020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2b4948-3de8-4f5a-a76e-74f67e906c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453aa2c3-d2cd-44f8-a10c-28a2b0cfe562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c476b9be-1844-4070-9494-2b8001f18bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978b3886-28ed-48fb-a82a-b7ad2a02e070",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ec2e26-164b-4d03-adcb-060270408c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0709c40d-bdab-4b5b-b82c-8b6ad28eb793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa8c3ce-6e69-4bbb-8a8b-514e0fa6d570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca8b76d-5f84-44f0-b2be-039d25d1d6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f5712d-917e-4cd2-99a5-e3dcf5ae97fb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e18257-f39f-4205-9ec6-1e991272b6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942ca8ec-6851-4efd-9c2c-63102cbd1261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a91b90-15d3-4ed3-89e1-476a6dfcf1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9812fd1e-fe4b-40f9-8fb4-206144387b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56962020-c2ea-44fd-b308-47840c76849c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44be6ed9-68c6-41d0-a4b6-8d9d9ea2146d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e384b0-755a-4542-a698-15b15eeca613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58605405-a8d7-47fb-92aa-78e062206c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15fb5ede-181f-4b98-8a5b-b8a3e35b9ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66136ec-bd74-4e59-97a4-f4b068098363",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a49844-10ab-4d4d-b595-047d09e7151c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1b522b-8d60-4769-8634-eb5790284df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eb8832-ce81-4ed0-bafe-85e36fce53c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "073ca962-8008-4f57-8a08-c318291f3bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e5510b-6747-4b02-8172-0238891ce71f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dde20a-ee54-4e77-9978-84a334f05f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce870a68-3d4b-464b-ac63-54a56de4b547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eada351-5783-4e17-bfe9-7cf434fa24e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d56c244a-6519-45c5-9f2a-4b634a8866c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07af79b-9cb6-4b41-afae-067f5c42f8e8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614ea14e-fd1f-4ad7-a2f2-a5c9fcc1ce75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e0a8ed-4b1a-4e54-a7b1-a502037b28d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34c935e-8db5-4c41-a3c5-e6b4e8eda771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "11a348e8-2e58-4eaa-b13e-1eafb901abec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f736f4e-1157-4120-a3d3-e2996d2536f8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532e06c9-4663-4b4e-a547-967e1a8bc1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1138d22-ad12-4888-b747-10f8790e0402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e447e6-33cb-4dee-90b4-9aabc6b3ff59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e920668-6958-4f47-941b-1a5d07452d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86a9e56-46fc-45b1-b074-034642fa9e1a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835c7481-9dc3-4438-96aa-c8118a59ef81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f98c2a1-8e0c-4b0c-b7ca-43eb9fbd4988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5fa465-954f-4164-8326-1713a9d4bda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83ac3d24-6d6c-4f01-8420-314c65f807d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26a701c-d40b-4b8e-8373-d7652f43f96c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd785da-6e90-4f97-85c3-4a166a00ebd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbb8a12-6a14-45d9-a3d4-53ee5e6301da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7456ea98-0c0f-4d3f-8065-14e9fe95b9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a112e5-33a2-4bec-bbef-85cf80d25297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfef2e9-1628-4b41-82cc-af7f07b8bacf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22a2c5a-f27d-4da3-8e82-c309ba94e750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7595d11-217e-4b51-821e-033f00c3cfae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ea8680-e5c0-414f-981b-3a12718fb6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4ec60a-4c32-420c-a8cb-40d45298ad23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c570eb82-9236-40f4-8823-2c3b114a8205",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e58899-2121-4a00-8ff3-2e160dc8aadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b0d9b0-3af0-474f-83a1-b49bc3eb990f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f70972-5394-4f84-90db-e0d39d358262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "92ea4dbd-5596-4367-bf86-a7c28db4b15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da9f4aa-4c96-4871-8325-b003f8480038",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d729b867-a85d-4f96-8acf-9662ae3171aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08ce70b8-378e-42b8-96f2-cdf810630c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fb4079-b479-4801-800f-b34af4cdfe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2078f81-9cdd-48ff-a5a7-2197f6b24485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036cf9ba-b932-4fd8-9b87-0691dae530fa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945b009b-6988-4088-94c7-9b233af20fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874df7ff-bfb6-46ba-aed7-b6215875e837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0974e4c-ce6e-41c1-b375-ea35dd4283a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29c8fca8-1cf4-42be-bb3f-6525ae794c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece64364-a646-43e4-b275-f64ff10d96a3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df43d09-b595-4f83-ba86-95cab50c6943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7733abe7-1b62-4dd8-874e-e7848110e1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc113abb-7148-44d5-882c-077aa78a3b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d162bdc6-173f-4a91-8043-be453f834865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a459392-d052-46aa-978d-eb80bc8e5ac9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc547a8a-0bb8-4594-8f3b-cdaa9d3fcab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9872ed1f-fbe1-4b30-bf24-ee9a6ddd5f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6438abac-0fc1-46b5-a3af-b94138dfe09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac098412-c7a8-4849-bf70-5b99d0cb9e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0534aa2-6904-4506-ad7b-18e38690ac92",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6f3896-4a5c-461a-b6cc-d81cf624c246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30532ff5-eecd-4dc3-85b3-0038ffece8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcd1ddb-67e1-4b5e-bfbd-991a9cdf4286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27c93bba-1fd8-4337-9d30-a669e88c20db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2877ee0e-8939-4c59-bd5f-15daa331db4b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb6d3c2-a696-4e86-9689-5ce6ba1e3303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebe0a74-1576-4569-9349-2e95cec59631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733034b3-b06c-43a5-8c50-6d60c1097d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b28efb-ff60-4c49-9dd3-8d963218843e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69f9634-4ac1-407f-8da9-fa4e5667b74b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec42645d-d042-4f53-b3e9-e0a0f560ffd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a74b374-e641-4e8c-a628-a284f9fe57b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2503e3f-764b-4376-9d1d-83f2bea91177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0020af50-b5c9-4702-8b77-9a39737d50e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b592fc-01aa-4661-bbab-3767e4977b12",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd1ce6f-e231-4108-a357-f403c4e9ec0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab32f3c-10a2-441a-b145-9528cd9aa687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937d0f7d-d2d4-4d89-bd6e-b7f321502f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b631a2e-a29c-4227-ad23-b42a2bfa1e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1424813-5ec3-4a4d-adf2-e8435b84d666",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78620aa5-6ded-448a-a20c-a9bdc23d930a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2275da6-5148-489e-b633-b87d727f3173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f9354f-af20-4733-84af-1c70f6807f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9673c0c-71e8-41c9-acaf-48269fc689ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c311e09c-470b-4c8d-b31d-a4e4f68fbf40",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63848f1-c63f-4e38-a234-bce3140fa3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb891a95-e7b8-4bf1-b0c5-fea0f2cc4472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8183a5-3dfd-4875-b20e-eecea142ee12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6fa6f73-3c9d-4219-9efc-11da6d260a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39210e2-b796-4eb3-ae72-ef3239a62261",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b496928-95d5-4580-a64c-a8caca2dee3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094166c0-742e-463b-91f7-0ef0c3c880b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220092d1-46f4-49bd-8f9c-c02e2c791006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3699c0c3-5760-4338-9f6b-83af46ad30c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93db54c-cc89-43fc-a55f-16916a76d3ca",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e2cb7e-c95b-42ac-a97d-34a9eddb7ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d122c8f5-8070-43fb-8f0d-b61f7fed2ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6ffde9-1b0c-4c8d-8593-2e20bf2a3d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "303e4973-50fb-424f-bde0-7d049c41bfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c701db-d1bc-4a6f-a625-afb3bba13e8c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7406e03-1f81-4fc4-b513-6c739c19865d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73509ff-556d-4531-a726-03ca63858c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170cd15d-2ea3-4c45-a0a6-e542f26c2492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3991cfb-57ab-4b23-a1de-14b5b9a0be31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17d596d-c386-46ae-8f9d-4765cfff0620",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cd053b-5054-4b4e-b8fa-c0a575782418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8ee5c4-a8ee-4be5-b6b2-d935e04d31f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92186263-bfc0-4289-92ef-0e6e411b6e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3025c40b-4238-4044-9a34-000794927298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f4ac6c-be65-4e15-82bd-420864070f57",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc0d958-9e67-4b06-87a4-986da9828c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae5fdff-c8c8-4f76-b0b6-0232ec19a29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59760263-7dd0-4c03-b43c-ce2a4ef4ffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb6ea17-3503-49f5-8836-24a8fc00933c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a4de07-e441-4b83-8fbf-03930793bb12",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9cdeee-9f5c-4605-a852-8b6e2845c08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9df23ef-6fc7-478f-a60d-07ef016a3c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e8b24a-f661-4fc0-bc03-4f85a5e1cb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b6e594-5001-45e7-965d-e75f5139cbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db7b8bb-775d-426a-bae6-28509a5acdcc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7e1b19-8559-4026-a5d7-fd28eb427e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90885dad-f51c-419b-8373-e6daddc780c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99e63c0-3a88-444d-ae6b-fd67d20e0900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b61d5135-ca52-4e38-9719-6183dd7e8aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eacd389-46ee-4286-a403-5b11b0e64e5f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28726d1f-b43f-4fae-a901-dbb01faf0602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5c5eb2-3f39-4dde-a319-fb15693712ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2baf9ad-1997-4069-94cf-7e9f39072748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a56caf3-cb17-45c8-b872-0f99b4469d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73372e5-46fb-4655-8f34-c87fbccb83e0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1721e795-a8b8-4eb3-ad76-b460cbcbe6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a74f83-613a-462c-9cdf-7dff7870f7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f18602-8f8d-4a2d-b2c1-89aceef0cfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37124893-066c-4b1a-b622-c6d40b1f3055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf354787-2261-4b0b-a564-6df02ccc66cd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8a1592-cea4-4a99-ac37-c8407a8b8117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a6ed18-ddee-46c1-a144-9f6ec59d25a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0887e470-be29-426d-91a7-20048c3e1617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1355231-b178-477b-a173-e3849c74f40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3ce359-9e5e-406c-8fb7-fd68bfeb29fc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6acd6a-6e57-4e4c-8533-7053463fbb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a40b07-bea7-4658-b8e2-ab04a15ac72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814c88c4-4e0e-4c0e-963e-2d4fc6dd3fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "254c38c4-851a-4368-9acb-dd83b16640b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa31d1f-63a5-4abf-8ed3-ddb11a65fd9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa26d559-202e-4592-9ef2-bbc9230c0689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbbe08d-f92d-49d5-9b81-b64585b2cdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9feb4e0-4cde-430f-978c-11505df938b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8a12e0-d6c6-4126-bddd-0a172478fa65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84a7610-1a06-42e2-ab05-bea022b6d2c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58351ed8-fa02-4352-a24e-8c7464c70ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d184f2b8-2263-4d73-ae3a-84d741900bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b97075-e15b-4b2a-855b-09989acf3a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c85452f-a16f-44e3-b75d-3e42ea3ea242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465f65c1-5094-4bd7-a356-b79c1f2fb34d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c792ea1-d744-4195-8f83-c4b96693b350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be56fefc-a864-4773-9787-02162e4022f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689f0bf2-6ad5-49fb-a42c-57bd4b80b594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4529eae-5e07-46b0-969c-a1330f7f7d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a24c78-e120-4eeb-b542-116e2b1b2d28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d87f72-796c-4659-a86b-85f1110506a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8d5856-6650-4281-aabd-3f183968f1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184050f9-4c24-48c7-96cf-5309b60b30c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "634bb53e-98c3-477c-9272-78795fc4a3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7072e2bd-aefd-4811-bf0b-17d970175483",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86529fb-c119-40e0-b8bb-04240ea36388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c99aafe-cdcb-4d0a-9119-521af6b17491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e617b2f-99b1-4c1a-8ebe-cd5d109558bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7519bb9f-1c81-4a85-b7a1-faf5c4132199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91cfaf1-eeae-4612-a69f-19cc609127f1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dd799a-2cd2-49e4-a7cf-41d8329a9090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192c4ff4-0481-4ac1-b588-1694a35cc326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3400d9-ed38-46ec-9cca-30c847278fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ce8b35-ce75-43ca-a77b-84a8ede602e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9173d1c6-8c3c-438e-aece-033c87957d73",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eae81b6-12ad-4618-b5da-8ea1d422e6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8b56df-0626-41c9-a215-272b4e24b5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a23794-29b5-4224-b643-160f39948927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "af8e4ed2-1cee-4c7f-9b94-f7dfe9e20b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e8c08d-f04f-40da-af20-3f91768c4ba7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c306296c-cea6-4d1a-85d9-f7482b9dabbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705371c2-010c-4a8f-a0ce-8a2c03220fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64999ad8-3048-44eb-af41-4c8db1bad16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16a76a00-f853-4363-948e-0fc2ff179927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086faf20-14d7-4133-98a3-d9b15e7b2188",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58943a3-1bea-4d02-b660-19d754620dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cfe9df-1ab3-4052-bee2-08bbb5886867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9941d7-d31c-477f-925e-ea02924849f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea702c86-e6b9-4bbb-9875-30141bd910d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbff183-22e5-44c7-8605-27103ea96a4c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8711a7-89cc-4f91-a57d-f8af94b786fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4c0c07-3b44-4bc2-91c8-35110f0084ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36248e6-3e88-4e8a-9678-9dfd3832ce5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "512d275e-6260-49a9-b03e-edec56b454ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ef6cb3-9833-4ce0-bc41-e9bf0c2dff8b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00985c0a-2a8d-4575-a7d5-96be6e58fa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83554a1a-7181-47bd-ab33-f5f7fefd1c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a951f4d-77d8-4382-8523-1b459e5a75a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21cbae3f-9edb-4d83-bfbd-d45493f0dda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ee3656-03dd-4a1d-be5b-0d3b5d2125f1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462449f8-8c4b-4f07-b89a-a169f8c1bb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed963f8e-cd64-487c-9f56-9a44abe2e529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6585e5ba-e90b-4a13-8150-8d136d2e4e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a75b4264-f976-43a1-89a2-cdcc5c64b671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca37b4c-6b16-4d8f-adae-402b56e6ac28",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4508301a-dd92-4f60-9fc8-5f2c6fd66cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8dc914-c0df-4ca7-b676-cfc40949b75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c8a5c6-081a-47ff-befb-a27e10700683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ead2464b-2b8a-4299-a9d0-cd9bf009c3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f307141e-7f7b-4e41-b552-d3875402b867",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108bd46b-5c71-4024-be17-3b64d9fb87aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01817b96-f531-4b06-afac-d4eadc24a46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036a2437-dff9-4088-9789-b18e354b72df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6ec8ca-056a-415a-89c3-bd1037c2dd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac9643a-5f2e-46fe-8963-847874d9bee8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95490b03-0b09-48f3-b2af-af225279489e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a825f60-9260-4d67-9543-53e43d0efe4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12208afa-9e54-4a1a-98c7-781d45e69700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51c08e2c-3221-4481-aad1-0ea7d013040a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da69696-52f4-42da-a17b-4057b78d2d91",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba2d80a-9f26-4a41-861c-92d2442dc6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047f6fb8-682a-45f0-bd50-ef0ed52a3b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6263a5-49a4-45e0-8196-76979cfb04b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c54410f-d5b1-427c-8919-fc3f12098d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce7d9b4-3461-4829-bd23-507e86c637a6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db22d374-f12c-44e7-a2c0-cc5181d8d3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b16c43-de57-43c5-bf5a-4e943e2358ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a29ed9-d6e9-4d66-b2c3-3bf490452be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1e4912-3d95-40fb-a7f8-01faaba43713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcac5e5-2c5b-42cb-a68d-34ab4cb4cf8b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e491d624-4355-44e1-a4c3-8f32f8cf7e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9285d332-472d-41b4-92bf-4dc2a6fbabc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991b077d-dd0b-4555-bf9f-79eb1d320cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e676ce03-5317-4305-ab7e-c879b6692180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242baf91-b08b-410a-8b98-a2435507309f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793333f1-4b6f-4129-bd8e-931e0873d5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f88f319-33aa-427e-9f9b-2f2ca76483ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77b10ee-6e84-46c5-85e3-ef3196a2c827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b89f5d-0e59-434e-abee-f89a45108cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf68295-f46d-46d3-a717-99566841fa88",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e19848a-f6af-45ac-9435-44f298d01fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5172f499-db38-4432-acf3-07fa148640b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61244a69-cd88-4e94-b13c-aef4ccd8dc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8afdc36-65c3-4c2d-8b0d-60d317c5f8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a00442-17e6-46ad-82c0-dd9945d92084",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e41828-ccc3-4536-aca6-dbc88c38fb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d149145-e94f-4c71-b4de-24f9e1e3a1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba27aad1-0345-4e96-9274-ff057300d7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c97b13e0-a56a-40e6-a2a3-c3b451ebd097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2d61a0-1273-49ab-9e56-c716c16c1d64",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e51d16-2b9d-4edc-b204-3ff69917ac0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d520e7e-1483-48ac-a2bd-0ff529d68181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5429b9cc-98ed-4670-8dd1-f18cedf2c094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4abc2329-8016-44f0-ab4c-325aea389b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136e206f-8cd8-497e-b444-74412f2995f7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08873033-90cc-4506-b2a6-e2d3baf7f99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bee6f45-0add-4224-bea4-2bab27893f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34791978-87c3-4219-9ae1-b22aa70d4d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee81bb60-db96-42dc-9768-afd464fbfd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0a9fa0-780b-4329-ae5f-630162b3a09d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f824fb65-f578-430c-85fe-016676770313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9acf76a-6a02-406a-8bcf-cbe23eafba37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f644c7e5-8ddd-4135-bc28-5720cdcc0d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e386a9f-d293-4b2c-8f63-ad46d0c2e745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ada7ab-6036-4c7f-930b-9500ef246eab",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1573d5-0937-4639-8aeb-b71bf7774961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d00109-704d-4fd1-8557-d4ff4fb11c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78ff9f7-d1bd-4100-83d7-51da61136011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9201de64-f302-48e0-8f8f-05cf17bd34a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128f8950-1506-40ed-9908-2db2ccffc65f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00558b38-f350-47c9-9b92-e40b405a7d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88cea38-b64e-445a-9801-a5ed708ffd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3047a37-3fe9-486b-894f-404c2f730559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62478b57-3be4-49a2-bf5c-d4158037986b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4497a3b9-1011-47d1-98e1-7e884c60fd0c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575eb905-49c9-4a61-8cc0-a86a13f93ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d185ea58-8280-43bc-bbb6-105149a575eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fdc804-a7b8-4d52-9793-782e763f0d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed883403-2b90-46a2-a930-2fd2a6920e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8e361c-221f-416f-ae3e-241a485927f4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cc384e-fb2e-4be0-815a-9d9763c286be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb38b2c0-274d-4aaf-a30d-722191eaaa79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a72c1d-c41f-47ff-bd42-dbfab46ead32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5591e2-8876-4b87-a3b1-8bee39e0b79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a72a4c4-3824-4836-bdfb-a4191946d859",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3cffa5-6a0e-4fae-9d4f-278e8a872ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5703f0fe-5a8a-40bc-8bd4-9b9a21b14e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df2fcce-078b-44ca-879b-6be5d7ee43d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc42d1cf-65e1-473d-bdd3-55a8d5f1afda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d809594-ccee-4f0d-bf83-4e1d9716cee3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e821c674-a6a3-46e0-ae93-accef38d3f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02dea3b1-3caa-4237-94fa-f4f420b098c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0729b4-67c8-4ceb-9409-8a47c78456a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0beda0d1-dcd2-458f-b19a-86c2ed617b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73df477-e76b-471a-a94c-5b577d861422",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9934f219-26e9-467c-8766-4b3d22ab4c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24360dd7-2058-4a81-a0c1-cefaf0c775a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee68979f-1096-4d83-ab42-c0442c83d1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd16aa77-b7f2-4966-85fc-008e13943657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9ec1d7-c8a5-4da4-af09-628447a9b024",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9320b43c-3168-48b5-9d6a-98c465f97ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415e3a32-ea9c-4e19-9378-2db279539cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ceafad-f816-4b0a-bb93-f8ab7d5fbbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96652cfe-37e1-43b3-976b-9d4a098cdb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec2bc42-daf1-4fbb-affc-bc5d1b169b58",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e910b42-30cb-4bd4-8960-497aa55385b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2f7fc3-bb2e-4620-bdb3-7ed763c2f5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d212867-0302-4fd5-b40b-932d06667892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "79370a4d-59d9-48dd-820b-2fd91b910ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f458d2-6c05-4001-a47b-30b67445e5dc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf18c9f-acfb-4047-84d0-ba4bce3fb80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e82c64c-4782-47f6-aea3-7a4438b5dde8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f02c84-0314-4a5f-88d6-c33254a45f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3800409-593b-4639-92f7-35baad93aa5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdd58a0-daad-48af-b5d1-981a83a9cf68",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046c7b5c-22ac-49c6-afc5-5e4f13ca274a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e42a77-abf2-4636-8c9b-db3d0f61dbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d49e935-41fd-4dbb-b485-b5e265e58bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dff833c4-5309-4817-9230-8384b66165e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473f2b7f-60d8-4f6c-af51-e3473bf96ec8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a563fefb-357d-4ca5-87ef-2bf44be7f22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d89595d0-a443-4809-aa8a-efc1168731e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e0aa20-86ea-4207-87ea-1a57f6d3b116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a1cd6d-fc76-45cb-9f37-9e16835dc0bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f4b4988-1afe-4329-bfb1-0c51a060967c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b628756-ca0b-421f-89b4-3ae3019313b1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88db8db6-daa0-4b3c-9033-57d2da276348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8628949-0811-4a4d-b180-f99879860701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81fcdef-cb80-473e-b21e-2b535ce3f8f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8b5f2e6-090e-400d-8445-fcab3aa12679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423a2f61-3f28-40b2-b2e9-df099d0e077d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc430aa-9328-486b-836a-8288b7da3cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f0d4711-46a5-40d2-93eb-d1a73fff058c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c07c5f7-50b0-4f9a-b11c-74a0dd06c46c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a119ea5f-1546-4fc4-aba8-ba2a55d8212f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "265edfb3-fb94-4a60-9946-fd515cc62fa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a74c5c40-4cff-4ac9-a325-4d632aaf11cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "adb82e31-0a27-4965-8a5d-bdf7a572f47d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea7c401c-ef63-4a2e-b277-484c400469a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "368b275c-946c-4d3b-af74-f9c78923a2e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b360e0c0-c67b-46e1-b04b-62c80ecfc6fc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "89433c3d-adfa-4333-8579-8837abb15e79",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19977aad-63ca-4d29-8953-69694b4e74f6"
                }
              }
            ]
          },
          {
            "id": "77145621-58af-40e2-8e5a-45aff7fcb75e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9fcab2d4-179a-4ab9-b3cb-7b5f40702c93",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25a7d1c6-1e19-45fa-aee0-603264064c3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8ac5dcb-fcb4-46d4-8867-19bf2d0f5f0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a77e04df-f304-461f-b0cf-97b387dcc30b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae64664f-d204-4c6e-a3f6-0b078063298c"
                    }
                  }
                ]
              },
              {
                "id": "f0b3e236-b0b4-4d59-bbd9-f0db7f4bd6f6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5cdf373-552e-4737-ae06-daf5f6b7bbf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c735d68a-47bd-4bb0-bf01-e10d19f9103a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d781b14-3aa2-451d-a946-53de138250ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4debdcb9-85c2-4d04-b5c7-3deaa3d46757"
                    }
                  }
                ]
              },
              {
                "id": "fb1c3730-ab5b-41aa-ac55-7e03c21b439d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "946127f1-c2ec-428a-a240-0813defbff1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83fc4a3e-7d34-4de0-8b08-e366ab0189cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "736c12ff-9077-4257-aac1-ad4dc8d14a76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33a99253-808e-4487-a292-d43832d08147"
                    }
                  }
                ]
              },
              {
                "id": "424ed145-238a-48ae-b9cf-889d853f33ac",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e64e9801-15d3-46a1-a9a2-2f6599ce0483",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "870cc6c9-bb15-4f72-bae7-6f162da8750f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9521eb0-5861-4ff0-8985-c496b19d4521",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d96518ee-e5d8-4232-a38a-cf075277746d"
                    }
                  }
                ]
              },
              {
                "id": "e0ed123a-a528-4473-96a1-2f1eaa52a6f9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14b9d160-e334-486e-b9ea-7a78a2137968",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0cb0f49-3646-4739-8ee8-fd9427423445"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ea75710-01ab-4926-8608-5996ffb7d9e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cd18a02b-5095-4ff1-9d38-256247923a46"
                    }
                  }
                ]
              },
              {
                "id": "1e15d90e-4617-48ec-aa09-a8c56f18c931",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9eb00454-e67b-4545-9e25-95a9f28cb86b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40d2c9d3-0589-48aa-9cbf-1b03f8d45317"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26a7e715-82a4-4cea-abd3-c769ba3ac9d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9da761f3-7b5b-4bd4-8791-b91b8f958c7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11244237-b0f4-4313-b503-c53c2db0cbae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a22720e0-ffef-469f-8906-5cff1aa3f076"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8e08ab29-9ccd-4017-be8f-ff5410a1c46d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fa5badb-dfe8-4c01-9186-529c7d584498"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5accba5c-d0a1-46d7-8806-fbddfd4188f0",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "36e5c89d-f46b-46c5-9aac-aab7bf503c81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17610931-b9de-4cd6-a2a9-64066b5c0350",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00ab1090-ecb1-4131-b43f-e2a4ab764df1"
            }
          }
        ]
      },
      {
        "id": "a02e80a7-9aed-4a0b-a1a1-e5b75ded434d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "35b38c76-2862-4f19-8a00-aaebadd2b081",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8696162-4add-43b4-ab6f-74a35a4a36f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "78efbd9b-7d33-4bdd-baf0-c8b13c1d04c6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab92d69-5269-468f-85e0-61b05042c9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5b34ea-c841-4b40-989f-c079a95686a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f82a8b4-d32d-4617-be31-a04284afc04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f64003f-cf3e-4c4d-ad45-18ab9de69c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed177005-77d0-49a7-a492-20679d52e021",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab61db77-253f-4be5-b8a8-43398cdd7355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4a0d52-adfb-42ea-9158-9ef74bef9bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e4bff9-d03d-474b-af23-4ca8a2bc8dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6573e10-38bc-4402-a7f4-e61390c3bf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6f28f7-f835-4e4a-b9ca-3d904d73d3d7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c338aebf-493a-4ed0-890b-95e695cf46ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080f684b-6174-4a04-8681-c671514ee1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3d6e3d-097f-4c36-817e-e223dc3755de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19ad31b-270e-4c8f-87bb-84f2c0d1b662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87dc349-d7e0-4266-b2a7-d872a4cc6c64",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1206f29f-332d-46c1-b25a-d544ea5c700f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c4d5ea-c1a4-4ed5-a0d8-2caa3e483b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbea329-ad03-4b73-a12a-bfec7b4c00f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8294bb-75f9-4b94-a996-c7b2379bf176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2d0542-65ea-4d40-9cf1-ce860ac503fd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f7a50d-8e57-4c85-a65f-b67a64f7863c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e0f678-7f20-4315-8609-706ce3eb6e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff880f9-387c-4094-a9e4-88cd461be5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c9dcbb-f409-4b4c-9d27-695ff3e8bfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33410b2-74e1-4d2c-b3d9-c18317333081",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9190b135-d598-4b49-b51c-9e0c6a6d17c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c01d2b-5c22-4554-bf04-29b891473c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04be054d-f66b-4570-98bc-833b795f434d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3735865c-7d74-4994-8d51-d61827a1c089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96795725-b1ea-4f4c-856a-5879a515868e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb511ae-e07d-4064-aa8f-33dfb9daff67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae58c01c-6e8c-476b-b5f1-be8c26cf4306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3930a7fc-1f76-4d00-9de8-8d4cd04abf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2111149f-31fa-41fd-a83a-4d514936ff5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590473ad-91fc-4d71-8c9f-1ae2d096de7e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c73451-a16f-4ccb-ae23-bd35e81fb700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640126c4-feb9-4c16-bc5f-5256a3b7f041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ab2770-cc1f-4c8a-b319-9a5fe35cdbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc5ceb2-9570-4c38-bb8d-b3c19ba91bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cba610-4296-4b3b-a790-708744468c32",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc413d9-9237-4030-9b77-f69bc193ad7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3bc261-0a5a-4687-b62b-fe8c2f0c5af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acbe4ef-666a-46c1-a147-51f00be403ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01cf23e9-981b-4223-97fa-23e60b43d647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdea2717-2c2e-4b6d-a930-ddf981a94072",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1edc34-ff4c-4215-b38c-e077d163e08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb9d65c-8062-4e44-b176-baa56f2882d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61cd16d-45d0-4e7a-90a5-95669ccd25a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38380fa5-2fdf-4747-baf9-0a69e995c01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4e0730-4f00-4a32-b9cc-a691762f426f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cbe236-51e9-43e0-be5d-5b700f73a814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392ff238-5436-4242-bd54-9a5497e61f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2e9444-6737-4097-9675-1b340c7c89bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0cfa3be7-7907-4606-bd83-dfe67fd2a8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f979320f-26f5-4405-a011-29382503247b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f559c6-c1a3-4858-ad44-6954e13dca20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e247e08-ed47-4e07-a070-06ef82cc7402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b346b1-0c33-4a8e-b34f-339d6ce50109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a989d165-814a-4195-9fac-8e5bc47a0030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9825115b-aaf4-43ae-99b7-7e093ab336e5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dabd4a3-d31d-4646-92f5-520e6eb64c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ccdf01-c977-48c8-933c-b9cacb42f976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b2f48d-390e-4316-82e3-4ab464981c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "396ca047-6f39-4195-ba91-41e59df4adae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b68364-5fd6-4e72-8f9b-342c16b9fa0c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02dca30-546c-4842-8adf-c23bb26c0463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02577e5-1726-4795-94f1-3340dc411223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240416fa-2f00-4262-bcc1-3733c98278e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b241c163-a68f-4168-a144-48db9363fd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5bebaa-daad-4680-b5d1-c3e375d2114a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58247150-9152-418b-8fd0-d554ef775b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e105ef8-8436-4327-967a-850939ad7be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b4f370-e66d-44d9-b792-26762824485e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a79536-b857-421c-b210-81ae5e9855b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb659bae-0aaa-4b7f-9641-ef6f818e3098",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c4f01f-c02e-40c4-aaa2-81d4b293b3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2582e4-6a55-4625-9718-866384829e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec585828-4c95-4606-85d8-3d887de89a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1e9273-ac2a-492f-9f20-cd9b02a3164c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd83a1cc-e491-46bf-9262-69b641cc5dff",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d6bfc6-e124-42da-b0e7-2567f1d9a1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f5e26a-c971-4808-aaf0-e36b4b66bfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2421b6-105c-4e00-8e21-0a3a18764298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc4bfbe-ee54-454d-89bd-15dc17906eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaff8094-6826-40d2-b9d5-e0227e21b6f5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1355de7c-e72f-4b76-bdfb-7d1a4ce180d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a567ceef-108b-4077-9916-428d22fe2add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fc1096-9ba9-4bb7-b29f-bc03dcbd2ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8cdbe7-1863-46cc-bd40-8d7b7460dd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4c84a9-9f11-494e-9abd-e23809b26443",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f96fdc-b282-4193-9995-2384fef7e5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ffdf54-9e63-4971-87fa-e86202562768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2a59bf-344c-4598-9230-0b0ca92dd67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "326e01f1-bd87-479f-ac8d-5ecb36b84cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad3a810-65b1-4ccb-8ace-9be5990c31a2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77c4d4c-5de9-45a8-a26d-68db4fd2d9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89819de0-ad20-4194-9474-9ced106d29c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c5a4af-ecd6-4fed-bb28-9bd04bfc5098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a8c750-d530-4f03-9583-fd1dbdcaedbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d7275d-0e4d-4f65-a59b-278558ec8e87",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb41bcb1-10b5-4e87-9a43-bed2fbad17bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be6425d-a759-428a-b106-4930e95a6fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a299614-939f-45cc-a42b-60ea9f51f915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ede893b-d182-4538-939c-06b79a98a1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d756e01-0a32-40b7-9fec-51e1b10918e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a97859-2bb3-42f8-a72b-2c34dab3ab10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1e48f9-4833-44a4-9489-fdc65e8be46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf4be2b-767b-485d-8d26-758d91832897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "458aa182-36f5-4e59-accd-83b8ef12cdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47821d2f-8067-4a55-8b6a-af559779cebf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ede45f-b601-4953-9dfa-5ff84d89bee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ed4455-f45b-4ad4-b052-e65d5776327c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f6f813-380f-4d29-b471-fb650f204312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d550214-711b-4e1e-8568-54d2b937c1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b679cbd7-a873-4fd5-b0d5-c46032b2f8e6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593e4e63-5ab6-409e-80b8-4ef338047ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b81f2d-268e-4a60-8e34-648839ef8ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9eb166-96da-47d4-bb39-2310b0c544ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a58882f-c571-4d72-99f6-de58d107fe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255c4d29-e24d-4489-a72c-4eab56843823",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8aa4193-14e1-44a0-903e-36d907d16b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f424a37b-0585-4a0d-84ae-d6681a737852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2e86a1-b914-43df-89de-bfc4c88c1efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81f7d3c-dd2e-494c-bfad-f10feb4e1be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3fd5b5-3569-43cc-92b6-888a231cde3d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5399a9-ac3f-4c3d-9b51-fa32d0047eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2612bdc6-9c43-4ad4-8903-bc03a4ba8dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50fedef-32cb-4588-aff7-bad76e55bdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6cc9d83-e04a-4f18-93e4-4591a3a17740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fcd53d-9a6c-499c-b29a-102e9bb6c5f7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c009380-c8f1-4d71-9424-63b2311e2a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd30255-673d-46b2-8b35-f51e7e57d7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcacd33-35d0-4532-a3db-a98894744add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a88687-18b2-4be5-bcb7-a6e7da3decb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e4ba63-f770-4bb0-b43f-7411f7ecd0cd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b54dfa7-16a3-429f-a5cf-97b164ff4538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26de552d-454c-40a8-aff3-5205cce2bd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415a4722-10a9-4b53-aee5-0c4310493255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02d8d930-dd6e-45da-a990-870135ffd06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b01ebe-b5c4-4427-8905-8f77fdf9598e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1475ee5-3b83-44a1-baad-485780e4d131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6e65d2-65c8-4d95-8a68-ce5be6616226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99438ed6-d5b9-44e0-a420-2d2b16e91c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35ef16cc-45a3-4c12-996b-c978f5904e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9df3f88-0519-4ac5-92c6-a2fd478220e0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1aae86c-7f46-4b49-8be1-29eece49914b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4214c71-b67e-411d-b248-d727c004e2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58842059-a3d9-421e-9e40-1c5f9fe7da47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "071ec1a0-8021-4b6f-9751-be9c666b7175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3770f2-a64b-4611-a5bc-f3b54440224b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8363e4b4-207e-4d8e-8805-834dfda99fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d3e978-5671-41ef-9ca3-7c4142de97a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbc6dd7-0d60-4fb2-9e64-70c596c359ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe160c25-4046-4c00-a244-2c5e873e7be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303f94ef-6486-4801-8914-09d966721110",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c69989-7a40-4b99-b69d-3f9701e3f4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a678dc9d-3a0d-4f34-bc55-85f1fba32a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a27e582-3a35-4303-9aea-a3c354b5a98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84574c69-dbda-4b37-ac1c-2286866e9e2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3323aa4-d808-463f-b430-306dd2dcc5f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb9a1d7e-0989-4675-a814-b235092e9086",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a233f0d4-d834-4a41-ac77-7e4963168498",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3c367f-d1cf-41d2-b750-a7abcee1ddf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24389503-16b8-4b1c-96db-65496fe46bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "465215dd-2f21-446f-ad30-5e431b84b480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde92dbc-e1e9-4b2f-89ef-599788ae3e0d",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8b3d88-96a0-4345-8e12-fdd6c2052540",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "99d7ab08-09bf-4867-8222-0b7d5e6eb56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26168a78-a96d-4762-91b9-353911d8bdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c849f6ed-2e7a-480b-a694-30d2cd8cb3a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d12bdb0b-1b45-43a9-94e6-9ddbf99f446d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "049c5417-67ff-425d-940e-7653015f6be9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ed97ade-3b85-44c8-88b6-54fd446ebef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b82af441-29f5-4398-9b79-5d88c8813a99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "892ccd7a-4a10-40c7-81fc-89b517bbc986",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc1371e2-7be9-4f94-be50-523a282b594a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faabd1fa-cbe0-4147-9da3-01a2804eed9e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e61579d-1df6-424f-be83-b6c4670d3a74"
            }
          }
        ]
      },
      {
        "id": "56542baf-ac17-4a32-8e6c-b6ded7588c31",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bfc2740b-e54a-4aae-b5b6-4d946e1ac918",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36645040-8157-448a-8faa-954257f76040",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ee2ee4d-2499-4ad6-9907-e5682093d9a3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9acdde-c7dd-4ee0-af0c-21a57b5768a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf66cb2-d0e7-474c-9edf-f6df640f0b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45018663-2394-4b16-862b-9566e37f1663",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c04be1f-1628-4fa1-acd9-e9091a138bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fd97ce-e1c6-4b28-98fa-630c8485e22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61e80c6-3761-4d72-8b9e-c1e05b5fcadd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a437b69-1d31-4ca7-92e2-5a7f48d733e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a01f31-0c4b-4512-8329-0ad04320f553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17342d6-2f17-4f5e-91f2-d40ade3e75c3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f41c12-9783-406a-83fe-838a1c0620ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646b2ccd-9870-4350-b71c-fd1eb9d49e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5390556d-c4ea-443a-a936-1f2fc3a7e96e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da1bf3d-d1a0-4c9d-bb8f-3c4a1ea63421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de5ab06-93ba-4ac6-9731-d77eab7c501c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b1ee48-d5aa-4bc6-b34c-4af8f672ae96",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a1c300-55bd-412d-8bc8-d5d0e735a1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbde143-64cd-44a0-b9dc-5061000a3602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed39cb6-aaa0-46fd-81ca-a82726d0b0cf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752467dc-1dfa-447c-8514-93762bf3c81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ea4485-1061-4be0-9cca-d922265953ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448b192a-ae3b-44ab-ab8b-d71dedf1cfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e39473-2a20-4202-a552-f7ff36ae54fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b1b089-813d-4959-a926-0b3d1e3fec66",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301cb9ae-ed5a-4525-89c3-0dd56b6d1744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d61102-1661-4608-885e-c5a2805d88ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a781ac-b1ea-44cd-bcef-e54c6d3301fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202a979f-18ca-4c41-8434-dd64fade3e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337be4e4-02b7-405e-842b-c7ba64759b9f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0c1634-030c-40b9-a468-aa613d26d937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "020efef7-b06e-431d-a6e7-1fdb793b16b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9673136-e97a-4f06-b0a2-96fa0a8446b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2018b2d2-33b3-41aa-a7f2-ad2b213537b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c43bbce-f79c-4039-a90a-40b00bc8bfc9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f122b310-be32-4d0d-b866-acf4450c3ceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c2b75b-1db1-4d75-b3e3-282f1e929e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b343318-4df6-4f40-a539-ad5d54ec8ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99889588-af0d-4df7-b368-dbde7446570d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ed811f-5334-46a3-9941-bc8d950c5cb2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a375078e-0430-48f8-be7f-46a76cf1d7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82e9272-00d8-4a11-a82c-c811cba71e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf80194-d07e-4fa5-8d93-d20b525b02bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d29d8f-a501-40fd-8d84-a8e05600b980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882f03c3-68d4-4db7-9196-f0f3cc1463b6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a187970-ed00-4348-b52b-0f84e600f08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341d334d-7679-4b8e-80f4-9c1cd21319be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ec1cb4-9472-480e-9404-d2035a7be41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6671b8-f72b-4127-a781-86a20e930438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1dbbed-8c24-4747-9a0b-75b6ce11132d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c905762-6657-4d1d-b965-a0df572fbe01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ad8f54-ee32-4b0a-9c1f-2c407846e0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527c8c0e-8163-4b1b-9b00-187db0762270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fc92ac-2e52-4dc2-af39-a3c4382d1b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb328c0-649a-4307-a589-0c606a27442a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5dd643-e680-4bf5-8669-83588a660560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a52d5de-e3ee-4c2b-b14f-02a4e80e0fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e62b84d-011c-4892-9647-2eaef9ec1681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721fbb0b-aaf8-43f8-a2ea-6e372ce29336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecbb154-e730-497b-87af-3199beb60fda",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4b62b5-5cdd-4c42-81ba-86085c598c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b0bd7cf-1e47-408a-94b5-cf551a02d626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2538c10e-5460-4b42-bfa0-231db939a72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39749336-046f-4e29-b7eb-b12c905f582e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c153c3f-13e3-47c8-9f81-c7cc16ae0e3c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d19506c-29a7-4b5e-928d-69d52572aa13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2757ce-78fc-4955-8282-53924dc7b3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2be8937-1488-493f-bee6-f66a041da259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856e50ac-b91c-4d80-8ee9-f0adaa59a642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c0fa70-c7f4-4943-a213-aa402e453e0f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98b039a-1637-4b86-9bc7-765e5aca47f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3a16ea-b2ce-491f-8046-c94a0a5d2b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29122cff-c559-46ad-b0ed-174f10de19da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea1fed1-b0ba-4a89-88ed-c73186f33197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5419bc61-3cc3-4c0f-94f5-d829a8b6457d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87097179-82ac-49cf-b57b-33926c007774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613c5bba-8bab-4240-8fa5-c4f204c7669d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6970dd6-b508-4c2a-bb30-d9a2102fb0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a991339f-35be-4304-98f3-707f7aa73a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955cc992-905a-4fe3-a18d-8db593f7639e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1569dbc-3bc5-4b3f-8cd0-e035eacd3d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37b6f27-919e-46aa-a240-f1fe1d61a784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40395d42-bf9e-4909-8352-8d9d5f6b3098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c08d0a7-b73c-4e7d-91ee-29ea37c1438c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42338e05-d2bc-4775-bbe3-21b4112f7da7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08be74ed-aed3-482c-868b-62ac523f4c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1982a6cc-43c8-4fcd-bfe4-3819983e762c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c86e13-1ae5-4f3a-a9ca-cd5ab3d8b4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e65dc1f-07a0-4ddf-a547-d823b91a62f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9545dd91-48d8-480c-a689-f23c7cb0a7ab",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dee95e-c9f7-420e-9ed0-99b8a70f6e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5452cb-19b1-42ee-bab4-a93a5471f38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc6edf8-debb-42db-9eee-2cdc7338ff51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860352bd-bdb5-4c44-a4dd-4e03dc9d4a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f923054d-e6ca-4a17-b408-68d4f6580913",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67342e3c-0c64-4b65-9960-88bf2c350ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624fd83a-1cde-459a-aea9-be8110849e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244ef7cd-39a8-4e1d-8502-038c14797792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f86def-2d4c-485c-a51f-d380d4097924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241c942e-67a5-4ff6-9f3a-e330da6075e7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b1f9c7-226d-4695-a2f0-9b1a657be892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0eca31-857a-4827-bb2c-5fc41d290701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fa4f1c-f274-4509-856c-3801d342d1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715cb183-e418-49f6-91a8-e767fe131b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b450d8-75d8-46c7-b533-472907cf1d52",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a51567d-b691-41f9-af2b-af047e85d2dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab7f0d4-faca-4bc9-989c-84d8769268ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805e62a6-51a3-4af8-ad21-ab91af81e0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06e26a0-46e0-433b-abb8-d09d476cb213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8ad4e9-fdee-489d-a38e-6860bcccf233",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d60d4a-75fc-4c86-89f5-67bbc78e62d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2d9a8f5-8bbb-4a51-982f-4e6ba15eac7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29af67c-bc6d-4cd9-80fc-d87309fade53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1154dc4e-3f02-4fe9-aff2-123eb1e47ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e912a2f-e58e-4211-9f1b-6210dd133ca0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb8a6ae-d45e-4e75-9d8b-ff7b4ab0273b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a729f0e2-aafc-49ec-8853-d818181c22bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9483b08-0f97-4f04-a474-b7bc7d90b05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2079f03e-cdae-4d05-a067-cdb5db9742a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234df087-16dd-446c-9227-14d1f62444cb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a76fae-05a0-4572-925c-ec339e63337e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa1d8db-a5f9-46d6-bd9b-948a8527e596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5fde9e-ee3f-47d3-9b2b-2849c5d9ce06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bacc09-2a73-47b8-8d30-55a10b21adee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e93c4c-b47c-4c24-9a38-64b0ea8938d1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847eed37-3648-4667-b740-e51aa82aad3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879cff7f-f041-4df3-8a84-3a4f52415629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739565f4-a972-4482-b195-de04a90920f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62767f0e-414d-4e34-8873-7b5196d7270d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972ed189-fa3a-470f-b7a2-0f3d42b608e0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b095aab8-152e-4bc6-afd4-b5ce83faaec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da09d042-223c-40f8-9ced-bb2db46890ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae64aac-e218-4ab5-aa01-30efef0fdfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128ad72d-da1a-412f-baca-258e1f906507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deb159b-c2e8-4e22-96f0-4187d3727aff",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebdce78-dda5-4508-b9e2-aeff75187c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "546b647b-71ff-4787-9e7e-33394cf88ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa6b95f-ad76-45f0-aef7-7ff7da6f52c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397c8293-8a8b-411e-a059-2798377cb12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ff5c83-0c68-48dc-b63d-fff54213ed5d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2a25a8-0d3f-4d81-8889-ee79def68da4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de7a7e5-8bf1-475c-a514-c8d1a79499db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c0140e-cde1-4290-831b-f2b00a9f2f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4e44a1-e76d-4e76-bd81-c1b186d37275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307fc2c6-70e4-46cd-9d02-0d05b0507bbf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842157e4-c3d2-42fb-b3cb-78e48e4cd213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fcc1e8d-9e68-4e8a-bdc8-2d721f937532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f59c1db-8e26-42cc-ad33-52d2fa436479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6be8396-a213-4bcc-9b4d-96c3fb79afaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec29073-4206-4e96-8e2f-52c69a3cb470",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c964b22f-f57b-4235-b15c-57ec3136c551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af70b7ba-df78-483a-9696-a519bf072083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbf13b7-cdb0-444c-9c39-b19e9e5bc89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ab5e40-a479-40e9-884b-613d9c7cbc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2770625f-7320-413a-b320-fa699305723d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45553904-9621-4761-bf46-0b37e510416e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25bdd077-503d-4ed2-aa28-c1bf58ca7af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed580a5-1034-4a2e-8e9e-82b0d119a75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121a459e-1cd3-41f0-851b-064dfe31abd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ed05d3-d6ab-4d69-8182-442f6361d7b8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a10065-0a67-4752-a28d-4d79df8ad67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d02a9bb-b6b2-46da-b7b3-1733123d87d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d991efff-5a62-43c4-b857-1ade8d355aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfe8385-2b76-4c9c-83b4-dc7388396f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070d43a8-4d5e-4b87-9d20-db6533aaaab7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508ec01e-b71f-4665-9803-122b8f506f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec944265-a98d-4ab5-8096-60944eeb9c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e972130-f081-4da1-a245-9896bce73222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301635ca-aed0-442a-982f-39197da5160d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2579975b-b944-414b-a4e4-d749729cceca",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f73272-87e1-456d-bcc0-8d8a437be469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b013bcf-21a2-48fa-a6f1-e98475cbabbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a725ac3c-de3f-446d-ad21-7624a9b42c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf9df0b-d4f8-4ed0-b5ba-f1d7c98d641b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af5a265-8cd8-4cce-b89e-03bebd716969",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb32a0a-b078-46df-aeb9-c284115d2dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2c95cf-bc70-4515-90ad-b29ab834d6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c1ea57-4aae-4b2e-a68d-20c521a9637b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e2170b-7057-4867-9bba-f17f48a6af4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14202aed-f5f9-4feb-b0b3-1c23587a8ae8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e288ca2-5d1d-44b0-b988-03d2077512a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdeff13c-5dd2-47af-911a-6fcc7e09f3c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2cb979-cbf1-4d72-9cb9-0f34a01ebce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57aab9da-229c-4c2a-b716-041856f8531c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58052b31-0caa-443b-9e5d-394099e2e41f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9414a03b-4240-4450-b05c-1a33dc8763f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eccee9e7-c0a2-4796-a05e-6851f2c6a5a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9557b13c-3cdb-42c1-ac3d-686e87dd3df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d612cdf-933d-47dd-a61f-90c6918f0039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f21e99-6eea-40c3-9c01-d1e36ee7ad4d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b70e65-416a-4d18-8f16-d793dd27bab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d78f5b-cdd9-4153-a234-124bd37228af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce33461-85da-440a-9fd4-f1eca36df89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6d454a-6c55-454e-95c4-b9428606a10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c87d90-edca-4d64-8ce6-f273f706601f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e163e802-a518-4787-a862-c68c0ec45da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5dfcf8-a922-4102-b430-5c66d0c596a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfd9de5-5cc9-4f93-9c33-8aa1751c39c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819d5b44-434b-4d09-8952-7cb56774668d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb545ff-3fb8-449b-9334-7889a911a2dd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81091b5-9978-4c9d-a7df-7972f5d662af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b820dc-1fd6-4cbf-a59d-06cf7d08267d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf1f075-d26d-41e6-80c6-c0b3c7ea6308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a70cc56-cfea-4888-b00c-fc09f6c3e4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf3b104-2244-415b-a52c-d456c9f85f19",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38758cb4-2269-40eb-addd-37d4ae487d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f47c8f-24ee-4919-8f88-e2adfe78e48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8648e4ba-0cf3-4b3a-8f62-bde34ad043d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d807bf13-cb25-4f4c-81a9-731500d217b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4493cc0e-0fba-4ba5-b427-d6b0ab91971d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5db712-f25c-45a4-a99c-5d8d18926b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e57023-354e-4b15-a637-e1a981466b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11959783-00eb-4d40-b106-3e2bb05ee875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d51e87-cd19-44cb-835b-be0249c83051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de45e22f-ad28-442a-b8fb-b90d12aa129c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afc84bf-8245-4d26-b539-fb4808a8eb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532ba022-3f02-4b43-bd7d-52669e59195c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a43de53-c32a-402e-b19f-5ce363f0d43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8973b536-8b3a-4820-8e07-ff51768db2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1eec681-eab5-4b5a-803d-3b6703f2d253",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbdc5a5-380d-4674-9c4c-16b71ac39aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52986cf5-a7e9-4cb9-a432-50a1351d3056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191fa0a5-df2f-4274-9428-67d1e743d933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c46af9-70e1-4365-98a0-833880f7a743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb52198-fd76-442c-bce9-f2e7956e4b37",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a0c51a-6eb1-4da2-83e6-8e4706e68566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2f8163-d98b-4434-b154-8d81cdb184a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f983c1ca-fb13-4a01-8906-77640b34aad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692f9874-dc2a-47c8-97aa-59c8d2ce1b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b1bb8b-c655-4fdd-9be4-389d304ef889",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6324273-c3a9-440c-8179-06ab1aa4166b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a85035-ede0-4b49-94b2-c66089c9c223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6c479d-07a1-4678-8177-8ce000b625aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943c730b-6aac-450d-97e1-f52fe7a859bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d747c8ec-5ff1-4d73-813e-dcbb0d10a8be",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c7f2c2-af2f-46f8-b342-c3fcdb3b8c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72b02b9-443b-464f-9288-12486d8282d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d0e43c-1c84-4ac0-a182-78cdfd081b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d18e9da-9225-4572-8352-f45464d5f316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a8e21b-d538-43a0-b703-3ae5abc14ac2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d799329-13c4-420b-b825-63fea6676ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e2a10b-5fbf-4503-91b5-27e1499ffff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883118d1-933f-4841-ad67-24372c9e4055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79bfb5a-603c-4d6c-ad7e-a45be8b0e0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ece49f-144a-4e0f-b125-f7ac519fb14f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1f8d7d-34d4-4e56-b032-fb1e294c2ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfad741e-c659-4f1a-8fca-8449e4ff982c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a31f055-7e9d-419f-9d1b-e7ed86fe0513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0087a5d-299c-4664-a588-0288aeb62c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfff7066-c8ec-49d0-b411-cf3a1c896414",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b61837f-68f3-41c1-a5cf-6eff3a0547a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dac2b6e-3774-4125-84e6-ee295cdd506f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050b66f8-1259-43fa-a4f3-6833694646b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34ca036-8042-4ca1-b05c-08558fbda18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1868466a-2e8d-487c-beaf-be8e60699de0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5133b9-0a0b-4d6a-b1cb-f43fa78eaf57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b065e5-9e35-4fc1-9946-7f555f600ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a705caa-f924-4d2b-bbc4-0fd9bd37e1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af57be59-58c2-4816-bbd4-1df210cdc332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc32bad-58c6-4ad1-abbe-bd64f4297789",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bae5774-3443-4684-92e6-1fe757498332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb3c6ed-145f-47c1-ac67-f177f255876a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b966ec-1fee-4d30-9707-a0b0f31cdfc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a521395-be8a-4151-b453-00be3b51d032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e901ef3e-e63e-46b9-af03-069f9635dfd6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b92a03a-465c-4f77-a44e-e01a139310b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67984e7c-6d0b-42fe-8ebf-6698ce76fc6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a176ea1-a14f-4048-9a3d-1122f7055500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fa1e0e-484a-48ba-b33f-821138c85482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c47462-53c9-4e5c-85ab-62a022050fa1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288ad118-c149-42b3-abab-4f45c051f4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea63562-91db-4fa9-8aa1-2aee075f21b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4552f7ab-27ec-4790-927e-d16691b94b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6be9b4-5ee9-4fcf-a266-c055b8fe0df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77815174-80bc-470e-bd49-0b3e9ccb2938",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ae7e0d-eb7a-4ea9-9b53-88b7e1443baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e589c02-faf1-4bd3-addd-f9959dc752f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ef913e-fb10-42cb-ac11-be9146eda15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d238d855-fca6-4294-bb55-fe5050c0a16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c9b7a0-92fe-481e-81ca-fe1633381af4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30463a7e-d5a5-4e60-a187-336937ac3099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d72161-3b87-402a-924a-c59cd176c28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fab51b5-079a-4971-9609-4b537ae0588f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bde5417-9c77-452b-84ed-12b9ac9688e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1123300-8d48-47c5-8b17-bbda31972615",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffc6c56-b9b4-465d-aec6-49802dda4e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7abaaf6-fea7-4cfc-904e-eb02a8ac2b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d33f56-b1ba-401a-a9e7-517eed63557f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c3d3c8-1f69-49c1-92ab-1139d2880245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b41124-c94e-43c0-bd16-5a2e31fa36e2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e832c61-ea34-44f5-9835-408256a3c5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0bf4bc-5491-4095-88cc-35134bc1c753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b2c058-3d05-4abf-89d7-6a019ab54c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddeb6ca-d70a-48e4-8a2e-7bc38b40c81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d847a064-988d-423c-b40e-69ab13bb4ba0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2e47a0-a37c-4a94-8adb-750aac6bbb46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226851a4-5eaa-459d-97f6-b5151b789634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afeee6d-1345-488d-ab85-ceadf0e31e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f62f324-c3b4-4f8b-82ae-c56a89c5a975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a1da8b-42e3-48fa-88fd-14317c64062c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de3afa8-bdcc-441b-8249-018cf7508748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0ab1e3-deb8-4010-88a1-cb4501e9546a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1232f807-99ad-486a-8b26-95a404a4f392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55a8173-9921-46ca-a8c4-b352355beffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fa5861-eb49-4457-ad85-9f375d9dd96b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8942498a-7afd-4e3b-b844-7082ca02c878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5132724d-0b43-43a7-97ca-b6ba217981aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f83c5c-1f94-4e6d-af93-2e6d3c55d9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ab7e5e-88df-4f3d-8a75-40a58a8f5173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae35db8b-6d15-479f-81c8-cecc94145c19",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc28b69-3e38-444b-86c5-dae8d0f78dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "065e458b-9945-4ab8-a777-8bc5e7d87854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa113b60-c95f-4d88-a73b-049f50dbd3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faca6ff7-4860-4bb1-8f42-8e1899b871f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb21094-b81d-48c0-9d97-4bb6dad1dd66",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dace3f-f91e-4c49-998e-35ca36555066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3397749-e8ec-4c26-8470-60549fece97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ed475d-e886-4735-bee3-e0475ced4a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bee2bd0-e5e1-479e-a2a8-ca41ed72952b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6804ac-7339-43df-841b-f5e108e5f5e3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2737be-88ef-4331-956a-e11e20691016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "338bb1c4-a1e7-4ae9-b32c-626e9a842a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36349fab-342e-413c-b6ef-8012f52bbe97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8ef9b5-7491-49fd-a281-8dea1d5025fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ce862e-59c0-48f2-96a8-3f15f5b51547",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc49daeb-9f5d-44d8-84b4-0721ce8dcb49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20d04b68-a7c1-4855-adc6-229243ff8e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a152aa4-d6c0-4566-869d-6e2a4ee5e480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55018d1-1e3a-4d52-9c85-6d2899324e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8826176-7ded-4377-9867-292072382005",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b4b629-9827-4fb1-9af3-748f4e76dbd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b8a39d-d5f9-4989-9ed7-16ac1c9d857a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0c0386-8aab-4689-9c85-9c873b4ab767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff76034e-696e-46c9-84be-521c284c080c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754a9307-d513-40da-8a3d-6332b1ca3ba4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e768cbf6-557c-4fe9-9834-f27ff677c7f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e840b2b-b1c5-4352-9985-be477843a4d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196064bc-0093-447c-bd9d-2b7b350c7608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dbd6ba-21b0-4681-be44-97c4aeb4b7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e42ebf0-030e-44f4-a78d-174d239437d6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6105312-20e7-43ee-bc06-dfe0fadaff35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc517255-71c1-45eb-be1a-cdaf4776b41b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b152e8e3-ac89-4356-8f0e-4242b62ef363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e340a62-94d1-4d20-b982-5a0cc37b59cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af49b16e-075b-452d-9033-f79f9ef56043",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81614fe6-400f-4c8b-8cc3-e2b098261516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79cf5f3c-00d8-49ec-b3d3-2c5ff52b7103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f6f428-27c4-42a2-b162-82bb537e1ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14683148-5609-4f00-8357-0c5b404d7d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d83ac95-cf0e-4816-a6bf-d03bbea35603",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed986cc-84ae-4f47-9f21-2ffb50e41c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c36d3a3-2742-4f48-954e-85bfd7a4213d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f73d1d-07ec-43ba-808d-8d21fd5bef97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5383c2e0-7edb-4ea3-927b-643ecc92d115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2072df32-9e9a-48cc-96f8-eef24bf2b8fa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269443a0-b0ee-43bb-81da-4145949eb5e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a1d2ea-4e26-4529-a10b-ee2eb68a15b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39625cbc-fd5c-4299-81a6-f978cc9b3f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c6c060-f094-4f81-b9b6-3dcd3dc85754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b50778-f3ad-416d-9842-1506bf21bfd5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a756e6-2720-4e45-a496-a1fcf90918d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade2fc99-4061-4357-a25e-3282b7a7b0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b945546-9451-4b31-8d85-d1adb670d011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ba2c71-832e-4533-9f1e-15d40939c4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669b9da6-8859-467c-a599-04f4305d6a97",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1003b9-2cda-49a3-9597-a1f620316e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a370db1-3786-4f01-9274-4384620c0e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4358e2f6-98d8-49b9-9cf2-2e0343a75527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fde7654-a4b4-4806-96fc-d8d67f466778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3a0c18-7262-4c68-a788-669848ee59cd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29954c1-b6d9-4316-a37f-5609bd98a879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88315952-8a6c-4d1b-8a08-d04775772aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e28b626-0b02-4cd8-b710-f5ddba3d9bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12409347-88b6-438c-9cf8-d86e9e60b7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f07f6fb-dc38-472d-97c1-db9190c02932",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9dfcff-3aea-4548-9905-7564edcf6367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6265039-6e23-4fc1-88b2-9f3484d2e861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31913b04-fee1-45e3-b64c-52fc1173ee08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e356c37-63be-4b42-94f9-375a649a8b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a873100a-1cf1-4cad-9710-55d0c8d434b1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6698b0-e016-4ad9-a2aa-750647f21651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d640ab-c2fb-403f-9dad-dbeecff1bb39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47d6dfc-8b6a-4503-88cc-5e56613f4f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e50a912-0bba-4552-a541-74add1c93112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b6cd9c-442b-4008-b5d0-5fa2930ce684",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c319b4-a07e-46fd-a966-68aa8df570a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd1ed659-40e7-4792-8e33-661178007d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dc79e2-f091-4384-a6ab-0ad76f452319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000b138a-4abf-4c13-ab1f-92b99c0e65db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8c6b9e-82e6-415e-a15d-224496f0a2b5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75cd9cf-a2ef-40e0-aabc-d7568a83734a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78af7715-06a6-49ce-b648-e8a95e15a28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e767e04f-9ca7-4ea2-8d4d-a1c0ae1854ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3382a0f4-513a-4ece-a542-a323852d1322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f500f7c4-5023-4289-b4cb-57dacc36a75b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c86205-b6d6-4126-9dcf-e9c72f5026cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac4522a-2bb3-4445-821b-f72aee90d7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1211a79-78c6-4ad9-8ae8-75e1cddb69e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842a63a4-b54e-471b-991f-9d86bbdd219f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba67f6f-d003-4dc9-a05e-4ea2110b9354",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c3c335-7b30-4f3f-a425-a86492aa7bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "683f1d66-91c8-4a3c-82c5-541777b186b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d81dfb-c077-41cf-a2bb-c002e073b931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0968010a-8513-4e40-a0ed-5389bfab77a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda6b502-5e9b-4269-94e6-62de6d071d33",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e889847b-2c14-45b3-8718-a28ca2e1cd09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa4a1e7-3041-4417-a6a8-269ae9be9f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ac647c-ced7-4098-9c08-606c80049935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb932901-3942-4f14-965f-dadc0b6e586e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a302cc-26e3-48b8-b898-ffce53e033c8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77365634-6ced-4231-81f3-1b82f23d03cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a246281e-af4a-4e24-bf81-9edb1b7a7500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3b164c-6ca7-46ff-bdbf-919673cf0af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970a6013-37be-4ff2-aed3-6ae3b4e2d625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b000071-cd72-4f63-9f3e-73995f17af1f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a192b2-a85c-4d23-83e9-ad2c169211cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf71951b-cb29-4f1e-8c27-092fbdf857cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e410ffe-c858-42ce-9f97-a14fc44d5d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a65a19e-d76a-473f-9f49-7e25d2f13fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd6630d-ee19-4db5-ba35-dc352f20049c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ce072f-ef23-4633-ba3d-a39d515ec05f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984e6c40-d4e5-472a-bd96-cfb484cc5c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b99deb-6293-482e-994d-e32d69b78761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17172331-7e90-4621-8737-60119ef6df28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691489c3-ece6-4b4d-a6eb-a6f405100d5c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff21465f-dcec-488e-89bb-fcc753c62fac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5989dee2-161e-4730-b95d-937ea2c8bb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e3153e-f687-4167-b3b6-0168901be814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a964849d-5d8c-4dfd-94d3-aece9d0fb2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a715c6-fa72-4438-a84b-c9a2fa8b19a9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcae11e1-70d3-43b9-9ce5-453041db5159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925c527e-a9b7-42cf-b00e-c548abc1e14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5b55a2-e18c-4294-9bdf-605438dccbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1a8b02-9407-42f5-b969-7f5dd949ba7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7c3d83-16b8-4838-8a48-a19762e52924",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7165ce1c-51dc-42e6-ab84-529c13c36704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12780130-070c-4d5f-b5aa-59e06d058148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c7520a-165a-47fc-8fc3-acca0ee57f6e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5e59f9-e330-4a7b-a495-3303cd7c6416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a74df18-2265-4bd3-af94-c3b1060c3a48",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5146a83-eb5d-4468-9e89-185f7f016bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18839b99-bb73-430a-9a7c-a1fb415aedef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a86ed5e-4bea-43a2-861e-536053855bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde1776c-d248-4294-b52b-da5c830cb319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8949ec0-079b-4fe7-b3df-82e39bd139d3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb7cb44-97de-4fbb-b173-14a99fbcd9ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ed4cd6e-44d2-41d8-b3ab-a63c2ed65bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845ef1a7-14c8-4a09-9c45-100eb3dfe6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef64662-6ee0-422e-960a-012488554966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2026adbf-0ab9-40ba-b42a-a5a6477455bf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227b4ce3-e7af-4cca-86a3-39582d3902a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c658b75-a612-4be4-a018-2ad386b7b7bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c3f87e-9010-4bec-b8a6-e989c8532473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c41b879-c173-44b4-98f2-96b0296b0b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a893c41-abc7-4e50-a54e-0463c57255e1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d779acd5-7721-46c3-a81d-5007d4febf7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4cadcc-46ab-408a-a7c9-51eaddfc7e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb79d3dd-0c7f-476f-8b18-4029c0e5e61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26affb59-f9b3-45e7-b627-7a550089deec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde13e71-6185-4999-9007-3dd8295f4ea5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddffab23-df9c-435f-95dc-8867d1c60d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a7ea26-504e-46c6-b281-e63865860644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee4ea7b-546d-4517-b0a2-12f57b2013de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7129deb-67c1-4796-a9f5-6452e76df6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f07b099-56f3-48d4-9137-3a828b0c8d1a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42f4ed7-d2ad-4011-a29a-4ead194c9ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11496310-4b06-4e9d-9115-a04117e8bc2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df1e6dd-3d28-4694-8f51-d879760b14e2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9303f6-7cc7-466e-925e-c8ee18056a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f673391c-1f03-4c4c-842a-df34a9490a91",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5352bbc8-c67c-4b0e-8ad4-173a118ac72b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "520c00ca-5c35-481d-b930-4098701a169f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d91f67b-81ef-43ce-a1f7-cf521aca5e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc4fca4-1324-4d71-93ca-0d345cff1310"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f65a11b2-a7d7-4a90-9915-8bdaee26bc8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d666cc3-4a0a-4972-9967-236386808034"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6b4b195-4343-4adb-9819-e0f33234b7b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d692b66-6359-45e9-83d6-2d8cf9a6230c"
                    }
                  }
                ]
              },
              {
                "id": "6633c0bd-a87d-459f-b3b5-76c30bf72ed3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7302cfd0-fb3c-442c-8511-8565d25ec910",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340cfb31-817a-4dbb-99ea-125bd83307cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ccb91c3a-5ef9-404c-ac07-07399cfc8d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee291932-5904-4fd2-a1c7-6d4e51bdc79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "265b13c6-64f2-4e09-9ba2-e12d33eabf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa6c267-b796-49bd-9692-98e8b3c78c4e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b388ff-7724-4cf2-b011-9ac7583e8a4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "285ccead-ba2e-4cc3-9928-8169de61ebd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508fcca1-3180-475b-b10c-3a5ddd4d2136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb4e768a-de22-4894-b096-e6e104402ae7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53eacdb1-6d6f-401a-b6bb-621b8656098b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d58b300-50d1-4906-bc5f-7aca1c4ff994"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f319d9e-7ad0-4e8c-b159-e1bd07074893",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a67cebd-2e92-435c-9872-3e9c4ea3e45e"
                    }
                  }
                ]
              },
              {
                "id": "9cc67374-3288-4b09-a5c8-e98c6e27f42e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "880d72ac-0959-407d-961c-109f930c6ecd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bc904e-6adb-46e6-b8d6-15a44a89bab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "08217126-10ad-4807-ae50-18e105677ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7c9e35-57b8-4d8f-9ae3-ece645c11609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f791f8-f5e4-44cb-b281-5e2ebf91c6e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e1f38b3e-bfb3-4d57-93f8-4ebf6b9ee6ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81c39efa-3b4d-4b25-9543-a773fadd7ee3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "827d26e7-baab-4658-a52b-0b835120f29b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "987f5ea1-f250-40d7-bb19-e1c1ff6b7e57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a28d8079-f2ac-4e24-b2d8-e180fe7e298a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6f2b197-f902-4e0f-ab6c-1d5523f144b0"
                    }
                  }
                ]
              },
              {
                "id": "0f894eb2-f403-49f4-b27b-0830ee3812e1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c329f459-6f8f-4f2f-a5c7-bf89a5b1839d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e0820c69-2568-44f3-aef6-d48c3d3edc03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f24cf2b-3684-4104-b26a-a20d1ef4bee4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b369f74e-c114-4dd3-b7e7-530fed3154c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acaf2a34-f4f2-4660-888b-360b940ec179",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "41bb1e96-e608-4ce9-ab2c-ee22386fed08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd4b134f-aeed-43f3-b3da-aee8fd73bc13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08583a0e-08ea-46b4-946c-ec4cae0a6d04"
            }
          }
        ]
      },
      {
        "id": "12baedd9-c68b-4340-b9a0-9f937745797e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4ef4f446-e50c-4933-ae3e-77a4a9869723",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6fef295f-e936-4393-9562-83c06dfa802b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b795c8cf-57d4-4c8a-a78f-7ae77e3e23e0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126343fa-0780-4b2b-aabe-d11349a21c15",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6c50f331-1a7a-4ba7-bd3a-41739de7e4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62d8089-3b76-42e0-b31d-ed6fb66b2c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d83912b9-2b15-435d-b1e2-3afdf276365d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8f8323-32eb-4cfb-83d1-d34c9c9cb36d",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fb56c3-922f-4b18-b840-2bcce0d6e135",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca50f272-24d4-4f0d-899a-8dcf10540889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888358d1-1ea5-4c97-a45a-fcac0c02abfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "069ec476-1522-4542-9833-6ee7be4e166a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17fa7936-a6f1-4e15-b8c7-f3b77c44b735",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09529c69-32ab-49db-a191-d0b00058859d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "475088a7-4e64-4a5c-a631-d4f3b09614ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00bad9fd-467a-4174-a4ad-cf2bf9ee5cb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e56645c-eda1-460d-8b58-672c8fd18b0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "86e8dfcf-2cdc-4024-b9c3-7aecbb85ed15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b2238db-9777-4a65-aa4f-26f4add621ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e6f0007-e401-4d46-990a-037d28dc83e7"
            }
          }
        ]
      },
      {
        "id": "603ee02e-a90a-42c3-bb3d-b7c4c9c5512e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6f43fba2-2345-4eaa-bd4d-a9d226d369d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb034f78-7125-4ab3-a2dc-80873bb1caad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a4f37a5-f87a-4d78-a2bd-17c9280a2080",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1759fcf4-1438-497b-8ccc-69ad2feea502",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c23c6e26-dc98-4d20-a6d6-695245286df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cee05ad-c920-4631-ba37-e5847427edee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8b42838-68a1-4070-be7f-3d4c3f8dd3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18769e20-0f6b-4b6d-82e8-5039e148a54d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe04024-ae72-4ba4-a996-75f9975798d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "53fb4887-7c0d-473b-8075-c75a8be7ee65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef29f46f-419c-4c77-a966-ba87786ab957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ac7a4d3-4adf-482f-9129-eef0788d0cfc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df460cf2-a7be-44cf-919b-21d02397594d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d63a8551-29f8-41f5-967c-df3eb654ae67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5d362b4-6f99-417f-bd18-a930fe7545e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "789df9b7-01f2-4b0d-ac33-6d5941087075"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90f22bef-8901-4f69-adab-b22eadcbaecf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6828bfbd-74b9-4b33-8424-308c2391a83a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "361e1a44-ec43-4335-9b07-9896e3bc50eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a4fdde4-a8dd-4283-97c3-eeb15d203611"
            }
          }
        ]
      },
      {
        "id": "cc88e8f2-5939-4224-93d0-4a10ce47632d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "323ea64e-4bf0-49de-9c61-9c6c618ac410",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f36e3368-91f2-4fde-b322-abeb1b4909ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3037884-7c74-4e42-aeec-db073f2db51a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f6271e-358a-4950-9c4a-7a525e823046",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7138932d-265d-4bb4-a2f8-b8cc1e1d6804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9da2ec0-7b7e-4619-88c6-f5d012aadac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edab00fe-f7b4-47ca-9641-ba91a5988365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab18efe-2a82-42ee-8e88-2a0c71a26bdc",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7026379-1697-42d8-9db8-7bf1b74b38e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea60907-b856-4af7-8989-69f2af0a4960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caae720-5449-4fac-9c9c-a8118028cd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f74a2b6-d5e5-473a-a5e8-f9a8c494464f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03c7ec77-eec5-4f2f-977d-798b2b19a6ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5604f325-c54d-4b6f-9257-397f69d1e542"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cab03c74-e949-4a86-b9b8-1e84155a3cec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6269f0f-7bda-47e3-b3bb-955a5097e8ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "241d6fe4-7560-4240-8061-08bcf014262c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e60f9836-0739-4ed2-84cb-a0537ea3e95f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0204e889-2956-40a0-b4c1-9e2b804432a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f40d2675-e042-4722-8ce1-ef37f864c5a6"
            }
          }
        ]
      },
      {
        "id": "19289a9c-4278-4758-85bf-5ccb08ff2935",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6eca8224-bd5b-4de6-9c4c-eed076f070bd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4549a39-5829-4b88-8c08-b6193782c813",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a488511e-1b84-4885-b678-183af56836f1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73b4230d-01c3-4e8b-8ee3-d4e5c50662c9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02fced97-ca70-414f-bc42-cd870f51f2c1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 708.9115384615384,
      "responseMin": 6,
      "responseMax": 8335,
      "responseSd": 928.8779562241593,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685234438954,
      "completed": 1685234634168
    },
    "executions": [
      {
        "id": "26b1747a-84be-41c4-aada-c272061ec40c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f601a360-fb6a-46bc-87f1-6207ad846a04",
          "httpRequestId": "cc8e8a92-00c4-44c9-a4db-7ad6a202264c"
        },
        "item": {
          "id": "26b1747a-84be-41c4-aada-c272061ec40c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5ee00112-d31d-4649-bee0-b3695b1d3ed0",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "3e290c22-77a7-483f-a093-252f77b0b499",
        "cursor": {
          "ref": "2f9ac933-cda4-4194-ab3d-be1a9675c467",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "09152b97-7e1a-4540-8f32-2abbf051fbd0"
        },
        "item": {
          "id": "3e290c22-77a7-483f-a093-252f77b0b499",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3e7da16b-414b-4eab-921b-64cdfe0e1574",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "92e12d12-5417-4b59-8cab-4e5e6484a0c8",
        "cursor": {
          "ref": "958c8fcf-77eb-4c22-865f-f819ad80a5b6",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7ec1fd2a-6545-4b1c-afc6-76526e2b493e"
        },
        "item": {
          "id": "92e12d12-5417-4b59-8cab-4e5e6484a0c8",
          "name": "did_json"
        },
        "response": {
          "id": "84fe8220-98dc-4c33-acf7-aceffac996dd",
          "status": "OK",
          "code": 200,
          "responseTime": 1330,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062ef0da-3939-4070-99d9-4ad5675f65f8",
        "cursor": {
          "ref": "234952e0-4ec9-4d58-b11b-58670d7dac13",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "14691691-53e3-42f7-ada1-5f5a93fc2f49"
        },
        "item": {
          "id": "062ef0da-3939-4070-99d9-4ad5675f65f8",
          "name": "did:invalid"
        },
        "response": {
          "id": "75e074d4-49b4-46b7-8cef-b84dc0d4af77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062ef0da-3939-4070-99d9-4ad5675f65f8",
        "cursor": {
          "ref": "234952e0-4ec9-4d58-b11b-58670d7dac13",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "14691691-53e3-42f7-ada1-5f5a93fc2f49"
        },
        "item": {
          "id": "062ef0da-3939-4070-99d9-4ad5675f65f8",
          "name": "did:invalid"
        },
        "response": {
          "id": "75e074d4-49b4-46b7-8cef-b84dc0d4af77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e063629-d152-4e3e-8357-5bb5c42a9870",
        "cursor": {
          "ref": "47596135-bd6c-444e-84e7-1f605aa7b471",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3b4ca4cd-c12a-4245-9e14-d006bc032f80"
        },
        "item": {
          "id": "6e063629-d152-4e3e-8357-5bb5c42a9870",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "14437a81-2c04-4df9-acf0-503e68b723fc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 712,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503c3534-5458-4a4f-87c2-600aa3356f74",
        "cursor": {
          "ref": "459d090c-33b1-4a4d-8efa-aac6a6dfe887",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "89b61933-6e7a-4b1c-8986-36dc12bd193c"
        },
        "item": {
          "id": "503c3534-5458-4a4f-87c2-600aa3356f74",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8c597c7d-922e-4af2-b4c2-a77852e9ef8a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 645,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961dc866-959e-46a0-b558-c17f83df8fcf",
        "cursor": {
          "ref": "59db0d68-7c4f-40f6-9bd4-49a608810fb2",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4465a14f-a0b9-41df-b425-e22fbd65f787"
        },
        "item": {
          "id": "961dc866-959e-46a0-b558-c17f83df8fcf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "428c4ef3-d5c2-479d-aae9-be3609adafbe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669b06b2-81ae-4b2a-9238-6a750cd60f0c",
        "cursor": {
          "ref": "5a09664f-2c67-404c-bb2e-6c4ca983062c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dd9260c7-7478-4581-8788-2a17d0703bef"
        },
        "item": {
          "id": "669b06b2-81ae-4b2a-9238-6a750cd60f0c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "32e36d6c-3c47-4ee2-a66a-fe04c049896f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 647,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669b06b2-81ae-4b2a-9238-6a750cd60f0c",
        "cursor": {
          "ref": "5a09664f-2c67-404c-bb2e-6c4ca983062c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dd9260c7-7478-4581-8788-2a17d0703bef"
        },
        "item": {
          "id": "669b06b2-81ae-4b2a-9238-6a750cd60f0c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "32e36d6c-3c47-4ee2-a66a-fe04c049896f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 647,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a09e5d1-748f-430b-ba11-412dace54486",
        "cursor": {
          "ref": "124990c0-c91d-4c1c-b9de-e0276ddad685",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4bdeb7b1-e648-4474-bd5e-c49fa27dadc7"
        },
        "item": {
          "id": "3a09e5d1-748f-430b-ba11-412dace54486",
          "name": "identifiers"
        },
        "response": {
          "id": "aea2216f-279e-4e41-a54d-f2212e895deb",
          "status": "OK",
          "code": 200,
          "responseTime": 2038,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d184db5d-e926-4b95-8bde-eb629aac7117",
        "cursor": {
          "ref": "ffa73432-93c3-4025-8bcf-e2361d5f4dcc",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a493100c-d0c4-4f20-9ea5-6405258d8556"
        },
        "item": {
          "id": "d184db5d-e926-4b95-8bde-eb629aac7117",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "278f50eb-2805-4a45-9a29-58e5b4b77653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d184db5d-e926-4b95-8bde-eb629aac7117",
        "cursor": {
          "ref": "ffa73432-93c3-4025-8bcf-e2361d5f4dcc",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a493100c-d0c4-4f20-9ea5-6405258d8556"
        },
        "item": {
          "id": "d184db5d-e926-4b95-8bde-eb629aac7117",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "278f50eb-2805-4a45-9a29-58e5b4b77653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95808d6-d77a-4c98-9963-64c4af90ff5f",
        "cursor": {
          "ref": "70789cad-5505-41b5-a1f5-37eb38fe5d11",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1598de3a-a887-4d6b-a85e-cf1563f58975"
        },
        "item": {
          "id": "f95808d6-d77a-4c98-9963-64c4af90ff5f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c36df358-1cce-47fc-bc91-d97fd00f5e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb686c0f-24dd-41c1-9264-ed1cc17be9bc",
        "cursor": {
          "ref": "7a176e64-23d2-496c-8122-6b3c67e3a0a0",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ec00512f-2be9-4ef7-93c8-725bbedec0ae"
        },
        "item": {
          "id": "cb686c0f-24dd-41c1-9264-ed1cc17be9bc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c57e17f9-ef4c-4027-bed5-4afb6ec862e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45cd740-c99f-4acc-a0ed-07e3c9fb70bf",
        "cursor": {
          "ref": "8942f30f-3d56-4bea-9044-19310f8395d0",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "248177b3-d8f6-485d-89f0-1275efee909a"
        },
        "item": {
          "id": "b45cd740-c99f-4acc-a0ed-07e3c9fb70bf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "73d5ec4e-626a-4082-b98b-4466584ae192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f04122-a907-4da4-91d1-ef21be50f777",
        "cursor": {
          "ref": "fb6f5495-cf12-4a63-8bd1-174b7778b639",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8b36380c-0c34-443d-a371-04631c27d729"
        },
        "item": {
          "id": "d5f04122-a907-4da4-91d1-ef21be50f777",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8a5eab5f-2978-48e8-bdb5-362592cc42dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486a3f44-ce69-424e-a2f2-7fabbf161c9b",
        "cursor": {
          "ref": "42600623-81cd-479b-a1e3-ef51e62ab7a3",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a2625658-a920-431b-a76e-2427e95bfeee"
        },
        "item": {
          "id": "486a3f44-ce69-424e-a2f2-7fabbf161c9b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e2aa1215-6800-4cdb-9206-f71e2da6f14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6012ba48-3418-47b0-ad4f-b704f184a116",
        "cursor": {
          "ref": "da25bb4d-0e2e-4aa7-802f-7cb13589c395",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cf737040-fb3c-4f5c-a35b-9493a7daa4d6"
        },
        "item": {
          "id": "6012ba48-3418-47b0-ad4f-b704f184a116",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "073c7e15-2993-4eb3-9a72-74277c769a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a088009-0e86-4ccd-92f9-9869627a87b2",
        "cursor": {
          "ref": "5f1dff6e-cb94-4668-a293-5a3574d1f409",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c9c3c50e-eb55-4d82-aa1f-823dbce18048"
        },
        "item": {
          "id": "5a088009-0e86-4ccd-92f9-9869627a87b2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c2bf026f-df0b-416c-8174-3debeac328b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4917bdbf-01d0-4f1e-a6de-16d73ac18bb5",
        "cursor": {
          "ref": "84b12302-4758-435e-9960-b9a5ee98f033",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c7b071b5-8e0b-49a3-889f-8950ef0de5bc"
        },
        "item": {
          "id": "4917bdbf-01d0-4f1e-a6de-16d73ac18bb5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "11c1cab0-2d9a-4575-af9f-31f25088bb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e30672-caa9-4206-8470-5c62878ac758",
        "cursor": {
          "ref": "b475db34-8d54-4866-8f71-4a586495f56a",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "09ab2906-5e86-41ca-9bf8-fd8431d97cb9"
        },
        "item": {
          "id": "73e30672-caa9-4206-8470-5c62878ac758",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0c2fe8f2-102e-4422-8fe1-efeb8832fd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4cca66-63a1-40e6-9dad-54c4c8d3fc12",
        "cursor": {
          "ref": "63d0e1f1-3147-466d-bbe5-6e65a1e599b6",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8221b696-e3aa-4c07-bbac-cd3c35b0ecfd"
        },
        "item": {
          "id": "7a4cca66-63a1-40e6-9dad-54c4c8d3fc12",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9a516342-e1f9-4d9b-ba60-d4733e7cc3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1b9379-be1b-4802-8b00-cf816f41be9b",
        "cursor": {
          "ref": "09777236-9247-4c68-b08f-fad0a2251eb5",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3e2ac54e-05c9-4f03-bde3-20f4fbc3589c"
        },
        "item": {
          "id": "ce1b9379-be1b-4802-8b00-cf816f41be9b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cdd63f43-8473-4dff-9cba-5b1b82e294d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4c53cc-80aa-4244-a613-61051d4eca1d",
        "cursor": {
          "ref": "753db94f-db78-4167-8b5d-0ec34bd19641",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "93956533-9f62-4ea9-aa5e-d763856140fa"
        },
        "item": {
          "id": "1e4c53cc-80aa-4244-a613-61051d4eca1d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "90ed5646-5337-49d6-8357-b5f56493bbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bccf715-b69b-47b1-a2f3-b372d20af76c",
        "cursor": {
          "ref": "7c686418-0ef5-488a-9f0a-dc7c2917d1f4",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "99119565-79ed-46b5-bbf8-dc8c28e122da"
        },
        "item": {
          "id": "5bccf715-b69b-47b1-a2f3-b372d20af76c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a38825d7-e9f7-4f71-ac8a-7f42933af242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5f0189-7ad9-4c6b-9f13-7b3bb71bccf7",
        "cursor": {
          "ref": "64ec68ec-55e4-4e93-9d3a-287d2b6f5a12",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cb4daf3b-dc4b-48c3-8216-758a5c517727"
        },
        "item": {
          "id": "5c5f0189-7ad9-4c6b-9f13-7b3bb71bccf7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ebc9efe6-2052-4956-a812-bbc510b6d476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dc6d05-02a7-45ac-8f68-46d628eabb33",
        "cursor": {
          "ref": "98eaad41-ec1a-4be1-8ba1-746a06d96012",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ad94bbc8-7edb-4a73-a275-077db6a35cc9"
        },
        "item": {
          "id": "d1dc6d05-02a7-45ac-8f68-46d628eabb33",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "487ea4c9-a24e-425d-ac6e-41a9ad78b90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81de79ff-5e8a-415c-b813-8bffd1221497",
        "cursor": {
          "ref": "eeb208d6-c494-4b85-a12c-e912711a1f9e",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "abcc2f6a-f090-421b-884a-cef338751e0c"
        },
        "item": {
          "id": "81de79ff-5e8a-415c-b813-8bffd1221497",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d1073e1a-b06d-4110-b7e0-707c83b4ffc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e14e376-4ee9-437a-86b4-b1ec4e2b2f3c",
        "cursor": {
          "ref": "e8a69917-959e-4d69-9fe4-5715be197d76",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fc4a2458-e97c-4440-922e-ea4fc3f0b27a"
        },
        "item": {
          "id": "2e14e376-4ee9-437a-86b4-b1ec4e2b2f3c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7d20bed0-58a8-454f-9fc2-7b66b30dbc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdcaf6a-4584-44e7-89b7-0d98d8118387",
        "cursor": {
          "ref": "1d351f49-4e47-4ad9-9bcf-c91cce2e443f",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4cdd874b-3b6b-4e07-9268-736011471158"
        },
        "item": {
          "id": "bfdcaf6a-4584-44e7-89b7-0d98d8118387",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "32d79bd2-4e3f-4ab1-b497-8ea1e415c63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5524b38a-3c75-475a-a20e-e3a27a2c5630",
        "cursor": {
          "ref": "5c6bb294-d184-4dc7-a3ec-350c72a433f8",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "676ae231-b153-4329-b078-e754b1d81c37"
        },
        "item": {
          "id": "5524b38a-3c75-475a-a20e-e3a27a2c5630",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1a5c5bb3-85fc-490e-bf25-761aa925de3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75792941-2411-490e-ab5f-529c8c91a430",
        "cursor": {
          "ref": "ff8b75a3-85f3-4075-9997-58d2f0fd9fa9",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "637bd64c-09d4-49e9-a0ab-46fead82e0d1"
        },
        "item": {
          "id": "75792941-2411-490e-ab5f-529c8c91a430",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0acf6f87-69ad-48ee-b490-ee1da1456c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19aeca47-6e93-4e9a-b45b-ecf92baa8886",
        "cursor": {
          "ref": "aa8f770d-8f5e-4fa3-b98a-a78804006e75",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "64658984-7f13-48a3-8155-6b658ecf4d63"
        },
        "item": {
          "id": "19aeca47-6e93-4e9a-b45b-ecf92baa8886",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "27a2d9b8-6430-4356-894e-ed6053d38183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bed3d76-ebfb-41e7-8c13-12c46ae14326",
        "cursor": {
          "ref": "76937350-059c-4300-b3b9-1e35c5a2a13b",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6358b9fe-8709-4143-9a8e-41b111cb036b"
        },
        "item": {
          "id": "8bed3d76-ebfb-41e7-8c13-12c46ae14326",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5dc5abb9-a664-4a7d-9bb3-d604a23f26ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac757a25-d961-40e8-bae2-fe6814ccdc04",
        "cursor": {
          "ref": "c6d4496c-00a4-425d-83cc-fa9551fe5c5d",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bc69e345-305f-4922-83b4-60a01381c6b1"
        },
        "item": {
          "id": "ac757a25-d961-40e8-bae2-fe6814ccdc04",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "93d4d07f-0e75-49db-b1a1-fe726ffe5e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978b3886-28ed-48fb-a82a-b7ad2a02e070",
        "cursor": {
          "ref": "c9f9a97f-eeee-4f6c-ba53-abc04cca37c4",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3759fc8b-0ae6-4c63-b3d7-fe06f0721650"
        },
        "item": {
          "id": "978b3886-28ed-48fb-a82a-b7ad2a02e070",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "75541349-acd2-4df5-bb6a-b75e0d641617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f5712d-917e-4cd2-99a5-e3dcf5ae97fb",
        "cursor": {
          "ref": "61a66a29-80b7-4b5a-bafb-29f0a89a2670",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d85d150c-9831-4b35-bf85-88262b590332"
        },
        "item": {
          "id": "42f5712d-917e-4cd2-99a5-e3dcf5ae97fb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d3cd5b16-0707-4182-8bf4-fa3ea806268f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56962020-c2ea-44fd-b308-47840c76849c",
        "cursor": {
          "ref": "8362a236-46d2-4227-bc6f-9813fe538db3",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4857c0ce-2f8e-4af9-9af3-85232d0ef777"
        },
        "item": {
          "id": "56962020-c2ea-44fd-b308-47840c76849c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "31786cb7-c105-4eb8-a2b6-9bed78bdf594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66136ec-bd74-4e59-97a4-f4b068098363",
        "cursor": {
          "ref": "c6408084-bc27-4905-9247-760fc584aba8",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5d136742-9029-4343-810e-c865044501e0"
        },
        "item": {
          "id": "b66136ec-bd74-4e59-97a4-f4b068098363",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f515a2a4-5366-49b7-afaa-4a555ab34007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e5510b-6747-4b02-8172-0238891ce71f",
        "cursor": {
          "ref": "d930a38d-31a0-4054-ad8c-0fa7acde4c3c",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "575f4d8b-7f75-4bd3-b76d-db7c6306d243"
        },
        "item": {
          "id": "d8e5510b-6747-4b02-8172-0238891ce71f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6ae9b5b9-d2b5-45d8-9d6a-a9112b80b98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07af79b-9cb6-4b41-afae-067f5c42f8e8",
        "cursor": {
          "ref": "0f7bdfd1-152e-4e76-bc6c-ae418c441663",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2b4d09f7-864e-4dcb-9cbf-a78b9cdc391e"
        },
        "item": {
          "id": "c07af79b-9cb6-4b41-afae-067f5c42f8e8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7965cda7-0d31-45dc-9cbd-40a7291e2c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f736f4e-1157-4120-a3d3-e2996d2536f8",
        "cursor": {
          "ref": "2234407c-520f-44a2-a655-dc8f70b46d48",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2c584172-2e89-4a02-b57c-8df7d5073ee4"
        },
        "item": {
          "id": "4f736f4e-1157-4120-a3d3-e2996d2536f8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "157c3037-d806-450d-8c20-9533ccc11ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86a9e56-46fc-45b1-b074-034642fa9e1a",
        "cursor": {
          "ref": "d105ae79-f0fc-42d0-8b7a-7df1f3a4701b",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1eb12cd7-0649-4b01-b91e-e3cadef3accb"
        },
        "item": {
          "id": "a86a9e56-46fc-45b1-b074-034642fa9e1a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "742d3183-3d5f-4341-a964-1174e90771d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26a701c-d40b-4b8e-8373-d7652f43f96c",
        "cursor": {
          "ref": "147098fa-ae17-44a6-8cf5-38730b914691",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c904effe-ba17-4dc2-b6b8-ef867d7657c0"
        },
        "item": {
          "id": "d26a701c-d40b-4b8e-8373-d7652f43f96c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ac992313-bff3-4153-a674-4d1876a1c498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfef2e9-1628-4b41-82cc-af7f07b8bacf",
        "cursor": {
          "ref": "418dc504-d415-40ce-b338-895baf119609",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4f4bcc90-f2b3-4f15-a4b3-4e3f1c4efa32"
        },
        "item": {
          "id": "bbfef2e9-1628-4b41-82cc-af7f07b8bacf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "03d8529c-5940-4e3b-b610-8b8e2ead7b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c570eb82-9236-40f4-8823-2c3b114a8205",
        "cursor": {
          "ref": "096cba49-69a8-4f2d-9a84-c0a8c737bf92",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2b56648e-cc58-411c-bc0f-711a977ce1e6"
        },
        "item": {
          "id": "c570eb82-9236-40f4-8823-2c3b114a8205",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e3957eeb-40c8-4d86-af09-64e32cd594b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da9f4aa-4c96-4871-8325-b003f8480038",
        "cursor": {
          "ref": "6b72485a-5f4d-458f-bb13-92ad5ecae343",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f9b5bddb-f06b-413d-8332-f6bfcf92f9a5"
        },
        "item": {
          "id": "6da9f4aa-4c96-4871-8325-b003f8480038",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "51990665-d2ea-45e0-add4-66066de2bb16",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 883,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036cf9ba-b932-4fd8-9b87-0691dae530fa",
        "cursor": {
          "ref": "84015389-e8d8-4af5-897b-88d3f14f7971",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8368f31e-ede5-4f14-a090-f89afc654fca"
        },
        "item": {
          "id": "036cf9ba-b932-4fd8-9b87-0691dae530fa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cba2f765-85dc-4893-b611-fdbea333fd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece64364-a646-43e4-b275-f64ff10d96a3",
        "cursor": {
          "ref": "eae334ad-c46d-45cd-b4a1-379dcc6f11e9",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6f242080-62ca-4515-bd1a-f2e2a738c53c"
        },
        "item": {
          "id": "ece64364-a646-43e4-b275-f64ff10d96a3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5d4646da-e8f2-40ea-ba46-9f64e088dae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a459392-d052-46aa-978d-eb80bc8e5ac9",
        "cursor": {
          "ref": "b60ecf69-8399-48fe-a459-f1ecc2b4f1b9",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3357d8b5-1d46-40ab-98e5-8769778add1e"
        },
        "item": {
          "id": "0a459392-d052-46aa-978d-eb80bc8e5ac9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3050b609-0cd6-4639-88d3-f56575cd1346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0534aa2-6904-4506-ad7b-18e38690ac92",
        "cursor": {
          "ref": "4fa00105-1fb1-42a1-a1f7-6dd9fb02607b",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f6b48211-e891-44eb-88d3-7a2c362272e9"
        },
        "item": {
          "id": "e0534aa2-6904-4506-ad7b-18e38690ac92",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "20ed5bcb-2b53-49b6-9c94-4058c4f6d7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2877ee0e-8939-4c59-bd5f-15daa331db4b",
        "cursor": {
          "ref": "9e9ef7e1-ba67-44bc-aa32-dfb524fee752",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "53af0573-a946-4451-8a82-db4a0d4f18ce"
        },
        "item": {
          "id": "2877ee0e-8939-4c59-bd5f-15daa331db4b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "593bda41-3fd6-4e2a-b114-9ac863d55f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69f9634-4ac1-407f-8da9-fa4e5667b74b",
        "cursor": {
          "ref": "14f89307-2843-4c1b-94c9-de7156971271",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ab11cef0-f79d-4b7d-80d1-bd6ac631df20"
        },
        "item": {
          "id": "f69f9634-4ac1-407f-8da9-fa4e5667b74b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "50d8f9f7-0477-4285-8a0a-58c54cad3180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b592fc-01aa-4661-bbab-3767e4977b12",
        "cursor": {
          "ref": "942af4c1-c521-4de3-a79b-aaa900baba9b",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "daa5041f-3aa3-46ef-b7ab-d0400c2d03cf"
        },
        "item": {
          "id": "36b592fc-01aa-4661-bbab-3767e4977b12",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3f415a1e-3679-4e82-9806-6b5b124dcfe2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 808,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1424813-5ec3-4a4d-adf2-e8435b84d666",
        "cursor": {
          "ref": "332078fc-52c4-4c77-8281-ddfd34c05f9a",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a336ba4a-be21-4fc9-ad0b-c39c75ac071f"
        },
        "item": {
          "id": "b1424813-5ec3-4a4d-adf2-e8435b84d666",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "aaf403f4-6c7d-43d2-95f3-c90d3ffe57a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c311e09c-470b-4c8d-b31d-a4e4f68fbf40",
        "cursor": {
          "ref": "a3c891d1-88fd-4f1b-8799-922f7fa18062",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "11e5ee21-897d-4388-9815-41c1eb9cbfdf"
        },
        "item": {
          "id": "c311e09c-470b-4c8d-b31d-a4e4f68fbf40",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "91b6b4e3-78d3-40ed-98a1-4b794e93e2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39210e2-b796-4eb3-ae72-ef3239a62261",
        "cursor": {
          "ref": "8e40529b-37be-404b-afe2-55846d569ffb",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "078d9a29-d304-4da7-b3cc-8f57b93d7282"
        },
        "item": {
          "id": "f39210e2-b796-4eb3-ae72-ef3239a62261",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4c1acf66-e2af-4e05-b5be-afef304305eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93db54c-cc89-43fc-a55f-16916a76d3ca",
        "cursor": {
          "ref": "f5549f5b-c009-4d37-82a9-5ea7b26ffcd2",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "35dee7ec-3cca-4759-83d9-31f1d3d333ec"
        },
        "item": {
          "id": "b93db54c-cc89-43fc-a55f-16916a76d3ca",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "092e70c8-d712-482f-8552-9cb57be14a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c701db-d1bc-4a6f-a625-afb3bba13e8c",
        "cursor": {
          "ref": "5ddb2033-1376-404c-a119-2ed0eb02455c",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "31b37b68-0b9f-4400-8d60-7747690c7dfb"
        },
        "item": {
          "id": "a2c701db-d1bc-4a6f-a625-afb3bba13e8c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dd980b8d-499f-4929-ba7b-b6e6bda16b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17d596d-c386-46ae-8f9d-4765cfff0620",
        "cursor": {
          "ref": "44148e91-b968-4fe5-90b5-cb641c9b13fa",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "712ecb7f-344b-4bb0-b0ec-cefe2993b0c1"
        },
        "item": {
          "id": "c17d596d-c386-46ae-8f9d-4765cfff0620",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "17d4fa55-5d7b-4747-be2f-fcceeaf269a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f4ac6c-be65-4e15-82bd-420864070f57",
        "cursor": {
          "ref": "a90197fa-a9b4-4111-9f54-a85767882281",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "de660935-f26c-4679-9dee-7b29524aad72"
        },
        "item": {
          "id": "44f4ac6c-be65-4e15-82bd-420864070f57",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ee0683e4-673e-4b93-b9e2-178bfc97af68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a4de07-e441-4b83-8fbf-03930793bb12",
        "cursor": {
          "ref": "4b5ecabb-adc2-4379-97e6-6ce5b5ed0b8e",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "aed20ff5-8155-4209-a5ad-a47dccbe3ea5"
        },
        "item": {
          "id": "46a4de07-e441-4b83-8fbf-03930793bb12",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "aea99f1e-4558-4479-ba59-09cc38960415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db7b8bb-775d-426a-bae6-28509a5acdcc",
        "cursor": {
          "ref": "fa7c357a-43ae-482c-8eb1-443eb4dd3082",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6ad49ab8-f915-4b61-b3de-9e37218401f1"
        },
        "item": {
          "id": "2db7b8bb-775d-426a-bae6-28509a5acdcc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ae2588a3-2055-4fa6-ad44-11c8a64f3bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eacd389-46ee-4286-a403-5b11b0e64e5f",
        "cursor": {
          "ref": "6732e3fe-9a16-454e-a105-773cb287944b",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "02770380-ccaf-4e2b-bfce-c66eda4da9b4"
        },
        "item": {
          "id": "5eacd389-46ee-4286-a403-5b11b0e64e5f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2116f352-2d45-4e54-9db2-c78a6edaa329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73372e5-46fb-4655-8f34-c87fbccb83e0",
        "cursor": {
          "ref": "cfe58237-fc71-4a33-bdbc-91e39683f409",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e4598cdb-fe5f-477d-bd9e-703d7f483002"
        },
        "item": {
          "id": "a73372e5-46fb-4655-8f34-c87fbccb83e0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cc1e5026-292d-432a-8e4e-bc5bd57e2e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf354787-2261-4b0b-a564-6df02ccc66cd",
        "cursor": {
          "ref": "312e7a9a-7ca4-415e-bca6-61f0e8a32b65",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c7aca34a-dccd-469b-86b5-8912ee509b70"
        },
        "item": {
          "id": "bf354787-2261-4b0b-a564-6df02ccc66cd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "06bdb662-8ecf-4c73-88cf-bfbe81489669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3ce359-9e5e-406c-8fb7-fd68bfeb29fc",
        "cursor": {
          "ref": "88d04797-8a55-4294-8f06-cdfb011be9da",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "536a23ad-a4c2-4315-89ff-5f89ba6bfb7f"
        },
        "item": {
          "id": "2a3ce359-9e5e-406c-8fb7-fd68bfeb29fc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8f738725-0afb-4028-9363-20a6ae7cc44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa31d1f-63a5-4abf-8ed3-ddb11a65fd9d",
        "cursor": {
          "ref": "9fce1a1c-f8e5-4a14-b6e8-b84cdc70545c",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6090ab2c-03bf-4a2e-8b29-6887b6dce753"
        },
        "item": {
          "id": "1aa31d1f-63a5-4abf-8ed3-ddb11a65fd9d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3db1e264-cb70-40ed-a1c3-fb414955b49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84a7610-1a06-42e2-ab05-bea022b6d2c0",
        "cursor": {
          "ref": "90179dd9-7cb5-4df0-b724-4d3a69a0f492",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "30f9b0b7-c7cf-4cdd-8e6b-5c35ad43e2b8"
        },
        "item": {
          "id": "d84a7610-1a06-42e2-ab05-bea022b6d2c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fdc3983b-8ad0-4fa4-af40-ef2783d5e82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465f65c1-5094-4bd7-a356-b79c1f2fb34d",
        "cursor": {
          "ref": "d64140fe-89f9-4496-8c98-774045df3fc6",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "968bc591-f166-4ede-b4fd-119ac14dc826"
        },
        "item": {
          "id": "465f65c1-5094-4bd7-a356-b79c1f2fb34d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "52bf3afd-d9be-44a0-a6d7-6f297f31f73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a24c78-e120-4eeb-b542-116e2b1b2d28",
        "cursor": {
          "ref": "8414a52d-db23-4158-b157-9cf82bd2a5dd",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "01036e84-2df7-43b5-8e61-0bf9f1d49cf5"
        },
        "item": {
          "id": "f2a24c78-e120-4eeb-b542-116e2b1b2d28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "46926568-52a8-49f7-85cb-849dd45175e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7072e2bd-aefd-4811-bf0b-17d970175483",
        "cursor": {
          "ref": "9e75e482-5ddd-4807-be38-c1b04d277704",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "10dddaaa-24bd-4434-8381-cbdad2400af1"
        },
        "item": {
          "id": "7072e2bd-aefd-4811-bf0b-17d970175483",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ac61bead-5329-444f-ba48-7efcb4071bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91cfaf1-eeae-4612-a69f-19cc609127f1",
        "cursor": {
          "ref": "bbd2f6d4-3f55-457e-8568-327267ab5d9e",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6d214286-39e4-4d73-958c-7ee025da840e"
        },
        "item": {
          "id": "e91cfaf1-eeae-4612-a69f-19cc609127f1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "795dc719-6de8-4992-a1d4-9247097aa4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9173d1c6-8c3c-438e-aece-033c87957d73",
        "cursor": {
          "ref": "9c2b9eea-f45d-4ab9-a813-73befdec5408",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9a18dd36-59da-4613-ba45-38ca11f1ab9a"
        },
        "item": {
          "id": "9173d1c6-8c3c-438e-aece-033c87957d73",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1875315a-9368-4ad4-83b2-75bd8cd113d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e8c08d-f04f-40da-af20-3f91768c4ba7",
        "cursor": {
          "ref": "c1e18d3f-cf15-4439-873a-955779e623f1",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3f3fd19b-12a5-4fc1-9311-135ff4b96571"
        },
        "item": {
          "id": "10e8c08d-f04f-40da-af20-3f91768c4ba7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fcc39ad3-e846-4819-99dd-e2286b5034a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086faf20-14d7-4133-98a3-d9b15e7b2188",
        "cursor": {
          "ref": "e7488ac9-699a-4a39-a088-f4f71a944826",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1adce8bb-1f03-47e5-8e39-dc1e02f96003"
        },
        "item": {
          "id": "086faf20-14d7-4133-98a3-d9b15e7b2188",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6d3ecf4e-0d73-44f1-a45c-945c0719596f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbff183-22e5-44c7-8605-27103ea96a4c",
        "cursor": {
          "ref": "4d77fdf4-e0b8-45fb-81cd-ce5b814d8f40",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9a2050aa-557e-4170-afda-2313018914d8"
        },
        "item": {
          "id": "7bbff183-22e5-44c7-8605-27103ea96a4c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9568e1e4-9291-4f78-a251-00efa9194f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ef6cb3-9833-4ce0-bc41-e9bf0c2dff8b",
        "cursor": {
          "ref": "6e931c1f-37c7-4a4b-8d71-96965f7ef562",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "87359f3d-1510-44de-ab7e-da4aa24c099c"
        },
        "item": {
          "id": "a8ef6cb3-9833-4ce0-bc41-e9bf0c2dff8b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bc8beabc-d00d-4e0b-b4a8-1c114decd1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ee3656-03dd-4a1d-be5b-0d3b5d2125f1",
        "cursor": {
          "ref": "50bbac1b-8410-4e55-a80d-cc81db7ab291",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "503a96c1-16a2-400e-b2a1-9fdef302e4c5"
        },
        "item": {
          "id": "15ee3656-03dd-4a1d-be5b-0d3b5d2125f1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "91baf702-fda8-4875-acd4-27fbbcc2f4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca37b4c-6b16-4d8f-adae-402b56e6ac28",
        "cursor": {
          "ref": "cba4d691-bba3-447c-858e-97bdd11d63e5",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8e99d689-4ed7-4266-ab5e-1ad11da76421"
        },
        "item": {
          "id": "0ca37b4c-6b16-4d8f-adae-402b56e6ac28",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c95a1b7f-ce74-4675-943d-4cca037947a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f307141e-7f7b-4e41-b552-d3875402b867",
        "cursor": {
          "ref": "6b712f20-d95b-410d-abe9-9f198bf04797",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "73006336-c1bb-4127-b4e2-b790b38c1ae6"
        },
        "item": {
          "id": "f307141e-7f7b-4e41-b552-d3875402b867",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "841d0b15-8d33-4a10-a598-652c38e8a24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac9643a-5f2e-46fe-8963-847874d9bee8",
        "cursor": {
          "ref": "be2f5d8d-2245-4920-a691-21e86aa10121",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "45b431dd-f5d9-4a4a-abce-215d72df70d3"
        },
        "item": {
          "id": "9ac9643a-5f2e-46fe-8963-847874d9bee8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c98e6c66-be5a-4173-8aa5-29f6c8dd40be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da69696-52f4-42da-a17b-4057b78d2d91",
        "cursor": {
          "ref": "bada60a2-2a80-4367-958f-29627b6599d6",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "640d97a5-b542-4ee4-85c8-7d70217947bc"
        },
        "item": {
          "id": "2da69696-52f4-42da-a17b-4057b78d2d91",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a817d22f-5016-48f1-8d35-ecd8084b5796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce7d9b4-3461-4829-bd23-507e86c637a6",
        "cursor": {
          "ref": "29a272e6-bb61-4316-9fcb-3c551774f132",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f9f8979b-9cd6-47fc-b55d-cbbb6f9a312e"
        },
        "item": {
          "id": "1ce7d9b4-3461-4829-bd23-507e86c637a6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "672314ed-a60d-4e43-be3b-a94591115d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcac5e5-2c5b-42cb-a68d-34ab4cb4cf8b",
        "cursor": {
          "ref": "71b4f693-2af5-4d03-8e86-b3ae251b8d35",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "94ef0301-5bfc-4761-8586-d3900742cd3b"
        },
        "item": {
          "id": "2dcac5e5-2c5b-42cb-a68d-34ab4cb4cf8b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "199c227e-2036-4fa6-a16e-882c6b916319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242baf91-b08b-410a-8b98-a2435507309f",
        "cursor": {
          "ref": "a3964319-d3f4-4d5a-8f8f-e6ee60835bd4",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fcce72a5-63e3-47b3-b257-f624019a13a3"
        },
        "item": {
          "id": "242baf91-b08b-410a-8b98-a2435507309f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a7595eb8-ea1c-4c6e-9795-99d4540f2f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf68295-f46d-46d3-a717-99566841fa88",
        "cursor": {
          "ref": "0d07a19f-6133-44de-8b30-b235103bdff5",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3e02993a-369c-4c1e-a3aa-e7795a7ad60f"
        },
        "item": {
          "id": "dcf68295-f46d-46d3-a717-99566841fa88",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0542149b-83b6-4fca-98c9-2063b3169026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a00442-17e6-46ad-82c0-dd9945d92084",
        "cursor": {
          "ref": "b6b0d752-eea8-408a-9791-e75ddd325005",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c7c3ff90-1c97-4df2-93c8-ec494b0e4fb3"
        },
        "item": {
          "id": "d3a00442-17e6-46ad-82c0-dd9945d92084",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "74b120f6-5d18-4a9c-b8e9-64ee3f972921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2d61a0-1273-49ab-9e56-c716c16c1d64",
        "cursor": {
          "ref": "358dd93f-9535-43f7-9780-20a30451bfb3",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "615fb27f-7c10-4f04-9771-8da2a49bc969"
        },
        "item": {
          "id": "fe2d61a0-1273-49ab-9e56-c716c16c1d64",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fc4663c7-9662-4a92-8281-7ca5ae45f279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136e206f-8cd8-497e-b444-74412f2995f7",
        "cursor": {
          "ref": "2493e68b-d05c-406b-ab5c-640c6ddbf167",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "28a5d9c2-d41b-4a7c-afdb-ee416e61c9e5"
        },
        "item": {
          "id": "136e206f-8cd8-497e-b444-74412f2995f7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f6af7fb8-7723-422d-99b1-9fe92aa016b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0a9fa0-780b-4329-ae5f-630162b3a09d",
        "cursor": {
          "ref": "56dd5949-c7fc-4feb-80cf-6b0e8c52b825",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e1dba1e8-85b8-4857-b6f4-7aba4e9e4baf"
        },
        "item": {
          "id": "0a0a9fa0-780b-4329-ae5f-630162b3a09d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d52cdaf6-4fd3-490a-908c-9793bf0ddd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ada7ab-6036-4c7f-930b-9500ef246eab",
        "cursor": {
          "ref": "37965436-3e23-4ec5-8e01-d431304964f7",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "83b71803-ebbc-4df4-8ef3-66c871a06ec6"
        },
        "item": {
          "id": "10ada7ab-6036-4c7f-930b-9500ef246eab",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "692d9247-f7fe-4252-99d9-5f5eda240895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128f8950-1506-40ed-9908-2db2ccffc65f",
        "cursor": {
          "ref": "79ddd541-197a-46bb-9376-12deb3f0bd10",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6b346f4e-eb4e-48c4-8337-15c91855601e"
        },
        "item": {
          "id": "128f8950-1506-40ed-9908-2db2ccffc65f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "81a41274-605a-4ac1-a976-93e189368038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4497a3b9-1011-47d1-98e1-7e884c60fd0c",
        "cursor": {
          "ref": "dd328cdb-298c-4e14-b8cd-a8d7a3791809",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "92413ef7-4e4d-4d52-a5c5-da209a9599ee"
        },
        "item": {
          "id": "4497a3b9-1011-47d1-98e1-7e884c60fd0c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fdbbb38a-ae47-46c9-bd76-632c038dcc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8e361c-221f-416f-ae3e-241a485927f4",
        "cursor": {
          "ref": "1e6851f9-3cbc-4d68-8a92-4db0890c0da8",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "381c4793-f7b9-4e6d-bc8f-b435b85a8164"
        },
        "item": {
          "id": "2b8e361c-221f-416f-ae3e-241a485927f4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b15c10d5-fbd1-465e-808a-09736b6606af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a72a4c4-3824-4836-bdfb-a4191946d859",
        "cursor": {
          "ref": "5bedcd96-7ec4-43bf-93af-c8c21c70c908",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6508d13c-c8ec-49c3-a175-3063485fd6a2"
        },
        "item": {
          "id": "7a72a4c4-3824-4836-bdfb-a4191946d859",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e42d4f71-3803-4971-aae3-f264aa75a64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d809594-ccee-4f0d-bf83-4e1d9716cee3",
        "cursor": {
          "ref": "1f696564-d740-47c0-a7b1-0e77cd8c827b",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "835bb55e-df56-4cb4-b991-0342618d42a7"
        },
        "item": {
          "id": "2d809594-ccee-4f0d-bf83-4e1d9716cee3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "945ce757-e7a1-4ec3-863c-7078dc175e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73df477-e76b-471a-a94c-5b577d861422",
        "cursor": {
          "ref": "58643ced-3017-4bf6-be51-11f25f5a346a",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7c243534-37ce-414f-9440-e7b14aadbe72"
        },
        "item": {
          "id": "f73df477-e76b-471a-a94c-5b577d861422",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f1d5e46e-a808-46c9-a627-fd670096534a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9ec1d7-c8a5-4da4-af09-628447a9b024",
        "cursor": {
          "ref": "122f5e83-0b9c-47a1-bcd8-486ba86339bf",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "541453b6-b7a3-41dc-88f5-35c69df957f3"
        },
        "item": {
          "id": "8e9ec1d7-c8a5-4da4-af09-628447a9b024",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c9b5f802-6dd7-40e0-a46d-96c66e64e7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec2bc42-daf1-4fbb-affc-bc5d1b169b58",
        "cursor": {
          "ref": "e412324e-d4fa-4540-be88-b259f7e1f92e",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "441084c2-fcf6-490d-9273-877f7fd38954"
        },
        "item": {
          "id": "fec2bc42-daf1-4fbb-affc-bc5d1b169b58",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "07c41727-b9c5-4453-ac91-ce1fd45b6624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f458d2-6c05-4001-a47b-30b67445e5dc",
        "cursor": {
          "ref": "88930943-d336-47ad-9c12-43b213b0ff78",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "db18e02d-13e9-4bc3-a3f4-dcb8bb484a79"
        },
        "item": {
          "id": "97f458d2-6c05-4001-a47b-30b67445e5dc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7a4892e3-a8d3-4cbe-8824-0702983b3efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdd58a0-daad-48af-b5d1-981a83a9cf68",
        "cursor": {
          "ref": "ac367d80-3b7d-4d04-89c6-7a7e1044c4f9",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "518f1f72-c3a6-41c4-ba07-8d9baa3792ee"
        },
        "item": {
          "id": "5bdd58a0-daad-48af-b5d1-981a83a9cf68",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3a66e5e2-0a84-4da7-accf-fd5dd3173608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473f2b7f-60d8-4f6c-af51-e3473bf96ec8",
        "cursor": {
          "ref": "01e73853-2e79-4c57-9666-5bc69d5a8ca5",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5063c175-1083-413b-8641-681166864b30"
        },
        "item": {
          "id": "473f2b7f-60d8-4f6c-af51-e3473bf96ec8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "53845f2d-9470-4319-aca9-385244f64b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b628756-ca0b-421f-89b4-3ae3019313b1",
        "cursor": {
          "ref": "edd37628-f551-449c-83f8-eab7c19aac2b",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d99e1397-22d8-458c-9c67-6ebfc8b34679"
        },
        "item": {
          "id": "1b628756-ca0b-421f-89b4-3ae3019313b1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9ed1ec5a-ef99-468f-92ba-e852ca66adbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423a2f61-3f28-40b2-b2e9-df099d0e077d",
        "cursor": {
          "ref": "73c351e8-88e1-4b31-9921-5ffd671f0038",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fe87660d-6e51-4ae9-82d2-0fff059971da"
        },
        "item": {
          "id": "423a2f61-3f28-40b2-b2e9-df099d0e077d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "76f221fe-672d-4d40-ac0b-93d4c9269bff",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 647,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcab2d4-179a-4ab9-b3cb-7b5f40702c93",
        "cursor": {
          "ref": "cce34cb5-708d-4b5d-9aa5-808c7d983af5",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8d3e97b7-41bc-41a8-9bee-33617d183888"
        },
        "item": {
          "id": "9fcab2d4-179a-4ab9-b3cb-7b5f40702c93",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0db48b48-700b-43b8-a7e3-80b2e1261ee1",
          "status": "Created",
          "code": 201,
          "responseTime": 7168,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b3e236-b0b4-4d59-bbd9-f0db7f4bd6f6",
        "cursor": {
          "ref": "531a67cc-81bf-44d4-a927-433d3eaf24f9",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f2c8ab6d-d554-48e7-a0b2-b00b5a6088a5"
        },
        "item": {
          "id": "f0b3e236-b0b4-4d59-bbd9-f0db7f4bd6f6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9c160358-63b8-436f-9313-f862407033b3",
          "status": "Created",
          "code": 201,
          "responseTime": 5772,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1c3730-ab5b-41aa-ac55-7e03c21b439d",
        "cursor": {
          "ref": "4284f529-5f01-46d6-ae88-25d197f35323",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "46dbb5cb-a69e-4e4b-b9ae-46075f40e2b2"
        },
        "item": {
          "id": "fb1c3730-ab5b-41aa-ac55-7e03c21b439d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b1223c6e-4617-4752-aa03-6aaf51c2c6b1",
          "status": "Created",
          "code": 201,
          "responseTime": 5774,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "424ed145-238a-48ae-b9cf-889d853f33ac",
        "cursor": {
          "ref": "2e7cf861-dddc-4148-af0c-4553d1c66e2c",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b22e3549-43e7-43df-8c20-977fc5aedad3"
        },
        "item": {
          "id": "424ed145-238a-48ae-b9cf-889d853f33ac",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6c51573a-14ae-48ae-909a-a2df886de8b1",
          "status": "Created",
          "code": 201,
          "responseTime": 6136,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ed123a-a528-4473-96a1-2f1eaa52a6f9",
        "cursor": {
          "ref": "df17ad5b-b172-4d85-a76d-041d94541dfa",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5ea06ac5-c050-4760-a305-d69c6cc3ef67"
        },
        "item": {
          "id": "e0ed123a-a528-4473-96a1-2f1eaa52a6f9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f73d7ecb-b3a6-4702-8c77-f5e6b7d11ebe",
          "status": "Created",
          "code": 201,
          "responseTime": 6019,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e15d90e-4617-48ec-aa09-a8c56f18c931",
        "cursor": {
          "ref": "55f773dc-a46c-4bfb-ad53-590b749caa4b",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "13562de9-290c-4376-8a5a-bf6f01e04164"
        },
        "item": {
          "id": "1e15d90e-4617-48ec-aa09-a8c56f18c931",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3e1131f1-af68-4b9a-b14d-af1c0cef27a0",
          "status": "Created",
          "code": 201,
          "responseTime": 8335,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78efbd9b-7d33-4bdd-baf0-c8b13c1d04c6",
        "cursor": {
          "ref": "47d94b30-f8c5-4813-8cf0-e0ff5019ac58",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "207bd1c4-5706-42e3-b868-f15aca0a4e64"
        },
        "item": {
          "id": "78efbd9b-7d33-4bdd-baf0-c8b13c1d04c6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e3faa80-e338-4092-877d-8ba0e7016926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78efbd9b-7d33-4bdd-baf0-c8b13c1d04c6",
        "cursor": {
          "ref": "47d94b30-f8c5-4813-8cf0-e0ff5019ac58",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "207bd1c4-5706-42e3-b868-f15aca0a4e64"
        },
        "item": {
          "id": "78efbd9b-7d33-4bdd-baf0-c8b13c1d04c6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e3faa80-e338-4092-877d-8ba0e7016926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed177005-77d0-49a7-a492-20679d52e021",
        "cursor": {
          "ref": "52e1d92f-6284-434f-adbf-1316b949f616",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "020773d2-371f-4d05-92d0-08bc93f1e761"
        },
        "item": {
          "id": "ed177005-77d0-49a7-a492-20679d52e021",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e30e40f3-485b-4c4f-bfe3-4e73c61cdbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6f28f7-f835-4e4a-b9ca-3d904d73d3d7",
        "cursor": {
          "ref": "e6372310-0aa1-4804-b835-4a2f507cd82f",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b677a1d1-9419-4b0f-8e74-85dab39ef8c6"
        },
        "item": {
          "id": "1d6f28f7-f835-4e4a-b9ca-3d904d73d3d7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bc8aba10-93cf-4c44-afd0-d6d786db1df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87dc349-d7e0-4266-b2a7-d872a4cc6c64",
        "cursor": {
          "ref": "58acf1e9-863d-4407-810d-3788861cc294",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "91998511-8545-4791-b318-44c4c8b09f75"
        },
        "item": {
          "id": "b87dc349-d7e0-4266-b2a7-d872a4cc6c64",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5a758a12-63c4-43c3-82f5-278280a3e4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2d0542-65ea-4d40-9cf1-ce860ac503fd",
        "cursor": {
          "ref": "8e8677ad-b950-4a5e-bd3b-7f959b884547",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c02217d0-a47e-4c9f-8651-c8b065a81d8c"
        },
        "item": {
          "id": "8f2d0542-65ea-4d40-9cf1-ce860ac503fd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b7de3cb7-6180-4956-b30b-a25839519feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33410b2-74e1-4d2c-b3d9-c18317333081",
        "cursor": {
          "ref": "45abc3c6-90c6-48f5-9d3c-0893acfb59b1",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8e00fe6e-6ba1-466d-b1b7-295971dde0e0"
        },
        "item": {
          "id": "a33410b2-74e1-4d2c-b3d9-c18317333081",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "40c95ab5-f59a-4598-8c27-0accde01c364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96795725-b1ea-4f4c-856a-5879a515868e",
        "cursor": {
          "ref": "cd270ce4-1ea9-491c-966e-87edff49cc07",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e321d7da-d0f9-4416-9677-30e6cf94bf18"
        },
        "item": {
          "id": "96795725-b1ea-4f4c-856a-5879a515868e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6433872b-5515-4539-be1d-1f06e8f1d794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590473ad-91fc-4d71-8c9f-1ae2d096de7e",
        "cursor": {
          "ref": "047156d5-a976-4960-8d79-78ac8d581f36",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "931727c1-4064-4e15-983e-e6a624820fea"
        },
        "item": {
          "id": "590473ad-91fc-4d71-8c9f-1ae2d096de7e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "15153801-7ab4-42a0-835c-3b74f567cab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cba610-4296-4b3b-a790-708744468c32",
        "cursor": {
          "ref": "4d894b14-3813-4cf7-96b7-0bdb013fc62b",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "03748967-96e0-450f-b429-8cbd123794e7"
        },
        "item": {
          "id": "81cba610-4296-4b3b-a790-708744468c32",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8e4210b3-588a-4afe-8757-90dfc1be4db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdea2717-2c2e-4b6d-a930-ddf981a94072",
        "cursor": {
          "ref": "a2f77617-f771-4411-83f8-0253fe6bf113",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a4c0cd11-2771-4d77-9af3-655079cb653e"
        },
        "item": {
          "id": "fdea2717-2c2e-4b6d-a930-ddf981a94072",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2b918935-33b9-4a52-b6d8-6d512ceb1f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4e0730-4f00-4a32-b9cc-a691762f426f",
        "cursor": {
          "ref": "f43f76f8-8567-4f73-ab1c-1e099fb87132",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1fc5bf72-b6dc-4a41-84b6-b006d01b10a4"
        },
        "item": {
          "id": "8d4e0730-4f00-4a32-b9cc-a691762f426f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "25fd0d30-3219-443f-a056-57c44058bcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f979320f-26f5-4405-a011-29382503247b",
        "cursor": {
          "ref": "ad039548-ab21-4c49-807c-c45f7793372d",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d6041ce7-f58a-4224-9a1a-225da5635306"
        },
        "item": {
          "id": "f979320f-26f5-4405-a011-29382503247b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "79561b00-ee58-4e88-acc5-00db001c8037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9825115b-aaf4-43ae-99b7-7e093ab336e5",
        "cursor": {
          "ref": "3a52f476-dc6e-403f-a8d5-eaf6ace82a64",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "07fbc6f8-e55d-499b-9fbb-e5515c6700c0"
        },
        "item": {
          "id": "9825115b-aaf4-43ae-99b7-7e093ab336e5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a31999ab-beed-4926-bf9c-03fa3b0e9c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b68364-5fd6-4e72-8f9b-342c16b9fa0c",
        "cursor": {
          "ref": "1cb05f75-f390-427c-b45f-e938a49781df",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6c4ae24e-2c1b-4df7-8c49-7cc9252fcc78"
        },
        "item": {
          "id": "a0b68364-5fd6-4e72-8f9b-342c16b9fa0c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "43b0779f-aec7-4135-9e21-5356cf9d6d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5bebaa-daad-4680-b5d1-c3e375d2114a",
        "cursor": {
          "ref": "1ac20f8a-b82f-4453-a2e3-0cf1a4b341c8",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2d2abea6-cbe1-4aa1-badf-91f623210505"
        },
        "item": {
          "id": "7a5bebaa-daad-4680-b5d1-c3e375d2114a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "92d5f99d-0250-4386-8ae1-5383b8c479e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb659bae-0aaa-4b7f-9641-ef6f818e3098",
        "cursor": {
          "ref": "babf4e33-9459-48b8-a002-d917ad183d89",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "07186194-c5bc-40df-87a2-a9f30b1883a2"
        },
        "item": {
          "id": "cb659bae-0aaa-4b7f-9641-ef6f818e3098",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "308458ca-35bf-4b28-9215-54e637b67927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd83a1cc-e491-46bf-9262-69b641cc5dff",
        "cursor": {
          "ref": "f0da114f-ddee-459b-8fe3-d3f3f49f627b",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b117ffeb-327b-45c3-ac35-671f098c691f"
        },
        "item": {
          "id": "bd83a1cc-e491-46bf-9262-69b641cc5dff",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a853a8ae-4953-4a85-9547-3388ac41022c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaff8094-6826-40d2-b9d5-e0227e21b6f5",
        "cursor": {
          "ref": "703f0d1f-6356-44fe-aef6-d439804f5a3c",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "978da37f-e51d-4fe4-a618-17136d92ee35"
        },
        "item": {
          "id": "aaff8094-6826-40d2-b9d5-e0227e21b6f5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bf0d2d07-b324-4f67-b8f4-9487d5c41a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4c84a9-9f11-494e-9abd-e23809b26443",
        "cursor": {
          "ref": "731647ed-abd9-4a2b-b501-69ea061fa0ce",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "48316200-9465-4ad6-9523-29d3b855337f"
        },
        "item": {
          "id": "5a4c84a9-9f11-494e-9abd-e23809b26443",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6e62f327-1321-45cb-8d85-6410ea4f78d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad3a810-65b1-4ccb-8ace-9be5990c31a2",
        "cursor": {
          "ref": "f1bf3df7-6fe7-41df-b1a7-b8c80eb9a271",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bd1af4db-ef7f-4602-9b32-8cfcad5e6308"
        },
        "item": {
          "id": "8ad3a810-65b1-4ccb-8ace-9be5990c31a2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "263ae967-ea0e-46a3-987c-264866cfbdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d7275d-0e4d-4f65-a59b-278558ec8e87",
        "cursor": {
          "ref": "478479ed-c31c-4342-bcd0-47bcd225cdfa",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "27263f4f-ec67-4d0a-9e6d-ff9dea18d2ab"
        },
        "item": {
          "id": "d6d7275d-0e4d-4f65-a59b-278558ec8e87",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ec5546e5-68ad-41c8-a60b-be81f1aed9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d756e01-0a32-40b7-9fec-51e1b10918e8",
        "cursor": {
          "ref": "5c1c4b3b-7bcd-473a-95d9-3e941ab0c3be",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7f5c68f6-430b-4ea0-85b1-f08c2a368ca2"
        },
        "item": {
          "id": "9d756e01-0a32-40b7-9fec-51e1b10918e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9ef4ea48-0fff-4d46-aac7-7673afc94750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47821d2f-8067-4a55-8b6a-af559779cebf",
        "cursor": {
          "ref": "c6b575b0-d431-46cc-a6a4-6086da8d0d48",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "262196fd-416b-458f-bfc1-ad5633116145"
        },
        "item": {
          "id": "47821d2f-8067-4a55-8b6a-af559779cebf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a94f78b0-8d90-4dd1-86eb-42cf9eca91e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b679cbd7-a873-4fd5-b0d5-c46032b2f8e6",
        "cursor": {
          "ref": "49aeb151-5cf9-44db-bfce-c6b600a2d750",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b6556d41-2b5b-4afd-a2c4-1b588ebebf11"
        },
        "item": {
          "id": "b679cbd7-a873-4fd5-b0d5-c46032b2f8e6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c52ad94c-dce9-4f53-a40e-3f4edc88df82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255c4d29-e24d-4489-a72c-4eab56843823",
        "cursor": {
          "ref": "012acfa1-cbab-44a6-bc7e-000b1f77579b",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "72063a18-4916-43e4-bace-9218b94e9277"
        },
        "item": {
          "id": "255c4d29-e24d-4489-a72c-4eab56843823",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "52ca6cd2-d2b4-4df0-b682-bbaf62316143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3fd5b5-3569-43cc-92b6-888a231cde3d",
        "cursor": {
          "ref": "4369f606-cbc2-4aff-94ef-3bc382af4b5b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c3d1c806-e58e-49c8-99e7-8c23cb1fa2f2"
        },
        "item": {
          "id": "1f3fd5b5-3569-43cc-92b6-888a231cde3d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1963321a-4de8-4ab1-98e9-a8b22f1dce11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fcd53d-9a6c-499c-b29a-102e9bb6c5f7",
        "cursor": {
          "ref": "ddc929cf-72c0-45db-baa5-1ba9c17d3dd0",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "08a456bf-a6af-4813-96cc-65df6120122c"
        },
        "item": {
          "id": "35fcd53d-9a6c-499c-b29a-102e9bb6c5f7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "676be708-89d8-4ae4-b79c-28f52c97c31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e4ba63-f770-4bb0-b43f-7411f7ecd0cd",
        "cursor": {
          "ref": "575f77aa-921c-4c22-976f-791927bf05ac",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d35ad212-6045-4c31-90f8-8365c10708e0"
        },
        "item": {
          "id": "d5e4ba63-f770-4bb0-b43f-7411f7ecd0cd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d3cb4339-4fa1-4843-8fe1-de8f859fa1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b01ebe-b5c4-4427-8905-8f77fdf9598e",
        "cursor": {
          "ref": "e95a1be4-bdf0-4ee5-9235-5f6fdb2f86dc",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9dd889c8-40cc-45bb-8d81-ebfd9470da5c"
        },
        "item": {
          "id": "48b01ebe-b5c4-4427-8905-8f77fdf9598e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "db960db9-874f-4a99-a924-26521512e22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9df3f88-0519-4ac5-92c6-a2fd478220e0",
        "cursor": {
          "ref": "2a3540da-5823-4ccd-b114-4ad4d5c03af4",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7bdac805-d7e8-4aa9-b719-1dcbffd985e3"
        },
        "item": {
          "id": "b9df3f88-0519-4ac5-92c6-a2fd478220e0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "79f08fd5-9c07-4fcb-a040-91bea29644f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3770f2-a64b-4611-a5bc-f3b54440224b",
        "cursor": {
          "ref": "e8215958-30fd-4cd3-86a4-57a222e7e431",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "14fcf815-abbf-4b72-93f8-45973c428fab"
        },
        "item": {
          "id": "ce3770f2-a64b-4611-a5bc-f3b54440224b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1832555b-10c0-4161-a114-e052e11a2e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303f94ef-6486-4801-8914-09d966721110",
        "cursor": {
          "ref": "66011d5b-6a16-4280-a7c0-7b75279a5cef",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8b725c1a-fd0a-4287-a4e4-a20ae2ba13e0"
        },
        "item": {
          "id": "303f94ef-6486-4801-8914-09d966721110",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d93b7490-fbf3-464d-90b9-0a14e14acb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9a1d7e-0989-4675-a814-b235092e9086",
        "cursor": {
          "ref": "5992df15-960e-4652-8d50-17c8e7773652",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "814dc717-4846-4ae7-9f6a-ced19b73dfc3"
        },
        "item": {
          "id": "fb9a1d7e-0989-4675-a814-b235092e9086",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4f51ecc3-1df3-45a8-bb26-62334f161793",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde92dbc-e1e9-4b2f-89ef-599788ae3e0d",
        "cursor": {
          "ref": "00fc4ba5-512c-48be-82ce-beb30a1aefaf",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a1adff67-06f1-4d16-92e0-f5ae97a4ca95"
        },
        "item": {
          "id": "dde92dbc-e1e9-4b2f-89ef-599788ae3e0d",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3d6d4416-60b0-4a7a-baf8-6025830124ab",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 674,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee2ee4d-2499-4ad6-9907-e5682093d9a3",
        "cursor": {
          "ref": "3c9cf22d-0dad-4714-b52f-5fdd3e26e57f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a31ea193-047d-4e97-9f23-a267f3c5dcd3"
        },
        "item": {
          "id": "5ee2ee4d-2499-4ad6-9907-e5682093d9a3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6ebacd80-479b-4037-85d4-a327ecd32325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee2ee4d-2499-4ad6-9907-e5682093d9a3",
        "cursor": {
          "ref": "3c9cf22d-0dad-4714-b52f-5fdd3e26e57f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a31ea193-047d-4e97-9f23-a267f3c5dcd3"
        },
        "item": {
          "id": "5ee2ee4d-2499-4ad6-9907-e5682093d9a3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6ebacd80-479b-4037-85d4-a327ecd32325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45018663-2394-4b16-862b-9566e37f1663",
        "cursor": {
          "ref": "d5711d1c-2431-40a2-ba79-47f6c4c7e380",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "17bb2fd3-a0b5-4340-bb0c-219ea1f37eb3"
        },
        "item": {
          "id": "45018663-2394-4b16-862b-9566e37f1663",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5cba8798-08d9-4e43-8ef2-ccd6b8afb402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61e80c6-3761-4d72-8b9e-c1e05b5fcadd",
        "cursor": {
          "ref": "ab4a8a89-ea61-4c05-a1b6-feb5256c27b1",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "747d820e-e98f-45c6-971f-37ebbc16b861"
        },
        "item": {
          "id": "d61e80c6-3761-4d72-8b9e-c1e05b5fcadd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "92676fe4-379c-48db-bb4d-0b3164c3963a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17342d6-2f17-4f5e-91f2-d40ade3e75c3",
        "cursor": {
          "ref": "f1251a44-36ca-425a-b432-1142e46005a2",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0d9f0554-22b0-4ac9-b944-555e8a8a6d70"
        },
        "item": {
          "id": "b17342d6-2f17-4f5e-91f2-d40ade3e75c3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e71a9fbe-0228-4295-b674-45920e030e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5390556d-c4ea-443a-a936-1f2fc3a7e96e",
        "cursor": {
          "ref": "b092dd47-2616-4112-859d-c171156fc1a6",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b881ceec-e969-4716-b5d9-b666542a3229"
        },
        "item": {
          "id": "5390556d-c4ea-443a-a936-1f2fc3a7e96e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "afd6b3c0-db89-4333-8190-81a08db15e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b1ee48-d5aa-4bc6-b34c-4af8f672ae96",
        "cursor": {
          "ref": "5aeb8219-da99-4b71-9188-050d5e517fa5",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2fcf0f3f-10c9-412a-8196-25150a5cf4ff"
        },
        "item": {
          "id": "20b1ee48-d5aa-4bc6-b34c-4af8f672ae96",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a0478495-ae62-400c-9f51-913414db526d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed39cb6-aaa0-46fd-81ca-a82726d0b0cf",
        "cursor": {
          "ref": "0a720bd6-c0ac-4e43-a51a-fffc38b637e0",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7582e263-904a-442d-b39e-984aa06ef162"
        },
        "item": {
          "id": "2ed39cb6-aaa0-46fd-81ca-a82726d0b0cf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1837b0f0-91d6-4559-9a69-f0994ae26d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b1b089-813d-4959-a926-0b3d1e3fec66",
        "cursor": {
          "ref": "6a856b54-48b2-4989-88cd-6ab53a3071b7",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ee6211e7-b868-4f2c-8b53-125c1a2f9814"
        },
        "item": {
          "id": "43b1b089-813d-4959-a926-0b3d1e3fec66",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ccd88906-596a-4166-a6df-7834ac1346cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337be4e4-02b7-405e-842b-c7ba64759b9f",
        "cursor": {
          "ref": "ec18e67a-b0e8-4ac4-b0a9-1a9dd6949d56",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4c8bcc63-d720-4f1b-8946-57c7ada80761"
        },
        "item": {
          "id": "337be4e4-02b7-405e-842b-c7ba64759b9f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "61426770-64bc-4d72-8f47-13226a021957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c43bbce-f79c-4039-a90a-40b00bc8bfc9",
        "cursor": {
          "ref": "5fe55d84-953b-4cc5-9702-c5e59c4eb876",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0b8d6ac1-89a8-485c-8b1d-b9d61c344989"
        },
        "item": {
          "id": "4c43bbce-f79c-4039-a90a-40b00bc8bfc9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de1958f7-4daf-4768-8859-f9e1567762da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ed811f-5334-46a3-9941-bc8d950c5cb2",
        "cursor": {
          "ref": "f2f40268-baeb-4efc-aa15-85691f3137ea",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1e7d99ac-57f5-4e48-8a19-b2f61d495bdc"
        },
        "item": {
          "id": "62ed811f-5334-46a3-9941-bc8d950c5cb2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ebe4d2ec-5bc5-4923-b310-a5b929756e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882f03c3-68d4-4db7-9196-f0f3cc1463b6",
        "cursor": {
          "ref": "6aca666d-d68b-4561-9d5c-90e4bba76268",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "384fc161-d7c5-4c2b-9efa-5070114074aa"
        },
        "item": {
          "id": "882f03c3-68d4-4db7-9196-f0f3cc1463b6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "53cc7161-1da5-463b-a2b3-0e190361e304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1dbbed-8c24-4747-9a0b-75b6ce11132d",
        "cursor": {
          "ref": "0f9d2da1-e083-4ca1-b707-e4fac0c0a2fe",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6952cee8-391b-4b9d-be76-2b6db3e5b086"
        },
        "item": {
          "id": "7a1dbbed-8c24-4747-9a0b-75b6ce11132d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "aad21c26-ebbf-4348-8c03-cc12cea0edc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb328c0-649a-4307-a589-0c606a27442a",
        "cursor": {
          "ref": "a6feb0cd-aec8-4b24-bba7-e4c26f6966cf",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7eb4e630-c49e-4e89-9c53-2e84e2f30bc8"
        },
        "item": {
          "id": "dbb328c0-649a-4307-a589-0c606a27442a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d0837685-119c-4a64-9a14-89fd6c1a6817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecbb154-e730-497b-87af-3199beb60fda",
        "cursor": {
          "ref": "8c4a293d-778a-4e3e-96a6-ff3ce3bb2c19",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c9d86528-1327-4aae-a5e3-64c6995bc5a5"
        },
        "item": {
          "id": "2ecbb154-e730-497b-87af-3199beb60fda",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e6b60a83-dcaa-47bb-b8bd-406d0b77d218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c153c3f-13e3-47c8-9f81-c7cc16ae0e3c",
        "cursor": {
          "ref": "b11d64ac-db7f-4e38-aef8-dfc82d9d7f5a",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "25de3016-6c5e-43a3-8810-b822cc67bcc5"
        },
        "item": {
          "id": "6c153c3f-13e3-47c8-9f81-c7cc16ae0e3c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "187643db-d559-4e62-b8c5-55fcba520646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c0fa70-c7f4-4943-a213-aa402e453e0f",
        "cursor": {
          "ref": "b3e4f04f-6635-4467-9f0d-89b0eff514db",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "67c88541-fe7e-4bd3-8bd7-746b127673e3"
        },
        "item": {
          "id": "71c0fa70-c7f4-4943-a213-aa402e453e0f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "26dd4a0d-594a-44b6-96bb-39e5db039335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5419bc61-3cc3-4c0f-94f5-d829a8b6457d",
        "cursor": {
          "ref": "39f189bb-f290-4e8b-9ff2-8e35aacc7e37",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d537fc69-8458-48da-a21c-38abaf23ff3d"
        },
        "item": {
          "id": "5419bc61-3cc3-4c0f-94f5-d829a8b6457d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f7303a35-f0df-4142-a9a4-390302918fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955cc992-905a-4fe3-a18d-8db593f7639e",
        "cursor": {
          "ref": "3f6ab4dc-f623-4791-a8fa-cc8c80a5dc13",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e6d1f255-e7d5-43ba-8934-ada667907dce"
        },
        "item": {
          "id": "955cc992-905a-4fe3-a18d-8db593f7639e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "df408407-b785-4171-97cf-24ba72c945ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42338e05-d2bc-4775-bbe3-21b4112f7da7",
        "cursor": {
          "ref": "bab5d5e9-e0e7-4e4b-862c-ab3f7dd95523",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "37c98357-31eb-40c6-823e-0c31ab3e40de"
        },
        "item": {
          "id": "42338e05-d2bc-4775-bbe3-21b4112f7da7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5740629a-2a34-460b-b5a6-0b9d56258c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9545dd91-48d8-480c-a689-f23c7cb0a7ab",
        "cursor": {
          "ref": "6cdc4bb6-4c91-47ef-a428-5ee7b4fd7d9b",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ce51e134-821a-4563-bf60-611533dd8f4d"
        },
        "item": {
          "id": "9545dd91-48d8-480c-a689-f23c7cb0a7ab",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b25dc8ae-ee8f-4f9a-9e1a-40de1d130a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f923054d-e6ca-4a17-b408-68d4f6580913",
        "cursor": {
          "ref": "6ecedf2b-410a-4fda-a453-524bbfdd5ae0",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "44d26347-7ea1-49a7-ac0a-ce8163c2d118"
        },
        "item": {
          "id": "f923054d-e6ca-4a17-b408-68d4f6580913",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dbcb8b23-4e84-456c-9519-4352dd8f8f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241c942e-67a5-4ff6-9f3a-e330da6075e7",
        "cursor": {
          "ref": "2140436a-6fb4-4418-bc77-65370a21e1f4",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b95d6e72-acde-4278-9357-3d4bdf18ea3d"
        },
        "item": {
          "id": "241c942e-67a5-4ff6-9f3a-e330da6075e7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "900607e0-66bc-40a9-99e6-a4766513e11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b450d8-75d8-46c7-b533-472907cf1d52",
        "cursor": {
          "ref": "99ff1a51-33e9-4622-b0b9-5fb563f62c55",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bfffa345-ff5a-4970-8bb5-b0da48c4d1bc"
        },
        "item": {
          "id": "e7b450d8-75d8-46c7-b533-472907cf1d52",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e8dc8192-cd4a-45cc-8eeb-4b7738f0e59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8ad4e9-fdee-489d-a38e-6860bcccf233",
        "cursor": {
          "ref": "6e16387c-b44f-486f-8714-5a1057a6e7e7",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e67fe3b1-35bd-43b6-8720-e9c937377ce5"
        },
        "item": {
          "id": "2c8ad4e9-fdee-489d-a38e-6860bcccf233",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8571a2dc-b93d-4ccc-bfc7-9ec69860e08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e912a2f-e58e-4211-9f1b-6210dd133ca0",
        "cursor": {
          "ref": "6e880e89-0175-4de3-8928-0ee174c85f4b",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "81da581a-d02e-4ac3-87ab-2d64ae29813e"
        },
        "item": {
          "id": "9e912a2f-e58e-4211-9f1b-6210dd133ca0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "23df7427-85d5-4646-96d8-932ce5b0feae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234df087-16dd-446c-9227-14d1f62444cb",
        "cursor": {
          "ref": "33830347-95d4-492e-b5bc-5b0d914b2895",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f57d5e82-7620-4ebc-91e6-ac5634f621b7"
        },
        "item": {
          "id": "234df087-16dd-446c-9227-14d1f62444cb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "82971f6a-ff0c-4baf-b2ae-3acc85fe8576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e93c4c-b47c-4c24-9a38-64b0ea8938d1",
        "cursor": {
          "ref": "11a52bfe-aba9-412a-a474-e906dfdba788",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0cd47040-e56d-425f-bd9c-c4100f01e416"
        },
        "item": {
          "id": "a2e93c4c-b47c-4c24-9a38-64b0ea8938d1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4cf3e5ae-1096-41ae-87aa-525495b85474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972ed189-fa3a-470f-b7a2-0f3d42b608e0",
        "cursor": {
          "ref": "eb83d987-69cb-4b13-99c4-65c46ab4536a",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5624274e-0bb2-40a4-ad9d-60e9cb6b1f55"
        },
        "item": {
          "id": "972ed189-fa3a-470f-b7a2-0f3d42b608e0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "01bab34b-f1d5-4ce6-b52a-244fddbf516b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deb159b-c2e8-4e22-96f0-4187d3727aff",
        "cursor": {
          "ref": "bdaae0c6-3ce4-4ef8-afc4-b9e0232d8ba6",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4c654d80-d104-48fa-aac3-11370751b569"
        },
        "item": {
          "id": "0deb159b-c2e8-4e22-96f0-4187d3727aff",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c8e0c6f5-faf3-432a-bbef-f5847704cb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ff5c83-0c68-48dc-b63d-fff54213ed5d",
        "cursor": {
          "ref": "8825ac9a-5449-4516-88b8-c98d4a3fd05c",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2a5dada7-45d2-4c71-a56e-fdf6ac826acb"
        },
        "item": {
          "id": "c5ff5c83-0c68-48dc-b63d-fff54213ed5d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "375d195a-d103-47f0-af2c-7b7fe7293257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307fc2c6-70e4-46cd-9d02-0d05b0507bbf",
        "cursor": {
          "ref": "22b9d043-58da-41d3-b328-6f6e4b5f70d6",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5da20864-aceb-4adf-aa52-7c77fa29e310"
        },
        "item": {
          "id": "307fc2c6-70e4-46cd-9d02-0d05b0507bbf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0ee777d9-4a88-4e48-99d4-7c6c8b36c279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec29073-4206-4e96-8e2f-52c69a3cb470",
        "cursor": {
          "ref": "7fe4a18e-de2a-454e-97a4-ee5e3e8862fe",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9c6d01e2-d04f-4d26-ba65-00ec9065d981"
        },
        "item": {
          "id": "0ec29073-4206-4e96-8e2f-52c69a3cb470",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "24776ba5-ad3c-4478-9bf1-ed236e21c564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2770625f-7320-413a-b320-fa699305723d",
        "cursor": {
          "ref": "24e96c1e-d56b-477e-885e-1173bc9d9099",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d15ed6be-fef1-45e4-a466-4ec09224615b"
        },
        "item": {
          "id": "2770625f-7320-413a-b320-fa699305723d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b4480645-9ff3-4515-8b25-a1f0357804d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ed05d3-d6ab-4d69-8182-442f6361d7b8",
        "cursor": {
          "ref": "08d5d6ff-d6a1-4ecd-9fe3-66b51ec4d929",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2d3d6dc5-3130-48c1-927d-4baec5d92540"
        },
        "item": {
          "id": "20ed05d3-d6ab-4d69-8182-442f6361d7b8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "aeb18c15-42e1-4780-92fd-8cf1fee6848a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070d43a8-4d5e-4b87-9d20-db6533aaaab7",
        "cursor": {
          "ref": "67f38ffb-1aee-4737-8eee-6a58635c8fea",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b6ef92c1-8f35-462a-9ea6-78dc616feb1e"
        },
        "item": {
          "id": "070d43a8-4d5e-4b87-9d20-db6533aaaab7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e4b0a38e-7c45-47d3-a34e-bbbb1d6f16a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2579975b-b944-414b-a4e4-d749729cceca",
        "cursor": {
          "ref": "5c088a1d-282c-4f84-8003-881e226d08ec",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "177c9b54-517f-4b14-aa78-4f08e103a2df"
        },
        "item": {
          "id": "2579975b-b944-414b-a4e4-d749729cceca",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "19c36e3c-a2e5-4af4-bc6b-40be30783433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af5a265-8cd8-4cce-b89e-03bebd716969",
        "cursor": {
          "ref": "8a569c91-7fae-4451-b958-e3d8d22e2054",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dd47b2bc-16e7-4dde-a322-3e320b501edb"
        },
        "item": {
          "id": "5af5a265-8cd8-4cce-b89e-03bebd716969",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "532aeb29-c3c6-47a0-ac0e-19bfb84c67b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14202aed-f5f9-4feb-b0b3-1c23587a8ae8",
        "cursor": {
          "ref": "ddbca649-da09-4367-bfa1-8e7859b5f46f",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "494c2cf1-976e-4200-8c91-286f4fbbc6d1"
        },
        "item": {
          "id": "14202aed-f5f9-4feb-b0b3-1c23587a8ae8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c5584250-3a6a-45a7-8e57-9899e7fb0fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58052b31-0caa-443b-9e5d-394099e2e41f",
        "cursor": {
          "ref": "ebef5841-5a7d-495a-955e-05b7003b11c4",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fafe163a-c8ef-4345-a1ba-5ab94026f5dd"
        },
        "item": {
          "id": "58052b31-0caa-443b-9e5d-394099e2e41f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7472e6f6-7b94-40ea-a1bd-8a569c80386b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f21e99-6eea-40c3-9c01-d1e36ee7ad4d",
        "cursor": {
          "ref": "4d952a8b-ef5f-4337-ad01-b449a0e7c7cb",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dc317cbb-d062-4c1b-aa8a-4c2b5d6b98a7"
        },
        "item": {
          "id": "b5f21e99-6eea-40c3-9c01-d1e36ee7ad4d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "566d25e3-2979-4250-afd8-e4905e07ac33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c87d90-edca-4d64-8ce6-f273f706601f",
        "cursor": {
          "ref": "e3ea8fa3-1ebf-4a88-b1bc-48c6db83655e",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ea01b6d7-d16b-44c4-875f-36ea6bb961a3"
        },
        "item": {
          "id": "b8c87d90-edca-4d64-8ce6-f273f706601f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "39d3cf19-3b2e-4489-89f2-a5fcd261ec91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb545ff-3fb8-449b-9334-7889a911a2dd",
        "cursor": {
          "ref": "41f35397-d11d-42f2-af10-7a999db56bed",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bfdadf13-531d-4093-be6b-70c368b3fac2"
        },
        "item": {
          "id": "deb545ff-3fb8-449b-9334-7889a911a2dd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7819a6dc-e38b-410e-88aa-ae87e350afec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf3b104-2244-415b-a52c-d456c9f85f19",
        "cursor": {
          "ref": "d1602076-559d-4dae-9c70-3d0a6bb6b942",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "eb26fe6e-bb92-4af2-bfd4-33ca15822306"
        },
        "item": {
          "id": "fdf3b104-2244-415b-a52c-d456c9f85f19",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a83a9ccf-4db5-48e8-ab18-cca5b45d9a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4493cc0e-0fba-4ba5-b427-d6b0ab91971d",
        "cursor": {
          "ref": "a7c386aa-912b-4b0a-9a8d-8c9f5929615d",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5d8e0c3b-745a-4d5a-b7ae-b6d8d11b4aaf"
        },
        "item": {
          "id": "4493cc0e-0fba-4ba5-b427-d6b0ab91971d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "130c23d9-6d7f-4c02-b48b-1d882e919e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de45e22f-ad28-442a-b8fb-b90d12aa129c",
        "cursor": {
          "ref": "64615c84-0286-4d81-8ba7-f938db6a8d8f",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6c6f3590-0b56-4213-bf26-d989c04c8ce6"
        },
        "item": {
          "id": "de45e22f-ad28-442a-b8fb-b90d12aa129c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b6373ddd-beb4-4fc1-b3e8-f7e2d95ee339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1eec681-eab5-4b5a-803d-3b6703f2d253",
        "cursor": {
          "ref": "511a1158-75f2-475c-9754-8c092b1bf4b1",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "10655f33-355e-4ae3-9e84-cd9a0efcd23d"
        },
        "item": {
          "id": "c1eec681-eab5-4b5a-803d-3b6703f2d253",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "747aa78d-2cb5-49ab-8fb6-d5213ab19602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb52198-fd76-442c-bce9-f2e7956e4b37",
        "cursor": {
          "ref": "f7766f25-1090-4286-992a-6e83dbe84e47",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "58cd5f8c-d98b-4c0e-b15b-073ecf84682a"
        },
        "item": {
          "id": "aeb52198-fd76-442c-bce9-f2e7956e4b37",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d3fa06ad-c88e-41db-8647-332269ca5de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b1bb8b-c655-4fdd-9be4-389d304ef889",
        "cursor": {
          "ref": "85e3b623-8778-48ba-b6a2-5f42c70e9ae5",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cb78acd6-dfeb-46f3-9524-b7e9bdfbee2a"
        },
        "item": {
          "id": "50b1bb8b-c655-4fdd-9be4-389d304ef889",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7fff9618-69c1-44ff-be1d-84c5ab7f9229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d747c8ec-5ff1-4d73-813e-dcbb0d10a8be",
        "cursor": {
          "ref": "47dc6820-0f63-4021-9d18-47f8fca8a1a9",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a9119372-1fe0-40ba-a784-52597480c5fa"
        },
        "item": {
          "id": "d747c8ec-5ff1-4d73-813e-dcbb0d10a8be",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e693df6c-ac5c-4d92-bbc2-b2e43fd5cb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a8e21b-d538-43a0-b703-3ae5abc14ac2",
        "cursor": {
          "ref": "621f305a-d474-4608-90ec-57a907d45d2b",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6f61e87f-6a5b-485e-9dfc-88798111737d"
        },
        "item": {
          "id": "69a8e21b-d538-43a0-b703-3ae5abc14ac2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1b24f94a-a524-4522-9e6e-1a6d5f371f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ece49f-144a-4e0f-b125-f7ac519fb14f",
        "cursor": {
          "ref": "06701666-c1a2-4ea9-bd61-3b107faca19c",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e18faf86-a3c9-4da1-9bd7-fdcd6ab3522f"
        },
        "item": {
          "id": "12ece49f-144a-4e0f-b125-f7ac519fb14f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ce18519e-70b9-44a6-9657-83dce6e17d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfff7066-c8ec-49d0-b411-cf3a1c896414",
        "cursor": {
          "ref": "d655c83b-0cda-4909-a174-0c3091aee1da",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a2398d81-9804-4f69-af60-36f3513ea287"
        },
        "item": {
          "id": "dfff7066-c8ec-49d0-b411-cf3a1c896414",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2a223580-6458-4324-b2df-b38f09472add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1868466a-2e8d-487c-beaf-be8e60699de0",
        "cursor": {
          "ref": "73060199-e358-4ff2-8bfa-e1e8f418d597",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "72e3ab6f-49ae-4d35-9c99-45f1fe855b1b"
        },
        "item": {
          "id": "1868466a-2e8d-487c-beaf-be8e60699de0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5c9aff7b-995d-4763-8854-0f5c638d38bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc32bad-58c6-4ad1-abbe-bd64f4297789",
        "cursor": {
          "ref": "b682d0eb-b976-416d-bb80-45a7815a4c68",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3226c807-dfa7-4cc1-a5aa-4eb3d6bec7b3"
        },
        "item": {
          "id": "adc32bad-58c6-4ad1-abbe-bd64f4297789",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3f8e7f8d-998c-49ff-9883-36f15161d987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e901ef3e-e63e-46b9-af03-069f9635dfd6",
        "cursor": {
          "ref": "04222312-94cd-4971-8a08-d5ee7cb51b5a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "876649b0-fb86-4c7c-ba6f-ca1bfa5b12d5"
        },
        "item": {
          "id": "e901ef3e-e63e-46b9-af03-069f9635dfd6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "79473f81-ce89-4473-a208-6dff2eff1550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c47462-53c9-4e5c-85ab-62a022050fa1",
        "cursor": {
          "ref": "629681b2-9203-4edf-a7ee-9137ef68946d",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c5d80c1c-ade4-4510-95c5-ed00a5384ec4"
        },
        "item": {
          "id": "f9c47462-53c9-4e5c-85ab-62a022050fa1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c2fec9e0-8e43-4cbb-8b6f-1923b1d7f533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77815174-80bc-470e-bd49-0b3e9ccb2938",
        "cursor": {
          "ref": "1e77d59a-745e-4464-a0a1-f08b023aaaf5",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a973b96a-65e4-4307-b16a-d016da06eb7b"
        },
        "item": {
          "id": "77815174-80bc-470e-bd49-0b3e9ccb2938",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6bdb709c-adc7-4b3b-9274-a4358b07be16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c9b7a0-92fe-481e-81ca-fe1633381af4",
        "cursor": {
          "ref": "a6231785-3351-4b26-b479-d902540e88df",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "19e28b1d-8305-4f60-b8d4-3af783dd0f00"
        },
        "item": {
          "id": "54c9b7a0-92fe-481e-81ca-fe1633381af4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "255d78d8-b3c5-4fd2-a036-4254c14c80ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1123300-8d48-47c5-8b17-bbda31972615",
        "cursor": {
          "ref": "da6c3faa-fbfc-4cc0-964b-1339afb07d7b",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "47984706-9e13-437e-97d4-b98be798d3ff"
        },
        "item": {
          "id": "e1123300-8d48-47c5-8b17-bbda31972615",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0f71243d-66db-4187-ad86-094b77f4ff4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b41124-c94e-43c0-bd16-5a2e31fa36e2",
        "cursor": {
          "ref": "b4a55812-2269-46b1-9f6c-ed69cbe27ee1",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "856af2b3-0ce9-4c04-bf2d-6c14516ad15f"
        },
        "item": {
          "id": "47b41124-c94e-43c0-bd16-5a2e31fa36e2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f7c78eee-e6bd-4120-a2bc-b4137319364a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d847a064-988d-423c-b40e-69ab13bb4ba0",
        "cursor": {
          "ref": "3f53a474-03c7-47bd-be47-c9799c75dfcb",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "53b91d3e-3d4c-4cf4-b1da-c5a5078e9ad5"
        },
        "item": {
          "id": "d847a064-988d-423c-b40e-69ab13bb4ba0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7574b86c-14f4-4bc7-b788-efea6b8da228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a1da8b-42e3-48fa-88fd-14317c64062c",
        "cursor": {
          "ref": "65709066-8a5d-4a7d-8f75-3ffe91833890",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fd4c8622-16ea-4225-bc30-46065ab147a5"
        },
        "item": {
          "id": "70a1da8b-42e3-48fa-88fd-14317c64062c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b42d75b0-d34b-46b5-9a7f-3527a82f0669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fa5861-eb49-4457-ad85-9f375d9dd96b",
        "cursor": {
          "ref": "013d7261-a216-4baa-a44b-75a80f7cebd6",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "610a7923-b8c4-4540-9805-729ee1d96690"
        },
        "item": {
          "id": "f3fa5861-eb49-4457-ad85-9f375d9dd96b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "630ad043-3b98-4f67-ab38-498118481de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae35db8b-6d15-479f-81c8-cecc94145c19",
        "cursor": {
          "ref": "c7ea2b9d-4b05-4e8b-9f0d-216353fac2c4",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "91f5036e-e73a-4478-b5d0-2199af626cc8"
        },
        "item": {
          "id": "ae35db8b-6d15-479f-81c8-cecc94145c19",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1dbd17d4-6d12-4b98-8b92-ee4b45d7ce42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb21094-b81d-48c0-9d97-4bb6dad1dd66",
        "cursor": {
          "ref": "05c5092f-cb1d-4ff8-9971-3c80da6da05d",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "71e3842f-8797-4f15-a3b7-eb8f6dec975e"
        },
        "item": {
          "id": "2cb21094-b81d-48c0-9d97-4bb6dad1dd66",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7bce3940-b063-4409-84a1-3b088cf5e8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6804ac-7339-43df-841b-f5e108e5f5e3",
        "cursor": {
          "ref": "6c94e432-0e17-4591-bf08-58106569f05f",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "169a6929-10fb-404f-bae2-6bc1da3c6a1a"
        },
        "item": {
          "id": "7f6804ac-7339-43df-841b-f5e108e5f5e3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "87958ed5-5900-488a-8b0e-8356c2058c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ce862e-59c0-48f2-96a8-3f15f5b51547",
        "cursor": {
          "ref": "42547cd1-262e-4c24-b09f-2467e43af146",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "066b91b9-798d-4ae8-9f62-75f0aab75260"
        },
        "item": {
          "id": "86ce862e-59c0-48f2-96a8-3f15f5b51547",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0fc19c13-28c7-4ce1-b3f9-b7c120a3d739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8826176-7ded-4377-9867-292072382005",
        "cursor": {
          "ref": "812463dc-251e-4227-8ec5-ccb5d0615935",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "09e4842c-7b47-494f-a45c-3b3960d12ec3"
        },
        "item": {
          "id": "e8826176-7ded-4377-9867-292072382005",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4504d2a3-f7e0-4bd4-b2e3-cf6dfc0d34e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754a9307-d513-40da-8a3d-6332b1ca3ba4",
        "cursor": {
          "ref": "e7467d7a-ec17-47da-9e05-fd962f1aba7e",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ce872f27-85d2-4fc9-933e-455464b06348"
        },
        "item": {
          "id": "754a9307-d513-40da-8a3d-6332b1ca3ba4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7beeafa9-1d96-4834-9321-50183f798e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e42ebf0-030e-44f4-a78d-174d239437d6",
        "cursor": {
          "ref": "97f8bbcf-d07c-4eeb-b8a7-b5b5a979183f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8cebed8a-9601-4342-a076-80642cc3e411"
        },
        "item": {
          "id": "9e42ebf0-030e-44f4-a78d-174d239437d6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c948e3ec-6c1e-438c-a4fb-c7e721511d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af49b16e-075b-452d-9033-f79f9ef56043",
        "cursor": {
          "ref": "edfe4265-d11d-412f-9d82-c90efaa43ac8",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bf13d831-7630-4d42-8764-aab49db2ad6f"
        },
        "item": {
          "id": "af49b16e-075b-452d-9033-f79f9ef56043",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2de242fd-98e7-4cec-a4af-93a6b8284b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d83ac95-cf0e-4816-a6bf-d03bbea35603",
        "cursor": {
          "ref": "cb1f8608-1542-4af1-8a36-0404f2c452bd",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c14ce125-764d-40f5-aeac-04f866924e92"
        },
        "item": {
          "id": "8d83ac95-cf0e-4816-a6bf-d03bbea35603",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "750605d2-9351-40b8-b974-5dfade4ab1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2072df32-9e9a-48cc-96f8-eef24bf2b8fa",
        "cursor": {
          "ref": "c9e76bfa-bc8f-4b1b-8897-a12e5c6ad7e4",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7484208d-94eb-4c12-b5d9-8201dae379f3"
        },
        "item": {
          "id": "2072df32-9e9a-48cc-96f8-eef24bf2b8fa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "013ffb40-ec00-4005-8cb1-48b3c8c0ba8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b50778-f3ad-416d-9842-1506bf21bfd5",
        "cursor": {
          "ref": "229e4346-b67e-4875-9baa-c173f618b0b7",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "507c8185-6c3e-4b00-82f6-82bf89b69661"
        },
        "item": {
          "id": "86b50778-f3ad-416d-9842-1506bf21bfd5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9e5317df-8284-41c9-958b-00235795e047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669b9da6-8859-467c-a599-04f4305d6a97",
        "cursor": {
          "ref": "fe9e8448-af1d-4616-bc8a-3b3528b36166",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d176c83e-0a38-4ef3-87a6-3338aa431026"
        },
        "item": {
          "id": "669b9da6-8859-467c-a599-04f4305d6a97",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d5ea306b-c9cb-4c6b-aa1b-b29c401a7cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3a0c18-7262-4c68-a788-669848ee59cd",
        "cursor": {
          "ref": "356980cb-b1c8-4446-8820-7fdb44ee310b",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "08eed7c8-31cc-4452-9d3a-cbe29efa0427"
        },
        "item": {
          "id": "1f3a0c18-7262-4c68-a788-669848ee59cd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9cac3eee-331d-4652-8b42-e272bd82a640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f07f6fb-dc38-472d-97c1-db9190c02932",
        "cursor": {
          "ref": "96e2cd99-3ddf-4021-aafc-8ee9e96e775f",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "39b87514-1d47-4505-a720-e51a26ba2f39"
        },
        "item": {
          "id": "3f07f6fb-dc38-472d-97c1-db9190c02932",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "125dae49-b53d-4731-ad47-06545cbede36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a873100a-1cf1-4cad-9710-55d0c8d434b1",
        "cursor": {
          "ref": "c75c5ff5-ca07-4987-bf10-585f0d0c618a",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f6fb6f91-8ae0-4d11-b6ee-a9aa56932b6d"
        },
        "item": {
          "id": "a873100a-1cf1-4cad-9710-55d0c8d434b1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "35c364d5-ff87-41a3-9d2a-f351f340b899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b6cd9c-442b-4008-b5d0-5fa2930ce684",
        "cursor": {
          "ref": "94d18874-aadd-4cf5-9567-e37d8b9ccc57",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c85c1dce-2247-43c7-8842-a83645e0ecc1"
        },
        "item": {
          "id": "25b6cd9c-442b-4008-b5d0-5fa2930ce684",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ad7a302c-13b5-4a23-a187-0d325519c972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8c6b9e-82e6-415e-a15d-224496f0a2b5",
        "cursor": {
          "ref": "17bfd19c-9bea-499e-a4fc-bf15e4504af5",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2e4007c2-9d51-4e61-a040-ba3eb822458a"
        },
        "item": {
          "id": "0a8c6b9e-82e6-415e-a15d-224496f0a2b5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "07cccb3d-e6ca-4d7a-b5ad-ce914f5076e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f500f7c4-5023-4289-b4cb-57dacc36a75b",
        "cursor": {
          "ref": "1c6b2cd7-e0ef-4152-b8c6-0e01735d2a88",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "68299a1c-eddb-41d7-b442-d6b65b8d588b"
        },
        "item": {
          "id": "f500f7c4-5023-4289-b4cb-57dacc36a75b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b8513c6c-f2d0-40f3-bdca-a75d21fc2718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba67f6f-d003-4dc9-a05e-4ea2110b9354",
        "cursor": {
          "ref": "c679b9f7-64d7-4e3f-8263-a9fd0f66ed64",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8f6f6df7-fbb8-4c7e-ac09-c16bcd7327bf"
        },
        "item": {
          "id": "1ba67f6f-d003-4dc9-a05e-4ea2110b9354",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a0dac753-0a15-45a7-9c0c-216becc0cf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda6b502-5e9b-4269-94e6-62de6d071d33",
        "cursor": {
          "ref": "a22ddf3d-9a9f-4512-bcb0-84b2ef16911e",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "47d007ef-5e4f-41dd-b624-600074846ea9"
        },
        "item": {
          "id": "cda6b502-5e9b-4269-94e6-62de6d071d33",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "93407f6e-5a25-4293-be87-7051377fa099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a302cc-26e3-48b8-b898-ffce53e033c8",
        "cursor": {
          "ref": "3944a212-1699-46f5-ab59-afc38114fc47",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d826b414-bde5-4db3-bd30-19aaba9c6278"
        },
        "item": {
          "id": "63a302cc-26e3-48b8-b898-ffce53e033c8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9c2603ad-3899-4700-879b-ea55bf0492c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b000071-cd72-4f63-9f3e-73995f17af1f",
        "cursor": {
          "ref": "7e8fb2ec-bb1d-480d-a427-99f3da558dda",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "830411f8-4ed5-42fe-b1e3-2a92e8512526"
        },
        "item": {
          "id": "9b000071-cd72-4f63-9f3e-73995f17af1f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9c53bee7-c991-4b3a-8b04-31c2105892b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd6630d-ee19-4db5-ba35-dc352f20049c",
        "cursor": {
          "ref": "b5d44fd0-c14c-48b4-a74a-08a39e0b024b",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c756106b-dce7-4306-8095-3a636d14d47d"
        },
        "item": {
          "id": "cbd6630d-ee19-4db5-ba35-dc352f20049c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "af20e4cb-eaa1-4a12-97d5-b2b5d205a4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691489c3-ece6-4b4d-a6eb-a6f405100d5c",
        "cursor": {
          "ref": "808eaa0e-4081-42a4-9d4d-5e417c24030d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "062bffcc-7cb0-4457-81cf-fd1c4c91a0b7"
        },
        "item": {
          "id": "691489c3-ece6-4b4d-a6eb-a6f405100d5c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3e7e178f-27ce-455a-8855-0429b2ca3bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a715c6-fa72-4438-a84b-c9a2fa8b19a9",
        "cursor": {
          "ref": "dcc789a8-511e-4032-9a89-bf6c14e1c3a2",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c7b49cea-58c1-4842-9c88-c23bfcc97076"
        },
        "item": {
          "id": "f8a715c6-fa72-4438-a84b-c9a2fa8b19a9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cc69f1d8-4be1-453b-9b08-f216da1df642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7c3d83-16b8-4838-8a48-a19762e52924",
        "cursor": {
          "ref": "206d2f8a-caa5-4c7f-a816-6616c48dbb63",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e9248b52-499b-4319-bc9b-895459d7b7ed"
        },
        "item": {
          "id": "fd7c3d83-16b8-4838-8a48-a19762e52924",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "64ff0190-6faf-459b-8c52-35b108e68130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a74df18-2265-4bd3-af94-c3b1060c3a48",
        "cursor": {
          "ref": "1fb4a835-22e6-4b36-a7a9-9c25482aef82",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "df7bf5ca-29ad-4142-9868-359486dc0d20"
        },
        "item": {
          "id": "6a74df18-2265-4bd3-af94-c3b1060c3a48",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "45a17d06-1d4f-4247-8fcc-1145a46c4755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8949ec0-079b-4fe7-b3df-82e39bd139d3",
        "cursor": {
          "ref": "b93129fa-035e-4c3b-8a13-d9ca4707cff9",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d3c6358f-dc29-481e-8a26-7c2ccb090a76"
        },
        "item": {
          "id": "d8949ec0-079b-4fe7-b3df-82e39bd139d3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "63056fa3-a6c9-4ee9-8a7b-ae8471d073a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2026adbf-0ab9-40ba-b42a-a5a6477455bf",
        "cursor": {
          "ref": "f35892af-f24a-4353-9de4-2883a0c62fd6",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3d29e59b-3b82-4074-99c3-48d693934ddc"
        },
        "item": {
          "id": "2026adbf-0ab9-40ba-b42a-a5a6477455bf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ff752d81-7ca4-4b84-874d-02a2cadc216e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a893c41-abc7-4e50-a54e-0463c57255e1",
        "cursor": {
          "ref": "3f537f68-2ab5-48d4-b9d1-65039ea2e358",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4d43bf31-e585-4f29-a0d6-b80c641c4baf"
        },
        "item": {
          "id": "2a893c41-abc7-4e50-a54e-0463c57255e1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "609c5908-2bac-4a6e-8f79-a5189035815f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde13e71-6185-4999-9007-3dd8295f4ea5",
        "cursor": {
          "ref": "5e1005fe-8cf2-4d2d-bd4d-e87df3fe7ba4",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "16e4a8e1-3b07-42fd-bdbf-d5602c4a7f42"
        },
        "item": {
          "id": "fde13e71-6185-4999-9007-3dd8295f4ea5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ea4d03eb-93f8-4f12-9475-b3debdc5bb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f07b099-56f3-48d4-9137-3a828b0c8d1a",
        "cursor": {
          "ref": "d45e0532-5ad3-4e35-92cb-e03c186e1d06",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "09e65ebd-8670-44b2-bb7d-29441b2fcb7a"
        },
        "item": {
          "id": "0f07b099-56f3-48d4-9137-3a828b0c8d1a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "aefaa520-0183-4928-8e16-0ff11c4cb0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f673391c-1f03-4c4c-842a-df34a9490a91",
        "cursor": {
          "ref": "6d88a169-de65-4433-9d8c-d8ef52638e56",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4fd27340-a4ab-408c-b12b-2f3d497dbc4b"
        },
        "item": {
          "id": "f673391c-1f03-4c4c-842a-df34a9490a91",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "247c5f79-5d64-4231-a48b-d76ea9e0dc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7302cfd0-fb3c-442c-8511-8565d25ec910",
        "cursor": {
          "ref": "545291a1-5515-45c3-816d-4c09fa34b43a",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2318ea58-ff0e-4b5d-a3eb-f67b6ea8a53f"
        },
        "item": {
          "id": "7302cfd0-fb3c-442c-8511-8565d25ec910",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a2a3c105-5d7a-4204-baab-7dbdd13cfb92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa6c267-b796-49bd-9692-98e8b3c78c4e",
        "cursor": {
          "ref": "75cda800-8947-40df-8fdb-afbe06418114",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1ad5f673-363e-49f6-8bf0-7e84956f3a82"
        },
        "item": {
          "id": "0fa6c267-b796-49bd-9692-98e8b3c78c4e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "be14f2c5-f919-4e18-944b-9870f4092b1e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 466,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880d72ac-0959-407d-961c-109f930c6ecd",
        "cursor": {
          "ref": "ca657b61-4048-4ae1-bbe6-7d1219fafc53",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3b9bed94-a541-4675-9cf1-412a2249013c"
        },
        "item": {
          "id": "880d72ac-0959-407d-961c-109f930c6ecd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f96cbf53-a833-4920-9ec5-d7c49b021650",
          "status": "OK",
          "code": 200,
          "responseTime": 556,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c39efa-3b4d-4b25-9543-a773fadd7ee3",
        "cursor": {
          "ref": "d7ea33b2-784a-4576-badf-8c86b99758d3",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6287628b-60f0-4352-9c4a-01c6e48d9092"
        },
        "item": {
          "id": "81c39efa-3b4d-4b25-9543-a773fadd7ee3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "967a9480-7977-46b7-a365-1ec902347ec6",
          "status": "OK",
          "code": 200,
          "responseTime": 1773,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f894eb2-f403-49f4-b27b-0830ee3812e1",
        "cursor": {
          "ref": "fe83ecc7-4cd6-4b59-9a98-e0dc3603ed60",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fc34cc99-b50b-449c-9dc2-e1007c0fd754"
        },
        "item": {
          "id": "0f894eb2-f403-49f4-b27b-0830ee3812e1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d0afc151-faf9-4ed2-8962-97a610249eea",
          "status": "OK",
          "code": 200,
          "responseTime": 1434,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b795c8cf-57d4-4c8a-a78f-7ae77e3e23e0",
        "cursor": {
          "ref": "aba2f9f4-870f-4136-b4cd-cb84d216b8c7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f0439b06-8566-4aa8-a8d3-671060b85792"
        },
        "item": {
          "id": "b795c8cf-57d4-4c8a-a78f-7ae77e3e23e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f19c36e7-caa8-4209-a617-acdee69c9441",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b795c8cf-57d4-4c8a-a78f-7ae77e3e23e0",
        "cursor": {
          "ref": "aba2f9f4-870f-4136-b4cd-cb84d216b8c7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f0439b06-8566-4aa8-a8d3-671060b85792"
        },
        "item": {
          "id": "b795c8cf-57d4-4c8a-a78f-7ae77e3e23e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f19c36e7-caa8-4209-a617-acdee69c9441",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b795c8cf-57d4-4c8a-a78f-7ae77e3e23e0",
        "cursor": {
          "ref": "aba2f9f4-870f-4136-b4cd-cb84d216b8c7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f0439b06-8566-4aa8-a8d3-671060b85792"
        },
        "item": {
          "id": "b795c8cf-57d4-4c8a-a78f-7ae77e3e23e0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f19c36e7-caa8-4209-a617-acdee69c9441",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8f8323-32eb-4cfb-83d1-d34c9c9cb36d",
        "cursor": {
          "ref": "55894233-c71a-4bf9-b0d8-ae13bbf2e3d5",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e2c75a57-1ebd-453e-84ba-281d918f844b"
        },
        "item": {
          "id": "8a8f8323-32eb-4cfb-83d1-d34c9c9cb36d",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c02582b8-d42d-4dcf-b419-3cf2de0fa57b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 461,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4f37a5-f87a-4d78-a2bd-17c9280a2080",
        "cursor": {
          "ref": "d45d28de-ada3-4f52-9da9-9e16b57f91ec",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fd7a3f38-775e-4a63-99b7-6c1879dcafd9"
        },
        "item": {
          "id": "3a4f37a5-f87a-4d78-a2bd-17c9280a2080",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3d49480c-1585-40c3-8e81-152382ec539f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4f37a5-f87a-4d78-a2bd-17c9280a2080",
        "cursor": {
          "ref": "d45d28de-ada3-4f52-9da9-9e16b57f91ec",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fd7a3f38-775e-4a63-99b7-6c1879dcafd9"
        },
        "item": {
          "id": "3a4f37a5-f87a-4d78-a2bd-17c9280a2080",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3d49480c-1585-40c3-8e81-152382ec539f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18769e20-0f6b-4b6d-82e8-5039e148a54d",
        "cursor": {
          "ref": "a9d9e072-acac-4aeb-b795-d4bd758524b3",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c646e7eb-4a21-4589-8c08-fa32c65d1efd"
        },
        "item": {
          "id": "18769e20-0f6b-4b6d-82e8-5039e148a54d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "99012753-e87d-4c5d-89a3-763918350b5f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 658,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3037884-7c74-4e42-aeec-db073f2db51a",
        "cursor": {
          "ref": "b3d63d9e-1d39-43c0-b28a-aec81976aa55",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3c8fb370-d2b4-44d7-8162-1741a892aa39"
        },
        "item": {
          "id": "f3037884-7c74-4e42-aeec-db073f2db51a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d58b8295-560d-40f9-b856-6fa34ebf2d90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3037884-7c74-4e42-aeec-db073f2db51a",
        "cursor": {
          "ref": "b3d63d9e-1d39-43c0-b28a-aec81976aa55",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3c8fb370-d2b4-44d7-8162-1741a892aa39"
        },
        "item": {
          "id": "f3037884-7c74-4e42-aeec-db073f2db51a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d58b8295-560d-40f9-b856-6fa34ebf2d90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab18efe-2a82-42ee-8e88-2a0c71a26bdc",
        "cursor": {
          "ref": "7ee26cc2-5477-4dfe-8026-07aab4067036",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4c96c99f-a349-4ff7-b333-04d6e57a966b"
        },
        "item": {
          "id": "fab18efe-2a82-42ee-8e88-2a0c71a26bdc",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3609675c-e555-4e36-b57c-19466f1a0f71",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 659,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}