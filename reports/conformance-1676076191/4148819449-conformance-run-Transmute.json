{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5374963c-f1f0-4a34-8557-3e4751735353",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2934f446-0eb9-493a-94c5-16952337310b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fdfacfe6-2f9c-4d09-8123-92f6c2912e09",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7631a487-c442-4df9-acb4-f831adbd4511"
                }
              }
            ]
          },
          {
            "id": "a7c8a18a-0fda-4650-897e-3b85373300d0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dbe346d8-8e44-48a6-abf7-15b3e6eb1be5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3ec15c1e-5143-41f4-930d-bcc1bbfcc45e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f48e3b85-36bd-4c46-b887-0e02a5432c34",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5b980fee-e9f8-4f3f-90f4-7db27c2d6a19",
            "name": "Positive Testing",
            "item": [
              {
                "id": "982e5bf1-fc41-4894-853b-144c73b14037",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55e4f5eb-e03c-4ee6-9965-8aad8a9637b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81f2503c-2b41-4e6a-8151-06f175783a57"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8a28ee5-a6d5-45bb-8ce2-7eb05b46e6c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ac9661e-21e3-43c1-bf98-f0f921781410"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19f2bb3b-cff8-470b-b6a8-2d7297d8b2d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e8097e6-6eb8-41ca-bc64-602ea3af17ed"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85f45bf9-18ed-4bf9-9dc5-6a54b222fc07",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f3c9706b-937f-4eec-bb2c-587b22e33e97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19ccea24-e0b6-40c1-9c27-ea8ac01f3bc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d346fcc-aca6-4d78-a2e1-2e9b0b7d3b2a"
            }
          }
        ]
      },
      {
        "id": "0bc50251-66fe-4175-b265-cf5583040701",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9a7f23f5-b227-40bc-bcc7-ed1f00bb0116",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23497f89-33c6-4062-8d24-da11ac28c251",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd775d59-bf6b-4b73-851f-651b5379777e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bba91a6-eb32-46ff-963e-c1d3be138864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53b45a19-89fc-4e69-8def-f9dfa0837630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81489633-ffa1-42b9-91dd-ce994df1591b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ada9f06-9423-4424-afd7-a8822b33a99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "290a44b0-8880-4b8b-ad17-696c7eb35467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef98afbd-9389-449b-af06-64dd6e0a70ca",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f1493d-3d2a-4a2a-8fc8-256743a22762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fc59829-b193-404d-8767-1b4713066eb7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4a52249-11cc-4bad-86e8-b28811ee22a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e185471d-a5bf-4f72-8c4e-455ebf7e0312",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d15632-be70-4575-bc55-d597a5eaa9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "864ecc38-9b2a-4dc6-884d-1db6d35531c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7b7e8c-b5bc-4f56-b45a-cc58efa876ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4aeccbc-c4bb-45da-92d2-dd34eac0f649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8906e5ce-aec8-435b-8913-7d426f715a51",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c6b467-04a8-49f9-91df-aaa5f04975a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11cb63f9-f5eb-4e11-a312-00a77a9d1621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b7388d-0784-4023-9833-bb05a27fd0b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fd97a50a-ce8c-464b-afb0-366f02c8ffb9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9a93f1ba-c662-408f-b7d5-1779a2dd1cb3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29d8d41f-07c3-4dae-a27f-d666d0e997be",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a73fd4a9-634b-4e59-bb55-104839475ec8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "38ccf31f-d495-4566-9a98-04c6903722a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "942accb5-971f-40fb-90bb-9d4ec7999473",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9123b65b-8ddc-491a-9c85-0343c26a86a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "943c3bf4-f8aa-402f-bf2d-8e719c403d2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ece8ed1-06a0-4d1e-b749-31ff4532cb0a"
            }
          }
        ]
      },
      {
        "id": "6525f49d-554f-4097-8a23-7c507161a234",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "990b9a82-d2b8-467e-bffc-9a0ba07473bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3e42609-eb08-4ac1-85d3-c22458804f0c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7b91219e-1727-4e04-ac84-acb4dc93b95e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110449f5-02fb-4350-94a6-76880c303fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd8c614-3bda-4a54-a329-ba355cca3ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178ae50e-c358-48ce-92fb-ea3465a3f2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4a26a89-5f7d-4dd9-b932-01ff85ae131f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958961b3-2870-4d10-b0f7-f6828c0a076c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7ddd33-5d4e-497d-bfbc-92f0f13ea285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dc01d3-40e9-4ad7-bbc4-672d1c5f299d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2360504c-8f58-4708-9477-1235fbede67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eb73c53-2164-40a9-a8c4-668500a0b2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1530e09-79ae-4056-a760-e6ebab3ef1b4",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bfcd6c-bf0b-4249-9bbf-d51e3653ce76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11fdca2-5222-4e92-806c-7ffc646b308b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5593c4c-dd37-4627-8dd1-f68384bf18d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1a3e836-da94-45ad-9b29-e0997148442b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e26fc53-5261-4a75-aa84-95fea53e78a1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f0fee5-691b-4b50-b0c7-ece9b5c6475a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63eba6c8-e53c-44d5-85a4-619296ccfeb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd67af9-a7be-427e-b98b-e1be8ce7ecec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52f5e7c1-f0da-4f65-8964-a6cb4eaa2260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93db96b-8f42-4b1e-88f2-50811dfc14d4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df174faf-e476-40a3-abca-bdff04fd0b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3dfd13-f3a3-4a2d-82cf-cfcf1c887a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a7a4d5-b110-48c8-bf5b-30e5d8d597fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab77cd8e-2c54-4baa-9f83-6d84ed428873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a415a5a-4d0e-4ba1-9a68-81fb683ff5b8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561ab27b-984f-4d91-9179-e0d578139808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca09d05-90f0-4ba6-820d-bf224e035a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a882e5cc-77a4-4b68-89da-5c6263d89278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ba81203-f105-4c17-8fd9-01daa75e028e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2373c8b7-7143-491c-a289-47cf5c209c5e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ea1d8c-5561-47b0-a12a-9b687677c6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e30accb-fc22-40a1-98fd-746e9f623d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153c837d-2b05-4629-a421-107d1986daf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9076b94e-0271-48c6-9088-4cbc6dc914ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0883b8f2-27f0-43d2-ae4a-319dffb30d18",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faed9b9-5a27-408d-bc7d-94beea5cfb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09faacc1-5dc5-40a9-81f9-afecdad1c1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c63ce1-fc8f-4d7d-8a75-f938c9b03b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "349ca8ce-bdf1-4945-a1f1-5700adf6077f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e67ef7-ecf1-4078-ac02-23fc19e2b264",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e55ebd-4ff1-4387-ba69-926c3172c094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8443343b-44a2-4761-b3a6-fca4fff1f38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2b6192-2f37-4563-b972-459aa16b07c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5fbd02e-3c07-4792-b4e1-35b27b70e3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125e5ffe-fade-499b-9561-e5c1bcc999d6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d34d43b-635c-48b3-aace-18dbaf18cfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fa7837-d548-4c08-ad61-5af6685d0b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e0aae8-e071-4cdc-903e-d3d7643385d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "715b5d37-724e-40e1-bb02-033f0a5f0789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc5b51f-a91d-43aa-8c55-5b56323750c4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f9d8d2-1b23-470d-bd03-66c937e337cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f9ad4c-46e4-434b-aefb-c5e4ff54cdd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495f9a3b-9723-4b51-9e46-8dab7b0b5f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7fce8bd-e7f8-48c8-93b1-7a2f35ed7b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83859320-00d5-4003-b427-bab967b3888c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb42f2b1-952f-415b-a3cf-383ec60b0f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42773454-98b7-4dc3-8d8e-c436e0bd68ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499f92a7-1a70-429e-8973-9147356af558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31722767-3a6d-4489-a76c-399418818666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33120716-fb72-4370-b63b-7a0b0ee478bf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d9353f-0a8f-4c42-9086-618c33c576d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6851fbc8-58ed-494e-b980-767df076f77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f8750c-5d49-4ea5-bcf0-b15fbb5aebde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "360dbe6a-9b68-4df3-81b7-d973fd36db05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e9dc38-a215-44d1-8cc0-75b367cb6bb2",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a73e53-2e09-4f41-8232-06bc169fd03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45919d82-517c-4660-9802-1cc429986b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2c9ff2-c9cb-4961-b31a-8c207769a5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "baf40412-e0d4-490c-9dfa-ae937870bd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde54fe2-0b27-405f-8ae9-3f0297219a8d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba24afc-549b-4924-8988-c8eca4d97e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef10480-fbc6-42d9-b3c7-4f7e5db440e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8ed42c-fff2-4eb9-9edf-ec3a71149aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f71e8efb-b3ba-4077-878a-4fb4b692d399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee00d96-7424-4e0a-956b-3367b38aa2f6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c8fdeb-1aa4-41a7-9884-bd819473f655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757ebd12-3b9e-4d29-a6f7-94449a85989d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b2fb51-6b47-4abf-b774-899f1c0a7753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b2d7750-f6d3-41ef-9d52-8f6270a5fd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4133575c-afc4-4cab-b541-7031efca3e70",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475c5fe7-1f0a-4242-9353-f878bcf76ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbfa3e3-a5db-4541-b46a-900021f85c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9186df-e09d-46ea-85b5-c702710e0173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cccdf312-d993-4ed3-894b-d5d3351ad252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fb05c8-0d2e-4e36-b55e-d8bb5faae841",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38ec65c-f8fb-42ae-a65a-ff077bae1735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793d1ff7-486e-4bb3-b7d4-88cd88a6c866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1642669-9cee-4ffb-ad9c-c8420ca1f16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "123abef6-8d8f-40cc-981f-6d69858cf276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c2ced3-7105-4ee5-bb25-a4a5e85144b8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03eb2345-5a67-4583-8936-8d39c5890d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95be3ad-30f4-4995-b779-effe168dd799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f26f43-84f9-43f1-974a-352a6e7b9c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78bca8c5-1775-4110-8112-7e54d441e007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd51628-19da-4b6c-8bfc-ebf4dae019a5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc7382e-b616-4260-95e3-09254939e325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e994b37-e474-419b-9d2a-106a038f0632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf83694-f86c-402d-aa98-d8ed89566d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8c3d77-ae37-48de-b503-5666c8698005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74035f73-22dd-4693-bd87-dcd74ce0f449",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046ac9b8-098e-4327-9e66-e577ebdba18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1421717b-5bec-4afa-84af-123f151a3ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60705b9-c86f-4ffa-b66e-437a9e5b6645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c48db94-e737-4901-837a-160d9020abcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3e3a68-501c-40bb-834a-d57e66bccdd1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46f2b17-0f72-48b6-89cf-bde5e3d97d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2043fcd9-5f14-4cec-bffb-39c36e92c7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5e57c9-fc92-4ad2-8499-9d5a9566a1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a5d220-65b1-40e5-9335-a49e260e7533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b754dd0b-f117-4a72-828a-538bf7ec143e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175b8d9e-2ce8-48d9-9432-60c1ee70dafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0de2d97-9f5f-477b-ad48-e3545202fa2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2461d6dc-9c7a-4e17-be72-f762406d7a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c07ef7e-38d0-4219-a119-509c19fce14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13d8b9f-a8d9-4afb-a95d-6207231f852d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b37e519-bac9-45e5-9f81-2ff248b9de76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb07ec7c-f2d7-49d8-9ab9-1dfd27d3fd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e11521a-49f0-40e0-8351-d53ceb1db303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3a0f8e-aed4-4375-b0e9-c4e45729de08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c63966e-5365-4dcd-be10-8c06e8bfe3ce",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4d58c4-01fb-4849-963f-fe684c7f0f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818c4d30-278e-403d-9311-52d45e4fa087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5a9c3a-a15d-4e08-9509-b4d6b60c43f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84eef9f5-934c-4308-af7d-b512957d024a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edd6f59-8137-4968-9ec1-263ac452a0aa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12f7bfc-40f9-48f0-acfa-d14959e728bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d89658-beab-4780-8457-25263a110e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda77dbd-fe66-4c52-a025-a9e8534b3429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "473ca572-4739-430f-a39c-42d7ad87aebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29b7dea-2b1f-4cd6-a2f1-26c3fd53c6db",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7d705f-9c83-4c73-8c54-3998c6a7ab1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e707c610-f079-41d8-a671-d08925bf264a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a34dc27-a6ab-41c4-bb59-c8b430ff95d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb497eb5-4154-4250-97ce-25b8608405a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6ff010-fa34-498b-8b69-6f2d2c1c4cba",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2375ce77-7fa3-445e-bdb9-a18051bca438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb740c1-684f-41d6-aa6a-338a0936a6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0ffd9e-583d-4915-a77e-935493fd5bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05600972-2fb5-47c9-8f5e-9963e89d915e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5df75df-aef6-4d6f-9de4-dcf301582c6b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff719bb5-7d27-4a2c-b7fe-570bf229c68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dd1c44-7148-4076-b573-9c77c34557b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4d3690-d248-48cc-89ed-86c87365baef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa22f299-6a6d-4b34-a7ed-a6a8caa84a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b438df-ae10-42e7-9039-9281b7998290",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fdea5b-6450-4d66-83f2-c0d698ea56c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9934972b-4f3b-4840-be1d-e38fd48f7bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57222fcf-e236-4064-841f-76c761f7f8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21ed583a-99bc-4b6c-948b-f73ae0be009d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2601b9-0d9b-443c-87b2-1f7e1404fceb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6e4465-de9b-4c7e-944b-f510e9cd4009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d46498-d257-4b52-8f40-1e5dc54f51a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16cb288-66f5-4f67-84bc-d467cfbbbef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3911912-123e-4c95-ab2c-375837c85c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f17aa9-4605-4bed-8210-a60bd57474c8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae070f5-0678-407d-a9d9-0b3409750062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ae73f5-371b-4304-bb4a-8c8cf4aeb30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f38c184-ee4f-4517-9f10-e33014e5b88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f55912d-b886-4403-b3b1-80aa4033a526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d357c97-0e48-4df0-8ba1-df391471562c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6c1c38-5875-4a92-bef9-300908af8422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4093fe5-f9dc-454e-bfa0-d45f0bb68a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60046c36-e0f5-4288-956c-225cbeb066d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1632897-8467-469a-b9e2-05271bcda6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86202789-5776-4109-9695-22512909a8da",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e294d9f-2c79-4c56-b6a7-fe27969dc697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26d9570-f3cf-4dce-9ccd-1db81fe51dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd258bee-8bd2-4e20-a5ce-5b93340472fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c309598-8fe7-4372-8754-b3d5f78fcb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5006ef10-b6a6-4a5c-856c-b3ce615a7671",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baea6b1b-51e7-4c10-830e-7e647fb69c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff2fa00-c555-4066-8169-a46cdcb58632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b47bd3-b53f-44cf-a4e3-5d072335b548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d7bb62-5037-423b-a55a-a6c5b3eab4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876bbb17-5d11-4a15-bd78-7b42e4ad829c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7b9e6a-0efb-4cd7-b8ca-f8ed0c286d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b7056e-baff-4e6e-8679-78e4e661c540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72877c0-6fae-4d4c-815f-1e4294c60559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97fa8218-eb24-49ff-b34a-fcc53056f9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75dd37c-3325-4730-8fcd-086b2d282389",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc4fb76-d96a-4225-8ed0-ef79f7f1960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c24ed67-e7ec-4eb3-aec3-9d24a47a7416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f668370c-a9ca-4d85-ab83-1eb6ca097d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3185f0ae-fd52-486a-be19-858324091ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8c15f4-ad24-4fdc-bfdb-2c89345a42bf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde8004b-84e0-4b8c-9754-45721f1916ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8cadcb5-d4a7-4e5a-8f54-548629bcfa7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f05dc0f-4f55-4e76-bd96-faae2fda93cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82fba3a7-f126-4954-9d57-c38c0785567a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a79e049-c8e7-418e-88fa-79945ee22692",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9104dc33-562f-4c59-ad98-5e3a32ae350d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a430abf-e096-429b-96f1-8db662a52ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a914d85d-ffdb-4428-a2cf-ce989fca8762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aabe68f3-6266-4b1f-b219-f35f537d2d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9aea826-a9dd-4aa2-8207-688afba04150",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481b2345-321c-4db4-914a-157f41524190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c26de5a-1c2a-4a13-b831-3455258aa9c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bf04b1-e282-409f-98c5-f08ed1d419c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "44157dea-6137-4311-b8a2-fba5dab96158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e309c54e-ee72-4ea9-8115-f0c857223c40",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebb387c-c97b-4870-875e-3cea00e77b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f50ca4-c473-4a0f-8e1e-df883787f82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aa15f6-1c42-4fe0-bec8-7378611e9edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d46663f-d252-45ac-9601-b8cf413a476b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211b8746-1636-448a-bf47-ccfac3b85c8d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0d7c80-bcad-427d-90b8-e60e8ebf1615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0fbd07-8271-4b2e-bd5f-53bf410caecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f720827-0d7e-4474-be06-6c8c95fa03fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6dbb1f-1317-4007-b97a-697b748ac24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cbbba5-532a-4196-bc6a-0ebe5b08341e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d81da38-8a3e-4ccc-9655-83700795db4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e87549-e83d-4160-9237-fb2cbaa93d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209adf95-7056-431e-b93f-81807f466678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62c7bb98-39aa-4067-8df4-cf1213cd507f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de79fa88-fba8-4b7b-9c4b-afaa47799576",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4904b372-46a6-4f6d-9746-98b4286bddc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b75e05-69d9-4cf9-8cc1-4d7b76cde96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebee285c-a9f0-4929-bfdb-ed7f35f65099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0b21c3-a3b1-4dd0-b937-2e43f38e1790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcf01bb-a3f1-4124-b66e-98e9f2c76a6d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f31a790-d690-4031-acb8-3eaf3459b15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011db893-8bc2-4b51-9da9-d394e1b09a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9092cbd0-d0f3-4a03-a9c6-8294a0209b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "af01138b-d4b2-42f9-b2a9-51e01f161157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146db212-acf3-459d-a7ba-770528b3c0ed",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b8aa1b-7b7f-46ce-9f15-faa1172434d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85044a7c-7c3b-4cf5-bfb9-1f0c556bc263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504f56d3-790e-4f62-8a26-d269d730aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "83331f4e-a6e8-4796-8f82-526a285075d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c119d31-c816-4c89-b893-240f96fb92f1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc463e1-76b5-43fc-9d17-cf3a0e584390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317c84fe-173f-4a20-bdcb-d7fc502d5ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b7ac24-3488-45a8-bb65-cdeb303e11ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62ca0ae-eda4-4694-a870-8c10c0e19e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d31c920-3511-486f-b046-d8d933719a44",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb8a3ce-a504-4ee7-9723-170cb6f5ec51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba350fed-d38b-4e9e-82c7-6bd0026ff68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e37186-b65b-4e96-9152-6ef7c5e364ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3d08bf-12eb-4da7-a568-1c35a9565362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d51706-4a37-4ec9-b69a-7103a040e9d3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2940b6-49fe-4111-be5b-d3f842e1473d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596cbeb1-5e20-4730-a111-111bac9249f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f4c0c1-7902-4695-b011-be1ddbc545be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6faff041-d769-4b4d-a104-c3585b90f41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510d3d02-aeab-4b76-bfbd-cc234b730e1a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e7d348-1664-4322-8d59-1b047d00b70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4ac03d-82fc-421a-9539-b80f107d34b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3350406-961e-49fd-b65f-a7aa7ab25a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3181372-0dad-40e4-bafe-fea4c616b6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c179ef-1a40-4726-ac76-5e06e08015fc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1344fba4-d6b6-485f-a7ab-83a9a6a9f133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba779c3-a57a-46d4-9bec-93c03e36a742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31fbcc8-15a3-4719-b44a-c982ebf0283d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1208d3af-a5d1-4024-94df-8b9460beed6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e656d1c-91a0-4df0-952a-f5582d652c30",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f798f25a-b129-4341-bd96-caf71ba7c15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1b848f-5dd2-496c-8302-e6bceb1fbbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436dcdf1-4767-4c96-aa62-14c5d9c102b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "883affe7-fd8e-4155-a53c-523179494efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db688b23-fdcd-47db-ad19-91fa40c9ea70",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3a7fc5-f9fe-4b30-a841-f5ef446a5b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc06efe-77d9-4d41-a63a-a3884e07c66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942005eb-e6bc-4777-af32-47707db3633c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "06bbe4e5-a0ef-4813-9bf4-46ba133f4feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a60a69-5b24-4f87-9310-e36cd5d9af8a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95523607-1946-4c64-aa5b-a6c93c6af71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5e51dc-91a7-482c-a6ec-bbd35d079f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd855aa-f720-4263-b15e-d3ec4cbc23fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0eea59b-5ae0-4f75-ace9-ef923cc1e528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613ee290-3509-4215-babc-6176b59ef88d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2889038-af2f-44bd-b25b-cca1a6d72f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a918a2-cf95-4620-8ca1-506c78dd0c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c70b9d-c3d9-4c98-a626-b96daa238cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31659187-6281-4e62-8141-cd81700f2f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b024cc-270d-4bf2-ba83-2d1e0bed799d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3d9b9b-5cb9-4a02-97fc-f5fb5ae5c3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4714d01-087e-4fbb-96bc-fedfd6667114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c13db1-cdbd-49ca-97b2-fcf84aa13324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bded8fa-b067-45c3-bbc2-7cc5436b496d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5bfaab-21c0-44e4-80f4-c208f929c4d3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0920a391-1b90-4186-8fb4-7cb76b9a9040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154307c4-4aad-49ac-90e2-e2c92505a51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e452e2-92b3-4811-b8aa-a61645766930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15f33337-cf7c-4e2f-934a-86d4e8a8b8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02ec137-a1d6-4f69-bede-87300f215c04",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7df41d8-f9b1-4751-9544-2712e636488f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8421f498-6b49-4e88-933b-f0b9400515eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f482a217-d13d-44cf-ab65-81755bc4640c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "15bb3373-9460-427e-b092-9b6eda5025b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aefa024-44ff-4dbd-9a72-d4acdeee7e5a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf7fed7-d05a-428c-904a-dc10dd165a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb078dc-82d7-46f1-8eab-7e39dd3310a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8eedaa-a640-48de-8308-2c4e0e158cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "681efaaa-8d22-4497-a612-8c20cc7aefe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0437991-2d56-40e9-bd3b-de578dbf7bdf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4772f8-0223-4f7b-a6c3-aa6cb9e1e886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5c0535-2f73-4c41-ae3e-324c982a6279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbdc13e-31ad-467c-979e-bb39b4095b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "21ae5a90-713b-4abe-a797-ef5e7d283eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346c5e12-89fe-4a44-ae03-1eaeb337a38f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fd16eb-b3dc-41f5-bc45-294f9a107218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb2916a-1e98-4fd6-9e12-08585b4199ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f833becb-c366-4fda-ab75-ed8a89dd87a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98c0f778-4c3f-45a5-8239-0aa35de49eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1abbff8-af17-4298-a0c7-1dcb9710e70d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e332b2-696c-402b-970b-33895a37dcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6afd3f9-9681-4f00-89db-c02ee1e69891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae918b2-c41b-41a7-ac85-3e1b915ae6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "79222e2b-0752-44b6-8143-6213d6aedd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31eb904d-5dc5-471a-af97-6875e56548d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52055d2-d9ec-4aba-ad87-7104b43da5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3d90e5-6f94-4bce-a33c-f09262004913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6223e23-530d-408f-a82b-58ab21ef819e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4524260-7df1-467f-a6b3-96f8563da0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9bea48-c727-4e4a-a129-c27cdb6e147e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4e6385-032e-466c-8e65-e82ac82ec1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238df5f0-9fd6-4377-b26a-b6460bc2395f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f711db3-4ee8-4108-90d2-d66f7ebb05df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3557ba-0f8f-47c7-9bf6-fe73b61ba98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49144669-1b49-4e74-85a0-88513c999a92",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f29ec23-fa16-4f5d-ad82-b1cc385ce1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2a8f4e-85d0-4e74-9b6b-5fb4937ae6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d3fb2a-d97e-4dec-9893-a511617a64d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5345503a-586e-47ce-88ca-93d12291c9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d0445e-a072-4161-a0ab-5f4cb85e2a02",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca74662-e22b-4993-96c4-b19be0e002b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ccdaa7-abc3-41c8-b1dd-eeac60f58bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ae59be-2117-468e-ad4f-18222595c2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa9e7be-8314-400d-bcf7-cb6e31a0ac9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9a8c13-554c-4dbf-afa9-7794c493b2a3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d88fa0-abf0-401e-a7fc-d3c0a3a32618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2324bc5-b348-465f-8984-6a9951b8946a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116ae533-0482-4d81-9596-70372a871807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f42d308-3731-4832-94ed-10bcbd9a0353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d88f8b-2f89-4ac4-bd53-af8fbe22ce8f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c62523c-b8e6-4994-9203-0f0deb65030f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb13ad0-c423-4b07-b11c-cfdc5e4650eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35672d1e-728f-4d12-8578-0c05af11e801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c75d84a-75d3-4e84-a4d6-006173c2ff9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3951678b-53aa-4d8d-a934-e23deb141922",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071864b4-0d52-4964-a5a2-e095883c25f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e33e52c-1b75-41b1-ac79-fb802010a05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dcbf22-a1f7-4ed5-b496-6e805b6265ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e2feab-d7c8-4981-bd6c-c35f4cf812a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9229af-6f9c-4dbb-a310-7ce868474592",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b4f211-9313-4f6e-9d91-b15a22be02b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd466b7-8bb0-4d7b-8664-07f62e3b9cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80c2103-459a-439f-aca8-8a3a5cb74a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "01953734-7297-4313-ac25-f50a01474379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e53cb93-3911-4ac5-953c-2eb336d9a16e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6ae2b6-3b35-49a7-a95b-524f75001554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1f39c6-b931-49ba-9a95-7543446712d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6b372a-86d5-4efe-8cc2-71179c1af387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "890583f6-5176-4782-ba3b-ac2782304487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce232ea-0fe7-42f7-8369-1e80d17e4123",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dad295-8364-4480-8a8c-4ee3d20ad73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e938e65d-f194-4652-b15f-ec10212f3a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637816c6-4576-459f-bc62-5eaea6d0ffa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23ae6591-6a06-49f4-9dd6-a2fd30928b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d890a55-a20c-42f2-a06f-bfadc8c77712",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4990fd58-894f-4cb5-b5e6-17a1875c72f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16fc717f-84fe-4b50-97f0-b18a98c293df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aef16b6-b7c3-4247-a8cc-1e5b794a859e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e16e96f-e18c-4de2-8cd8-492b5a136b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf10ca5d-362c-4c49-95c5-b3fb9975a33e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d07c85-1c12-42d9-adfd-6a3e0ec8de70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac64b1dd-105f-4089-b161-4f4d1128ee23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72a5550-f184-4b8d-a3db-52611cde9b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52789193-fc46-4159-a77b-6712e18c2959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dd0331-20d2-4239-8ede-ce7238aa287d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8087d7c5-da30-42c5-8d8d-40fbaa0eefd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a701d4-f9ef-4150-b6c7-2cb9c0c48a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9634738-275e-4980-b8e7-38d08bd4ca03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e12898-f39d-4ca8-8fdc-24475c407474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025e470c-3512-42f7-8fc7-919494c55878",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6517f69e-c44e-4b8c-9cff-c27783d5398c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e92407-8eb9-4159-a868-d423b192ec64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adcc13b-dcc4-4e76-8280-8a62dc45fcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8d4d9c-6166-4017-b72d-381303becc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2295d3c-e191-42ca-bd65-7f453431b3ca",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8170a1b-1d18-45d1-860b-88d01fe0f8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47192d99-e008-4ce2-bbd7-e1a36375fa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0205fe09-d091-4138-b46d-7c5678915102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a733ea-a11f-45b3-aae3-0a2bae131ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3320785-0933-45b1-bff0-974a8cda50be",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a6bbb9-c4b3-41c7-a9bc-ec1ed6eebe1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6ae7f1-a9f1-42b8-93c9-cff0817eec16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4f00a1-737a-469d-b753-59d62283140d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5402b7e6-d89a-483a-98cf-71e03dd83b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b7151a-7eae-4f7f-8537-a0623d020c78",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b27b693-559e-400c-9aa5-90258d9a6e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21502578-8052-4670-a1c9-6b4c2ea7688d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c24026-46a7-4eb1-993e-fa2ac7e52d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4fa04e-4a99-47d8-b907-ae89301979c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb70505-6e48-412e-9f03-f912b29abfcc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb29e89-9052-4e8a-9b94-9d242711c9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6865590-5393-45ef-9ca5-5f5db092b299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d833353-e6fc-4532-ba35-aaa7d31a4402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0303220c-a3f6-4b6d-8e28-cbc16f60a44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870214ac-7f95-4bcd-88c7-81c029bbab4a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d2b513-4316-42b6-90b8-8295d7e35a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d182d9-5460-435a-a1cf-ef2f7896c235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c58631d-2807-4c6c-9286-9308983076f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2df5a46f-6225-422a-beee-5b76fc29ed94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b937888a-2bc4-4d6a-9e13-50b751bd9333",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318571fb-9e14-4415-9dc7-3964d7e10a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4719e376-aed5-4dff-9657-0c7716fd9eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fc5447-5f27-409b-8b71-5937f7dcd79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7da576-bd83-44b7-9a19-5f582882e705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab7d159-1bb2-4873-8b2a-7e5cd95092ae",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c2af7a-2144-4eab-8379-dae5151047e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671e164c-6e0a-4f17-b257-63fb567667eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec84567-d4c0-4ef4-8008-f64fb42e1c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc3d6d6-f90c-42c4-a13f-d46ecfeeee81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef77233c-3a3e-440f-a4c6-8174b2ba3c81",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e5158f-6e08-4799-8f6e-179d921a9733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6873e223-ca6d-49e4-896b-c1110bba07bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c412403-0305-4aa8-96d1-8602b815323d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b87efd10-114f-40fa-925e-616d4549d426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e727255-cd18-4ba1-b6e6-c24e49f744e6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d306dcc-45c9-49dc-bff9-dacbe9f46675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b10344-c499-4ae1-84bc-13b706eaed02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ea0db3-b266-4cf9-85db-bd25f2753925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc7e54b-2e10-4286-b727-566c860034ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af6fe78-1008-4d85-991b-b149aec5a9ce",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb29a80-fc26-4cec-a488-35204787e27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0ceafe-688a-4a36-aea8-c7a3679b5188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a981d7db-7f87-431b-b448-a919a1df27c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f64d6446-7bab-4515-8f76-2514ab45ec50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91d45ae-1073-4936-abf8-858cbe75c497",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d88461e-58f1-43e1-9175-d830d8e122fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff6f4b0-fe68-4ce6-b9f4-664d479cda72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d5ca10-05e6-4058-89fd-aa488aafba8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "812ab208-f0b3-48d3-9d2b-7e2cbc167087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb621074-d875-4808-ae63-49c0b1df7297",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e707665-485d-4f68-acb8-4995dfb8c8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa44a229-a21c-432b-80d8-e99807d65990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cd6ddb-8a8c-463f-a81f-813b87e7ce98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f92e60e2-082c-4d3f-81fb-8b02c4ab4a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1aea9b-6ce6-4ae5-9972-29a6a3540524",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6653e0-577e-49cc-b8dc-7207da298a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf47957-29c8-4b78-a408-e2d5c9c57acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bd2218-6e23-4ae8-be17-ed700f418043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e94ea01-39c0-420e-a90d-ce367a9e458c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f7af12-b8ef-4b12-888c-8e46f4f08e7d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1550656-3fdd-4099-949f-47d60de3a209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73245ec-161e-4adc-bb77-22b13cdaa4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b14cb4f-6e0d-417c-b059-da1b491f9ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54543ce4-daa5-4e80-9cf4-99b8b5c05d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee21a9a0-3ddd-4b1a-a760-da0cd4469ec7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f653a1ef-1678-44fc-9ada-3bb5d807bfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8016e0-56ac-45bf-8e9b-c6840d41fcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca0f0b0-8de6-4f66-8ffb-d6190174eca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1602d7-ec01-4729-bde6-eadcacd6865c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36392426-5c25-406a-b678-341c7141404b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a205da-38eb-4674-8f78-3ea56113d1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c07991-69f2-4c23-82ca-4e7ad3cadd22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c401e5-75f9-401d-bb65-254bc687a9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1fc96d3-ba9f-4a48-ab36-107ebab7bf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70588d6a-4f58-42bd-8d74-9133aac4efde",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a622405-d15e-4c34-8cb9-7cfa86311424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09dee9e-a345-4a61-a645-40afa2980f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e617bfd-2ead-4a67-bc11-b7c45631c852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d60ee9-6ea0-449c-8830-99233810b851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1662d598-3485-4796-a182-ff9d1770c7df",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6c267a-d44a-4e9e-be40-3372c0a65c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1c33c020-7e4e-4b87-8ca4-b0a990f8d1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7673349a-defc-4443-aa00-5e0fd477a3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b70ed3a-311c-4552-8205-0ee436457520"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22629016-8a87-4119-9123-ed32bb6e2471",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fac78b8-239d-47ed-bf27-d25c2b565a6a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfe2a27-c0c5-46ed-b946-bfdf160748b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6570c04-82e5-42ce-911c-83d6642974b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b922c054-842f-4aff-8f5b-8756230d3303",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "adf86e69-68b0-40e4-8f7c-724a52ac10f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4e79f8-a65b-4285-898a-b072efdf0a5d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bbb52f-1ddb-4fd7-bbbf-6fcb65e9faea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c1f3bc1-f7c4-4b54-960a-f222bdb11431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1e306c-c999-43e9-845c-0eb5c7713b4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "65e46036-5d5f-4bb3-8380-3d43dbc0cf73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "435023fb-8c00-45c8-a057-35f18f536d90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9e5e8f8-64c9-4c09-9f99-64a2707fbebb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78327a46-7984-435c-aeeb-02ff4fc252c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7112be35-fd4b-468a-931e-73e63e52aad2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a154be05-9118-4afe-885f-fa797e90d3fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86999841-416b-4ddf-95c9-4919742b58f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c218d7f3-f368-406c-a894-edf81cc533e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e905b7eb-9d01-47b8-8b73-0b9aaacac469"
                }
              }
            ]
          },
          {
            "id": "62014f95-8641-4bde-9f29-ae189a4349c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ffcff90e-27df-49f6-9581-d5909cec329f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0ed3fdd-effc-49e3-8b3b-eb3ad689b7e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b12a455f-c30f-47d7-8a34-687d07f3f79c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31ff2a55-2010-40ba-93d5-2a1a03926e09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "606df981-63f2-459c-9fe6-bc1b66c8086a"
                    }
                  }
                ]
              },
              {
                "id": "62e015c9-b536-490b-8ca0-afb9e126b589",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63d90411-18a3-447e-8ed3-1931e4edd07c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1e7a72b-606c-4e09-8a82-8a5c6c55969f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cb8141f-916d-405b-9ec5-a8677726bd23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a855557a-8d29-4eda-9c69-7d9ad051a131"
                    }
                  }
                ]
              },
              {
                "id": "30d84f75-d5cc-4aff-8aac-a33de7178e48",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25a001f4-b435-4919-97bc-51279b87a99d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0581d26d-eb88-436b-977a-cf85941bfdb6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a644db39-91a1-4ad0-88b0-fc2dcb49897c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bc867e52-df52-4d25-9ea9-6132b415adf8"
                    }
                  }
                ]
              },
              {
                "id": "94d3e05f-8f41-44d9-b540-9b8fe99c0bf1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1407d11-3366-40a5-bab1-b2de8afa1116",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "833aaab8-bc62-441c-893f-0c020f40922d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9362410a-cbf2-4ce7-891b-a9f80a059f9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bc45aa2c-3a05-47bd-a082-1631fc4c05d4"
                    }
                  }
                ]
              },
              {
                "id": "32923cca-b8f2-4a69-af56-5e87522505c0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a92f0587-7fb3-4768-bba6-3a460c79fc7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c1c2fc6-925a-4548-b25d-c5b4c402d5cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba59b15e-9bdd-4738-847d-1a50bbe9529b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ae7fad34-4c88-4df3-92c1-c34bdf896238"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "840d2a93-b485-4e5d-92ae-b68098b1f68d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84c34c6b-91ca-4740-bb33-2773dcd88ae8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8125d574-6012-4013-ae90-30ae6787dcff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e83eac64-0175-46ae-a625-954c334badc9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99c22a61-238d-40e2-bfd7-950af2e07f0f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "18d32cf4-6fc2-4358-9402-8faf69a12efb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5987cce0-09c0-48b8-9d07-c34256d8e91c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43eadcf7-8191-4fed-ae31-ee40486a46f8"
            }
          }
        ]
      },
      {
        "id": "eb3dd103-2246-4988-926e-3fb12dc8ad30",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f93502da-a53d-476e-be8e-e1b0878b18f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5af72743-26ec-4731-a33a-8ca499cbe088",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "628bd1db-7a44-4c00-90a8-4d61fd956124",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2881104-b0e2-4b9e-a7a6-3e2cf8c45635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9e1ede-9b23-4ccf-aebc-ac1dcd883f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca840a7a-6056-4868-9f84-91a2717cbad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "96d7757a-9ac9-4f50-b063-f51ea6aa7876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af27895d-fd45-4090-a0a9-26c24f0f60ed",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c68aa1-e562-4823-8074-8e0f46995b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4925b0e-3f05-422f-aa5a-35f10fd0f576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac91d85f-51a9-452c-860a-20f3b7d31b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "589ad921-25b6-45fb-a2c6-a1a3e16f6ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2191cfc-b991-47c3-bb7d-fe1ee1b66ec3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815022d9-f579-4727-b7b6-03c0a3b6f1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96c2b89-9521-43c9-b3b0-1715c0935d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaccd94-cd64-48c8-9bf2-0ea0cad25852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3979963c-faaa-4c7b-a35b-b3ed0c1917ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a6e91b-c2b5-4057-982d-76612e4e1d3f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99147c6-1445-4df8-8198-1cc45411212a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3039fe-be27-41b7-9118-3dd3ec0bdea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd1cdd4-8260-4830-838a-e0b51a8feeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a18c9e2b-b347-403f-9c5f-693a32462b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0555f381-13db-4f1f-9036-c75eb050e04d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c357e3-cf43-4baf-b5f3-b3b14103fc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e101450f-3beb-4199-9c8e-1b76c27aa9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6da9894-1556-407f-815e-a6556209449e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8267b763-d2da-4abe-b8fd-ea4906aa64a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f55062-9bd3-4d41-a80e-7e99bd523956",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ad66c2-a71d-4940-967d-cd6603fc90e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90172db0-3ff4-44a9-a090-b2d6c9fcc47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71095ccf-fe52-4f37-8383-bf5bba0c2946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7136792-fdf0-4d8c-a279-2d29b05e30b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f2e293-6049-4cee-970f-becb16c9695c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b57931d-2d5f-4f78-b56f-3365c01f1591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a514574-9df9-4492-98aa-5efde702ad6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5c4f2e-a466-4dac-96a8-804a9f9a617c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a41e46-77f4-46a6-8de8-fa94d03829a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76573a5a-4e6d-4054-84f9-90676b5908e5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88165bf1-125f-4e62-a743-ff2297a86970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0e047d-c72b-4733-b10b-ddfe719a10ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe230027-f6d8-4d18-9102-f8771651b625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70c97ec0-5949-4527-aa93-f4a40394033c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9713a9e-908a-4437-b0a3-caba067b3b47",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dc555f-5c6e-47c0-85b6-731743adc2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cff06e3-3678-4a98-bafd-6665bb4aea51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ee6ae0-cf7f-4b40-ae84-1e7d4e8268ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfe329b-5b66-433d-b087-0db5e738ffcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dbfa4d-e007-47a5-8123-666e38e34fb2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95f8f5e-f882-4b12-a89a-84f60abd600f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118003ff-aaa5-4e1d-9cb2-af1afdcd60ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271fcf48-c442-4a47-af46-3a5d7dca0c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7f511b-271f-48d2-ba00-86adc4c5b115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b589f7-ed37-4412-ad42-df5221db4a0b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757d3891-8621-4f82-ba24-1936adf9e55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea6296f-f8ae-42f6-a5e7-c21d8b555c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e044d72b-47eb-42d2-8357-aa2d76512b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "30130f5d-89bd-4349-a127-b640366ab18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04b379e-3955-4940-8f16-2dc11c407e00",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91071d95-f6cf-46c7-a6af-14fc62077613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc3c84d-95b2-43a4-be67-41e236f7b6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb89b54-cb64-41de-945b-1fa52e591546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3eede2-40ce-49cd-bf2e-947cad0aa07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52eec718-3436-4d15-89f8-52c65780451a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0039477e-f369-43b9-8650-c4c9709b14f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a192b0d0-1ff8-4a4f-a364-cc5f262c3438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aced18-ab69-4920-a1a9-1ade2b7dbd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a432e2a6-da80-44a6-ab08-efdb11f46ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fb1d03-f2ba-40fe-b11c-53a1d93a94ad",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c778cc6-a844-4473-9be0-916102d07c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05e5193-aeaa-4b78-9c3c-b73cc9069178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4dcf68-3626-4292-9ec5-da228b6dedd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3192781-8d25-4ed8-af8e-d99d2833e565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1f71dd-6070-4f22-9127-142b264ddf09",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e9fa23-58be-42b4-b17c-5ce83e4ed7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7734da3c-491d-45c9-bf07-72e2cab17d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bc3ffc-2317-4866-ad1d-afb65ebb0ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf7d1e1-da1d-4be0-836d-06a103f85e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d074a2d-bd54-4242-b7ff-b2f857824546",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd330753-7cb0-4871-9d2d-5bc6c449b11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225365f1-4c53-4ad4-81c5-cc0d5b4bffbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58871d77-e417-4a71-964d-e878b3ffdc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ff8c7c-73d6-4c8d-9baf-95620accd5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47255e66-359f-4a89-aa5c-c69b9adad5e4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a769c0c-5df7-40e8-b459-04225e1244e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b21bee-f510-4160-802d-c0798be8e2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12812ee8-b937-4d7a-b606-2cb5ae076451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d58ee41-0890-448f-a770-f8a32f3a4429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f5e7e7-a875-4412-bf9b-e220a09274b1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a06fb9-36ab-48a7-845d-ede6fa472736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba234b4-272e-42ed-a6c9-0f9cf7e535f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20471423-05b6-4b07-9265-f9fb98a80b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cce9386f-d716-4f4b-844c-d4c4d269217d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cd69eb-14f6-4180-831a-8d83f16c7216",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e35388-c969-46cb-b7b8-2fd22f85513c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efae479-0cbf-4518-9b59-6a33d3271375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9a1ace-b149-43b7-b58f-d423a832ebe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "287f3ae4-744d-4926-8e61-a83a563c36a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c62f1e5-5705-4e71-8163-05cc6f8e8056",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db317d55-1a13-44f4-a804-865bac60dda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc63d4c-e0db-4d68-a7a2-1e5e3652f353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c1a516-45db-4181-bd85-8f6547fc1253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd6c082-8233-40a9-8a0d-b357d949ea01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bf01f9-aa63-4e18-b9f8-e31dfa89953e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f2b4f1-279a-49f3-b20d-dbf6bb3b8aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580889db-1c1e-4a62-8a6b-2d60596a275f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810de439-d451-4b7b-8dcd-71d5b751d1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b30c94b3-3e16-48f7-9dbf-a820af21f7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531d4f72-9f50-4137-bd26-d36dcedb30a5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847e9d03-349c-4ac8-88e1-d80a32c3a611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0c7cb1-2d02-4335-bb5d-98a1b480e964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af29104-1e3a-4a48-bff3-90d2fbb89b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d10f992-5b5a-4f49-a48b-78f1eba98111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a90c878-00b0-4e5d-afa8-d6e0e04bd9ac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea16b8fa-3c3c-4ad2-aae2-8e6087b9a84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c64f64b-2720-48cf-96fe-1db4133b11d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525c0382-93f5-47ed-9f78-1aefe436f4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "420860ff-bde4-4aed-84a4-e5f8f9734f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f91503-3594-4543-b205-903a68fd47e0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4917c0f9-534d-49fc-a515-6b20cc85f2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e719fc35-5312-401b-a77d-abf21b0eb92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a54f15-e301-48d2-b911-482ba2d699a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3d959f-8bea-4885-99b6-b01cd428fc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6502701-2611-4a1e-a272-6f2f0af35879",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185bb483-fa7a-4cb9-97f3-242cc7a55e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df9ea71-7040-49da-b275-398fe2c84718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f357265c-5cf3-4551-9f17-016853f86723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a1d456-55de-48fc-960b-756b291edd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbff54e-611f-44d0-b012-2640182bdd96",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fa10fa-3150-47e9-b30e-2c54cb0ec165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cc1f67-7f35-4fd5-8fa7-f5b4b74d9511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bfe3c3-978b-49c1-acda-ecb893e76c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47944704-2ba3-4f76-9c73-26c5a2b52394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590d91d4-e5bf-4c5f-988c-6b0bf39ccd85",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd170fd-0e31-4810-92d2-520613efb8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff420fd-1874-4f11-a570-fe1b33a8308f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1277af56-f5c2-4504-a523-2e0e43db990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe9592a-193c-4188-92cb-1ef4904ee10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1612e1-5307-4c92-a2e3-1a7c7f401436",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3c474a-f5f1-45d2-bd4b-4a54e5d25f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907c0d0a-0860-415a-aa1c-30090f158212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5cfabe-d347-4f08-a765-4fa97379e67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4faec28a-a7df-4cbb-a13b-c82eab6f75ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddff196-b608-4ca1-ace5-d9e581a6e8a8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702fc158-f76c-434f-a7b5-2fbab616a71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60654876-a399-415e-92fe-3e9650741179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73c5e9e-bbca-4e64-b732-206857a61ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7327c39c-b9b2-456a-ad46-a9569bdaa953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87440985-11c8-43e5-84e8-8b49d2df60c8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e855b731-fcec-4f85-85ff-350cfdfc8379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4fdbc6-3a99-4829-979d-3026363a0ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cb33c5-0581-44c3-bcd5-f14f01316593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "945ad042-b548-409e-8c1d-6e837e978d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6421c7c-94b2-4f66-955b-57db88e94c1b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60838b1-fd77-49b3-8fab-f35ce9dca96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ba0415-831f-40a9-9ac1-8ae576eaeeff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8f56c4-70d0-4596-bb96-434baff44102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5a0388-7efb-457a-9dc5-01710a023572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca48c86d-b86c-4f51-9d46-1fd1d0a697ba",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6a4606-cf9d-4466-b311-8d5e2402c552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d9d1f1-6561-4b84-858b-4a50598894be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eae7505-b3cd-41d7-8693-19b66ca3f41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dda3fdc-d6b0-4bb0-80bf-ef43d209bfe0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "34ccfd3e-edd9-42b6-8167-f1891d8e0b22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78a1352e-503c-4401-9611-7c2249e22306",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4c8459-34e6-402d-9147-767fc6c3f578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdfc29b-94d5-4b7e-a0b4-8e98b693b6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1d14a3-4584-492e-b096-26437ee718c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22db15d1-bbb7-4391-917a-a4dcded62661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b71a3e-571e-4acd-b9ef-c4ddd5137627",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f43e1b9-828f-4b7c-b38c-ea32c20dddc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "88965d22-f9c2-4347-a528-76fe36f91add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bd034b-0c6f-4014-ab46-96d8c50eca4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1681f69a-1c41-49db-a8af-a63a803b16a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59bb315a-29c1-4e7c-ba58-1f08040e7adb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0046c7a8-2924-418c-aeee-6f75270623ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f8be93d-7560-4119-8252-9e329558968b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "343f7b20-7ecd-4b24-bc8b-6699e4ef71b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f53fcc43-99c3-44b1-a96a-ad3615d88478",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b5616a23-cd5f-42cb-a5e8-3b19b8afc391"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1905ecaf-64cc-4361-867f-aab524a76cb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e08d2b5f-d920-4503-8396-18b7e54662e2"
            }
          }
        ]
      },
      {
        "id": "f3b881ca-6f8c-4057-9015-4ecf198d2446",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a23bdab2-cf84-428a-af42-a92dd88c5e14",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0485b1f3-ce22-4ae8-93ad-69c6562c2de4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86ad10b3-b9ef-41c2-ab0b-1b615fc365ee",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471aaa5d-c997-4106-a8b7-361feb994e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3fd899-bbb8-4994-a84a-afcad57b2ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b223d380-5e9b-458b-be03-15f0f6c4124f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df4a81c-e831-4da7-afee-affd9e34e338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74242e4c-9735-437d-971e-b3632bb0c2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21699956-2c29-4b63-b2a9-ce887fe45898",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722915c3-d63b-4c87-8f21-9ad0146c671b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb101ac2-2ce4-48e5-b4b9-fdaf24c6a6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ea5c9e-e182-4385-8271-fda3c6784374",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0236a1ab-6700-4323-9df3-aa4d2d9e5a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4546eb9-e1b4-4c8e-9963-4b5d53b2dcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72663903-8f5c-42df-83ea-3573e1ad6ebb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da1c00f-a05e-4536-a482-7fbd240fc5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d66174-89db-4748-bf1e-989b608fef3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0a1d6f-c072-476d-8905-b1bec16afeef",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1a0642-9715-41af-afb2-7f17225d81ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166659aa-493e-4094-84ed-1ffad2bad80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5913c02b-4750-4ad2-ad0f-ff3a6871a422",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8384721f-a1af-4d53-b5dd-b488bc724477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1063857b-37c5-4f73-b7e2-30d90b0d908a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44230914-d268-47da-adc2-c4e94c720497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7dad01-19ca-4fb3-b531-f92a9a5a6d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc969b9a-1ec9-4fc0-8d6a-10305476c3cf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af656c9-d43d-4888-9327-d7ac407d0dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f718a8-2efa-48c1-a6a2-7975324128bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c304c69e-6028-4947-8b52-c15973074cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e23ad4-2344-407e-a076-968b71760889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939df89a-cdfe-47d0-832f-95c589755498",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b312c8e7-1183-41ad-b253-ae6eccc08388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae008e6-1af4-429f-b632-d1a399c6bf68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e989e9e8-bf50-45a0-a7b5-e0500f74c4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0cc991-9a59-4a1a-b5f4-5408b6714194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ad4d79-e8fc-4af3-a70d-01016d800397",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67792fd4-8cf6-4322-9748-7d8c86e44aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf174256-1042-475d-9845-3b7425653982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fee121-9cbe-4f27-9529-ea73c2486d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078a8083-73d4-4302-8132-855104e4a881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a74505-0e3f-4173-97ad-912cc5ced160",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93128876-eb86-415c-aaea-b12a1a9ea4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81605d4-4798-4cf6-890e-380d27ecae3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981f67cd-39b9-47e6-b44a-6217c5b9572a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c40ac93-4375-4007-8acb-0ba8626fd266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a1abbe-f803-4030-a3a8-19fd7a70dda2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725a7cf0-8e88-46f2-9794-1418596fe0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf42cbb-8039-491f-8ca2-47675781dc72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f346250-f956-4a04-a5e9-09d146fdbecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204272dc-123d-42f8-84ac-92cb6415bf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1d80f1-67b5-4b81-8199-65cda08a962e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26e1024-a303-45f1-9e72-363b22aecc91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fbd1ed6-c420-493b-ace3-6033afbcd477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a84a3b-d305-4116-b079-94451c336db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7b2f53-6b59-4af4-a7c7-9001bde370a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ae012c-3b50-4a76-b972-a1bdb86da77a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172a3af8-a084-4be4-9465-da6ed80351b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c551c7-8f57-444f-a826-199cf38e0639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412fd029-2e0a-4500-b8e9-ea4176f2a077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1901385e-3041-4dd9-ae8d-7015a0fe49f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3474e3-40bc-4e26-8cfd-ce96b2e2e0ce",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a194e1f-a661-4090-9aca-bb6425a30c8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e40ac2d-9bc6-48b1-9dc2-6145a54e5922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea471988-8a2b-4ac2-adbc-daecb74201df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbbd38b-10f2-48f2-8331-38e5cbc90369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca383fa-0e1a-42fd-b0fb-0621ac3baa68",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c0dcca-d707-4a06-9296-a26e908c389e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc9b20a9-983d-495b-8c89-0be5f379a638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83043576-44de-4300-a99d-0e2e36868e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2baea526-5577-493e-86fc-0e64292005f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9e2588-7c33-4c0b-838d-1304317e7dfc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0dd679-2ce4-4fe2-9614-4e6f0e771c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd85dc93-8dec-4c09-9981-7f617055809e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b2e9e2-69eb-4edc-ac4f-0a01325415b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5095d73-2805-4778-b9ce-664380d952ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bebbd36-174b-44d4-8030-721e162258f6",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5af38cd-4ae2-4c44-9686-e97af903acac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd0efbf-c170-407e-afcb-ee8128b4b791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22627d81-6a0d-4875-8c5e-059f2ee63898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c57c197-bc8f-4691-9f1a-1cbddfe799db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabf87d2-0078-4f8e-aab3-503f74480a4e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2795f93-1f17-4102-b8e6-254e7b7b52a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54092a6d-dc83-4ead-84c6-d07a5292f6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b016a0e-c8ba-45ca-b58e-b8ee8167dac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7951e6d4-2286-49ee-ae3e-a1ca095c8acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1dbb1b-4163-4941-bde7-5eafe2f923ad",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668f018d-5a92-4a07-a449-f10654c02531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d98a92-0396-49f5-a739-6387a7234497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874140ac-79f7-4058-bb50-05256276579d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c17d4f-c82b-40e1-87c2-dfd6e064b7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466f1cb7-b998-4ea6-bc01-880b8524e0d7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2994237-24e6-4715-b842-85593c3dfed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a62fe2c-5c73-46fe-baee-443eaadfa852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8e11a8-bb52-48a4-b616-39a5bd18cffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a15d828-8fcb-456a-b317-54eda8e73537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84ed66c-79f8-4c4b-87b4-7cf90835a49a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5edd1e7-8dd6-43cc-96d9-2ac3f763ce9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf426a0-5a2c-487c-ae46-bd020805f014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89de1157-5f39-4a43-9fda-fb5a2e5e0c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d9e3bb-a5f1-440f-b720-377ac1311886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7ea1a1-d156-4579-981a-dd7889ec282d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f916b7b8-c6e1-44d1-90f1-8245f57cda1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7100c7d6-6199-4f50-95af-c809395a7ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0b7baf-b282-44d5-ab6f-7edb1fbb2709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8cc057-0c33-4baf-9a1c-06ee1cc59c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33a17e5-ea72-40da-a79f-d1b751767fdf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8bdea0-65e2-4136-86f9-de6dc8e057c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb1e54d-f390-4b71-89b7-0ab96b223d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7587933-8d7a-4609-92eb-33f30dc053e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a81b87-c2a4-4cc3-8579-f3bb3860b2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f2adb9-6d01-466c-b86b-38496b2f9792",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37713312-8293-48ec-9fda-1f05f3bfee7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69536a87-49a4-4d24-9b9c-4a96e75d71a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bbf527-e074-4212-8a06-e7ba147d002f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5df2c3-f382-48a0-8fce-7d30d4c30725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146ef4e0-b942-4082-8449-0f12aaf8c71d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aee0608-51db-41c3-b1dc-7eae87f918d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e55363-60b6-45d2-ae5a-453b2738ea56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a95c21-6eae-4517-ab17-ce675d0d26a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16844f3a-ac56-4721-83bc-99da79485614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d86888-9fef-4e89-a084-40ca6ce41921",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6e4669-54f8-4626-90b2-7217b8f45206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d8b444a-bbac-4bf0-ac60-3382f9f0b5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5ff74d-5146-4057-9ac1-59fdc2178a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65ea16f-5fb6-4a59-82cf-49cfb712bee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d59827-df95-4c02-a18a-0d7c3869f533",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b88e7f-759f-4943-896b-49a378291643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f0bc51c-4cf7-4307-8bde-575f144b81b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03ebaf2-b5e4-4b37-a722-08498d718d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8373eed6-1d39-457c-b7f1-309f12d78c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef3b1dd-15f7-4e77-b24e-995e85051f50",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e164ea35-5528-4167-98ae-3eefbcc01818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc8b6aa-0554-4061-9e44-65fdfba6479b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45fffd5-055b-49a3-867a-149f6fee5790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a99ad5b-540e-4c9c-a212-7bb0887c8786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cc2187-7ac5-4455-8986-781b8684d0ce",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974fa6f4-fd7e-4c99-853c-5a054ed095a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a0e2183-9054-4c79-8242-7a75a1a228bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d9feb8-ff5c-4393-ab09-4a385ec2dbb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334f7933-33bf-4ad4-9535-252edabb1905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0e61ac-6769-41c5-870b-a68bc010f7c4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58947519-2f2b-444a-ba40-be7fb2f096ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2be55c10-8bed-45ca-8b15-6f1a7de122f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60017705-460e-4450-ac47-9a9c64715932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a385c85-63d5-41b6-841e-b2dbbf1277c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938df914-e6eb-45ed-b526-39f959d34ddb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da07016f-10f5-46ac-907b-076aa8e826fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ebe3a11-3db4-408c-93e8-e8d6315e02b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6213ce9c-3267-4bf3-8824-87719bcbbd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7418fd88-4df6-4358-a549-ead4cb1cc2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e852029c-908b-43ab-ad55-327eb9e3b641",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ad9205-e62e-4ed9-a34f-608f3e6cfe22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e24becb-4e92-43f4-b6c9-6590c2275d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bddd2a9-1679-4834-86b1-a34f948a4246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf864827-8721-49ec-b54e-c8b085fad934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a862d2bf-a426-40b5-8f29-5c698a244482",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599a43d0-fa3b-47eb-bc93-4ec05a0c47b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9468cf07-42b0-4ea1-af9c-bbdb1e88bb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a565007-4d0b-4e60-b263-906b4dfc421a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19754e2-5a2e-4c64-aaea-ecf35cb87a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bb5b0c-61f2-4928-bfd5-055c363e0b76",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86396217-1460-41d1-b250-29318ea8bef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e912e5d0-7f44-4781-93db-82e5e7c48423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acff30b-1cf3-49f9-99a4-51cbe3cca588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a72998d-9899-40de-93d3-c2d1cbb80cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c979e813-b42d-4915-a492-5dfe80273e5f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35685c6c-d8e3-4802-a227-50a8f9656f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7d8362-0057-44f5-9ef9-43dfe97ac17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dd760b-452a-4bdd-8390-1e54910c604f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251f27e1-9525-4975-8706-dc0b7cca7bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87932262-6d6f-442f-b022-0498c1194ce8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8942b502-1151-437b-b0b7-c036c03331b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a622adc-a502-4b6d-9cc5-628486e5947c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd4db10-6b20-43ea-80e4-bfeb75e73b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b998ef-2aac-44c8-b455-caf8939ec1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d58b07-e691-4752-9dd9-20f57ce5eacb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ac35d6-bbf7-49a8-8f67-d2cc96d8bc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72bfa00-9a72-4cd4-be97-410cff804178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09039c3a-0014-459b-8c57-b651926b7b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d0fb0d-0661-4746-b516-d20b92574823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581faccb-3763-4088-8ee9-7d0b305f06fb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0699bb8e-e34b-4714-b4e2-021583bdfb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d7dc4e-1c2a-4c26-9d5e-8336e654d139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e103e6-6dc6-458a-9e86-b330383c805b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7838df1-17d5-47fb-b415-db4a25d0f926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72209d61-d2d9-44c4-a193-e20454ec0dce",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca68826b-0926-4e52-b0dd-4975857b2b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbe15b4-0a61-4a7a-95cd-f84bbb7e4d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8191a4be-3a50-453c-bf30-2a5bd0aa7d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d536a7e9-adeb-42ba-8922-c22db3f0c9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff8379a-0a3e-4394-8ead-8c82a6bcbbd4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02df3b17-1c59-46b7-92a5-fb64de801556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ad823a-1c4a-497c-aaa6-dcee901c3b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb7021e-784f-45d8-a5dd-603320dba6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd09b87-7fb6-48a1-8615-b226effe80b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df8c4b2-f230-4539-bff1-09ac255e8b8f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc083930-6a33-4696-9ef9-be3b95ef684f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c132e773-b050-47f4-be98-ee3a082734ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98732785-5266-488d-9913-5e96b535925c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5df481-6b4b-4a66-a9df-158567fe5d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65449598-a221-48f7-9674-630d8edc9a89",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe9ee48-2bae-4aa1-ab0c-b169008734fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667279ff-c6e2-4678-9629-3c6a58156c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974ffe18-65d4-41a3-b1a0-f8a279dec790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412b6383-2308-45e2-9743-1c188dcab6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b540070b-4cc9-45da-93f0-c7df71920dbe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6413d2-4e14-4742-aaad-bd75e302bd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276a69a1-477f-4fc2-b449-bef9cd550321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "701fef45-a99a-418b-b228-415f820b3b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bd32f5-4f1c-4b89-94ec-e265a231ddf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ada210-d702-4546-858c-8906cdb4960e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b46f77a-08b5-466b-b5f9-541eb8acc4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039511b8-39c8-49b7-b62a-89731bd6bf9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3ed6b2-da44-45ac-b488-d2d0589b407a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c28ca8-2ae3-47be-aca1-d69cdfae2720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14b0bfc-a5e1-4c75-ab96-e42048cd7d49",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c15853-6105-49bc-8fab-dc03beaa78a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed2eac0-9c65-420d-96fc-a2421e13d7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e83a27-91d8-4038-b3c2-b8b8e168a186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d35e6c-8e19-4763-a6b8-fcf3bd0465ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adb14d0-e21c-475b-8197-e22c2a9a6782",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b377ab-40ec-4e92-9bfc-ef1b9dbca46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f69ac0-1852-4590-8494-6faa3b73eb23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388817ab-ecd7-4209-8269-d9ff6ae116d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8011ec31-83a1-464d-ab45-5c52bf99ce61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8890a869-3075-42b8-bd01-888df022e956",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf464e34-cb54-45b0-8462-702a1548ad3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5153b5-36dd-4815-bdb1-f445bb47e6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce9d4c3-6809-43be-a69e-f841614f830d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4fcf37-4ba4-4220-9077-007635429935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e24df72-5683-4df1-9691-0e5308e6f5be",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678b7722-f797-4933-8717-cd0d8b0be557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50872e7e-34b0-4dd0-9266-a077c8aeaab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac210690-843b-460e-97af-791124fe90af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1157863-e239-4ebf-acbb-596a1382f574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7772ded5-0d81-4c29-ab3b-9ccd7815fad0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5161a6e3-21d1-482a-9f74-1b0cd713182c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f64ecf-9dac-423a-a3a0-29a8e006f93d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94c8712-005b-4b97-8d1f-45e9a3ea3614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d23aa7-26ed-4179-a263-d60560c251b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a4701f-253d-4086-ae46-db6c65462e4e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1d4c0f-0608-489c-95ce-192fbc21f62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191d22f4-b7a5-4f81-97e5-4f90798c8a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d979ac-3ae0-4378-8000-79a5d3988f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d314684d-51a3-4979-bbc7-1dbe0ea82149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6edfbe-22fc-43a6-9a8e-fcc14cce592c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4fdaf4-fdec-4190-9b13-c7897d43b72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07358b9-23bf-4b3f-b636-171e507c92d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172807b1-9e24-4402-af88-ab2419e52b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71da9660-0a92-4c3b-bae7-e6c10c66d34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0bf1e6-5d02-40f7-892d-7891c4ab124e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d12554-2ef7-48e5-a8c8-2e493144df39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5767ea-92d3-46c7-9a95-5e57aa8f6929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691e37ac-38b1-4765-8e1d-3931aa67ea45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049b2d81-3c6d-4ef5-b4e2-1acb9f3105b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d95995-b169-4483-b0b8-65b5a28f5823",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76cedd5-2fdc-46aa-a0a8-aba12fe5e680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a0e5a9-3c0b-4bfd-9d43-5dee03b354f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845c747e-3ddf-4629-8116-7b389442b4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163d3321-0386-40fc-8c8e-6e8cf70fe617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc66fb8d-7e8d-4f44-a4ab-7a1c209fae41",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b2fbd7-c6fa-4577-bbc1-c2355b4cd6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951c0181-f0c4-4fad-b810-c84e753ef052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bab5e8d-f561-4929-a2f1-5688eec06240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa3cb39-6a15-40b4-9849-562e03cf74ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf346e3-88df-4c8b-9dd5-2f89ca4d7815",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5af2fe-7f85-41a8-a8f9-ba377db920d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4147493e-e1dd-489c-b55b-ff4164359292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50ac312-4903-4a67-bf99-275b58e5a148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea13fcac-3ac4-4165-a5db-2b781abc29bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e27d98-5bb1-45a2-8b49-d5283427c6f1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083a4a60-c71d-4f4b-a020-36dc0324611e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1c78bd-3aa1-43b1-8ee0-9b740f2a8a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0e026e-3fbc-4c88-91af-128daa986a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0d5750-b04d-4aef-a5dd-c881aa74034c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787882bd-152c-4e01-a7b5-31e3a77b8122",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f69b82-6c0e-4272-ad51-c81e0c8ef846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53dbba57-2379-442d-9f07-ad5ea2eeb2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb0f37c-1579-4867-b594-014fc3866335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53ffd16-fd94-4985-8b3f-de07ca9891c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da28809-b54d-4efc-b807-8f035a7a6968",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5f9ae3-0773-435a-91b2-de9a6e41853f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f80f95-e1a5-4f61-98c1-908c5cfb70d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dbff8d-537e-45f2-b621-4514ab1a393b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1c3531-bc85-4d52-b4e3-2b63ff5dcd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4af9dfc-f876-48c2-b33c-b566b79b97cc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6a0d36-857d-4447-85a9-c49e704274f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cf88ca-8d51-43d7-a408-c406b85f80d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4284cef9-6d3a-4cf1-9f28-2709bc8764fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25ef1e8-bac5-4abd-88e5-3c0a82755c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f378ce5c-641e-4b49-a037-a436fb86ba3d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21de146-e6fe-4ace-b983-0707159d4c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2be0a8-7464-4da3-a285-46d2cb6e0702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ab2e20-79da-49af-a661-ada5e92c9d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20f07ec-e2d8-4917-b126-1a9dcb240c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5be89a7-78ad-4297-bda2-864193b1bfd7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9353bb-92cf-402d-8146-a566ac759e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563865a4-aa75-4034-9cf1-cc0d54f5879f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d21950b-d309-4b47-a75f-48489c9f130b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f22ffa-9d9b-4ca0-922e-8555279ce93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b51bcb-461c-462d-8915-0fafcf7a5ac8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6e2dc5-3326-4839-b4fa-96686b78f1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac3b28d-4179-4358-bd90-0c4127bfc66c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4d29cc-7775-4c43-b2a5-0630a81cac9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033bb9a5-e81e-4024-b673-cc8418adf221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052b0c82-5b97-47ac-84dc-d5be8287610f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2080da-d687-4abc-aaa4-6503be6eac1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194a1778-8283-45a6-947e-0457ae3f96c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d546ff-2617-4262-b4c3-13a70c1f0163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ca08cc-aa1a-42c7-bcc8-6844e7cbb161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f39a1d-15d1-425f-bf82-afd05850983d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5074a2-1cfe-4148-a38d-2e03953127c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d640ab-7e16-4015-a062-631ab3cff552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbd96f5-df3e-4651-b2a4-c7486073ff06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0cff7f-4f33-4cce-8bae-3c59a75fbb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513f4cef-379b-44e0-aebd-8d67b8d8f438",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65ab267-fbec-4cce-a7f5-258c908263a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a68469eb-c096-4b16-9769-ea16a67c5dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d64d96-2e0e-4823-8d64-c154c6435869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538f2250-44ed-4d24-a51b-ce5833d90ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba6863f-5ea9-48e4-8e15-84ffd6cebd76",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e7881e-ad9c-47ff-884e-c5cb6573a16c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b482363-190f-4002-a4cf-2a01a6784369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342908c1-1fd4-498e-9931-f6148482c9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256c5372-e94a-4178-8a1a-6a378df75664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02b03ef-8ad4-4706-bf88-29e41531a244",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9e89a1-f28c-4bf0-abb3-ae27c9cc6957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60441333-a460-4021-a1dc-3be0879f8570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66e0846-7eeb-4f27-9650-dfc9e08c07d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fff78c-9779-4bdd-95d3-a4a2b73a9dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8539bf1-3e68-451b-80b6-9d3fa6b3cc8a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a535979a-8fc8-46fd-9302-d1cb023e09e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "979ab3f6-999b-450d-9330-18b2f482f74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d65fa7f-be98-4488-a9c3-d0a166cbbf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b26b6e0-e1e8-4395-949c-82286ad396f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7acf338-b858-49e9-b66f-2dd9876423b2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e64e0d-fa14-4687-a79c-b542601337c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3faea61d-9d59-4f25-980b-c4c04f06049a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d8f137-1a01-4cbf-b49f-f675fc0d98cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b0cc0d-d267-4547-bb2f-8b63b89f9692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b4be4f-1192-46e0-99b6-af7133e673d5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcb9674-ebc7-4687-a8a3-fc4d0b9b63e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4698f5f-1760-46ad-b51d-d906d08708ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452cabc4-110f-4fc9-83ca-7e98452428ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53326e29-d01c-4901-a19c-4e26f710a956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b3d636-c8eb-4c67-b685-682fa3af3ba5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4cc6d9-204a-4b67-9b7f-0ee3ae20e65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e9ae4b-15fa-49d4-9d38-d4b15cef282a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0167c5ce-9376-4eff-b074-8ca7b1ac7e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d68d4f6-95c9-451b-ab70-1febb42e4e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75211b7-13e5-43fa-bbad-bb5da6f4a1d1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a13d63-573b-49e6-84a4-9c00a9dc5a48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c5ae42-e8e5-4054-bf82-d794d19cb001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168bdfb8-e8d4-4a7a-acc6-4fdbdb52a361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e493050e-461a-4d23-a7a5-cb8d92bb8d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e09695-47df-487b-9c11-29a5343823bd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6123ce30-f378-4702-9e91-02663394ed0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed7a414-bac0-4459-9064-da9437e3390c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e22fc9a-f2d2-4142-9809-9f47ab12993a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fb4803-aa20-41ab-a8c5-2bda4df0ff05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c779bfe-a849-4447-a506-206e3a5f718c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f04d00-c585-47b0-a4f3-802e1c49c60a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b0c38b5-f20b-4027-88af-5cc3ff268a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0fbf1b-c7be-4692-8783-a9afcc52308d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff6741a-4aac-44ed-a1eb-3141717148c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a97644-8993-4441-9b62-a91cb0ee822f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b38bd56-e531-43fb-81b9-83a7f0dd7af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba36515f-6f9f-4237-b709-39773bdb4c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b40224-1a2b-4966-a865-1b0f0701d180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a645271e-7f25-4c04-b7d1-3848b5f28e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9f7b05-1592-4838-a687-dc60b199f32e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33686855-d374-4bee-b483-736c07c0ecea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44efe50b-6164-4ad3-ae53-f7db04885e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e3618e-2f56-48fb-83ca-fe52625c9139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbee4a1-2588-4bff-b86f-0dfb85c24a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193353aa-c572-4a4b-a62b-9ba2d346c211",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01aa8338-4902-4dd9-970b-4c4fe6c8c613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15b4a9fe-1038-4947-ac58-baf03c9fe213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3aa7ec-583a-4bb9-9936-e99c833f5ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1c0e5a-bacd-44cb-9823-8a2f9b5f2187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f657bd-f800-4efb-bd31-658d7311248f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e0f97c-4883-4156-b90b-9b6b3314c4f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28759d5d-8017-4be0-b569-3df0921a69a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c11134-3fe2-4bd1-8d52-d950cb4085f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8215e5-d9c1-4654-9708-eb8fc34ea8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbda584-9c5c-4628-ba95-2e0774719a8b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7123138-a89c-4917-a83b-dfe524144ed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "387e3772-2c02-4194-8b0d-70b476c5baa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed8d4d9-8e06-4b43-a595-8d44fa108847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c99f1d-92c9-4074-bc18-562d8fd1dfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93966992-7aef-44bd-a972-5415a0a67516",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d082bb5a-00c0-469e-95e0-b4d9a5d78a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8d4823e-503b-4ccc-840b-82fdd2018dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7763596-52ae-4dce-bc87-8bfdeb4f8c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f4c665-9674-45e2-9e1d-edeab3c29cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d00bb7e-0cbb-4bf8-a57b-1fa8e6220e4c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff9e2c5-015f-4633-81fc-a1743e734382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c545ea-c871-40a3-b0e9-74a2c69e3100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664ed611-0cb3-4f28-954d-85e9caae95f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4badfb7-4bbc-47f5-a538-0ba5bfc8c105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3028af-1c03-48a2-9a6b-324348315d36",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf37995-83ef-4691-acc3-bf698c3390f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7c96bd7-46ae-4dda-81f2-b9e075a17311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cea1264-e82b-4ad6-b57c-bd09ea281037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c031152e-b2f6-48d0-9586-d2f3fb1b7391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205a8702-6df6-4ed2-b392-c58012d59021",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23214578-ed15-46cd-9237-e796b73cd0b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7298a006-a256-461a-8116-640b94b2057b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95354fbb-9341-4aba-97b0-2528f5823f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fd5e58-1ea7-4e54-9950-501f28d07311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d07309-9a35-4ef9-8536-4c807480a2f6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1955d7-1f26-4b73-923a-a8f6c5f12760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a7b4e5-2bce-46e4-ab63-a4c65aad7aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3b0b8f-b7bc-488f-9e6b-54461a7aaa08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3182861-e890-4a9a-9121-56e46d92eaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9582e1e8-410a-441a-8782-ce7d99e5aca5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b147efbd-aa63-4cb5-ab14-621470edcc09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d33448-c894-4eb1-b851-00676050f0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d6a044-07ce-4cd9-9013-b991872c69b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6070b41c-7841-47e1-bba2-17f2c4220abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1226aeb7-a2d1-4d16-9761-759186e1b7a7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744158c8-4832-4330-9b62-c083d6674acd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fdecd69-a8a5-4c25-a520-e1a444eec0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61bb811-a1b9-4dc7-969a-813d7742cb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f39c97-7dfa-4c42-990d-c53a9f6ee4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7eeb76-91b6-4310-ae73-84fce0c4fd3e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11bf047-96e1-41b1-9e0b-b77320ef47d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5eb02b3-c787-46e7-b37c-022252aa3029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d8a699-ff14-4d28-9d8f-fc8c6d40fb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b051b378-7a23-460a-8c3e-89c1b101dac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f29f8a8-1b28-4920-9c1d-6c9edb3e6e0b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed157e7-4a72-4510-9158-bc0b56d94d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "225c1b5d-73fc-4a53-bb58-473abf43deba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d7c7ec-ca11-44a6-bbc1-3a848eac0645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50297527-0e20-46fd-97dd-40291cea8c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078bb036-772a-411d-bba1-a8b9dfef15ab",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ddaca2-0301-4c38-8fab-3c386efcb4ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e306f3-7abc-4eab-b669-247fd36f2d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8389612-6f9d-4972-8cfa-15c5c973b452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff82f96b-89ee-4762-ae78-6246702c9841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee14ab3e-bbf5-4db5-afb9-f13192ff1108",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e46c927-ae1f-46c8-b602-714bce159ca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de73fd88-b06d-4d4d-989f-3720f1b1b722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77ea92d-ccfc-4966-81f1-3fb7c5e78960",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7bd2df-ff88-4693-8b36-21f311197396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedb8f49-e038-4e12-9fd2-87f2102fd2e1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1bed9d5-4698-4726-be0d-88288c8c926e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad50a713-fcf2-4c95-b33b-7dfc7cc85626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a3f5b3-f07e-4bdf-9bb1-cd9c1fd22259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c9da99-0609-40ab-bd08-978059c9cbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73259e9a-b1e5-41fd-b512-624ba7881ee7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76bca38-2c2a-461e-b5b3-f76de2c2e755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d11d2483-ec15-4928-9617-41843ab9c9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4682325f-d793-4b4e-a2c5-b82281efef32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560701c2-88ed-4912-b292-e4b0487213a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699c98ea-eb3e-4300-b67c-399df6bac74d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57322c60-0be3-430c-81a8-6d0454866595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d56ff3-eb8f-42cf-af6e-74328fc0114d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97271f31-50ea-4ab5-8b6f-109541f50937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d5fee6-759d-4272-83b7-d17da5dc1445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51332f8e-f5cb-432a-96cf-25bd5014bdb6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fd6bb0-3a2b-4aef-9b9b-d49933d3d7d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b99acb8a-6aba-4e4a-b74c-78ee176a9ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce995790-528f-4032-ae4d-1f3db981ca2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515090cd-6cf0-4f69-85a3-419d2834d2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4d9d06-720c-4aeb-bac8-18fd8a3ef869",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eef0c1a-e1f6-490e-891f-531b5b967656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfbad156-0c09-4426-a406-29f68360d9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2c4318-b753-4a2d-bdad-df55a1b8b680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea1a8e1-b389-4c2c-ba08-5cb2e41ce997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566a28e0-0888-4332-94ba-3ebffd844d67",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f022d67-1e6d-46a8-9665-263569b643af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150311d9-2048-49b6-8718-5651387047f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e0729a-67e6-40c5-903d-bfd5dc8d0022",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24538a37-80e9-4cff-a324-f35181caece3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb79149-1201-42a6-96d2-ba7f6d6ffdcc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba252591-35a1-41ca-b40f-b661cd6ffd18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78c415e9-4692-4a83-ba91-37771dd92f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5f903b-cad6-40aa-a100-976853a8eb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a062b1d9-75c5-400b-967d-c06b924047c3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0fb2de2-6b5a-4c4d-90c6-767becc303db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74e618cb-47a8-4de2-bd9b-ddbdc66c75e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e1fa4fa-2604-4e1a-bff8-9be856ce5060",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1800b8c-a2a6-4f64-b1dc-3081df2d23f0"
                    }
                  }
                ]
              },
              {
                "id": "f597c326-c844-4a68-b403-c3f2bb962061",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76b67973-162b-4c35-9eec-c33413032eff",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b1e925-1965-409c-a75c-90dade09df6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c0d9139a-be20-4e22-963d-95c9933f31ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ca1d6b-1f7d-4d02-b0d0-79e9e5015e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56dc72b2-175b-4b84-9ae3-a6d42d042226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ce2481-b68e-46f2-84f6-a94c5b7ce759",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7dd9bb-09d7-4e4c-a9b0-9da01cbaa509",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9ce968de-8067-4780-82f4-5906b5b58b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbeb371a-e128-4462-ac16-8cee6d8e8581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46de70c6-eb4c-4f1f-b01f-4f553305769f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e13853a-2a62-4ee2-ab80-23f2b7ea3bd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77c97e7b-6f7b-4d58-b5d2-29e3c9b73b03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82764041-8a3d-4f58-a108-2d19caf4e884",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "865bbaa8-6b83-432d-ab18-8fbbd9024c2c"
                    }
                  }
                ]
              },
              {
                "id": "554981f0-e469-456d-a21b-34aafc528d39",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ff9ecc9a-c835-4b27-8edb-a14113ddda49",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef84023-7fd9-4d1f-ad86-d5b4a564d10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c0cd9a81-dbf5-4ca8-b52b-8b1b6cd00bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637c301f-ab03-48ab-91a2-b81b243ebc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ead8470-c62f-4d57-bfcd-a7d3e34cf5fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "99bfd5c2-e5bd-4102-9348-160f214d68d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0a2d860-d8e9-4f52-a05e-49ff9f1eaa51",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4523439a-8c9f-4c1a-98a6-5a5cb178a27b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6a7fbe99-9154-48f2-8ba3-d81ab819f58f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67d157e2-732c-4ebe-9242-9df8c14b8162",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5de47e68-c355-4a65-936a-d0b8550838a3"
                    }
                  }
                ]
              },
              {
                "id": "616b8720-c16b-496b-a1a4-9748f3fabf7a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65d77713-3208-4320-8508-8f7ec781f95a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b51339a5-c538-40ed-b63e-2fbd17a0625e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "802db5b8-6505-42b6-bb15-963b643a1dc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b0495c3-c629-4fd7-8993-086d547c1848"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60355b85-01be-443a-86de-75cefca2ae05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ea0727c7-9320-42f6-8b6e-772c981124a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e07899d7-50c1-42fe-be69-5ff664803425",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9aff667b-8afd-4459-a9a4-71c9e2aa2a5b"
            }
          }
        ]
      },
      {
        "id": "5877fca9-9923-46cc-affb-314e312e9518",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8212c7bb-a81a-4739-8786-7716688f161d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e1b0d68-0b58-4d2b-a3f7-1b42875b289e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "314790a9-6089-460f-8fae-bb365ef5e63f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1d76a7-76ae-4c75-b269-f5505ba16117",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eb086fa2-b597-4996-933a-a84673600a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5162ecb-b40c-4016-9dd0-a1d49c7f8323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2382a008-9ce7-4d47-ae52-cc7504e890de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887b7552-ef8c-4f3a-bf7a-73ffb6d22fb4",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad06351-4ae6-41d5-b600-86ba6660aa5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "96ae6597-e95b-45f6-8f31-f61b8941abf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcc62df-18d9-43ce-8242-0e730fdf45d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a958c7e-d158-4a15-a4ec-06234d99c270"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32c06284-90d1-40a2-8c71-3a3aac5946a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd78cea1-6a21-4395-8004-00b8f170c0e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "019f4d4b-cdde-4e1d-9f32-59e707cf0aa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0488566-b17a-418c-bd70-9447efc2a79b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec845fd4-0c5e-4f25-8c10-00f3a9a5ca23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "79c44260-a591-41a2-b92d-4423fe4ac210"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eea62d09-4f93-4c92-b69e-1970eb401487",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e54ba47-b502-4388-b70c-4097978e03da"
            }
          }
        ]
      },
      {
        "id": "bcf7ce65-17a1-4986-856e-7d086d3fee1c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9548ab65-87c7-4241-9039-9713b60ccfd3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f0306b6-3f53-417d-83b1-d8577c38b7f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1862fc6f-ee32-46dc-a0b7-1604b1966258",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549ba680-82dd-41e3-8848-e416405ebd84",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bb3bec1c-5abf-4e53-a820-8e828526fe91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55b4f31-3f50-49c1-b415-720f7ab37da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "451a4c2f-a13f-4e82-8f25-9ca8a1585f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6043c8-e391-4392-bc0e-b79313af434c",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dfbd02-c82f-4695-b1a1-16ebaab08143",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "220f2c29-6ff0-4667-9cf5-6003aa36bb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500caf68-06bd-4743-9def-8135de43a3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8edcc7d4-2562-4067-a662-e05940d4ad08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8dc81de-4d50-406b-bd0e-fabfa95c36e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51245969-9dfa-40a5-9b2b-6c93ac71e53f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c558089d-f03f-4edd-8dd7-a955b7e65f92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86041aa9-1a9e-4638-9a5c-2f8a83176088"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a84911f-ef6a-4ce4-8f66-a57bac0dee5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9d12bbec-b5b7-4df2-ab46-b18fb2e9827c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95c1618d-3bcc-4ea3-a268-9a34e408280d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8aaaf0e7-a678-40e1-9a56-794807c0ec95"
            }
          }
        ]
      },
      {
        "id": "c3b10d68-402c-4463-9bb7-8ad3b20c762d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "61330154-79ab-46f4-9165-2e32c8966ee9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf9c5094-a863-4c2a-ac77-400e02940e09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c1d32d5-539f-4a03-9645-6b042d4b6f57",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd9b5fa-b4e7-4a46-b366-707733483d32",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9bf1dca9-e224-4872-bdc7-383cdd39db94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876332a3-3b6b-40dc-86af-64471da18118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b0e38a9-2e74-4599-8512-87cc8dc731bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9687eea-680a-4a7a-9448-10b82590e48d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9473892-bc54-4382-b0a2-eb96cc7b4b27",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "371c7688-53ab-45cd-b0da-37e8ff743dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6c1d2c-1955-43b5-9ac3-7701c6b767f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21a48e98-207b-48c0-a197-f4447913d00a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6bf6c03-b052-4bde-8570-dc4834860a47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "291a0db8-652d-4fd1-b1ff-2774dddff1db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "240d77b1-bc3c-42cd-81da-cd8a3087ce4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "568da058-d124-4916-b3ae-6492614c1ad5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5b991d5-c0c4-4c7f-a328-1a9d5ce6da77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2a875ed2-dd95-4618-b103-b19417b056bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef8366cb-6be7-4427-a7ad-f555d38af254",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "372d0d6b-c6a1-4822-a37b-51c893d9d470"
            }
          }
        ]
      },
      {
        "id": "b25ec179-9863-4b2a-9106-75eefab4898a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e06487e6-91ac-4373-97da-9b6c321fbfa4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9030b7d-6f4e-463e-81db-edcc3889c795",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eb90ee28-ee90-4e2b-8bc4-8c0fe5232013",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4351202-438c-4df1-bfa7-b1828a7ca5d0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03cc430a-be5e-4c31-8f38-2a119e7f1606",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 704.9236641221372,
      "responseMin": 10,
      "responseMax": 5369,
      "responseSd": 747.6969231107764,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676075725053,
      "completed": 1676075920818
    },
    "executions": [
      {
        "id": "2934f446-0eb9-493a-94c5-16952337310b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5e5b5f7e-07aa-4155-923c-75c1e9cb3493",
          "httpRequestId": "24f7ced0-86cb-42aa-879b-c2ff626f5982"
        },
        "item": {
          "id": "2934f446-0eb9-493a-94c5-16952337310b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1dd74e4e-bf1f-4636-9aa4-5a27b1f8fd35",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "a7c8a18a-0fda-4650-897e-3b85373300d0",
        "cursor": {
          "ref": "6bea6980-50d1-40d3-bd9d-0d7bd7ce1658",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9c2789cc-f62c-404c-8d93-48ff96f4efa8"
        },
        "item": {
          "id": "a7c8a18a-0fda-4650-897e-3b85373300d0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "748ca616-2410-4b21-a8c2-2eb0042f3872",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "982e5bf1-fc41-4894-853b-144c73b14037",
        "cursor": {
          "ref": "78d0cd6a-4a0e-402d-82d0-980162705bfc",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6524bdfe-9e3a-4613-acaf-b98626e70e7e"
        },
        "item": {
          "id": "982e5bf1-fc41-4894-853b-144c73b14037",
          "name": "did_json"
        },
        "response": {
          "id": "2d62e21d-4655-4ac9-a023-65f8d73f06f6",
          "status": "OK",
          "code": 200,
          "responseTime": 1194,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd775d59-bf6b-4b73-851f-651b5379777e",
        "cursor": {
          "ref": "97a542d0-96b4-48c2-b0ea-490996ed4baf",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb47b87d-157c-4e51-8a82-cfe31e25ffac"
        },
        "item": {
          "id": "cd775d59-bf6b-4b73-851f-651b5379777e",
          "name": "did:invalid"
        },
        "response": {
          "id": "4d1a4eb9-0a21-4682-b6d6-f0af4053990a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1115,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd775d59-bf6b-4b73-851f-651b5379777e",
        "cursor": {
          "ref": "97a542d0-96b4-48c2-b0ea-490996ed4baf",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb47b87d-157c-4e51-8a82-cfe31e25ffac"
        },
        "item": {
          "id": "cd775d59-bf6b-4b73-851f-651b5379777e",
          "name": "did:invalid"
        },
        "response": {
          "id": "4d1a4eb9-0a21-4682-b6d6-f0af4053990a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1115,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81489633-ffa1-42b9-91dd-ce994df1591b",
        "cursor": {
          "ref": "9b95e7ee-6ba7-453d-8da1-19cb7e999dac",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "69b248e8-f073-42b0-a1b7-f7c7eb65465f"
        },
        "item": {
          "id": "81489633-ffa1-42b9-91dd-ce994df1591b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5761365c-ba17-4923-be7f-044ef7a5c1dd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 670,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef98afbd-9389-449b-af06-64dd6e0a70ca",
        "cursor": {
          "ref": "55907f8a-e27e-44f3-955a-86675394453f",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fab724c0-3ee7-4e05-8302-c2e16e049381"
        },
        "item": {
          "id": "ef98afbd-9389-449b-af06-64dd6e0a70ca",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1f195d39-8915-48bf-8f6d-6e820e6b2a5a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 598,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e185471d-a5bf-4f72-8c4e-455ebf7e0312",
        "cursor": {
          "ref": "a2a55c11-0a86-45d4-ba6a-56afbb2d593e",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6880165f-9869-4d3f-ba3b-4c9c0b38f36d"
        },
        "item": {
          "id": "e185471d-a5bf-4f72-8c4e-455ebf7e0312",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "340994f1-36b7-4771-91dd-6adaab9e5b7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8906e5ce-aec8-435b-8913-7d426f715a51",
        "cursor": {
          "ref": "07b74909-7e20-486d-b6d7-a4bced69ddb8",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "86326f3f-ff9c-4451-bc14-c7a1d4c49de1"
        },
        "item": {
          "id": "8906e5ce-aec8-435b-8913-7d426f715a51",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "12ac2740-175a-47ba-a920-944163e4c6a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1835,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8906e5ce-aec8-435b-8913-7d426f715a51",
        "cursor": {
          "ref": "07b74909-7e20-486d-b6d7-a4bced69ddb8",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "86326f3f-ff9c-4451-bc14-c7a1d4c49de1"
        },
        "item": {
          "id": "8906e5ce-aec8-435b-8913-7d426f715a51",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "12ac2740-175a-47ba-a920-944163e4c6a3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1835,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d8d41f-07c3-4dae-a27f-d666d0e997be",
        "cursor": {
          "ref": "a9ea670f-8d0b-469d-bd59-5838dfa667fb",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7cb6fd93-a85e-49e7-a5ba-8a8441a17508"
        },
        "item": {
          "id": "29d8d41f-07c3-4dae-a27f-d666d0e997be",
          "name": "identifiers"
        },
        "response": {
          "id": "d44b3bc7-3bab-4521-b35f-5fe0579c0e29",
          "status": "OK",
          "code": 200,
          "responseTime": 1625,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b91219e-1727-4e04-ac84-acb4dc93b95e",
        "cursor": {
          "ref": "58b9f36f-42ed-41b6-8454-c3a6f2730133",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5575ffca-2a7c-4d05-aa5e-d77a342f52fa"
        },
        "item": {
          "id": "7b91219e-1727-4e04-ac84-acb4dc93b95e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "28d30358-5d77-4955-a831-13eb0ffdb2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b91219e-1727-4e04-ac84-acb4dc93b95e",
        "cursor": {
          "ref": "58b9f36f-42ed-41b6-8454-c3a6f2730133",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5575ffca-2a7c-4d05-aa5e-d77a342f52fa"
        },
        "item": {
          "id": "7b91219e-1727-4e04-ac84-acb4dc93b95e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "28d30358-5d77-4955-a831-13eb0ffdb2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958961b3-2870-4d10-b0f7-f6828c0a076c",
        "cursor": {
          "ref": "8fe9c622-4c74-4c8e-b628-42c73e4345a7",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "125c220f-601e-45e5-b706-6d1874e2e191"
        },
        "item": {
          "id": "958961b3-2870-4d10-b0f7-f6828c0a076c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "338f4e57-4927-4e28-ae12-9cdbd1ed82f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1530e09-79ae-4056-a760-e6ebab3ef1b4",
        "cursor": {
          "ref": "7a24d518-2663-4c1e-81e7-74af1fce6e5b",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b57137e5-e1e2-408c-a632-e2d45d8eda27"
        },
        "item": {
          "id": "a1530e09-79ae-4056-a760-e6ebab3ef1b4",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "1bc88248-e14f-439c-9b12-eecd478c701d",
          "status": "Created",
          "code": 201,
          "responseTime": 2940,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "3e26fc53-5261-4a75-aa84-95fea53e78a1",
        "cursor": {
          "ref": "a9ce8d9b-7e34-455d-b7e2-9ca563484b61",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f798aa64-2267-4f72-aff5-b2f1508e88a2"
        },
        "item": {
          "id": "3e26fc53-5261-4a75-aa84-95fea53e78a1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "675f766b-29c8-4767-9516-aae2c01145fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93db96b-8f42-4b1e-88f2-50811dfc14d4",
        "cursor": {
          "ref": "ae6ae83e-55b9-4477-9348-40080417b1ff",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5b1bdd5e-2aa5-4bef-a479-85cfaed69fa3"
        },
        "item": {
          "id": "e93db96b-8f42-4b1e-88f2-50811dfc14d4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "19fab117-d21c-428a-bef3-4fc63fd5d306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a415a5a-4d0e-4ba1-9a68-81fb683ff5b8",
        "cursor": {
          "ref": "c8eeadf8-ad12-4fdf-b360-1440c1dde5d5",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "33480a28-81b9-427a-b556-67a668eae329"
        },
        "item": {
          "id": "6a415a5a-4d0e-4ba1-9a68-81fb683ff5b8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e1c994b2-91e8-4f47-a494-e015027c115c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2373c8b7-7143-491c-a289-47cf5c209c5e",
        "cursor": {
          "ref": "c9b978c1-e30e-4c7a-a2d8-ab53e7c802d2",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2d72f76a-ab09-49ab-b50e-b664041f45aa"
        },
        "item": {
          "id": "2373c8b7-7143-491c-a289-47cf5c209c5e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8f463f85-a19a-4647-ba54-4f1954bb910d",
          "status": "Created",
          "code": 201,
          "responseTime": 2632,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "0883b8f2-27f0-43d2-ae4a-319dffb30d18",
        "cursor": {
          "ref": "5c1711b8-e128-4e44-ace7-d5f928002424",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c3b19835-4e88-4af1-a789-ae8fb7761327"
        },
        "item": {
          "id": "0883b8f2-27f0-43d2-ae4a-319dffb30d18",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1b0f37d2-031e-4080-8743-369dc05ce1f7",
          "status": "Created",
          "code": 201,
          "responseTime": 2663,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "55e67ef7-ecf1-4078-ac02-23fc19e2b264",
        "cursor": {
          "ref": "34aaecf5-5504-4543-b051-ebfebf65d098",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7ef1009f-9326-494c-aa29-158f53c85239"
        },
        "item": {
          "id": "55e67ef7-ecf1-4078-ac02-23fc19e2b264",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2fa1b3c3-3375-427b-ae79-632bedc54c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125e5ffe-fade-499b-9561-e5c1bcc999d6",
        "cursor": {
          "ref": "c313415d-49af-4245-a163-90fe5ec609e0",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8bfcb9cb-851a-4624-9167-817e4c40174c"
        },
        "item": {
          "id": "125e5ffe-fade-499b-9561-e5c1bcc999d6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e78185a1-a660-4bbe-b292-899686b4b0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc5b51f-a91d-43aa-8c55-5b56323750c4",
        "cursor": {
          "ref": "8efe0988-10a4-46b8-85d3-8344c199ea50",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0f717d4a-f938-4606-ab0a-1e62ca1682f0"
        },
        "item": {
          "id": "1fc5b51f-a91d-43aa-8c55-5b56323750c4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "96cdaae8-5fd2-4bc5-bc82-1426ada08a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83859320-00d5-4003-b427-bab967b3888c",
        "cursor": {
          "ref": "264e2690-b2c5-4519-ad06-e1399365d01c",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3789aa7f-1520-4987-99a4-3e6033c49aa4"
        },
        "item": {
          "id": "83859320-00d5-4003-b427-bab967b3888c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c1b2a39d-94d5-4abb-9614-974af823f94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33120716-fb72-4370-b63b-7a0b0ee478bf",
        "cursor": {
          "ref": "ec0fc657-8b94-49a0-ae7b-6bca138ac0c2",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d571ab05-9eb7-48fb-81f1-c97e0427641c"
        },
        "item": {
          "id": "33120716-fb72-4370-b63b-7a0b0ee478bf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "74f7ad38-42ea-4cee-b424-0714d4126d3d",
          "status": "Created",
          "code": 201,
          "responseTime": 2807,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "b2e9dc38-a215-44d1-8cc0-75b367cb6bb2",
        "cursor": {
          "ref": "fce8fe3e-3fd8-43fe-8b9b-1a8f56014776",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cc6af254-87df-42b1-8f7a-fd841ddddd7f"
        },
        "item": {
          "id": "b2e9dc38-a215-44d1-8cc0-75b367cb6bb2",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "486f7a66-3431-4558-a36e-ae674017357e",
          "status": "Created",
          "code": 201,
          "responseTime": 4863,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "fde54fe2-0b27-405f-8ae9-3f0297219a8d",
        "cursor": {
          "ref": "7c3f6ad1-e9d9-4c56-bb05-415f1033ad0f",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ea13548f-07c0-47d5-aea7-bea65b1dad53"
        },
        "item": {
          "id": "fde54fe2-0b27-405f-8ae9-3f0297219a8d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3062b17f-a537-4108-982d-1e8323da0d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee00d96-7424-4e0a-956b-3367b38aa2f6",
        "cursor": {
          "ref": "e0f26072-8f64-4884-b3fd-bf3b118bee0c",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "29d82e18-c19b-4e3a-bc94-00bb6bf9fc53"
        },
        "item": {
          "id": "9ee00d96-7424-4e0a-956b-3367b38aa2f6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1ec2b9f5-94f7-44a9-8863-2e8c0ca3517f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4133575c-afc4-4cab-b541-7031efca3e70",
        "cursor": {
          "ref": "df51af08-9ef9-4654-95c4-82cc1b737006",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "73993a7a-8feb-47ff-be72-c89dff504fa0"
        },
        "item": {
          "id": "4133575c-afc4-4cab-b541-7031efca3e70",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0518c8b9-fd87-40e8-b508-5bdd040d83a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fb05c8-0d2e-4e36-b55e-d8bb5faae841",
        "cursor": {
          "ref": "c25466a0-7eb2-49da-b703-715aa98c75b4",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a4316391-5334-40ac-87f8-d89428783eb5"
        },
        "item": {
          "id": "37fb05c8-0d2e-4e36-b55e-d8bb5faae841",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "51d60860-de58-4622-8d7a-fb74b5275b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c2ced3-7105-4ee5-bb25-a4a5e85144b8",
        "cursor": {
          "ref": "10c1b956-37ce-41db-afbe-417e2daf0803",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "421cb9b5-22e8-4ad9-a4cf-07d128338d7f"
        },
        "item": {
          "id": "67c2ced3-7105-4ee5-bb25-a4a5e85144b8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "924e9b72-e8ce-4c7d-a58d-b1786f5531e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd51628-19da-4b6c-8bfc-ebf4dae019a5",
        "cursor": {
          "ref": "69e5a25d-e186-4e72-a074-e36286d1862f",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5224e294-7b2d-428f-aeb3-9b6b250e1708"
        },
        "item": {
          "id": "2dd51628-19da-4b6c-8bfc-ebf4dae019a5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "13500071-dfed-4aa9-9d88-1a62194b6f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74035f73-22dd-4693-bd87-dcd74ce0f449",
        "cursor": {
          "ref": "91500f0e-69f1-4131-b667-290a99e24920",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6ad2f520-11b6-44d5-8472-9939ca25575c"
        },
        "item": {
          "id": "74035f73-22dd-4693-bd87-dcd74ce0f449",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ec19407d-0a96-4534-9b3f-e782a8e7b22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3e3a68-501c-40bb-834a-d57e66bccdd1",
        "cursor": {
          "ref": "a9183af8-990d-4e08-8486-8300e2584cc2",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2e53e490-e7c3-4057-80d5-4fd8baf6328f"
        },
        "item": {
          "id": "6a3e3a68-501c-40bb-834a-d57e66bccdd1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "253b6792-6be0-4fbf-80a1-2c67cfe8d9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b754dd0b-f117-4a72-828a-538bf7ec143e",
        "cursor": {
          "ref": "3ccfabe2-4d63-48ac-8e44-ae1115e99aa7",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e48aba8e-8cdb-4d80-a4d7-753416c7662f"
        },
        "item": {
          "id": "b754dd0b-f117-4a72-828a-538bf7ec143e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "98f5ec1d-0c30-474c-b05f-acaf17fb745e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13d8b9f-a8d9-4afb-a95d-6207231f852d",
        "cursor": {
          "ref": "a90dbc84-f74f-4fb6-b810-64d3d1fa0420",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8c3d8e64-bd7e-4536-96e4-95b48b85daaa"
        },
        "item": {
          "id": "e13d8b9f-a8d9-4afb-a95d-6207231f852d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dd21b8eb-013c-49be-9d42-0f9990e79672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c63966e-5365-4dcd-be10-8c06e8bfe3ce",
        "cursor": {
          "ref": "5aebaa62-336c-4d79-b064-49af540747f5",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8e06c6fa-3148-44a0-aefd-ccfb3d3b1a43"
        },
        "item": {
          "id": "2c63966e-5365-4dcd-be10-8c06e8bfe3ce",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "523e6861-045b-4942-b29b-486cbb9465ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edd6f59-8137-4968-9ec1-263ac452a0aa",
        "cursor": {
          "ref": "186193ce-97de-4dc7-bd73-812b010c3372",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "240199e6-6588-4847-9064-b99699870f42"
        },
        "item": {
          "id": "5edd6f59-8137-4968-9ec1-263ac452a0aa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "57716ccf-45a1-4b60-acd4-d2c5753a80a0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 3402,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "c29b7dea-2b1f-4cd6-a2f1-26c3fd53c6db",
        "cursor": {
          "ref": "6a35c9e3-ec23-43d7-bf24-b6a059ccd56d",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4651bcdb-54ff-44db-b523-51dfec306d9b"
        },
        "item": {
          "id": "c29b7dea-2b1f-4cd6-a2f1-26c3fd53c6db",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d8553be7-5661-4889-8f22-b26050e26061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1272,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6ff010-fa34-498b-8b69-6f2d2c1c4cba",
        "cursor": {
          "ref": "dde69662-e31b-48b6-8f66-f1504b0f18ab",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c7795034-2174-46b7-b29e-01f9f1093402"
        },
        "item": {
          "id": "dd6ff010-fa34-498b-8b69-6f2d2c1c4cba",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fe19082e-aa0f-489a-9cc5-9aec345b78af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5df75df-aef6-4d6f-9de4-dcf301582c6b",
        "cursor": {
          "ref": "e39025d2-e155-4b4e-b151-62bea32e41fd",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "84daf6b0-0044-430e-a09b-913f4217d44e"
        },
        "item": {
          "id": "a5df75df-aef6-4d6f-9de4-dcf301582c6b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4db39eaf-4221-4770-85b9-e5f8fab0c9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b438df-ae10-42e7-9039-9281b7998290",
        "cursor": {
          "ref": "7597ef45-cf5b-42ef-b670-efeaf6bb7d40",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cd6f9e33-c51e-4182-9681-8af5b4d86358"
        },
        "item": {
          "id": "87b438df-ae10-42e7-9039-9281b7998290",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "98ef2904-f9ae-4bdb-9765-7ab7cf8c4e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2601b9-0d9b-443c-87b2-1f7e1404fceb",
        "cursor": {
          "ref": "9939db51-bafd-4777-a781-372839256c82",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c2d3f4fe-7ec5-48e9-bd96-af24eb8902f2"
        },
        "item": {
          "id": "8c2601b9-0d9b-443c-87b2-1f7e1404fceb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c005882a-68c8-4173-b7e6-f6e4aea8038e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f17aa9-4605-4bed-8210-a60bd57474c8",
        "cursor": {
          "ref": "e00792d6-0058-4fad-bdac-c30f9f67d0de",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8561fdf4-43ed-4812-8705-d196a20463df"
        },
        "item": {
          "id": "32f17aa9-4605-4bed-8210-a60bd57474c8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a2c22113-5d51-4c28-b7ef-d4e3d9885a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d357c97-0e48-4df0-8ba1-df391471562c",
        "cursor": {
          "ref": "f7ee908c-2ddc-4c90-8401-4db02a856e10",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f7246ab2-d348-413f-b96f-eec0d3d0e813"
        },
        "item": {
          "id": "6d357c97-0e48-4df0-8ba1-df391471562c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "71919a76-8b0d-48b6-b11c-fd33934c7128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86202789-5776-4109-9695-22512909a8da",
        "cursor": {
          "ref": "6abcc08c-89c3-4845-a38e-2f1fc1ecfb08",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "37f1955d-e652-4e29-9f0d-ff2148ccf734"
        },
        "item": {
          "id": "86202789-5776-4109-9695-22512909a8da",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "047d184e-a140-45c6-b3da-11acbd0620ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1084,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5006ef10-b6a6-4a5c-856c-b3ce615a7671",
        "cursor": {
          "ref": "7c6efd40-13dd-483a-b698-44d629e03a64",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "94c5b876-1af8-4589-9948-878bb5f43a14"
        },
        "item": {
          "id": "5006ef10-b6a6-4a5c-856c-b3ce615a7671",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bb77ad19-85d3-49ff-b5af-88ef201098c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876bbb17-5d11-4a15-bd78-7b42e4ad829c",
        "cursor": {
          "ref": "5590ff72-ebdf-43e7-baab-a8068e21f670",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1b762dcf-a9f5-480b-84b1-28797b9ed396"
        },
        "item": {
          "id": "876bbb17-5d11-4a15-bd78-7b42e4ad829c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4dd8bbb7-bfa6-41e0-b205-712adcaca89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 959,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75dd37c-3325-4730-8fcd-086b2d282389",
        "cursor": {
          "ref": "bbadb92e-293a-4a94-932a-8d60b7c43b90",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e24b00e8-43f4-40ad-9a45-bb2c49bb8583"
        },
        "item": {
          "id": "a75dd37c-3325-4730-8fcd-086b2d282389",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "701c2d48-07e5-4c5d-979c-8f6834b3a291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8c15f4-ad24-4fdc-bfdb-2c89345a42bf",
        "cursor": {
          "ref": "7cf7f1a7-5847-4dce-b7d9-a4e2137f3be3",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1da06692-50b1-41e8-80bd-3c9a721497f7"
        },
        "item": {
          "id": "4d8c15f4-ad24-4fdc-bfdb-2c89345a42bf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8eab7c06-5f23-47a9-b696-66423b44d51c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 665,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a79e049-c8e7-418e-88fa-79945ee22692",
        "cursor": {
          "ref": "5a136024-a2f4-46ce-9bf8-f5242a8942c6",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "41030b3e-e30e-4dd1-978b-3c39748fda75"
        },
        "item": {
          "id": "1a79e049-c8e7-418e-88fa-79945ee22692",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3057ca86-2e92-4f76-b17e-8d31b58e59cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 588,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "c9aea826-a9dd-4aa2-8207-688afba04150",
        "cursor": {
          "ref": "e7403e02-9acf-46ac-b289-e3419ea681b0",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1ee5c157-4d8e-4caa-a0df-9d26c162370a"
        },
        "item": {
          "id": "c9aea826-a9dd-4aa2-8207-688afba04150",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e7920346-2116-4b81-91ef-7782cf3c245b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e309c54e-ee72-4ea9-8115-f0c857223c40",
        "cursor": {
          "ref": "586a3657-622c-4b74-a5a2-0b23cf723b19",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ee6b78b3-afda-4043-85aa-48e3ad3f69ad"
        },
        "item": {
          "id": "e309c54e-ee72-4ea9-8115-f0c857223c40",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "753ac8ff-e737-4f9a-b224-e51d67df2e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211b8746-1636-448a-bf47-ccfac3b85c8d",
        "cursor": {
          "ref": "979b1217-2dbb-4ce2-bf9c-c9d7c4fe834a",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dc5e0004-165b-4582-8a69-ae14d67e9051"
        },
        "item": {
          "id": "211b8746-1636-448a-bf47-ccfac3b85c8d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1f808b09-85ee-4327-bfd0-a999302f30e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cbbba5-532a-4196-bc6a-0ebe5b08341e",
        "cursor": {
          "ref": "63a8b650-5ae2-438a-9d92-cc1a20ef54d4",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ea1f6732-2770-49cd-9a21-43bc204de30b"
        },
        "item": {
          "id": "46cbbba5-532a-4196-bc6a-0ebe5b08341e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fbf4e1b1-37e7-4b69-8168-4e9002cb545b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de79fa88-fba8-4b7b-9c4b-afaa47799576",
        "cursor": {
          "ref": "90dbcfc0-026f-4145-8855-bf21c47c8f84",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c32c60d8-f03d-4753-b7ba-5487c2d8dbfe"
        },
        "item": {
          "id": "de79fa88-fba8-4b7b-9c4b-afaa47799576",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cc64e37d-1ae2-4e40-a7c0-5057df542a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcf01bb-a3f1-4124-b66e-98e9f2c76a6d",
        "cursor": {
          "ref": "84b946c7-0f19-46c1-b4af-d21a3bbfc348",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "98230cb2-43f0-4f4a-b360-989bb27df98f"
        },
        "item": {
          "id": "8bcf01bb-a3f1-4124-b66e-98e9f2c76a6d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "77ec7cbd-59f3-43c3-888b-acbb1fb6be4b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 696,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146db212-acf3-459d-a7ba-770528b3c0ed",
        "cursor": {
          "ref": "2d75ac4b-de5a-433f-a905-9a89d7d3552c",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "78bbc975-6540-4bab-a286-04cf173fcb88"
        },
        "item": {
          "id": "146db212-acf3-459d-a7ba-770528b3c0ed",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3a23e973-ad51-41ab-bd18-131b5342d968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c119d31-c816-4c89-b893-240f96fb92f1",
        "cursor": {
          "ref": "e7706a9d-a844-47f8-9e3e-7b3429031d0e",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "08bb0c5a-8ed1-4581-90a8-3b8b4def4ca8"
        },
        "item": {
          "id": "6c119d31-c816-4c89-b893-240f96fb92f1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "11b19535-b0d7-4493-9fd1-37dd25bbbe5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d31c920-3511-486f-b046-d8d933719a44",
        "cursor": {
          "ref": "fda0b73a-7e70-403d-8592-24d01e6d34bb",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c9caee3b-a919-4964-b8bc-b2b2d0b9e42b"
        },
        "item": {
          "id": "8d31c920-3511-486f-b046-d8d933719a44",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "144043b8-643d-4cd0-840d-8ba4040595b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d51706-4a37-4ec9-b69a-7103a040e9d3",
        "cursor": {
          "ref": "634e78d6-f9a3-475c-a440-150536e9efbe",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f65c7817-67c5-4f2a-8200-59f789a0b045"
        },
        "item": {
          "id": "e4d51706-4a37-4ec9-b69a-7103a040e9d3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0be9dfd9-6a3c-4b04-acf9-828bc5f0de16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510d3d02-aeab-4b76-bfbd-cc234b730e1a",
        "cursor": {
          "ref": "2741a1c9-28b1-456c-b61f-8cd77afc6b97",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "85dadd33-5953-4936-8120-871e887e38d2"
        },
        "item": {
          "id": "510d3d02-aeab-4b76-bfbd-cc234b730e1a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cabe2f4e-e66b-4752-972c-d301a93dba06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c179ef-1a40-4726-ac76-5e06e08015fc",
        "cursor": {
          "ref": "a2c02d4d-fb90-45e9-b4ed-a7e7ef09830f",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5d777c3b-f0ac-4002-8f20-ebc6891051ba"
        },
        "item": {
          "id": "90c179ef-1a40-4726-ac76-5e06e08015fc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "40364e9c-58f0-4fcb-890e-6430e4bd3b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e656d1c-91a0-4df0-952a-f5582d652c30",
        "cursor": {
          "ref": "cc9828d5-33a7-4c6b-b8c3-de8f73b75141",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "66d6c5d4-6888-4389-be72-dc812e56dc73"
        },
        "item": {
          "id": "2e656d1c-91a0-4df0-952a-f5582d652c30",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "40fd87b9-89e3-49f6-9030-b30ea90dddb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db688b23-fdcd-47db-ad19-91fa40c9ea70",
        "cursor": {
          "ref": "c083bf33-5256-47ea-b094-6be724f2b20a",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a32fa45a-6996-492e-928a-e6375cae33de"
        },
        "item": {
          "id": "db688b23-fdcd-47db-ad19-91fa40c9ea70",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "136a2322-5d5e-45b2-84b2-ad49ff0f6f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a60a69-5b24-4f87-9310-e36cd5d9af8a",
        "cursor": {
          "ref": "277ef09c-9817-4bfd-9ca5-30b67029d81f",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5e52a600-3444-41bf-aef3-a9f80c5c2246"
        },
        "item": {
          "id": "89a60a69-5b24-4f87-9310-e36cd5d9af8a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "374785fc-237f-4f50-9d7b-c48e56c81470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613ee290-3509-4215-babc-6176b59ef88d",
        "cursor": {
          "ref": "47e29694-ac1f-4a6f-ae08-14f179e628c6",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8a5177a3-d3ad-484f-80ae-9b533657fd98"
        },
        "item": {
          "id": "613ee290-3509-4215-babc-6176b59ef88d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4aada4cc-7d78-475b-9779-2a3910b822a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b024cc-270d-4bf2-ba83-2d1e0bed799d",
        "cursor": {
          "ref": "c7142712-1d35-4bc4-8069-7f2bbf8cab78",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0f012e3b-e71d-4dc6-81f1-f13fbb6ba397"
        },
        "item": {
          "id": "b8b024cc-270d-4bf2-ba83-2d1e0bed799d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e546b809-3398-4903-8f79-fec2314c96de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5bfaab-21c0-44e4-80f4-c208f929c4d3",
        "cursor": {
          "ref": "b3c7a911-b98e-4d7e-8756-2f9cd551c10c",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e56e1810-291e-42ab-abef-7333dedff01a"
        },
        "item": {
          "id": "0d5bfaab-21c0-44e4-80f4-c208f929c4d3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "10ef489c-234e-4210-ba8c-3eadd98607ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02ec137-a1d6-4f69-bede-87300f215c04",
        "cursor": {
          "ref": "e8b1fddf-652f-4cd5-8db4-a6a37ab61700",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "36e751d0-a4c6-44de-8b7a-b8123c2806f3"
        },
        "item": {
          "id": "b02ec137-a1d6-4f69-bede-87300f215c04",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c71e05ab-56a2-44b9-ba06-68d1f6a4d35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aefa024-44ff-4dbd-9a72-d4acdeee7e5a",
        "cursor": {
          "ref": "149aa660-8375-491d-8d0e-ce82d264bb6a",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dbef62d7-d071-430d-a5cc-cb621fd51b90"
        },
        "item": {
          "id": "5aefa024-44ff-4dbd-9a72-d4acdeee7e5a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b5d1641b-d233-4432-9081-03be064ac2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0437991-2d56-40e9-bd3b-de578dbf7bdf",
        "cursor": {
          "ref": "018a2448-e08d-4530-b451-90c0b2811b32",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "798c6f23-eca7-4b2e-b589-9e9e29fbcfbf"
        },
        "item": {
          "id": "c0437991-2d56-40e9-bd3b-de578dbf7bdf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e845786b-e05e-48fa-bb08-6399986737d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346c5e12-89fe-4a44-ae03-1eaeb337a38f",
        "cursor": {
          "ref": "e72ac50f-4db5-4101-8d30-dae60c4b159b",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d92f1e8e-9479-46b8-9266-8e866703f954"
        },
        "item": {
          "id": "346c5e12-89fe-4a44-ae03-1eaeb337a38f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f938fc98-f6eb-4487-98d2-8230144dcd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1abbff8-af17-4298-a0c7-1dcb9710e70d",
        "cursor": {
          "ref": "a85c0a27-6d62-4a9d-9d5f-b81060dcfebf",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bef94e68-7095-4394-94f3-8ba278c8c0ea"
        },
        "item": {
          "id": "a1abbff8-af17-4298-a0c7-1dcb9710e70d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "74dcfe19-a670-45da-8060-4dbc9fc0ed1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31eb904d-5dc5-471a-af97-6875e56548d4",
        "cursor": {
          "ref": "cc101cb6-5c24-4745-8d85-59f8a64c193a",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dc49d042-f967-4e26-a068-741a49710886"
        },
        "item": {
          "id": "31eb904d-5dc5-471a-af97-6875e56548d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "84eeef3a-0db5-45e4-b4ac-09ff857d223b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9bea48-c727-4e4a-a129-c27cdb6e147e",
        "cursor": {
          "ref": "b37079cf-d019-4dcd-9f53-c104acdcd414",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "07fdc3c9-b246-4662-a802-87338a899abf"
        },
        "item": {
          "id": "bc9bea48-c727-4e4a-a129-c27cdb6e147e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ed35a24c-1238-46a6-8ac6-f66aab4590a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49144669-1b49-4e74-85a0-88513c999a92",
        "cursor": {
          "ref": "1d279fb6-b0fa-4ba5-b96d-85892f054461",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b7dcb7c8-9fa1-42cb-b7ee-2062940d5a2d"
        },
        "item": {
          "id": "49144669-1b49-4e74-85a0-88513c999a92",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b061e40d-95d4-4457-a540-57257920f749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d0445e-a072-4161-a0ab-5f4cb85e2a02",
        "cursor": {
          "ref": "6ae8011f-1223-402d-96cd-3d1a57fd1f32",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "56f32724-bc95-4fdf-805c-f682cb2b6ff5"
        },
        "item": {
          "id": "d4d0445e-a072-4161-a0ab-5f4cb85e2a02",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6d81bbeb-6aa6-4088-a503-e08fe68a6b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9a8c13-554c-4dbf-afa9-7794c493b2a3",
        "cursor": {
          "ref": "839140d2-c429-4fb7-a3ac-e0113db644a4",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ef3517c9-fe9a-4ce5-9163-f7dfda3bc057"
        },
        "item": {
          "id": "fd9a8c13-554c-4dbf-afa9-7794c493b2a3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9b32c327-4b7f-4439-a7d0-3b58e03a6aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d88f8b-2f89-4ac4-bd53-af8fbe22ce8f",
        "cursor": {
          "ref": "5c13b498-6a34-421f-8096-ce43a54839db",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ffe02ac2-289d-4e11-bb8d-3e000df49774"
        },
        "item": {
          "id": "29d88f8b-2f89-4ac4-bd53-af8fbe22ce8f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "28cb98f6-7738-44f9-a1fa-43bc9729b8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3951678b-53aa-4d8d-a934-e23deb141922",
        "cursor": {
          "ref": "278de425-fb5b-41be-b425-00dac85826df",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a50d5d90-db14-4616-aa7a-d9ddbe2fb00c"
        },
        "item": {
          "id": "3951678b-53aa-4d8d-a934-e23deb141922",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1913de85-9520-45dd-86ab-8b9cabe0c959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9229af-6f9c-4dbb-a310-7ce868474592",
        "cursor": {
          "ref": "e5d4432a-7bf1-41e6-ae7c-6d839aa53533",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e0aded69-e642-4aaf-8105-ddb4d873fcc5"
        },
        "item": {
          "id": "7a9229af-6f9c-4dbb-a310-7ce868474592",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ef910336-6bc9-4405-9521-3c88a1fa4079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e53cb93-3911-4ac5-953c-2eb336d9a16e",
        "cursor": {
          "ref": "d5eb5cf8-a8b9-4810-89d9-4db53de76f3e",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9fe14bd9-0dcb-4fcb-b9ec-30cbcc23b010"
        },
        "item": {
          "id": "7e53cb93-3911-4ac5-953c-2eb336d9a16e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "30f0717b-3a9e-46da-bf2c-4193b5ebec12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce232ea-0fe7-42f7-8369-1e80d17e4123",
        "cursor": {
          "ref": "f416d1ff-9991-4f78-a37e-39d8ad0c1375",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "03f04adb-4fec-49ad-81fb-0b409ce319d9"
        },
        "item": {
          "id": "8ce232ea-0fe7-42f7-8369-1e80d17e4123",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4ceec60f-ae22-4bc8-a055-1a20a4cb470c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d890a55-a20c-42f2-a06f-bfadc8c77712",
        "cursor": {
          "ref": "36b68e10-37b1-44c6-b01b-b5782f0a896e",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0915db7a-6c1a-42de-8cca-c2b4e78d2596"
        },
        "item": {
          "id": "9d890a55-a20c-42f2-a06f-bfadc8c77712",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cd3f20b3-74be-438d-8a05-c5b7056c4f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf10ca5d-362c-4c49-95c5-b3fb9975a33e",
        "cursor": {
          "ref": "2350243b-3dc1-47be-b010-99c8850908a5",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5182e98a-6957-4b91-80bc-33223efffe4c"
        },
        "item": {
          "id": "cf10ca5d-362c-4c49-95c5-b3fb9975a33e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2b224c98-b9ac-4181-926d-b400473858ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dd0331-20d2-4239-8ede-ce7238aa287d",
        "cursor": {
          "ref": "23971ec8-0665-4437-951a-68e0113451f7",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9076e70f-064a-4a46-a5c7-49d35fbc8248"
        },
        "item": {
          "id": "46dd0331-20d2-4239-8ede-ce7238aa287d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9cee1e09-5627-422b-a627-56a05a261c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025e470c-3512-42f7-8fc7-919494c55878",
        "cursor": {
          "ref": "af9f69f3-ebc6-4693-bd17-120b6d5bd325",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "56725fea-0995-4735-8ccf-89cb41234950"
        },
        "item": {
          "id": "025e470c-3512-42f7-8fc7-919494c55878",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e2480ebc-3891-429a-9e84-8404a123ed70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2295d3c-e191-42ca-bd65-7f453431b3ca",
        "cursor": {
          "ref": "4b86f0f0-afd9-4604-81f4-8b57bbb5e3de",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8bfd769b-7b49-4972-81f0-35a3abd68a11"
        },
        "item": {
          "id": "f2295d3c-e191-42ca-bd65-7f453431b3ca",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9f225bee-64c1-44db-91c0-1dc80ba7a638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3320785-0933-45b1-bff0-974a8cda50be",
        "cursor": {
          "ref": "bfb09657-4c94-4e72-81c9-54160dd4a6f3",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fa26588c-f7db-489e-a845-48ef07ed4be3"
        },
        "item": {
          "id": "d3320785-0933-45b1-bff0-974a8cda50be",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5066591a-b5e7-45e6-8e70-45cd3e72091b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 991,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b7151a-7eae-4f7f-8537-a0623d020c78",
        "cursor": {
          "ref": "616c89a6-c4bb-4374-a258-816e643c1f69",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0e5218cf-2ec2-42ea-a67c-9066c217a1d9"
        },
        "item": {
          "id": "65b7151a-7eae-4f7f-8537-a0623d020c78",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "13c5070f-dac6-455c-a48d-35c430f91d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb70505-6e48-412e-9f03-f912b29abfcc",
        "cursor": {
          "ref": "ad6c8b17-6571-493a-992e-de768db44b90",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "788c6509-c269-4af6-8661-50380c663cc4"
        },
        "item": {
          "id": "7bb70505-6e48-412e-9f03-f912b29abfcc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8f0e7eab-9507-4d38-a8cc-37bcef8d0771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870214ac-7f95-4bcd-88c7-81c029bbab4a",
        "cursor": {
          "ref": "426fc28b-8130-4db7-a92b-da5b7d6c2a1b",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4cdf6bad-06bf-41fe-99b5-f72858898206"
        },
        "item": {
          "id": "870214ac-7f95-4bcd-88c7-81c029bbab4a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ee37f117-8d72-4407-9c72-42883e66ba36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b937888a-2bc4-4d6a-9e13-50b751bd9333",
        "cursor": {
          "ref": "7ccb451a-733f-424a-95e5-58db6eaf080f",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "38c36b6d-b94f-48aa-b8ce-3afbc1a36822"
        },
        "item": {
          "id": "b937888a-2bc4-4d6a-9e13-50b751bd9333",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "93db106a-b5f9-41fd-8a35-5338c6cb3f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab7d159-1bb2-4873-8b2a-7e5cd95092ae",
        "cursor": {
          "ref": "9b3801f9-465e-4e01-aed7-851b38b80cc2",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2693e150-b9d2-43eb-9380-e2cbda22af14"
        },
        "item": {
          "id": "aab7d159-1bb2-4873-8b2a-7e5cd95092ae",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cdd4f676-a02f-4623-9200-551742f71ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef77233c-3a3e-440f-a4c6-8174b2ba3c81",
        "cursor": {
          "ref": "f5de18f9-b835-48f6-abc2-5a5262b7f1ef",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b5f30f7c-e81c-4d29-a8f3-8de680ef8822"
        },
        "item": {
          "id": "ef77233c-3a3e-440f-a4c6-8174b2ba3c81",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f022d859-5edb-4bdb-9cd0-f50e261f0a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e727255-cd18-4ba1-b6e6-c24e49f744e6",
        "cursor": {
          "ref": "a7846637-7491-4332-b8f6-74f8cdb0cba5",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a3ec6f63-f1d9-4412-8cee-ea64cd0c9528"
        },
        "item": {
          "id": "6e727255-cd18-4ba1-b6e6-c24e49f744e6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9c3e24da-7210-4576-b9f2-7205da5bf100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af6fe78-1008-4d85-991b-b149aec5a9ce",
        "cursor": {
          "ref": "4ef23c30-a8ee-42f1-a50c-cd952bf47337",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d020ffe8-e82b-4ee8-8dae-29301df60d6a"
        },
        "item": {
          "id": "3af6fe78-1008-4d85-991b-b149aec5a9ce",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "14959ca2-c4e3-481d-a967-61aaba36b7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91d45ae-1073-4936-abf8-858cbe75c497",
        "cursor": {
          "ref": "db0d24e8-b880-4c17-b047-669695900217",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a3b82815-92df-4eb4-bd58-dd5ae4c9b676"
        },
        "item": {
          "id": "b91d45ae-1073-4936-abf8-858cbe75c497",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "25beaf84-5220-412f-8f0c-f31db0b68dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb621074-d875-4808-ae63-49c0b1df7297",
        "cursor": {
          "ref": "ab3596d5-273d-472d-8d40-53e71a094e9b",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4ba0ed74-f582-4350-b600-6e8fd3a45361"
        },
        "item": {
          "id": "cb621074-d875-4808-ae63-49c0b1df7297",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "12cd2127-1290-49ed-b58e-ebe18769d584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1aea9b-6ce6-4ae5-9972-29a6a3540524",
        "cursor": {
          "ref": "341d78c5-707d-4418-b233-51ec5ab7308d",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eb79ed1b-e0c4-43b2-86e2-ee730851815c"
        },
        "item": {
          "id": "eb1aea9b-6ce6-4ae5-9972-29a6a3540524",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0920a0ef-962f-4c7b-8fd6-9f3c0e1c1fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f7af12-b8ef-4b12-888c-8e46f4f08e7d",
        "cursor": {
          "ref": "8235d6fa-de7a-4e1b-9e3d-3330f9241c01",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "573331aa-4d1b-47f5-b226-f36c41caf72a"
        },
        "item": {
          "id": "09f7af12-b8ef-4b12-888c-8e46f4f08e7d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c72925b0-b70b-4f67-ab52-44d25319d91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee21a9a0-3ddd-4b1a-a760-da0cd4469ec7",
        "cursor": {
          "ref": "1afa82ab-758e-4ee1-9daf-acdb9521a47d",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f367f221-4289-45ea-ab62-a51d93cd48d0"
        },
        "item": {
          "id": "ee21a9a0-3ddd-4b1a-a760-da0cd4469ec7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "77c4449a-4acf-4eb7-9be1-48a68b8416dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36392426-5c25-406a-b678-341c7141404b",
        "cursor": {
          "ref": "e28bd90f-9450-4103-8fa8-4791f0ce5edc",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "22c04beb-fa59-4dcf-9da7-098d3690abea"
        },
        "item": {
          "id": "36392426-5c25-406a-b678-341c7141404b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "37aa4c5c-4919-45eb-abb0-217e0b248dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70588d6a-4f58-42bd-8d74-9133aac4efde",
        "cursor": {
          "ref": "fd8ac2fe-1e4f-4ddb-820c-c2cc274ee021",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e8ad8922-17b4-43db-9bb3-badb50458e73"
        },
        "item": {
          "id": "70588d6a-4f58-42bd-8d74-9133aac4efde",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0ae3ce83-76d8-4074-9220-4a00b4e2adcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1662d598-3485-4796-a182-ff9d1770c7df",
        "cursor": {
          "ref": "ac2388f6-eb78-4f5f-b5ec-4586174d1ae1",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6115f57c-df41-4cb8-9dda-409ed1adc88a"
        },
        "item": {
          "id": "1662d598-3485-4796-a182-ff9d1770c7df",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7ae754e9-3fa4-4be9-a3c4-ff969564297d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fac78b8-239d-47ed-bf27-d25c2b565a6a",
        "cursor": {
          "ref": "170365da-3827-46ea-909a-43fd99776749",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "edb9f232-b385-4313-b8b2-27bd9a707bff"
        },
        "item": {
          "id": "2fac78b8-239d-47ed-bf27-d25c2b565a6a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dd23f615-62fe-4a8a-8315-ce76b49f4a55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4e79f8-a65b-4285-898a-b072efdf0a5d",
        "cursor": {
          "ref": "e340ed3d-941c-4211-8788-aebcb4501e4f",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "68010b52-ccfe-459c-b016-5cf3edfedef0"
        },
        "item": {
          "id": "5a4e79f8-a65b-4285-898a-b072efdf0a5d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "ab7f1a9b-81f5-4484-b303-6c9731716819",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 571,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcff90e-27df-49f6-9581-d5909cec329f",
        "cursor": {
          "ref": "b7e0910a-dae9-43d1-9a7e-a1cd9b527ae3",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c750edf9-d076-415d-b98c-09498d9c52dd"
        },
        "item": {
          "id": "ffcff90e-27df-49f6-9581-d5909cec329f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2ae5f63e-4242-40a6-a6f3-d9e7518b6250",
          "status": "Created",
          "code": 201,
          "responseTime": 4591,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e015c9-b536-490b-8ca0-afb9e126b589",
        "cursor": {
          "ref": "e0c2755e-7eb5-4795-96d7-8d11d58da317",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4bc92011-19e9-4c7d-943e-fab18d2903fc"
        },
        "item": {
          "id": "62e015c9-b536-490b-8ca0-afb9e126b589",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4cd94e7f-47f2-4ab9-8c24-bb0a5499720f",
          "status": "Created",
          "code": 201,
          "responseTime": 3924,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d84f75-d5cc-4aff-8aac-a33de7178e48",
        "cursor": {
          "ref": "4beb1631-9eb1-4a1b-82fa-d120b457f4c9",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "541dc8fd-65d9-47c2-8060-ad9d2c81084d"
        },
        "item": {
          "id": "30d84f75-d5cc-4aff-8aac-a33de7178e48",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "aa14af93-7394-433d-b8ae-adc15153f1cf",
          "status": "Created",
          "code": 201,
          "responseTime": 5369,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d3e05f-8f41-44d9-b540-9b8fe99c0bf1",
        "cursor": {
          "ref": "b4374894-fa9d-4788-be68-8e5ba2bf5ee0",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "62c53de3-8df0-4cce-8d44-b5fff2216d48"
        },
        "item": {
          "id": "94d3e05f-8f41-44d9-b540-9b8fe99c0bf1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "aa7f47ad-5057-47f1-9ad5-2253430dd200",
          "status": "Created",
          "code": 201,
          "responseTime": 4302,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "32923cca-b8f2-4a69-af56-5e87522505c0",
        "cursor": {
          "ref": "d1d29a4f-c332-425e-b54e-817e3a75a29d",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ecbb1fb1-2aa8-4156-9db8-8e1024ab7353"
        },
        "item": {
          "id": "32923cca-b8f2-4a69-af56-5e87522505c0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "41df76eb-8b4e-4e23-8c27-567919fb13dc",
          "status": "Created",
          "code": 201,
          "responseTime": 5056,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "628bd1db-7a44-4c00-90a8-4d61fd956124",
        "cursor": {
          "ref": "db508ef5-7e53-47b0-9135-e1828534ca44",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ac2b146b-ca0d-44f5-b79c-30e53440e861"
        },
        "item": {
          "id": "628bd1db-7a44-4c00-90a8-4d61fd956124",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "152de2b9-0ae0-45a5-a553-7b5e8d3db4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628bd1db-7a44-4c00-90a8-4d61fd956124",
        "cursor": {
          "ref": "db508ef5-7e53-47b0-9135-e1828534ca44",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ac2b146b-ca0d-44f5-b79c-30e53440e861"
        },
        "item": {
          "id": "628bd1db-7a44-4c00-90a8-4d61fd956124",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "152de2b9-0ae0-45a5-a553-7b5e8d3db4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af27895d-fd45-4090-a0a9-26c24f0f60ed",
        "cursor": {
          "ref": "de6e70e2-938e-4fa2-a446-308bfb94f493",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bc649f39-364b-48bd-bbcb-5cb0a5214bbe"
        },
        "item": {
          "id": "af27895d-fd45-4090-a0a9-26c24f0f60ed",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bb6388b3-e9c4-4456-8d07-d617105d3ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2191cfc-b991-47c3-bb7d-fe1ee1b66ec3",
        "cursor": {
          "ref": "1885acf4-fff4-4c6d-8f73-392338ede059",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "31a50407-466d-45c6-8d71-0e531007da6a"
        },
        "item": {
          "id": "c2191cfc-b991-47c3-bb7d-fe1ee1b66ec3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c524d3a3-580d-4ca9-8743-8996a011cdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a6e91b-c2b5-4057-982d-76612e4e1d3f",
        "cursor": {
          "ref": "e81b7b6f-400e-4bd7-a3fb-ca4ba5d35407",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2a25034e-db97-4e4f-be11-aeffd9adb2bb"
        },
        "item": {
          "id": "a7a6e91b-c2b5-4057-982d-76612e4e1d3f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2ea3df64-8220-4d18-936f-41f4ceca1a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0555f381-13db-4f1f-9036-c75eb050e04d",
        "cursor": {
          "ref": "98289543-a3f3-45e2-a8a6-9d9d16eed9dd",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "72dc3234-06dd-459b-81b2-b014c0457185"
        },
        "item": {
          "id": "0555f381-13db-4f1f-9036-c75eb050e04d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3cf0d8b2-58c1-4e96-8f1a-edb7b32736d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f55062-9bd3-4d41-a80e-7e99bd523956",
        "cursor": {
          "ref": "30e13439-dc0c-49d2-8df0-33d6701c2152",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "50e4bae8-20a0-427f-93ee-9c9d8e8a9a64"
        },
        "item": {
          "id": "36f55062-9bd3-4d41-a80e-7e99bd523956",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8c3bfb17-d080-434b-9c5b-8311771f8e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f2e293-6049-4cee-970f-becb16c9695c",
        "cursor": {
          "ref": "fd213e06-2850-4cf5-a8f4-9a3a988dfb1a",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "aae8f379-8816-4a41-a484-15045caad8a0"
        },
        "item": {
          "id": "e4f2e293-6049-4cee-970f-becb16c9695c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dbe7eec6-664f-4ed2-84d9-5bf52c8659ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76573a5a-4e6d-4054-84f9-90676b5908e5",
        "cursor": {
          "ref": "019948f5-4425-42c6-8939-ef549adc58f1",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7bee6508-bd0d-4a64-82dd-35276b56ea53"
        },
        "item": {
          "id": "76573a5a-4e6d-4054-84f9-90676b5908e5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9e5839fe-b5c7-4909-8bfb-e330bff7e8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9713a9e-908a-4437-b0a3-caba067b3b47",
        "cursor": {
          "ref": "220fbad8-9939-4570-bf18-c1d64bab57cc",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "46b62de2-b074-48cf-bfb4-3707fa4bf823"
        },
        "item": {
          "id": "b9713a9e-908a-4437-b0a3-caba067b3b47",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1fd80095-4f1c-4f2f-872e-f0b72dd26247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dbfa4d-e007-47a5-8123-666e38e34fb2",
        "cursor": {
          "ref": "3238d160-b0fb-441b-9b02-e79852923f6d",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b31b19a2-3a79-48ef-95a6-453a7bae9ee9"
        },
        "item": {
          "id": "48dbfa4d-e007-47a5-8123-666e38e34fb2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3393bc00-4400-4e82-bde3-784be05dfef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b589f7-ed37-4412-ad42-df5221db4a0b",
        "cursor": {
          "ref": "30918aba-d2bd-416b-977d-f36f783e2e65",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "69ae9ddf-8097-455c-ac7e-8c1f5f404e64"
        },
        "item": {
          "id": "87b589f7-ed37-4412-ad42-df5221db4a0b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "357d5544-4dde-4259-ac96-9acdca22f8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04b379e-3955-4940-8f16-2dc11c407e00",
        "cursor": {
          "ref": "3c03556a-5d92-4d6a-a826-c4825e56627a",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "99c0de28-4cfe-414c-977a-9043b474b980"
        },
        "item": {
          "id": "b04b379e-3955-4940-8f16-2dc11c407e00",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "33297c28-6e91-4026-91ce-1ab521ad82b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eec718-3436-4d15-89f8-52c65780451a",
        "cursor": {
          "ref": "9defebe3-58fc-4872-95e1-b91d1176411c",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bfe095c2-3da6-46a9-a46c-633ca46ed2fc"
        },
        "item": {
          "id": "52eec718-3436-4d15-89f8-52c65780451a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3ffc1cf1-2c24-43ea-b162-b5ebbbc712ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fb1d03-f2ba-40fe-b11c-53a1d93a94ad",
        "cursor": {
          "ref": "2306e49b-e5c1-4c67-843a-600d168db142",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d9fc6af6-7719-42dd-8b30-146eb41f3264"
        },
        "item": {
          "id": "27fb1d03-f2ba-40fe-b11c-53a1d93a94ad",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "204485cb-50c2-442c-962e-f210e2a4498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1f71dd-6070-4f22-9127-142b264ddf09",
        "cursor": {
          "ref": "54cf97fa-ba89-4566-8ee4-3255bd305096",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "197451b9-019e-4fc6-b2ca-420fb2c5829f"
        },
        "item": {
          "id": "9c1f71dd-6070-4f22-9127-142b264ddf09",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b9d05a62-259c-4f0f-8858-db47dcea70f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d074a2d-bd54-4242-b7ff-b2f857824546",
        "cursor": {
          "ref": "d2942364-7495-4e51-a706-d9020727b8b6",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5500eeb1-c61c-4ca4-9ee9-1b9d5a88b1a0"
        },
        "item": {
          "id": "0d074a2d-bd54-4242-b7ff-b2f857824546",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "df1a0227-f508-4d35-be7e-56540c1028c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47255e66-359f-4a89-aa5c-c69b9adad5e4",
        "cursor": {
          "ref": "174ac1bb-17ef-43e2-b38c-7bceff54c57f",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a26e60b5-b9df-408f-b4a7-d0a4d21bff7f"
        },
        "item": {
          "id": "47255e66-359f-4a89-aa5c-c69b9adad5e4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "34059907-8909-446f-8337-39a7e0801b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f5e7e7-a875-4412-bf9b-e220a09274b1",
        "cursor": {
          "ref": "df9568ce-787f-416d-8840-8631bad5ab92",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "107de7cd-9197-4700-8c02-40a044dced16"
        },
        "item": {
          "id": "47f5e7e7-a875-4412-bf9b-e220a09274b1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d3fd554c-5368-4472-a4dd-907859c7182f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cd69eb-14f6-4180-831a-8d83f16c7216",
        "cursor": {
          "ref": "3ce37f1f-323e-4974-8052-f3e8bd663a26",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c0f5b79c-be8c-4996-9d36-6f1d8c2627e3"
        },
        "item": {
          "id": "d7cd69eb-14f6-4180-831a-8d83f16c7216",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "aae31cd0-15f8-4526-b742-16e95f34f96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c62f1e5-5705-4e71-8163-05cc6f8e8056",
        "cursor": {
          "ref": "7ac82047-68a0-412f-a736-d156a4d48d03",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8ea0dbcd-f00d-4a5c-8c73-65c237ae6800"
        },
        "item": {
          "id": "6c62f1e5-5705-4e71-8163-05cc6f8e8056",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0ab14904-d1cb-44d0-a85b-64b9ce020ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bf01f9-aa63-4e18-b9f8-e31dfa89953e",
        "cursor": {
          "ref": "d876fe03-d079-4ef2-b92e-e61a59f87079",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5b17fc37-190c-4b45-a7b3-07cc6c13a6ef"
        },
        "item": {
          "id": "26bf01f9-aa63-4e18-b9f8-e31dfa89953e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "df8b957f-88d3-4914-a065-eaef08144eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531d4f72-9f50-4137-bd26-d36dcedb30a5",
        "cursor": {
          "ref": "7e0fcbf2-30cc-48d0-8eb9-3ef5f7e3c284",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a3683aff-fe31-4891-be56-4622d97d46f8"
        },
        "item": {
          "id": "531d4f72-9f50-4137-bd26-d36dcedb30a5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ed4e2952-8a31-493b-b739-67b4a2d33441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a90c878-00b0-4e5d-afa8-d6e0e04bd9ac",
        "cursor": {
          "ref": "c9530e37-8493-415c-adc5-ab38fedc0135",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "62666756-adc9-4ec5-af09-a14b5d39d28b"
        },
        "item": {
          "id": "0a90c878-00b0-4e5d-afa8-d6e0e04bd9ac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "232bc63f-7293-49f4-b8d2-d860f833aef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f91503-3594-4543-b205-903a68fd47e0",
        "cursor": {
          "ref": "b766a972-ed03-436c-beb0-cfc4d5c05894",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "27bdbf41-76e9-4aa6-94f1-47beebb0b7ba"
        },
        "item": {
          "id": "18f91503-3594-4543-b205-903a68fd47e0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f6ffa99a-0f7d-4631-9ef6-8b54b90509db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6502701-2611-4a1e-a272-6f2f0af35879",
        "cursor": {
          "ref": "705b60bf-feec-4d0e-807f-67acca055bbf",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bcfa619e-4fb5-42b7-a77d-a39addd4bd7a"
        },
        "item": {
          "id": "d6502701-2611-4a1e-a272-6f2f0af35879",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "547422e9-c6e6-4771-9ae0-1b032886c6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbff54e-611f-44d0-b012-2640182bdd96",
        "cursor": {
          "ref": "bcab7b4d-83d3-46ce-a40f-5f8d7db7882f",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d75ce37d-b7f9-436b-97b2-35a2946d7566"
        },
        "item": {
          "id": "5dbff54e-611f-44d0-b012-2640182bdd96",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2547b6cb-bb78-4861-a881-59691ded95cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590d91d4-e5bf-4c5f-988c-6b0bf39ccd85",
        "cursor": {
          "ref": "2939503d-898a-44ae-aad8-6d8fb52d6ada",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1426815b-8151-42bf-9631-3450e92318f3"
        },
        "item": {
          "id": "590d91d4-e5bf-4c5f-988c-6b0bf39ccd85",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "854a7f30-7805-43c3-9207-f73a5fabf898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1612e1-5307-4c92-a2e3-1a7c7f401436",
        "cursor": {
          "ref": "b0d08d33-c9e1-493e-ba62-6b90c53adce4",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "138d6534-aa54-4a1e-bc54-6d5791c58183"
        },
        "item": {
          "id": "ec1612e1-5307-4c92-a2e3-1a7c7f401436",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c5c86b99-4311-44ab-a44c-510a3cf28a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddff196-b608-4ca1-ace5-d9e581a6e8a8",
        "cursor": {
          "ref": "c7abc72f-cc16-4969-9063-46513c34eb7f",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9c52455f-5777-40d0-aece-25e34e135cda"
        },
        "item": {
          "id": "9ddff196-b608-4ca1-ace5-d9e581a6e8a8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bd7bde25-5049-4eb4-af9a-53204e2e2b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87440985-11c8-43e5-84e8-8b49d2df60c8",
        "cursor": {
          "ref": "e8e464fa-66b8-475e-aff9-d4bd0f9be16e",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7f0bfc57-8a3c-4f1e-8482-6379b30da368"
        },
        "item": {
          "id": "87440985-11c8-43e5-84e8-8b49d2df60c8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0f168ee0-b59c-4c94-912e-2db85eba188d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6421c7c-94b2-4f66-955b-57db88e94c1b",
        "cursor": {
          "ref": "7685a2b1-65a3-4878-8ee1-bd270cf22893",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3c0d9533-94b0-4465-8d66-8e93e470fadb"
        },
        "item": {
          "id": "a6421c7c-94b2-4f66-955b-57db88e94c1b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "25ab463c-58ce-4f7a-be72-64613daa1be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca48c86d-b86c-4f51-9d46-1fd1d0a697ba",
        "cursor": {
          "ref": "a90a768c-158a-4f29-8db4-8b1722b8a2ba",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a0c5e807-5bf5-4ed7-b16d-c19ed65c2ffb"
        },
        "item": {
          "id": "ca48c86d-b86c-4f51-9d46-1fd1d0a697ba",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a0dc679f-9833-454a-a0ab-c2457f82eee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a1352e-503c-4401-9611-7c2249e22306",
        "cursor": {
          "ref": "19b30392-be38-478e-acf7-b6d3d0e26c15",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "de7feac8-b936-48c0-8707-45779f6ef8ca"
        },
        "item": {
          "id": "78a1352e-503c-4401-9611-7c2249e22306",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "93c84456-02a5-4761-9363-90c7dd53b5d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b71a3e-571e-4acd-b9ef-c4ddd5137627",
        "cursor": {
          "ref": "19a925cc-d325-4323-acf5-e289c63dee01",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "10cd7b23-50a1-4dcc-a319-2e8466df517a"
        },
        "item": {
          "id": "b2b71a3e-571e-4acd-b9ef-c4ddd5137627",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "96158557-f4c4-45fd-be1d-7d58c5ef7aaf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 554,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ad10b3-b9ef-41c2-ab0b-1b615fc365ee",
        "cursor": {
          "ref": "b263d633-1feb-4501-9579-7ae80bd68700",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0fbc5f6f-e80c-4fed-a910-a53c228639bb"
        },
        "item": {
          "id": "86ad10b3-b9ef-41c2-ab0b-1b615fc365ee",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "342c190f-548f-4f9a-a9ea-a77b47e5b27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ad10b3-b9ef-41c2-ab0b-1b615fc365ee",
        "cursor": {
          "ref": "b263d633-1feb-4501-9579-7ae80bd68700",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0fbc5f6f-e80c-4fed-a910-a53c228639bb"
        },
        "item": {
          "id": "86ad10b3-b9ef-41c2-ab0b-1b615fc365ee",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "342c190f-548f-4f9a-a9ea-a77b47e5b27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b223d380-5e9b-458b-be03-15f0f6c4124f",
        "cursor": {
          "ref": "0293bf61-eac2-42f7-9918-c3b017c73036",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8b058839-6d61-4df0-9bd1-c0de21646b1d"
        },
        "item": {
          "id": "b223d380-5e9b-458b-be03-15f0f6c4124f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "609d40fb-3938-4bf1-8895-4464836853f7",
          "status": "OK",
          "code": 200,
          "responseTime": 359,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "21699956-2c29-4b63-b2a9-ce887fe45898",
        "cursor": {
          "ref": "8d1b499d-909d-401f-abe4-0c8d3f611d6a",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4e18df1f-824a-479a-8f87-b3fa6b80e318"
        },
        "item": {
          "id": "21699956-2c29-4b63-b2a9-ce887fe45898",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8f69d7c6-1844-47b8-a4af-e39b83bf3761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ea5c9e-e182-4385-8271-fda3c6784374",
        "cursor": {
          "ref": "26703cb0-685c-4365-bda6-ae9008fcda46",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "50f76948-d744-4390-ab1a-ea62e795aeaa"
        },
        "item": {
          "id": "09ea5c9e-e182-4385-8271-fda3c6784374",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "02da574d-dc01-463d-96ec-cdd237332209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72663903-8f5c-42df-83ea-3573e1ad6ebb",
        "cursor": {
          "ref": "bd1b8ef4-da47-4b89-bbd0-6402a87185d3",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "882be8fe-1fbf-415c-a171-0b4988f16a7c"
        },
        "item": {
          "id": "72663903-8f5c-42df-83ea-3573e1ad6ebb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "90a77ecb-4f44-47d3-8ef9-3ea9cffc4a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0a1d6f-c072-476d-8905-b1bec16afeef",
        "cursor": {
          "ref": "6f2028cf-4f70-4e94-b4f4-5bca62845d1c",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6410f11e-dd3b-4ae7-9e2e-dafaa58c31ba"
        },
        "item": {
          "id": "5f0a1d6f-c072-476d-8905-b1bec16afeef",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c16ba83d-8666-4bdc-8d51-3e22bb3d16ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5913c02b-4750-4ad2-ad0f-ff3a6871a422",
        "cursor": {
          "ref": "1e95973f-1cd8-40f0-9c1b-68879cf208ac",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7ebc3d5a-1607-45c3-abb4-1da6d7040803"
        },
        "item": {
          "id": "5913c02b-4750-4ad2-ad0f-ff3a6871a422",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d31bdfe5-53a5-4993-97b0-f1866bcf19dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc969b9a-1ec9-4fc0-8d6a-10305476c3cf",
        "cursor": {
          "ref": "5d6e8a5b-b951-42e6-b1eb-e388419515d6",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "609b0b4a-ec2a-4674-ad4f-3341e80bb81f"
        },
        "item": {
          "id": "dc969b9a-1ec9-4fc0-8d6a-10305476c3cf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "86a2a0ac-c8d2-4f4d-944b-691b9f2219e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939df89a-cdfe-47d0-832f-95c589755498",
        "cursor": {
          "ref": "15bfef5f-c391-4dbb-8fd4-224ce3d679ea",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c88ddc84-e364-4920-a4fd-37d3954c883d"
        },
        "item": {
          "id": "939df89a-cdfe-47d0-832f-95c589755498",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2e365606-796d-41bf-8730-0bd84abb1dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ad4d79-e8fc-4af3-a70d-01016d800397",
        "cursor": {
          "ref": "3af54428-6b10-41d8-a384-2bc7572aa0cb",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8c242cef-4a6d-40f2-9fb7-bf2c465ea6c9"
        },
        "item": {
          "id": "51ad4d79-e8fc-4af3-a70d-01016d800397",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "edd47b3b-441a-4c95-93a0-a6237e335df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a74505-0e3f-4173-97ad-912cc5ced160",
        "cursor": {
          "ref": "52e86d79-ba7d-4414-901d-b8ef8136d060",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b32c5cf7-8a79-45e0-8218-96d62238db62"
        },
        "item": {
          "id": "10a74505-0e3f-4173-97ad-912cc5ced160",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d55329d5-ec69-4978-9d96-8e83bdf8c1ef",
          "status": "OK",
          "code": 200,
          "responseTime": 475,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "17a1abbe-f803-4030-a3a8-19fd7a70dda2",
        "cursor": {
          "ref": "3c79ba6e-0d3a-404a-bbfa-8bc2f78943f5",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6cc83374-3bb4-44e4-bff8-60abae95c3a4"
        },
        "item": {
          "id": "17a1abbe-f803-4030-a3a8-19fd7a70dda2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "56cc7809-a486-4ec2-b874-78a8d9d619e2",
          "status": "OK",
          "code": 200,
          "responseTime": 455,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "aa1d80f1-67b5-4b81-8199-65cda08a962e",
        "cursor": {
          "ref": "9dd1724e-4ba4-4154-ab4e-c164ff76e7cd",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "308a4bca-a1c0-4cc9-a001-eb2bdd3b296f"
        },
        "item": {
          "id": "aa1d80f1-67b5-4b81-8199-65cda08a962e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b9de5b1f-4bf3-4628-b9dd-02cbfd5a0085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ae012c-3b50-4a76-b972-a1bdb86da77a",
        "cursor": {
          "ref": "3a0aba3a-0959-47da-a970-e6a494f1bc38",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0279c9e9-fb15-4b9a-a908-d943ad66f515"
        },
        "item": {
          "id": "e4ae012c-3b50-4a76-b972-a1bdb86da77a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bca1bf4b-d3a6-4587-9365-bfded56a61ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3474e3-40bc-4e26-8cfd-ce96b2e2e0ce",
        "cursor": {
          "ref": "ccaa5617-12d9-4dfd-9ac0-f89db60c8c09",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d9cee136-702a-4a5f-b468-a780e0c756a2"
        },
        "item": {
          "id": "1e3474e3-40bc-4e26-8cfd-ce96b2e2e0ce",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c0037f02-086a-4ea6-b99b-2b80a6289940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca383fa-0e1a-42fd-b0fb-0621ac3baa68",
        "cursor": {
          "ref": "d1e7312d-0305-4b29-9744-02391d88a638",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6c09dfdb-d70a-4855-b150-c7450ea5fcc0"
        },
        "item": {
          "id": "bca383fa-0e1a-42fd-b0fb-0621ac3baa68",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "12e1b33f-984c-4389-bc4a-c678642d14d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9e2588-7c33-4c0b-838d-1304317e7dfc",
        "cursor": {
          "ref": "d21ab728-25c3-4e4b-814b-687f5281a339",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "adf331ef-dc8e-45a3-9e3e-d9a6245f9606"
        },
        "item": {
          "id": "4a9e2588-7c33-4c0b-838d-1304317e7dfc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0014eba9-3780-46cd-a6b5-fe59eecb6808",
          "status": "OK",
          "code": 200,
          "responseTime": 409,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "6bebbd36-174b-44d4-8030-721e162258f6",
        "cursor": {
          "ref": "2d540c8b-c7ba-49dd-ac8a-7d18a4b2c554",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9181e13d-a99c-4829-b1a7-c68987ee9a4a"
        },
        "item": {
          "id": "6bebbd36-174b-44d4-8030-721e162258f6",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "ad676c58-df51-4958-999d-eacb71a93ab4",
          "status": "OK",
          "code": 200,
          "responseTime": 1956,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "dabf87d2-0078-4f8e-aab3-503f74480a4e",
        "cursor": {
          "ref": "86aadbbb-4517-4130-a7f1-1d2536d50f47",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cba9ed3e-9cd5-4a08-a0f7-8fe8fc8db4be"
        },
        "item": {
          "id": "dabf87d2-0078-4f8e-aab3-503f74480a4e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1f187107-647d-463d-820b-31086db7c6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1dbb1b-4163-4941-bde7-5eafe2f923ad",
        "cursor": {
          "ref": "bbf50f79-8060-4fef-b56a-2c3a269c89e5",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "74a6fee0-2da5-4b50-b0b4-3469565b166c"
        },
        "item": {
          "id": "fa1dbb1b-4163-4941-bde7-5eafe2f923ad",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a0a51643-73b8-4831-b8b2-f7d78965f3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466f1cb7-b998-4ea6-bc01-880b8524e0d7",
        "cursor": {
          "ref": "44fd0666-0bf2-439c-bd09-64cf34a98af5",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9d88765a-a0d4-4b5d-95d7-4a8615d86e4b"
        },
        "item": {
          "id": "466f1cb7-b998-4ea6-bc01-880b8524e0d7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fa7a1833-389a-4914-9ac7-f73734435d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84ed66c-79f8-4c4b-87b4-7cf90835a49a",
        "cursor": {
          "ref": "d80a3c98-2ff0-4620-a0d9-37a27ab6f974",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "16137208-13cd-4ed3-9390-f70b0b2567de"
        },
        "item": {
          "id": "b84ed66c-79f8-4c4b-87b4-7cf90835a49a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0d2f443a-d21b-4cd8-8b6d-81a284adecdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7ea1a1-d156-4579-981a-dd7889ec282d",
        "cursor": {
          "ref": "75caf831-40fd-4f01-8e82-2111a834837f",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "52d21612-89ed-412b-97d7-0bf974dba742"
        },
        "item": {
          "id": "1d7ea1a1-d156-4579-981a-dd7889ec282d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9bea78b5-d18d-4cdb-ad5c-4b77507baa0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33a17e5-ea72-40da-a79f-d1b751767fdf",
        "cursor": {
          "ref": "22370200-7566-452b-ba62-251039d89d19",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e29de53c-515a-431b-89f5-eb1a9c53e762"
        },
        "item": {
          "id": "a33a17e5-ea72-40da-a79f-d1b751767fdf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1680b371-b92c-429c-8881-e46ac2201be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1121,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f2adb9-6d01-466c-b86b-38496b2f9792",
        "cursor": {
          "ref": "ceda99c7-510a-42d3-a86c-91389c82e62e",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fcffd5ff-5abf-4f2f-ade5-176cdcc23a3f"
        },
        "item": {
          "id": "72f2adb9-6d01-466c-b86b-38496b2f9792",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e7974881-2754-40f7-a82d-f99c3fa84003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1281,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146ef4e0-b942-4082-8449-0f12aaf8c71d",
        "cursor": {
          "ref": "bf223788-3d96-4f56-9e7a-c53f0a7cdb8a",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "151cef53-8c95-44a3-9f8b-2763a9f9ea12"
        },
        "item": {
          "id": "146ef4e0-b942-4082-8449-0f12aaf8c71d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "49d8ba3b-f9e8-4062-a909-9ad8787a7d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d86888-9fef-4e89-a084-40ca6ce41921",
        "cursor": {
          "ref": "56fd7156-7a64-44fb-bca8-85b17c24f7ad",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f8aa597c-e3d9-406e-b6ae-956fb7f0b3be"
        },
        "item": {
          "id": "01d86888-9fef-4e89-a084-40ca6ce41921",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f279cf54-f19e-41b1-b1a4-1c9d1b698955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1074,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d59827-df95-4c02-a18a-0d7c3869f533",
        "cursor": {
          "ref": "41e7990e-ebe2-45a2-9bfd-ecb222fde6c4",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "12c5fdca-879f-4922-8e3c-e5a537bcb3bb"
        },
        "item": {
          "id": "91d59827-df95-4c02-a18a-0d7c3869f533",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d30c6b1f-0706-4042-9676-c7e1ded7c603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef3b1dd-15f7-4e77-b24e-995e85051f50",
        "cursor": {
          "ref": "d5f25e9f-eade-44d5-afc2-0504842bb060",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8fffdc37-57bc-4417-abf5-33b2f6c3ebfa"
        },
        "item": {
          "id": "9ef3b1dd-15f7-4e77-b24e-995e85051f50",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3b27b819-58ca-4e09-b684-f48652bcfd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cc2187-7ac5-4455-8986-781b8684d0ce",
        "cursor": {
          "ref": "4f71b445-a41e-452b-9609-047131037c4f",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7525c539-e86f-43bc-8d18-eb9e9945bb9a"
        },
        "item": {
          "id": "c3cc2187-7ac5-4455-8986-781b8684d0ce",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6dddc3a8-0ba9-4f31-98e7-8acae65e27a7",
          "status": "OK",
          "code": 200,
          "responseTime": 459,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "7f0e61ac-6769-41c5-870b-a68bc010f7c4",
        "cursor": {
          "ref": "9b440989-acb3-4ed1-9c8b-d221d2582bec",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b9a91ba2-05dc-4122-9d1d-ebc88eebe942"
        },
        "item": {
          "id": "7f0e61ac-6769-41c5-870b-a68bc010f7c4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b4258d2a-d536-4417-9fc6-5b3b0a67314a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938df914-e6eb-45ed-b526-39f959d34ddb",
        "cursor": {
          "ref": "08c721cb-5f65-4914-93a2-cdd11aae4407",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "11a29158-e767-48ce-8362-f36fa6e93cfe"
        },
        "item": {
          "id": "938df914-e6eb-45ed-b526-39f959d34ddb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "55b4ef39-65de-4c75-8024-8c74217b7402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e852029c-908b-43ab-ad55-327eb9e3b641",
        "cursor": {
          "ref": "022e4657-bc3e-4f7f-868d-7f9629b0388d",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9cd74f17-bc5b-4d20-922a-a2fa270e95c1"
        },
        "item": {
          "id": "e852029c-908b-43ab-ad55-327eb9e3b641",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5d4da146-65e1-4a12-93c3-9be1a6ce3303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a862d2bf-a426-40b5-8f29-5c698a244482",
        "cursor": {
          "ref": "c38bd50e-1938-4fc9-845d-d747c0c0dc66",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bb22a47a-9d10-4e6e-9480-bdc32d78643c"
        },
        "item": {
          "id": "a862d2bf-a426-40b5-8f29-5c698a244482",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "49bc16c6-9ed2-476e-b119-ab11a9b345a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bb5b0c-61f2-4928-bfd5-055c363e0b76",
        "cursor": {
          "ref": "7d7a72db-3a5c-4e1b-93a9-efc1c9f46f66",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9ade8e23-874e-4e3f-9ca9-d73eb2398030"
        },
        "item": {
          "id": "42bb5b0c-61f2-4928-bfd5-055c363e0b76",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f00960eb-3de0-4852-885b-3071e90a42ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c979e813-b42d-4915-a492-5dfe80273e5f",
        "cursor": {
          "ref": "1e00aa05-92eb-4d7d-8802-8bfb4bfe969b",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "be1ec4cc-8ec8-460b-b6b2-9072cb88542c"
        },
        "item": {
          "id": "c979e813-b42d-4915-a492-5dfe80273e5f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "52bcd30e-97fd-43a1-857c-aae226aa44bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87932262-6d6f-442f-b022-0498c1194ce8",
        "cursor": {
          "ref": "f8c5416e-9305-4838-b027-efb9f9d8df77",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "17656484-3f56-4ff2-b7aa-5586cf20f555"
        },
        "item": {
          "id": "87932262-6d6f-442f-b022-0498c1194ce8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c63d489d-0881-47ab-a56e-09a1b59bd48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d58b07-e691-4752-9dd9-20f57ce5eacb",
        "cursor": {
          "ref": "e6c67fb2-346a-429a-b3eb-35efdf26f291",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "02e58db1-ec09-4828-a5f3-e54ff775b7cc"
        },
        "item": {
          "id": "a4d58b07-e691-4752-9dd9-20f57ce5eacb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6a7734ab-7ded-43ff-b167-f9811b97c6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581faccb-3763-4088-8ee9-7d0b305f06fb",
        "cursor": {
          "ref": "c52aa70d-41cb-406a-af7f-91b12c42183e",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b836836c-9992-48eb-a50c-d954b5721280"
        },
        "item": {
          "id": "581faccb-3763-4088-8ee9-7d0b305f06fb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fc7fcd7f-8a4b-4325-b9f4-5d09535b632b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72209d61-d2d9-44c4-a193-e20454ec0dce",
        "cursor": {
          "ref": "14c3e540-46dd-48a6-bbff-159b93a7a0b9",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "974ce2bf-bfd7-4c07-8870-f3d57a689761"
        },
        "item": {
          "id": "72209d61-d2d9-44c4-a193-e20454ec0dce",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1004737f-5356-414f-93dc-c3ea92f41cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff8379a-0a3e-4394-8ead-8c82a6bcbbd4",
        "cursor": {
          "ref": "b2d8347f-3dee-4797-8aa9-2f168bb21550",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "647d901a-fa8d-4dce-ba95-ef77049adb55"
        },
        "item": {
          "id": "2ff8379a-0a3e-4394-8ead-8c82a6bcbbd4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dd0138c1-ffd7-4b58-92de-2e71112cd162",
          "status": "OK",
          "code": 200,
          "responseTime": 347,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "1df8c4b2-f230-4539-bff1-09ac255e8b8f",
        "cursor": {
          "ref": "a8cc7b03-db39-4196-9903-f4c6db9ac8f7",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7e275238-1b98-481e-b0c2-9994bce07d89"
        },
        "item": {
          "id": "1df8c4b2-f230-4539-bff1-09ac255e8b8f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "74989f26-b6df-4ec5-bd74-ee1a0f5fbfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65449598-a221-48f7-9674-630d8edc9a89",
        "cursor": {
          "ref": "58a55122-801f-4056-a201-0d871fbf2fd8",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4ef376c1-c9f5-4e46-978e-ee0ca4ffc782"
        },
        "item": {
          "id": "65449598-a221-48f7-9674-630d8edc9a89",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7cb287c9-e01a-411f-a170-f81e5d9bd831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b540070b-4cc9-45da-93f0-c7df71920dbe",
        "cursor": {
          "ref": "c196c349-f9fc-4fd2-b404-547dc90e57cc",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f0f7e71d-94d6-4bb1-a1bf-cc66b6643f1f"
        },
        "item": {
          "id": "b540070b-4cc9-45da-93f0-c7df71920dbe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1f368ac0-ca2d-48ca-abc0-1f86422ba04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1210,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ada210-d702-4546-858c-8906cdb4960e",
        "cursor": {
          "ref": "cb7bc1f6-2379-4534-92fc-a0e47ecbae0f",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4737866d-7406-4078-87bd-8f27e3f689f2"
        },
        "item": {
          "id": "e6ada210-d702-4546-858c-8906cdb4960e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "35735526-46b7-4b67-909b-bd91bb2a0d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1013,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14b0bfc-a5e1-4c75-ab96-e42048cd7d49",
        "cursor": {
          "ref": "81322aaa-c2e4-4c0f-baa7-13d4297297be",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c6b589cd-a34f-4c83-a09a-36751e33564b"
        },
        "item": {
          "id": "b14b0bfc-a5e1-4c75-ab96-e42048cd7d49",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "da01529e-7b01-4e78-b75b-c368d7f28803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1288,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adb14d0-e21c-475b-8197-e22c2a9a6782",
        "cursor": {
          "ref": "ffdf3ad1-66e7-4779-8391-ed2642b7ba88",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9356e494-4917-4763-88e4-e71ce766e968"
        },
        "item": {
          "id": "4adb14d0-e21c-475b-8197-e22c2a9a6782",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3e954c8e-1237-43a3-b496-0f3994fe8cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1209,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8890a869-3075-42b8-bd01-888df022e956",
        "cursor": {
          "ref": "09dcdcc3-1881-497f-8669-83cc19f40c4e",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "60c63075-d358-4035-8571-9231decfae5c"
        },
        "item": {
          "id": "8890a869-3075-42b8-bd01-888df022e956",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "389db3c5-5727-4012-b530-f1ab6e45d684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 995,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e24df72-5683-4df1-9691-0e5308e6f5be",
        "cursor": {
          "ref": "4fe16d94-3482-44c0-a058-fe5af564a073",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2caae65c-ba39-4030-9ca0-4fb7859a2bb7"
        },
        "item": {
          "id": "3e24df72-5683-4df1-9691-0e5308e6f5be",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6bde149f-8543-450d-ae3b-8dca82e31faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7772ded5-0d81-4c29-ab3b-9ccd7815fad0",
        "cursor": {
          "ref": "644bb4f3-58d6-42fc-8c8e-accdbca0d03f",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2e3bfaeb-c9fc-48d7-836a-edd1eee6ae7e"
        },
        "item": {
          "id": "7772ded5-0d81-4c29-ab3b-9ccd7815fad0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "494c173c-a141-45d1-bc74-2ec524bc8f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a4701f-253d-4086-ae46-db6c65462e4e",
        "cursor": {
          "ref": "de487119-9748-40cf-b761-28c067716080",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "65ab6e86-011c-467e-a5b2-f52a7fc85b9c"
        },
        "item": {
          "id": "37a4701f-253d-4086-ae46-db6c65462e4e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e1fe0b97-6f7b-4a31-9e72-ecb75ba5b8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6edfbe-22fc-43a6-9a8e-fcc14cce592c",
        "cursor": {
          "ref": "8b956ccd-242c-4cfa-9deb-ae644d5875f3",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b3cf1736-f9ae-4c19-a350-d2bf44298e05"
        },
        "item": {
          "id": "3d6edfbe-22fc-43a6-9a8e-fcc14cce592c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dab9ad4f-b09e-4f15-87dc-e801a49f671b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0bf1e6-5d02-40f7-892d-7891c4ab124e",
        "cursor": {
          "ref": "2fc42344-e059-4f9b-8817-6f700487c1b8",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "df2b792c-9ade-461d-a91d-e64ef3c56b94"
        },
        "item": {
          "id": "6d0bf1e6-5d02-40f7-892d-7891c4ab124e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1e94c147-9e7f-4fc5-91ce-8059ad228746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d95995-b169-4483-b0b8-65b5a28f5823",
        "cursor": {
          "ref": "1a934476-5419-463b-94a9-3f7bb71e62ec",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "442b83e1-cfe4-4388-a697-4a9d30e6a98a"
        },
        "item": {
          "id": "89d95995-b169-4483-b0b8-65b5a28f5823",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "271a93ff-e9db-47af-b293-8693e7373920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc66fb8d-7e8d-4f44-a4ab-7a1c209fae41",
        "cursor": {
          "ref": "2494c255-01d9-4c50-a12a-42dddf1d4291",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c867d136-4620-4058-81e4-6c71e4a76ef0"
        },
        "item": {
          "id": "bc66fb8d-7e8d-4f44-a4ab-7a1c209fae41",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1fbabb27-bf7f-45d4-bcd8-401b6426f1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf346e3-88df-4c8b-9dd5-2f89ca4d7815",
        "cursor": {
          "ref": "8e41e403-8ad4-4de7-9e69-97abaa9e3a86",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "69d8c7f8-970d-4fec-8255-44195e541c83"
        },
        "item": {
          "id": "bdf346e3-88df-4c8b-9dd5-2f89ca4d7815",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "13f85727-8e17-4855-984a-94df7c0e201d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e27d98-5bb1-45a2-8b49-d5283427c6f1",
        "cursor": {
          "ref": "2705aaa5-365e-4eff-a7fe-24c8ac60939e",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "499311bf-22eb-4341-a348-00782a798d2d"
        },
        "item": {
          "id": "55e27d98-5bb1-45a2-8b49-d5283427c6f1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b00ab6d5-62b3-4596-9fad-2a3d878c9313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787882bd-152c-4e01-a7b5-31e3a77b8122",
        "cursor": {
          "ref": "eb60de44-569d-4a13-91a3-17187a0e7ed4",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0c698c41-7883-4bbc-9ed7-0f2c3a4284c4"
        },
        "item": {
          "id": "787882bd-152c-4e01-a7b5-31e3a77b8122",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "821fffd6-3b6b-4b0c-b61b-7e69b7584c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da28809-b54d-4efc-b807-8f035a7a6968",
        "cursor": {
          "ref": "967c66b3-231f-4417-8c9d-6b1b79e9c474",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "63d9ebe1-71e2-4880-b333-4e5070370a81"
        },
        "item": {
          "id": "2da28809-b54d-4efc-b807-8f035a7a6968",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e25d7092-9bda-46a3-b886-5fc71f41220f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4af9dfc-f876-48c2-b33c-b566b79b97cc",
        "cursor": {
          "ref": "6176ddb8-086c-4e5e-ac48-6148aeb5755b",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0bd5820b-4c2c-4a53-a23c-fdc6f41ec70b"
        },
        "item": {
          "id": "e4af9dfc-f876-48c2-b33c-b566b79b97cc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e9dc657f-15b7-4d75-96fb-910d28e4a3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f378ce5c-641e-4b49-a037-a436fb86ba3d",
        "cursor": {
          "ref": "3ff7b4bd-7cf7-4e99-8364-01c47492c353",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0385ab2a-410f-466d-a475-77c2b4f2798a"
        },
        "item": {
          "id": "f378ce5c-641e-4b49-a037-a436fb86ba3d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b3aa186f-6342-4803-9cb1-303cf240e9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5be89a7-78ad-4297-bda2-864193b1bfd7",
        "cursor": {
          "ref": "61af3dd4-d326-42fe-a14b-dd48e417653e",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "57a345fd-8103-434f-96a6-52f573323d61"
        },
        "item": {
          "id": "d5be89a7-78ad-4297-bda2-864193b1bfd7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ff4decfa-8b27-422a-9e3a-61ccfdd027ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b51bcb-461c-462d-8915-0fafcf7a5ac8",
        "cursor": {
          "ref": "9166f685-cece-4ee4-b928-6ec62e8dedc4",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "46606982-0ab7-404f-8aaf-74b9d8209416"
        },
        "item": {
          "id": "68b51bcb-461c-462d-8915-0fafcf7a5ac8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d5e31cdb-e4c4-474c-9272-29dc0516aa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052b0c82-5b97-47ac-84dc-d5be8287610f",
        "cursor": {
          "ref": "e80605e8-2b16-4cae-aee4-ee11c7c97010",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "29596062-3f4d-4041-bd65-69a4c8e3253f"
        },
        "item": {
          "id": "052b0c82-5b97-47ac-84dc-d5be8287610f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f0c1e63f-8e4f-4388-b06a-5f5058dd0e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f39a1d-15d1-425f-bf82-afd05850983d",
        "cursor": {
          "ref": "44394c94-960e-40e1-8395-f56b0401f470",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3c656660-ba7e-4936-8744-7b4d85e8db89"
        },
        "item": {
          "id": "35f39a1d-15d1-425f-bf82-afd05850983d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6f38fa04-29e3-43ca-8ec9-b73335eb2d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513f4cef-379b-44e0-aebd-8d67b8d8f438",
        "cursor": {
          "ref": "8f0592b8-9678-4a35-8745-613c31162fd3",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e80ed194-ea75-4828-9075-e357356d9491"
        },
        "item": {
          "id": "513f4cef-379b-44e0-aebd-8d67b8d8f438",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "660e36f1-33d8-4cb3-aca4-d8896701a649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba6863f-5ea9-48e4-8e15-84ffd6cebd76",
        "cursor": {
          "ref": "79953d38-4ccb-4a32-8c6b-0e9fa1b5bdef",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f42f2078-416b-44f0-9a7e-55012affbb24"
        },
        "item": {
          "id": "5ba6863f-5ea9-48e4-8e15-84ffd6cebd76",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e1ec75a7-0386-416f-a05c-c5b7bc052b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02b03ef-8ad4-4706-bf88-29e41531a244",
        "cursor": {
          "ref": "41f21c0d-d769-4b43-a837-5eb2356826e3",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ed06f88b-4dca-43ff-9179-b5012842a61a"
        },
        "item": {
          "id": "c02b03ef-8ad4-4706-bf88-29e41531a244",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2046aa0b-8081-408c-bc62-fdcb86fd0eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8539bf1-3e68-451b-80b6-9d3fa6b3cc8a",
        "cursor": {
          "ref": "05a9b5fe-24bd-45f9-9d63-d1955ac9120e",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5a63d925-ac0d-4e7d-b488-6d5ffb1c7455"
        },
        "item": {
          "id": "d8539bf1-3e68-451b-80b6-9d3fa6b3cc8a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fc28490e-e8b6-4f24-8ce2-edaabff07c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7acf338-b858-49e9-b66f-2dd9876423b2",
        "cursor": {
          "ref": "d05484c1-3665-4822-9d6b-0c125f16ff40",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dbbb5a15-f29b-41be-9156-3bb15da85b75"
        },
        "item": {
          "id": "d7acf338-b858-49e9-b66f-2dd9876423b2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1603e78f-2760-4a50-8648-03d7134f3b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b4be4f-1192-46e0-99b6-af7133e673d5",
        "cursor": {
          "ref": "9d3fb8c4-ffe2-4e6a-9864-ebd561049e30",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "45d5c664-f985-4d6c-82bc-765c51bba9f2"
        },
        "item": {
          "id": "c3b4be4f-1192-46e0-99b6-af7133e673d5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b928d36c-bd8e-441d-8b3c-216c352a11bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b3d636-c8eb-4c67-b685-682fa3af3ba5",
        "cursor": {
          "ref": "fde611ae-2053-4c83-96f5-55092a8ff728",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c60605db-f18d-4733-8255-3700ca871377"
        },
        "item": {
          "id": "39b3d636-c8eb-4c67-b685-682fa3af3ba5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "037f7c52-f609-4faf-a8dc-a6aa32804cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75211b7-13e5-43fa-bbad-bb5da6f4a1d1",
        "cursor": {
          "ref": "6f0db0fa-a43c-4b43-ba5c-1b171896951b",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1ecc8175-afa0-4f8f-98f4-6de9347250bf"
        },
        "item": {
          "id": "b75211b7-13e5-43fa-bbad-bb5da6f4a1d1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8cd527e3-9105-40f3-9df8-62c3fb579960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e09695-47df-487b-9c11-29a5343823bd",
        "cursor": {
          "ref": "bcd4d175-e985-46c6-8817-1cde0db8a739",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "31f00de8-745b-429d-acd1-6c2580c0d7b2"
        },
        "item": {
          "id": "b6e09695-47df-487b-9c11-29a5343823bd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "acdc0cda-17c2-4e32-8bbf-bc0532cd439f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c779bfe-a849-4447-a506-206e3a5f718c",
        "cursor": {
          "ref": "7f1f21fe-d8cd-482a-bc83-ff17fd0b1816",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "33980d60-5b8d-4a25-b1aa-fdebb70e8ced"
        },
        "item": {
          "id": "9c779bfe-a849-4447-a506-206e3a5f718c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8497ae06-44cc-4cc6-b68e-7a88cdc0d04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a97644-8993-4441-9b62-a91cb0ee822f",
        "cursor": {
          "ref": "64d2faf1-ee07-4d8d-924a-86271ca9c82c",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "01c40447-9916-4fad-9728-23db98eb6512"
        },
        "item": {
          "id": "29a97644-8993-4441-9b62-a91cb0ee822f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "391ca18a-567d-4e06-93d4-4e47125a1e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9f7b05-1592-4838-a687-dc60b199f32e",
        "cursor": {
          "ref": "6bbf167b-5f10-4d97-bde1-095ed4f9d905",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "63b278a1-2697-447a-80be-4ed3ccfa5247"
        },
        "item": {
          "id": "ab9f7b05-1592-4838-a687-dc60b199f32e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8c1e004f-beeb-4c41-8150-6716709d5072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193353aa-c572-4a4b-a62b-9ba2d346c211",
        "cursor": {
          "ref": "c2fe899a-b4d3-4311-bdb2-a20564430c87",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ea2afb08-ae6a-404e-937c-9c5fb9516100"
        },
        "item": {
          "id": "193353aa-c572-4a4b-a62b-9ba2d346c211",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6b81f872-1d9a-4cc3-9bb7-bda89bfcd466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f657bd-f800-4efb-bd31-658d7311248f",
        "cursor": {
          "ref": "4c7cb24f-ab2e-4de2-93d2-c18652fa7060",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "35b69d5a-8fd3-49fa-831a-e0dd6a74f890"
        },
        "item": {
          "id": "51f657bd-f800-4efb-bd31-658d7311248f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "487b1101-c4d0-4700-ac73-a840612ba18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbda584-9c5c-4628-ba95-2e0774719a8b",
        "cursor": {
          "ref": "844ba70f-2813-4f6b-9ba5-e4fc6300c268",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b9875679-9a1e-4aed-ac4a-fd629bc1aa5a"
        },
        "item": {
          "id": "abbda584-9c5c-4628-ba95-2e0774719a8b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f2b01db0-ff09-449f-a475-4cb2bc321509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93966992-7aef-44bd-a972-5415a0a67516",
        "cursor": {
          "ref": "4a20fa66-73d7-4e87-8471-9e293ffbccd0",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e280c468-b1d3-418e-a865-24df9b190244"
        },
        "item": {
          "id": "93966992-7aef-44bd-a972-5415a0a67516",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0ed79f9b-bc34-47e3-8785-7409c20742e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d00bb7e-0cbb-4bf8-a57b-1fa8e6220e4c",
        "cursor": {
          "ref": "a406abe7-3cc0-428f-adf0-03fc28672fd6",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ebb084e0-caee-4773-ba09-c3f5c2b1d030"
        },
        "item": {
          "id": "0d00bb7e-0cbb-4bf8-a57b-1fa8e6220e4c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "35a8fb66-49b8-48ab-b82e-d8931c2ba9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3028af-1c03-48a2-9a6b-324348315d36",
        "cursor": {
          "ref": "f49a5865-28a4-482d-b33f-b45b1253d364",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2d16c8b7-ba31-4072-b5eb-5f6a559dea59"
        },
        "item": {
          "id": "5c3028af-1c03-48a2-9a6b-324348315d36",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a621a7ba-5a65-4cb4-a4b1-c7a7ca6feca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205a8702-6df6-4ed2-b392-c58012d59021",
        "cursor": {
          "ref": "0982455d-6b23-4ebe-ae07-7851c24812f6",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "755562e4-2c12-4a32-878d-270ce39b448a"
        },
        "item": {
          "id": "205a8702-6df6-4ed2-b392-c58012d59021",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "49b99bb1-3309-43a0-b01e-070a2d59462b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d07309-9a35-4ef9-8536-4c807480a2f6",
        "cursor": {
          "ref": "e6ea5c32-9b81-442b-99f6-5a490569740f",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "740180a2-0665-470e-ac8e-cd32ba2b24e3"
        },
        "item": {
          "id": "60d07309-9a35-4ef9-8536-4c807480a2f6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bd537caf-75a6-4651-aac3-ed2a996df519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9582e1e8-410a-441a-8782-ce7d99e5aca5",
        "cursor": {
          "ref": "020b2645-d1d4-404c-9e49-5c65ed1b64f1",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d474f799-e42e-435d-ad2c-ebe46224c854"
        },
        "item": {
          "id": "9582e1e8-410a-441a-8782-ce7d99e5aca5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dd890100-b1ce-40ee-ae02-dfe35b2dc46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1226aeb7-a2d1-4d16-9761-759186e1b7a7",
        "cursor": {
          "ref": "e16400a4-e6d0-461f-8b1f-da2a42fd1348",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "de7e9e93-4260-4869-804a-cf881c9ca6c9"
        },
        "item": {
          "id": "1226aeb7-a2d1-4d16-9761-759186e1b7a7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cce1a9ae-2916-4e35-bcf9-a2654c28a114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7eeb76-91b6-4310-ae73-84fce0c4fd3e",
        "cursor": {
          "ref": "7d751b04-68c6-43c7-b450-8a4e82c7e317",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8ec49967-c1c2-4d8e-b667-705c23801d6e"
        },
        "item": {
          "id": "2c7eeb76-91b6-4310-ae73-84fce0c4fd3e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e5e8502d-1277-4cd7-8a98-e48e8f0b23fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f29f8a8-1b28-4920-9c1d-6c9edb3e6e0b",
        "cursor": {
          "ref": "c034c144-c76b-40aa-a84c-2e010ed0cac6",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d0573a17-5248-4d1b-ab81-ebac535cdaa2"
        },
        "item": {
          "id": "7f29f8a8-1b28-4920-9c1d-6c9edb3e6e0b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "edba2ec1-fb5e-4d49-bcb4-aecfe27503ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078bb036-772a-411d-bba1-a8b9dfef15ab",
        "cursor": {
          "ref": "dab4c574-6a2f-40c1-baae-c7cba5e281fe",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0276b21c-8977-4629-bb6c-945968b6f9f6"
        },
        "item": {
          "id": "078bb036-772a-411d-bba1-a8b9dfef15ab",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fbdf7fdf-f897-48d4-9cb6-558521714771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee14ab3e-bbf5-4db5-afb9-f13192ff1108",
        "cursor": {
          "ref": "d4514c1c-10b8-4318-889f-3a1ae2db46a5",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "588f18ac-09e9-469e-9f52-dd529b8adc41"
        },
        "item": {
          "id": "ee14ab3e-bbf5-4db5-afb9-f13192ff1108",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c8acbac4-241f-40a7-b78a-ae1261ffc63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedb8f49-e038-4e12-9fd2-87f2102fd2e1",
        "cursor": {
          "ref": "3664c4c1-2b2b-41a5-b82d-1e688da16dbc",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b2348c81-eb7b-4486-b9ea-f0849f241151"
        },
        "item": {
          "id": "cedb8f49-e038-4e12-9fd2-87f2102fd2e1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4987f08b-1a79-426b-bc8e-d76f9da10118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73259e9a-b1e5-41fd-b512-624ba7881ee7",
        "cursor": {
          "ref": "2aa1944e-2fad-4b5e-bfbf-f48d934df3b1",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "357e1ebb-0353-49b9-9f9b-a327fb702153"
        },
        "item": {
          "id": "73259e9a-b1e5-41fd-b512-624ba7881ee7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5b755058-4080-4472-864e-27a33f0338ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699c98ea-eb3e-4300-b67c-399df6bac74d",
        "cursor": {
          "ref": "8419533b-3004-43ab-9adf-60936c3a0954",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3744b63c-d68d-4316-b847-c4be9b07d1f2"
        },
        "item": {
          "id": "699c98ea-eb3e-4300-b67c-399df6bac74d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ec861fe7-b7e4-466c-adb3-16c6529941b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51332f8e-f5cb-432a-96cf-25bd5014bdb6",
        "cursor": {
          "ref": "376d2e9f-6db6-4246-ba8d-716cb7a65e00",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b358e75b-6995-408a-8277-8308ee839d4d"
        },
        "item": {
          "id": "51332f8e-f5cb-432a-96cf-25bd5014bdb6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7d5c3d02-1a9d-432a-809f-d22b2358cb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4d9d06-720c-4aeb-bac8-18fd8a3ef869",
        "cursor": {
          "ref": "5c560216-e10c-434e-914c-c29ae0c336ee",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "91a62327-c175-4e30-822f-d48becf9043e"
        },
        "item": {
          "id": "3f4d9d06-720c-4aeb-bac8-18fd8a3ef869",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "12d757d6-d3d4-4667-a0cf-f9c2187233da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566a28e0-0888-4332-94ba-3ebffd844d67",
        "cursor": {
          "ref": "2cfc5799-5658-428c-9ec9-c49f8bee98a9",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "563ff19e-5823-4cb8-a3a3-7a08131a4a34"
        },
        "item": {
          "id": "566a28e0-0888-4332-94ba-3ebffd844d67",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d46b779d-6af5-4766-9696-b79ac0279f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb79149-1201-42a6-96d2-ba7f6d6ffdcc",
        "cursor": {
          "ref": "65a83a5a-8f72-46eb-8eea-58185d4dc896",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "81d08884-60c0-4e52-a08b-c5b496612b32"
        },
        "item": {
          "id": "acb79149-1201-42a6-96d2-ba7f6d6ffdcc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "85b7c9ee-8bef-40a9-8ffc-1022e85ac407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b67973-162b-4c35-9eec-c33413032eff",
        "cursor": {
          "ref": "a731f781-5b14-40b9-9c34-c3ecee935796",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "68fe2b68-e495-4ff8-8702-6999f0f800c8"
        },
        "item": {
          "id": "76b67973-162b-4c35-9eec-c33413032eff",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e057cd3a-7391-44be-b54e-4d5ab76ef69f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ce2481-b68e-46f2-84f6-a94c5b7ce759",
        "cursor": {
          "ref": "ec7f2ced-ff27-4b4a-97d3-2e8692dc07b6",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "31a92642-b1a2-4f50-b1df-57f7a47479ce"
        },
        "item": {
          "id": "b2ce2481-b68e-46f2-84f6-a94c5b7ce759",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0708b18e-5d8a-4b23-ad4a-4aace03f3f6d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 362,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9ecc9a-c835-4b27-8edb-a14113ddda49",
        "cursor": {
          "ref": "078be8e0-f39c-4786-b4a9-bcc30bc83cdb",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1e760399-d82f-4ba3-9413-3d68baf4fbd2"
        },
        "item": {
          "id": "ff9ecc9a-c835-4b27-8edb-a14113ddda49",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "947c06d7-d907-46c0-b175-f7191e54966f",
          "status": "OK",
          "code": 200,
          "responseTime": 459,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a2d860-d8e9-4f52-a05e-49ff9f1eaa51",
        "cursor": {
          "ref": "071c61ce-bd12-423d-b65c-78d017facebb",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "19f915dc-ab2d-4563-a2eb-5aceec846b2c"
        },
        "item": {
          "id": "b0a2d860-d8e9-4f52-a05e-49ff9f1eaa51",
          "name": "credentials_verify"
        },
        "response": {
          "id": "24256fff-c7c1-4e65-ad71-c85757b62f55",
          "status": "OK",
          "code": 200,
          "responseTime": 2143,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "616b8720-c16b-496b-a1a4-9748f3fabf7a",
        "cursor": {
          "ref": "7bb8ba59-c6ba-4b0f-b52e-53ad020265c4",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b33e74ac-b0e6-4d21-b88d-567704829ae4"
        },
        "item": {
          "id": "616b8720-c16b-496b-a1a4-9748f3fabf7a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2ac1bd75-8460-4af7-ae93-2e11931abb91",
          "status": "OK",
          "code": 200,
          "responseTime": 1809,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "314790a9-6089-460f-8fae-bb365ef5e63f",
        "cursor": {
          "ref": "96f523ef-087d-4f1a-8339-f33dfd2c3150",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d809846-c02e-4869-aac6-5530b3a2f44a"
        },
        "item": {
          "id": "314790a9-6089-460f-8fae-bb365ef5e63f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6688947f-310a-4d10-a6f0-acbba0d91f6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314790a9-6089-460f-8fae-bb365ef5e63f",
        "cursor": {
          "ref": "96f523ef-087d-4f1a-8339-f33dfd2c3150",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d809846-c02e-4869-aac6-5530b3a2f44a"
        },
        "item": {
          "id": "314790a9-6089-460f-8fae-bb365ef5e63f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6688947f-310a-4d10-a6f0-acbba0d91f6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314790a9-6089-460f-8fae-bb365ef5e63f",
        "cursor": {
          "ref": "96f523ef-087d-4f1a-8339-f33dfd2c3150",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d809846-c02e-4869-aac6-5530b3a2f44a"
        },
        "item": {
          "id": "314790a9-6089-460f-8fae-bb365ef5e63f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6688947f-310a-4d10-a6f0-acbba0d91f6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887b7552-ef8c-4f3a-bf7a-73ffb6d22fb4",
        "cursor": {
          "ref": "81a3d1fe-26f7-46eb-aabe-ff68f6c504fa",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "496ed782-1d90-4f48-9c31-8d816cc5cf4b"
        },
        "item": {
          "id": "887b7552-ef8c-4f3a-bf7a-73ffb6d22fb4",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "aa9ff713-dce3-4fd4-9f3c-d1b0c29ce4c6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 339,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1862fc6f-ee32-46dc-a0b7-1604b1966258",
        "cursor": {
          "ref": "24318f8f-e860-4500-95ae-f6c296fa7621",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d6062724-4ccf-47e1-bbf3-52037b5c428e"
        },
        "item": {
          "id": "1862fc6f-ee32-46dc-a0b7-1604b1966258",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ff1a2d94-7c4d-493a-b89f-cb9df69f49b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1862fc6f-ee32-46dc-a0b7-1604b1966258",
        "cursor": {
          "ref": "24318f8f-e860-4500-95ae-f6c296fa7621",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d6062724-4ccf-47e1-bbf3-52037b5c428e"
        },
        "item": {
          "id": "1862fc6f-ee32-46dc-a0b7-1604b1966258",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ff1a2d94-7c4d-493a-b89f-cb9df69f49b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6043c8-e391-4392-bc0e-b79313af434c",
        "cursor": {
          "ref": "e3d4abe1-4850-4ccd-94e5-d709dfd771ec",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e5684f53-992d-4c86-b457-e7e18c5c61a4"
        },
        "item": {
          "id": "0e6043c8-e391-4392-bc0e-b79313af434c",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "836d51d9-adb5-4db6-8274-374f0eeed746",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 585,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1d32d5-539f-4a03-9645-6b042d4b6f57",
        "cursor": {
          "ref": "8cc6a756-30c4-49b4-8888-9bcf421b5627",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "17963684-7508-4211-ab01-0d64376c6e00"
        },
        "item": {
          "id": "7c1d32d5-539f-4a03-9645-6b042d4b6f57",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f74bbd62-5d9f-4763-800c-a494fbb546a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1d32d5-539f-4a03-9645-6b042d4b6f57",
        "cursor": {
          "ref": "8cc6a756-30c4-49b4-8888-9bcf421b5627",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "17963684-7508-4211-ab01-0d64376c6e00"
        },
        "item": {
          "id": "7c1d32d5-539f-4a03-9645-6b042d4b6f57",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f74bbd62-5d9f-4763-800c-a494fbb546a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9687eea-680a-4a7a-9448-10b82590e48d",
        "cursor": {
          "ref": "d3904ad0-175e-49e9-9dd4-4bfce24bf22e",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0319d4eb-06bf-402b-8f84-593f4045b5ba"
        },
        "item": {
          "id": "f9687eea-680a-4a7a-9448-10b82590e48d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "a2258d92-3281-41e9-bdd8-d3a7b3d7f4fa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 593,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}