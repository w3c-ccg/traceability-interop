{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "24942699-685a-43c3-a613-0138846803f2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4bc35efc-2c35-47a7-90bd-600e118cc540",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1859564f-4b9a-42f6-a9b4-5b21d8c79e84",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3c95adee-94ad-4a39-9080-e1c3c88ee9e9"
                }
              }
            ]
          },
          {
            "id": "e2ad2afd-c0bf-43de-b20c-c3c54b990db3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b05b560c-bdec-4e60-b73d-af476c841a9c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4eaad964-e3bd-467d-a3f6-d83e1ef7d499"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "625f39af-16b3-490c-94a7-7d4cea53e28d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ca934127-88c0-4382-b4f1-e2fcba7fa9c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "04b04256-2eb9-49a5-955a-2e46f11e4567",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cbea760-a108-4170-8f73-d8fbe11ea785",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "157258bd-4737-4131-80fa-366a45a6ad1d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59a5e0ea-65da-4b9f-8d8f-2f5c799d7142",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38bcd8d4-4fb8-44a6-becf-bbd8ab4088ba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "16630b5e-f1b3-4602-84e9-a9e29a7229e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a8ec1e6-2d27-4d7b-b6a4-f8504c553c3b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f56fa66b-7ff1-48f1-a86d-16dfcd26f939",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ec2a337a-4b20-48a3-9f5d-3288b54f0fab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5acbb7a0-7557-45cb-9a11-e5d608ed558f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d7c7eb1-2b1b-42be-811f-4f42ee81094b"
            }
          }
        ]
      },
      {
        "id": "f7d51675-f64c-45a5-a912-7b439a123cc8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "df6c4933-1424-40a2-90bf-d9b25f27935c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c489375b-3078-43a2-8723-17cd3f9b718d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c5c0812-4de5-450e-a2b5-2a0f91724b8e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acf0287-1271-411c-a105-d45fcbf0af65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0cdebd0-f3af-4dbf-984a-dce2947fbf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c613702-ff0e-4162-941f-c8f575412ed9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbbfc08-04d1-4e0d-b7a8-3a286bc7a9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1b86887-6c70-4ee4-bedf-1a494b1d3926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a6f7c6-612f-4218-b9e9-d39007a3fd28",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2094df5f-5eea-4863-ba62-1ddb66ee3700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67e5e693-dc93-4eea-b584-0a7eb877c5e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "689214b5-aab8-45b1-b45c-5491b53067b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0aae88d0-88a0-4f05-8ff8-801c23936534",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2364bd-45f1-4743-9f07-d66538899a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8af2240-95ff-4e43-a0c3-2fb290ef9f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b5108c-d8c7-4065-b79c-2757bae2759b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d036bcc4-2be7-4ed6-94d2-9d976934a2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca192ba2-8f51-4102-91d3-da1687b33204",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f500411e-434f-4ac9-a707-12d5434b42fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "440a0b05-1415-4be0-bbe5-aa8639f7844c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a67537c-6553-42ba-a23a-97e806b799a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a6509dfb-3e5a-4ff6-b709-ccecd39c5fc1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e129ce81-7336-4fa0-aa82-96fa049053c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81ac9c73-f26f-4871-8b9e-25b790f36da3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7c30cf7-45a7-423d-b6e3-28ba6c9467f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8e1af835-4f92-4192-b077-4f3b469d2748"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc64a8bf-a93f-444f-a1c9-b52a130e8f47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "dd302781-7f87-4ad9-b70b-e7c5b52ccbda"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0b34b8f-4f0c-4fa0-b4f9-b992400ca4c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8da950ee-796f-49dc-92f3-98b94a681887"
            }
          }
        ]
      },
      {
        "id": "aebf8b31-aa38-48b9-a95d-995899b9ef7f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b8151a33-8a51-44ae-a8b3-329bed0236aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53071996-df71-411e-b81e-0e3d3c099de9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c53b0471-ecec-4d3e-add3-38de6c8825f1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad6b2e1-9081-49dd-9c8b-0a8253134e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d49191-a25a-4d60-b41d-c35a85282c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641263e4-4984-4ada-9b92-8ab61edfb061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dcea714-0870-405c-9a26-353f5ea0e503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e2ff22-4fbf-4814-8443-984dc4bf9c53",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcbb2dc-0ff5-4c8a-9189-782b206fbc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da81bacc-5975-4f72-a5b0-6d6bfbe670a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0db455-a3da-4501-a51e-ac591a3e0a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a7ee946-8217-44b8-856d-0748684cbb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fddfef-90c6-40f5-8b23-c9aa8b88cddf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eb94e2-1b35-4506-8dad-dd2598a460f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f744ce36-f5e2-44eb-8ddc-16a3dc4120a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16c27b1-f55c-4d93-bb60-1dfebef41bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f39ada44-5fac-411b-8a3c-f4ff9f81594e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c827bc98-8c4c-4f6b-9d5d-aa826617b710",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de8c612-ec92-426a-9e11-4768b16d741e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7115ca-bda1-4b23-ae71-47f80817b218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9a4668-7833-4051-b86e-17e5e790060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ec877ab-bea2-476f-8f34-4ecb256e9213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988653c6-7183-43ca-832c-a1aece7d40b6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7be6bd-72b1-4ede-ae34-3ea9475ad133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3281442-dfad-40ec-ad92-10ac2e5a146a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69262f48-f9b8-435b-8962-797015815c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da6f8092-a065-4b3a-8e0f-0baabe5ac0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42936b78-1519-4e5c-af10-4cf25f6c044a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff64a56e-771b-454c-869e-cd978b1052c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0ad44c-6069-47c9-8a65-87b3ed13411c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ae850e-f12e-45fc-ac09-c4a7a109d6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e89d0984-26f5-4b1c-94c9-b894c9e7f612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e57e99e-060e-466f-9f14-34872f47bf81",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5133688-8907-40ca-a404-388b7755d3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035fa27e-a1e4-4664-b2e5-77ea750bb6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb89617-d238-4944-86ad-76be90472fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a51e85c9-c862-45a0-ae33-515a9875882b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838ab9fe-2261-48f8-93c4-16160870ecd1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308e6452-fbc1-48e8-84da-3e3374c78cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93efcd2d-4794-4dd8-a776-4daeea090fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d56e1ae-eae1-4dec-b4b9-8f24c1a9370c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06348d64-e99f-47e2-b7cd-5d480469f1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320b74f4-aec4-44cf-aebb-1ac3f27e8701",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b64d940-bfb4-4ceb-8708-5c5279e281cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b343e7e-6381-490b-ae97-580077b4b476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7287488-ef76-46eb-90fb-f38553c37fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74af8d57-b515-4539-b44a-58dea09bb97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e59227-d4d6-444e-a660-37a121417406",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbf0964-a4a7-49e8-8c11-c559a86d84df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa15edc-d890-47ec-b86b-02f67534d268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ac1975-15f8-4fe7-80f4-a3bb41a5a3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0d4e09a-75e2-4a04-8c2e-1c51f74dfb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8326d163-8d1b-408d-920e-f5373bcbf4a8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f007a70-e6f9-463f-949a-a349ae3c50d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4082f01-625d-4759-9a3d-4da594c86304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4020de-f562-4086-8b36-090ac55c7587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1136e4b0-e586-4e0d-b9c9-33e59ae74062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92d3004-81fb-4e70-9e54-be24eef642c3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68167e1-e630-45cb-b0a9-60630d33d7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba7e573-e47a-4618-a155-7e64f0243d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e55df9-b400-4024-84ec-fdb3f8d49d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67baf63c-d753-4eb5-b3ac-70ecb0bf89b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244f2343-93cb-4cf9-a4d7-e1ad6d488061",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff731b2-7d8a-4833-9002-94419b9106b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9872b82f-a6eb-45b5-abaf-4ae755d7c888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dc90b5-34fc-4bc4-8737-0feaaa83f790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1c2536e-fe8e-4817-95ea-7264da4d28df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8e262d-527d-46c8-8d3f-0138e91852ff",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec5dbed-76bb-4728-8b71-011758f92d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43168e9-5fae-4e50-8361-3d4e2870d12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38b2f2c-fd5a-4e1a-bdce-27f01af86db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0f5bc4c-4253-41bb-aed3-71b16a388644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386de1b4-53c8-49db-bbe8-4be56cb036f2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cb27b6-59c6-4af0-a6c0-cbb74ac97d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e6216c-3b5b-4abf-8305-ec9ee35ce057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a783d5c8-cbcd-4ffe-9704-230f4dc038b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b33decd4-eabc-46f2-8729-a7ebdae6fc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccc3bd2-f28b-43c4-9626-38152b63060f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5070e1e-8448-4ce0-b0d0-29c0603877b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afeaa7ed-9d3b-4f45-9b3f-3e99392054c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d582020e-f51b-4e86-be19-b589cf495230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dd6c503-8c74-478a-983c-6ae5ad00610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dfeceb-5ca5-48b8-97f8-829e58ddbc09",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195854a1-7c06-4501-a955-1ade0f464c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558afd5a-7593-49b0-b1fd-4fd3ed5b449c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f6d319-2ee4-490b-af51-146811caf96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9d414b3-1d88-4d6d-974c-73e550ab469a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643b46e6-b1e4-4e75-8b1d-0e9676438729",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dfd66c-6f7b-4fe0-95c1-22031718bcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d04f90-ad08-4294-adb9-ce431f9c8a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3116bbcf-242d-48ae-bae9-0926fe630810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d229c21-d58b-4335-a56e-af0a22f515dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a5f06f-0da3-47f8-8774-c5f373ef07f7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fe4bb4-ce4c-4915-9511-29c093756e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db712ec-3858-4984-8baa-402f9139597d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e896fe6-1113-4120-849c-6d49cad992fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf18725-1a75-4490-9577-d92a91f79234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6451cbf9-673a-48ea-bbeb-c9505870247d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f4d3f0-d1bb-4ac7-b235-b3f1215739f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2621f171-2460-4b1b-91c8-bda0d45a053c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd489013-7f39-4d03-96b0-a02f2a1de559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64431247-b501-4a4c-b765-f80a1a91370a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a797fcc7-0a44-49cb-9ea6-68e19e63f07b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787047a5-7e55-4871-8245-79bafb442d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a483851-9901-47b5-b9a8-599762042332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff247330-483c-4a94-b79f-2af3e1c0c59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9102135-7905-4df3-b2aa-a02833238b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cbe97f-bdf7-4e53-804b-d3265275c9ca",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c2f934-0dee-4d37-ad21-fc348b9cff67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998978c1-4195-4c07-a20b-5a98050da668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fb90ad-8013-4aa8-b6a8-c98062e8ff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a4da67-bee1-4a46-93d7-37b5a2d536a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296cb7f5-da52-4d9c-8530-f9b32af4b2ca",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6fb67d-ec21-49f7-af0c-a8e67d9dc210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55124603-59ad-4d50-8171-44109af2a5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78db12e8-69ab-4e40-8818-1a61e6fa5ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa46c27-c407-41a2-a348-6648a6b69650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22475e0-e305-4eda-9a02-bbbc072d6806",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d577e3f8-4e06-46d2-aa64-df0ca4888d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e965bbe8-c3af-4471-a2a1-deda9c76c212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc7c399-40fb-4ae7-8b67-8b820cd52c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebd3e7a-fab2-48ca-900e-f4349822accd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14106d21-00d5-435c-8102-44ed03074ba1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950166a6-daf8-4fe4-8d5a-31df9dda73b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ef9fd3-d40f-438e-adbf-d2c398b986fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7863ade1-dd20-40be-9123-653416ce6b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe493ae-0daa-4adb-9915-15e183c2e640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f6e471-250d-4fbd-b913-1666d1af1ba4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989cdffb-ea63-4570-811f-9ac6a8791fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c564fb-6bda-4815-b66d-01003cddc1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c55f926-3348-4205-9ce1-6f9e0d74ef3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6207fd3a-beb5-4e02-a333-65f2f52689b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61e5bf4-33d4-41da-a63c-083f2f4ca7f6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d6d52c-1089-4a29-b067-ab18641936be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ccd4367-78dc-400e-a5aa-a270a04672d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be5db71-f8fb-4837-acb7-01cd04a52fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65609637-51d8-4f8f-b372-4cdea9fbe1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a021e9-ed1e-4b4b-a5da-e0001575f79b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397fffae-90a1-4962-9c62-89c6b1102d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e47ff7-7147-43cb-8bcb-466b2196ff61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb74a3fb-e7f2-418f-abb6-1cc00b9d86d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "309716b3-d9da-475b-a588-7efc93691d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6794548d-64aa-4678-8683-16e40ad9656c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf1f8e2-a95e-40e8-bc3c-bfcddf31abf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f11b743-175b-402c-bb42-155df1d15d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cd8fcd-5291-45aa-8b5f-1124ff210d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df621d83-0024-4198-8fa9-79eaca5e547f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18da8827-884b-4b62-9408-fd03f05c9e44",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dcfa84-bfca-4c69-a1ed-55d2f5678064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ecc93b-aa3e-4fd5-b012-698a055fb4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f42bdc-b8e9-45d6-bac3-e461c63bba30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccc4452-77ae-4968-9505-b538f5927522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7716ee86-f215-4de4-a8bc-cb3ae415f93c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa08033-0122-44bc-bb7f-34a4b35162da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e052dce5-018b-4e34-9e35-545c4ef4c981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc28e1f-5597-494c-8dc1-b504216396b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc54115-bd3c-42d7-90f2-c8f1d87fc7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c4ae5f-92e1-48a9-85f6-fb47399f1770",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8551695d-311e-4924-ae91-9f51a11ab96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84da74b6-af8a-430e-9f87-f49881c8a4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23b6288-945f-4b31-a3dd-dc96fa7ce6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e489d44d-0295-4042-a143-bb056bf404f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d679294-e9f7-4855-9865-add6e4b5df73",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c0f34d-1c4e-4b7b-bc09-4bb2eb801893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fba1627-d8b5-4840-9320-11d02f05605a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f16d3c-03fe-4486-b059-3653ffbb94fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd75c92-a22f-4a35-961e-9a7f7ac13b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3473e955-73e6-482d-a3ea-8fd1b4de0add",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2b8475-6762-4c47-981c-cc37006d9bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98afed2c-fe49-4ed4-8a8f-305219bf4d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cc3b8b-d4e2-4b1f-ae9f-d4ef3ed2640d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "865c307f-2219-4734-be55-8e8792ff2c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aff391e-6720-4404-980f-a64c45a95eba",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde3d97e-e5c8-43b1-a6c7-9024bb7c8f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f892c2c4-f8e4-4a63-977b-37169f4f54b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c63037e-b764-44ab-b307-fa6207c6772a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "25b2c1e1-5f1e-45ee-9d10-7777e3b2a7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086f59f0-5e15-4d77-b8c8-820a0a327ecb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3774d3-cd5c-4d04-8ffe-0f9b434965fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "533751f0-9e12-45d9-99ac-1dcce9b15ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048a621b-f558-40df-bd46-a483a68801db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b60a20d-5179-49a2-8a2b-86573cd30f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea96512-73a8-48ff-9517-2fbf22fd33b5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeed777-417b-4956-b042-392acfd25a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7482f90e-ced8-4d8c-a763-2c612908862d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31157e47-f654-4033-9613-9470d449c468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e580c95-2df6-45e8-ab32-17b90acb1dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ac2c70-fa37-4f59-9b6a-6526149a7c20",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4715a35f-2684-4e44-9d93-13b96ba9a695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6134e2a-9ab3-497c-b092-658e428260a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d037ea64-a4c0-476b-8da4-4615d4a41e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d3fde1-e9a4-49bf-9530-fc2a11625f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee00d1c-ea43-41fd-8741-7e7cd63753c5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f772b0b-7d82-4b58-aed5-aaf39f3a3edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91e90f8-233f-4cfa-949d-bf5adc3af06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31135bb-6b23-44b6-873b-605c79213e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f378e0e0-4d2e-44d0-a8cf-75c2682d8007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2786de6-babe-4732-a634-4a9605b1ba66",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb77eacd-0610-462f-bb08-30372c6755bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fd19c9-440a-45ae-9849-67d58884782c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5766bc89-8571-40c3-b396-29800334e47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dabb121-b9cd-48af-9d6d-05a58498f5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac0a58e-f44c-41c6-8f2d-843b53b21205",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ad777f-2758-431f-97f3-88674f577656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea61d1d-5e20-47e8-8f4a-ba7f86e92c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f065df8e-d394-469b-8abb-a1e6ca21f5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7aa97c3-1ea4-4fb6-a104-0b7a2dfcf090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f878deaa-30e5-4f56-86dc-0c849964fbee",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b54615-b2c0-455c-bacb-79b5c9d69b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5349ccb-f9df-426d-af80-b7069fbec4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2a98ca-2757-4e0b-916b-bb3190b462eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e37ba438-f799-478d-a2a6-a07cc6659c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83545b04-da58-4fa0-834a-d7004305e2b5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1a50fc-e84c-483a-abca-7cf0571cb21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42fc4d8-1b69-426e-8009-7be6d1b19c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe2a1f9-5231-424a-be07-6cb28055ae6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "428746bc-2c8b-435a-a07b-0f431fbb731a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dd8d7f-a59e-433e-9d83-dd210ca14c23",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae80085-64b3-42bf-84e0-23190dd2e07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea5de65-7d04-4679-bc4b-2da1d6158137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82a11ef-1d29-49e3-8301-c37ba8498f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f50ac3-c1ca-45b7-8585-0c8d244d55ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cb84de-b79d-4a72-88b4-5b9c11b1d199",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1c04ab-eac2-48ca-b566-54c5b30b0e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ac450a-0e04-47a7-b24e-58f231e92f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483d218b-4199-4a30-8a4e-e8976a625566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "596fc43c-6b7a-4ebd-b726-c3a87e8f8edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361838d0-8d3d-465a-9de9-2f215ec6d2f3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9957b63-75e3-44f4-8d45-40fb8f21cbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fda3eed-9618-4343-a00d-381d4bc18901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51400205-1944-4f95-98c4-7829ec16564b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2e2f5b-61ea-43b0-82a5-b059c75392ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c4f168-4a45-47c0-8735-9dd4d610a656",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b756a7-db11-4638-a9db-947ed321f8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1c3503-016c-407e-b9ad-fff69cf78e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a742c78f-792c-4f60-b566-fc65500a1e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed280741-c285-436b-a2f8-101f174b0bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2024f4-d21b-4a85-80d7-6cfa03b784e5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832a3cfc-d202-4006-b678-5b7fc894e958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e446671-c19a-41f5-926a-e13bf19bf7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1010af32-d118-43e8-9460-277d76e32275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e9eabd-2022-4e5a-bcdb-556679b65edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936c7768-731e-459a-b1dd-4c52f195b46b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1126d143-6cfd-4c2f-a9c4-fe4be539403c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc031a18-f485-46dd-94b9-0cdd5fb7cac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be340c5f-8c80-4830-b549-c9ab0e98f8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b378e3-ceeb-4782-ab3f-d89024227187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114728ac-8192-4ad8-8f09-a62b91e8d333",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22a9f70-eb54-4387-8487-759d1f07d6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43973d0a-b298-4f7f-b757-5316b909df31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f27832-e1ed-487d-b259-f1c5d8df70ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16aa6d11-9a87-4b06-a47f-1107decdf53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acb7d4d-15aa-484b-8305-732ce8b5a592",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba7740d-1884-4912-9e0d-11d97a582387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c0944a-db66-455a-92dd-69541645aa35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c352c8b-ba9b-49ae-96f2-c792bc4d5aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "58500db0-11dc-4295-8328-92c8e1adea1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d15377-a982-4dbc-b837-8e16b2805f5f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045d0fc8-be66-415f-bd69-2def3e9f7d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3562e0-1c8a-46fb-90b0-184277e0cf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64e3ab8-2531-4d74-8d09-9929b18fbad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0589f12a-70d7-4575-8475-b8111384be30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c188803-5535-4834-b70a-43b558c709af",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b53c107-ffc6-4655-86a0-32c62a6f5230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7b33fc-60e5-4600-a75a-56e696d3a5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee155d5-eeb0-44ef-b35a-0dca1e3dc47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7329fc-4e55-45d6-bfce-c974ad74aff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e342bdf5-53b0-4db7-aabe-0f4091c98d55",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0d8ac9-3b18-4029-9b8c-627c290da47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b6bf59-8555-488e-8c7d-6a3a60fefe35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd50fc1a-a4f2-4f3c-beb4-0e48031cc8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb70f119-e841-4ffc-a8f3-ac99190195a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3d87bf-bf0c-4a7e-b752-a9c870a3b435",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dc3f9d-9ae5-4ea2-b5ea-bc2974588dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5458bcdc-f711-4653-bd86-c674fb5f7af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318bf7f1-3ee2-47ae-9578-81a044584a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce12bda2-a6b5-4ed2-ac59-31796e3c0d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4916228-26af-4b76-98ee-4644af50d85d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c012eb-f5d9-46cf-aba4-7dd866a42a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40f62df-229c-4a2a-a086-b9a76f6b2943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df52ab89-85ef-4beb-a814-2154df8f5110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9993f9-a98a-404b-a34a-c8505d28dca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34474afb-268e-4bf0-b609-5ca57db5c956",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148d8509-a8d0-4be3-8a45-699b4aff5cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f253ac-c42f-41e3-b298-4580216111ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f85d6a-4404-4d11-b3fe-1f42b9ca0f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "12c6e5bb-27d0-430b-a597-58403af5c93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0031f2-b570-4f28-8209-174b17e774ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e71037-e011-4dca-8575-baa5d0aa262b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9d3f20-32e0-42d7-8f20-d51b051838e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde5f132-00bf-4189-9c67-ed5c1e2cd340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39ada094-90df-4075-b02a-139be258d99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee6b345-d8c6-404a-a12c-23389c732165",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc1134c-b787-4714-a769-00228613880e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be25c579-afb5-4fd4-8619-a217cbeb6e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09fad40-5453-495d-be99-8d2ec28c0512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8615cba-3a53-4407-b2a4-88fcf0dbe21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52813c59-3037-4202-9902-9dcbc232ee31",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eb28ae-6f34-4189-b317-7317946ba24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76477e0a-c154-4ef7-ab05-6ee3da067834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8328af9-661a-46c7-b644-1eea95652764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3756cf-2184-497b-8deb-84a702c651ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbccd75e-6caf-46f7-991d-d15d81731d47",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf9d821-009d-4b1d-b773-3823c8908b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff32aed-928b-4b9a-bae1-b61eaea99007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df21964c-0f46-487d-9942-fdbc4a84c6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "63195da1-1044-4bf7-aff6-1870de40efbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde7b8f8-add1-4cb5-a68f-b2c9baf8644c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a46e8ee-57ed-49aa-8f87-8aac08ffc92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a388600b-24da-41af-8c7f-9995190a3b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1e8eff-46bb-4e0d-a13a-3857b164f8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb1779a-b97f-4d4b-a776-2d0850e61b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8a0a0e-d45d-4d28-a8f6-9e4c1769679f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4a9c08-6fae-490d-bf57-a2266c25650b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08531cb4-aed4-44e6-a554-c3a0a2eb4082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdd0afe-b530-4978-a23e-d32d5671b069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec3a436-5bea-4555-9fc3-4a47c5bb337a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a8c321-6578-46cb-8c69-a4a68ea4acf2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814f8d24-5d46-4a44-9501-2f5867dc684d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3e5798-8659-492b-a4cd-9edf36de15fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b234e38-b9d2-4736-a846-978193d53876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64bfca31-d4a2-46e1-9a7b-d583e924e144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf50367d-1e98-4afa-9055-dbfa4c070693",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e6d19a-e38e-42ac-9f93-fd7c08bf35f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe63c32-2370-43c8-87d6-0a4d9a3810c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe326196-7674-42a9-850d-12d5f45ecb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "497308ea-659a-4b38-95a8-258f7692015d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1224d2a-023b-4cb3-85be-683ae63f77a7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c7c292-5f5f-4da4-b8e1-a92e542344d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3b4656-7b9d-4f0f-86cc-e15e41269541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37718f02-d1b5-4069-be47-996dc698df11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d794073-bb9f-4499-85b5-44b0c37d96b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1608b8-4719-4936-b350-27e03bca9dbc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12bed2f-e368-4e29-b877-152eda8411b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b391877-dab8-4dec-8672-774a7124af26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b922fa-73d2-4d21-a1c2-dddeaa8927db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c87839a-dfca-4bca-bd38-75a16b852c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88966b8c-047a-4219-a959-872f3ced934b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f48fa39-c8f5-4b87-845e-022d06069a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fcff21-762e-41b4-9f12-ed2572d3a5a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328ab007-2c6e-414f-8e5e-d797661cc4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8c1ec2-a297-4cc3-a158-b5e213128946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c31972-140e-499a-b1c6-9e075cdee2a6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61cfbae-056c-49f7-8c11-53d29f700da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113e0a9c-fbe2-40d3-ba47-23b444282380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286451a2-2b93-47a7-b59d-48bc4c466853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb72305b-f78d-49dc-910d-8eba590cc22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0287fc0-a0c6-4a62-8649-a2fb69b6c428",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0282d34b-3649-4317-9d1e-9cf35e064f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea93227-ab12-457e-99e9-6058e6f1627e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6428f0-72ca-4027-a663-bbcf6dbd9633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb19e424-2985-4134-98f3-d62bba351c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfe815a-2850-4a8d-9ecd-539be28f2d95",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c968b66c-9079-4203-b72f-576ab6b39a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044584f2-be6d-4a3c-b8b3-40869cf62fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf165ad1-8186-42d0-9d28-71ce95027930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64f21bac-1781-4aec-b28e-bd39bfc2bac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1f9f23-5a86-454c-b292-de29f8769ba2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48e9e38-ad68-4f9e-a1e3-c7a43ca8a1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ae16c7-c212-4b9c-bce7-f0bc387527c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da524a42-b42f-4f35-b1a0-eb4c1316c743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a46c7c26-415f-42f3-93a5-d5ce5bde5162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653fc677-79fa-4b9f-9214-e938f4b42367",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dfb9be-e0cd-4db7-a8ed-617c96b46575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90867ab2-500d-41af-8d5f-3952601309d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6025dc60-04c2-4f22-a2bc-6f00987d6a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95004d62-0f7b-4825-aedb-ef3e7dc45652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d95cf57-2d87-4fb7-8420-0105a7bdc0d7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c36fb6-141e-4335-a340-b6550e6106c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf62b22-e40e-4476-852c-1d1baeae4c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5263be1-2071-4bd1-a971-34e3858c885f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e780cdd0-0bd0-4d89-b989-261dd9be79da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d55ffed-507c-418e-a850-3d0b26662adf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb730cfa-186b-4186-a1b8-b800065fdfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e80ab8-00a5-48cc-80c0-3419266f396b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca846348-cda9-4058-9fa2-ab8c9264ff87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b960b0a-7705-4067-8033-565b28bbda99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308fd1e3-859c-417f-a283-270fe5df2a59",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932afb5e-45f9-4a2c-853e-4b9d7456df5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a642b07c-e217-42ad-954d-ce1146b870fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2adc786-8862-467d-8845-623156e9f590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca0886a-20d3-432e-8cc3-05c6baa8291c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b12b2e-9da1-4293-ae68-79baa7397ec7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ca6b1a-91a3-447e-bc64-5f47eac4eef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa7ea2d-883e-4f01-adf1-e6654d3f6595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a624b1-3311-4151-9534-6c44891e9473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6970ba39-356e-4cd0-8be8-3d2f4c9b2680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a58ce0-048e-4c34-89f2-881708285746",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb986378-7d4e-4dc4-be45-3cb343767e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05efb9af-fbd5-49c5-8346-592a9f37f7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f71d9fd-1ed3-4010-a577-31d05e7ac896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9215b01-d483-45f4-a132-a6ac36e2d08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df596a4c-d21d-43de-8f4f-b1e84ddb9ed0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10208179-bb56-4542-b98d-4fecb6e0c57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe31ee02-f3b6-4c3e-8a69-c5a73e70304a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfcd528-47b9-41de-a88e-be68759f1e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32a2a83d-0b1c-4bdb-a139-a73218eaacab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea7add1-402c-4dda-83c0-3439d7fde715",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bb1ec0-0c06-4e13-b3ce-d34490158dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18fa337-38a1-4c61-9f98-0dae3cda12dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24693881-9a0c-4571-a52c-24215f77ef4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c00b15e6-b712-41d1-8e84-823880310c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc6247c-6ff4-4a1c-8e23-6bebdaf3a5a9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c768c6db-4164-40fe-b49e-91cc3fe0c9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a63256b-1f32-467b-88fe-f84c9eee70c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3621d59e-0bb9-46ca-beef-4c03797a7aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b6a607-c11c-4f6d-a1e4-2f254318cba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb215348-0faa-4274-b7c7-e3a939f8c762",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c15e8a4-f680-4232-87f8-06f7f2581abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3c1bb0-96d4-48ee-b851-dfad8889f63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987c20b1-60db-448f-8ec1-d6bcb70a1466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfcf27c-f152-40fb-a033-e3dcf3cd6854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d5cffc-bc73-4898-bb05-087aa44e7d5d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfe75f6-ab6d-4b94-a285-4e1eefab7290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc290cd-6af3-451f-b8c2-4ad27da1e94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f3935f-7fc2-4117-a974-bdfa8bb069d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae77720-bc73-47e9-838a-18c06c2a7a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e56132b-0240-4f06-aec5-c0d223a4313d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d02394-e6f6-4e7b-b981-4830ad646f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f194cb-3415-4deb-905c-c388ac8953ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880f8126-113f-492c-889e-aa0a4f0cb87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7aaa66f-b009-43d9-96e6-aaa73c16d88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42da181-6af7-484d-9538-7046deac37bf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55172b3-85fa-4348-be2e-b50e93dc9e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d59959-9b9d-4a72-b67c-ad024169c220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80461c94-2f13-4bc1-9414-728edc91581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76c5388c-cbc6-4e18-a198-e82b64841372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bac9223-7348-4fc1-ba63-b63ff4b90a6e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2df4cb8-7b03-45e5-82fe-7a453e0a7a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf2621d-2f6f-480d-8fdc-12e88eb44896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850d6e4f-950a-489e-b485-9503ffe30018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfdaf8e-db4d-48fd-a971-203e57b6334b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51e7d15-d5a4-4577-b9f0-6550273d6442",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98ac62d-c147-4269-b519-32fb7f96ad2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66c5d31-2b74-4961-a9a6-323c187ecf51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba527c94-69b1-42f4-85f0-e0e58e18876d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d3f94b-5169-4f1d-9e15-0fc683dcd3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce887ff-7706-450c-adb8-c561e3bff9ed",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c1feee-248b-42ce-9674-6fc646fc66ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0358434-fdb6-4102-91c6-0887ccb2ebf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8269d2-e903-4dfd-aa20-a196995d1e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3247fb57-c516-4e65-9b65-97a936d3d44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bd2517-2a72-4083-8516-eb2c65fd1fb2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58f8c34-1a1d-451a-8e34-3645d59d8fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aca4643-18b2-4387-9ec0-4be1ea892b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc56013f-8b3c-4f51-aef9-339bea044552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36ee7e13-0155-493e-8dad-916287674194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffba6b33-4dd7-4de6-9a8d-1e610fc50443",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8453df35-a2d4-4818-a842-70d45693d759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766f8cbf-eabd-4b2c-aeb5-e49e3c5e3dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fef157c-b931-4e91-bfd5-4212a31915da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b582ca4d-e21c-489d-9c7b-a1330acaca7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63230119-c024-4d37-a502-1d142bde3f00",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9de7cd-9285-434b-8d7a-bebe8a140243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea3a731-5024-4b4d-ad75-ad7816559d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d073f2-dfbd-4d11-8065-ccf682c7eb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac254e7d-0e9b-4bee-abc6-e8a92edd3962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e8d2e7-14e7-420c-9903-00dd9c0e2cb8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f95bf1-575a-4a76-bff6-7a917047fa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9ee8cb1c-948f-40d4-baf8-8dbd52109de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef09229-a385-46f5-940e-6fb20673fb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef630128-f329-4de8-8cc6-0ca4e523be3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0eb8978-1047-4263-82fa-96d56336e10c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e43125b-a9e1-45b2-a037-4b114b6ceae6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e75420e-5d05-4b4b-8ae8-9e991112cf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "669f4910-b89f-4596-b646-d3a1950ff517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fb0416-626f-4ffc-9ff5-6780fc68dde5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "617bf367-f1df-4eb7-9a0a-d4e8e67163d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff5a34a-0f6b-4709-b103-55c2cc4d280c",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163f00b3-0fec-4803-91fe-15e3edb0d956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eebb2e2b-2eca-4f99-a299-3ad677af65c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a97e218-81d0-4b32-b4bf-91c5f4eb6229",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53500a07-2b5b-410f-a005-7d8b1b2b8a03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f869a3b-a0e1-4fac-b646-802a36021c34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2cee3d7-1a5e-46c7-9cc4-95c1c63dabae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7e0ebfc-fed4-4611-817b-31c9f585f00a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fe1c082-335b-40b0-b62d-be72de3c1af5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66ddfafb-a97c-4749-9310-f084280ccabb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36e01eec-17ad-4624-90fb-228d65e6d851"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e4b8bb1b-bf69-4f3a-888d-130083824d05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16515e66-6609-4326-bb5c-7e419fead73e"
                }
              }
            ]
          },
          {
            "id": "ce2adf4d-c358-48cf-8201-020592429172",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f8d87f18-4749-441b-b12b-d4c176bf890c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "780b377a-e8c4-48c6-9b0e-ba648aeb1e95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ee71bd9-d398-4ea5-afcd-be20bb4afd6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41d0992b-8e90-482e-9347-c7aa2b320ab5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0ca9530-7bf6-4ae7-ba6c-afd7457deb62"
                    }
                  }
                ]
              },
              {
                "id": "ddf37c56-6aff-4521-89a3-d1008c19f94f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9e1b19d-13ec-4b9e-b3f4-a9d86a39dff5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d022a8e2-4ad6-4d9d-afa7-384aaca1a7cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92624dcc-0dda-4334-a882-277bd8e16ec2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fdf49656-19f7-4f2f-b7f8-66fde1b856c1"
                    }
                  }
                ]
              },
              {
                "id": "e547e522-1eab-4292-a1a5-f1bf07f1dcb7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7889470d-0785-49c6-99ff-3f488a479129",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b786bb9-f01d-4868-8419-bf5188ae8e94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5069e4e-5b81-491a-9e16-adbf52c0ac5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e95832da-eb46-482e-ba76-9ff43ef7ad64"
                    }
                  }
                ]
              },
              {
                "id": "239d2bc7-80f0-43c1-acc5-9a249004f8ee",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5045eae1-df0c-4106-9ccc-4c74de757c7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dec0555b-2aa4-456f-88c5-c6ee9b367fc8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d3e8fca-e964-4d65-81f4-6dc550cd6aad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f48f1eb8-9261-410f-b9cb-1b1efe45eb4b"
                    }
                  }
                ]
              },
              {
                "id": "8b6b9e23-720e-40e1-bc90-4b125d8859b8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02295552-544d-4773-b198-90c268bde5b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25f09b70-9d3a-4b06-9e60-1ce36199baad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b46ce19-07fd-42c0-a1b3-b376e6dcd2b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f6f7c8a2-b97b-49aa-ba42-9d670b9aad7f"
                    }
                  }
                ]
              },
              {
                "id": "722cea57-72f3-4b71-a422-ab8989839959",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6da7360b-b809-487c-8c9d-de41c6f38786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0e0468c-b2b4-4bcc-a54f-0fb6de261408"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be0c32fb-9bdb-4dd8-89fb-c3fa81845597",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "203303b3-2098-4f70-9402-aa6e1c4f0699"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2e6599d-a9db-44d6-b3e6-d137164c8648",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e09b4534-b4c1-4d36-8946-980fbf9f1071"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32b90118-6c85-4b29-80a5-a45da7f0483a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35617ae2-6c8d-4e31-a8a2-9f7b4c2bda81"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea8b8dc2-b6c1-47d4-b459-5cd6a6711ac7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "337a025e-7b24-44b9-8e60-f950df057a11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51503ad5-5b61-48f6-9f74-6f8d45e856d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "102288b8-fc49-4384-bd2a-350e1c312764"
            }
          }
        ]
      },
      {
        "id": "68d0a3d5-e926-4a9f-bc81-1bb96a8a69ae",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a9377a6e-d6e0-4761-99f1-bf024a757160",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65537c17-75b6-47b9-942e-648cb19f7ae4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ca2bd3c-7558-42be-9172-a32c463538fc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb3ea42-f491-43e1-9473-3ef529e53be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc98089-c1c9-40af-9e54-bdc57d9018e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80097bce-2d79-478e-8b87-6ad1d18b4da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "00098051-5bf9-439f-ad31-63d245ebead5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4020063f-6e3e-4710-b2ff-e48df4537c15",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf884b84-8384-4a5b-83e8-057a1b797b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b028ea-e53d-4041-aa2e-cc01a0123bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2edee6-ec55-4dad-97fe-9685b8250030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6634d374-0c05-4c20-a02c-5ee0e4963d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2404cf3b-7b87-4665-8a1c-a23771cd0700",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19c1ef7-160f-43ec-8636-2673d0b6887d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c19065-3b79-44e8-86f5-a3ace5eaa498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0589dc7-4d95-47ea-9ebe-cb9082bc6e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ddef1cc-d7dc-4f0b-a4e9-3c7b85ff62c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d69a3c-6e10-4bd9-a1e0-d1af0b2110fa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2437bd17-1247-496f-b881-b66bdeff3ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6f2f02-15cf-4215-841c-ea209d8af66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66708899-cdc2-4f32-aeae-8dc32505c9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9952147-1115-471e-865f-9fc2d06004f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a228c4f-782a-4eda-aebf-5b247cf01916",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a99e84-d50e-4fce-8b1d-b13a0b9072ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aeac0ff-b328-4ef4-9886-1d5b004a729f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d25057-d6f8-4434-b82e-17855c82d81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14a596f-525e-43c8-babe-3b1e6c54ca3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab45541-ce1c-4b8c-a72d-57e7fff45045",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5d9f5b-9a33-447c-b5e7-5376a77441c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f87a051-6a51-40ea-bb83-b0f0adeccca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751fe2be-4fa5-49ff-9327-ce983ae01485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03ae6f10-8652-4f61-bf95-4edc8fe96010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd81681-4b55-4861-ad05-023b673b3c7b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d1e827-1743-4a74-aa7a-ef5f9962481c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770227d1-f793-412e-9f4d-9b123b56830d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9239a849-ce26-4fd4-904a-30d48ff0a09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e4cb11-fe1d-45a6-b068-4373a7c35593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031a45dd-98d6-40a1-9883-bdf8cfd0a342",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57b3685-a042-4980-8652-9950b469a320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31a9b81-a589-443f-a181-c6dbbe310499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e499c0f-1eef-4138-9540-b5aac4d476a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "119db31a-cf8e-4803-82da-148a5c0919f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d713cc1b-6b7b-4345-acce-6d726653a5a3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88ecf90-269c-40c1-b2f5-bd37165cb386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e42ffd-ad76-4372-9c1c-87cb82a72323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3dc469-b78b-46e2-a79a-154df0d7042c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04467535-52da-4823-af47-654904c2e6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82fb4c7-a6cd-4e04-9623-fce8ed83ca13",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bab3da4-11c2-448f-9202-a5b132f95111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86722a7-b58d-4618-97a6-68f83d6b2efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f794fe-907f-432c-a118-e53283ac38d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c94936-db7e-4abf-b71c-b04da00a3671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12deeb86-4f68-424c-b1ed-faf57172af09",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c780fd-ad0d-43fc-938b-208e70f6b1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e37069b-047e-4adc-9f64-2b72ba4188be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b885950c-7816-456d-a5e6-a8552cd0c4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a1160f07-4735-4a26-a884-ffd2271137ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156a7262-b4d6-4b55-bcbc-83e7dcf14347",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf3aa1a-8aaa-4b83-8432-62b8a509e611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b0d825-c196-449c-aa28-b6c80462dee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017a5bdd-9158-4840-90eb-7da1a3592303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1beafeb-2dcc-4617-88f3-362af42c9f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcf1a0a-f133-46d4-a615-3fdbaf6a554a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30ad3f4-d8bf-4584-a3d4-9cfd203e2652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb34d67-c6d4-4ddb-b01e-9eb9734355a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35750033-ce32-40bb-9166-441aa4bd838c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cb6ba8-3888-4870-b017-7ee81e614958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b12b969-4d95-4b81-addf-efbf146c3887",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b3c38e-4479-483b-b1f0-b6a399d71c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a2bdd4-abd2-4aa5-86e9-d683d0fb6f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b78eca-504f-4d82-828c-de7ea748dc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "847bc082-46eb-4201-8a3b-fad03e9f21ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99363dd-14d7-4a34-8ab0-4191b12cb117",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a1e46f-4c20-4584-8f1b-259866a440ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b766c2a6-6094-46c8-bb9b-2cc8582d525a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19b77b4-4c2a-400d-b43d-4b0ca94529ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "93db467d-945c-4646-afdb-ee59e6df6b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb85bb4c-d29e-4fbd-aa47-123d42f16e94",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec9b5eb-abf5-4ee3-ad48-be56c7c65fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfe338c-a212-4256-ad10-1667bb322353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d58c77a-ab2f-483b-a41b-1c39e99fe70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa6c809-82ba-4a82-8849-bde7798e6108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d282592-fceb-4594-9432-2ee041e0ea07",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82027b6-5296-409e-80c8-9397efcefa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d950a7-7779-452b-9dae-0c9ac57c44bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9545a80-af5b-479b-9e28-a496de8be49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eab5c81-7ff2-47ea-9755-d4b07e6d1137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e0b27d-292a-44c7-b95d-250d822a5061",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c939f1-3107-498f-93f3-a369cb5aa172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b468f7-a1b7-49a9-986c-dff906168b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330f476d-32e4-4a13-83d3-b8d554af1724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b6fc50-1337-458e-b5f8-8257b6fec8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d893256-4a93-4f6d-b4a1-a5587c6c2231",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fb1b15-45b5-478f-bcdf-ecec67eb3087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21950f9c-ddb9-4a1f-baf6-f2cd2c9b22d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e400d70-faa9-462f-a46f-990fc50d8aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7bc99d-c43b-44f5-93b8-f935fce29431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fd7dab-50ac-4bd0-b381-e5a504e12a3f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b910bf28-cb54-4a43-99cf-cc10d4911090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d6b280-665c-46f8-95d5-8ab86ab1f2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9584d25d-0fc6-4782-9bce-853ddcea1a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6d95f4-309b-44b9-b33d-eadb5383d0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01190577-80fa-44f3-9a5b-f4b316993a99",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77774053-188e-4db4-a70d-1556bf5b85a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eec38fd-3604-4e13-906c-497a25489f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ae4e35-bade-417d-bec2-4465ccca819c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca05e741-b4d9-4892-b36d-cd6ae7f43f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f732f803-f9cc-446e-aa8c-6dc01be5f8e5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec46eb66-4565-4de9-94cf-f39955c59c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0281715c-46e3-4d47-97a6-505fbbb97edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7942c5d6-d8a8-4093-ba0f-95078d41399c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "215140b4-b9f1-46d9-a8f9-5d1b2e59bc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84e5b3d-76d7-45b8-9dbb-9fe2d23dc94c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8c391c-f69e-4e83-a6be-20605a639846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37f4fb0-3332-4b01-b030-38c05ac33103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d803f7-7015-4889-9889-cdeac9b2f436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77c322f5-754b-4d98-ad85-578a1c08cce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5d3b07-6a7a-4022-b896-b546cc9e24cc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11340242-b9c4-47cf-9005-cb5992bf6e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34e2241-62d4-4162-a108-932fb4dacd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff34a5c-3fa6-4f14-b903-7f5b24b1ebf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5abf19cc-d425-4139-8faa-7d3175d213a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35990b96-6a34-4ada-abfc-e690860d2877",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98e984a-16e2-4e59-b520-a4d6b8209633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762f84d5-3237-4631-8b1f-a23ba8282092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2500de-0158-4a43-bafd-11e107b02897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e03896-c863-4b64-b74e-4adc8e493e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fbfaf4-7782-47cf-9dfc-45ec7ec38c8c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292a5a80-2f52-4370-8527-4c2271a96f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d1fdcb-71db-446e-a10f-3bed48a4132b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feeab2ae-4c35-4e4a-94e0-6ca5868c4a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cec8bd3e-f979-4ecb-8342-8a0476867b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55b7afe-3c67-48ba-92ac-3c4024b16d09",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a4b47e-759b-4847-8180-82c3b1fe0cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74f78a9-3771-4220-ab7e-dab7b71ffd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0683f45d-2eb9-4130-92b5-e7a6e7bff270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41099a51-af67-41ab-9a62-12fb694aaa9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f12e79-d1b0-4dc4-8097-7e173a5644d3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cc2e66-70e2-4939-9f8f-1420e2657af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1eb6913-32ae-4f4f-919a-35d99038075c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66cefb0-2412-481b-914f-23482ca11491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abd637eb-be2e-4398-b849-b4f5271f87f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c1c43c-528b-438d-9025-2862448a9ca3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188c460f-d50f-447d-88f3-f13eb57c4749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d418f5df-2c6f-42c4-879b-e0b62aee6794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c58950-dac0-4467-b657-a5192051829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "966bb773-00d0-465e-89eb-a444dc9a4a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26fd946-f93e-411f-9067-86e94692f976",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae15ea0-09de-44c7-b32d-2ad18da97e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b962bbe-9960-4517-9860-63cbe1390322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50f9998-e3b5-4125-8b24-3e9fbe9ec58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a8d9a7-05af-4fe5-9cb1-f2434fca1e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afb0992-b6a8-4717-8475-f198790ee714",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3646950b-3009-42b9-b6b3-e772ff8e2e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a465a5-e2ba-4043-b9b2-4259ebbcca50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1c84d5-c259-400f-86bb-b4a953c760be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08201f8c-0ad8-45a5-b211-d3096ee43c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54b5c36-888b-4a96-a9e4-3dc4ce6940e8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf6d6f6-71f8-476b-aacd-3a5feffff084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3015e7-9f55-40e1-b2d4-c140e6ab2f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c09c02-64b8-41ea-98ae-c1b3c38d6a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f495a77-20e4-48c8-99c3-ec175dbe6ad9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "279f4894-f390-42e7-ba84-55fd679398c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32a830ad-8f38-45ff-9549-63fba8b66acc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d145e835-0f8a-4d9d-9ecb-3a2e89c6fe0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be24212e-10c8-43a0-9de5-553172f5d881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d376ab8-9494-4dce-9b73-11fdd660dd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d70e1081-9958-4d07-baf5-5b0eabd0ac31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75a9fa2-b801-4f86-9b14-f24ae637eb83",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c169d00-07d2-4508-ad8f-a85ae5c4db20",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "865130e8-dce3-4a90-a6b8-f839e5e2878e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f2f367-f0c3-4416-bd67-bdb8fd506c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4bf9bc8-b7be-4506-b9ac-c681c7611db1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "647927e6-2db3-4b50-a925-6d0666aaa364",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d2570da-247a-4cf9-86e8-f6f1c56d0d34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8856eaa-a3e3-44eb-98a8-b05d9fe82550",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07018519-5426-4d0c-b269-a5e3bfb114a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "383230e5-2f41-4709-b85b-5d0d95970e89",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd4565ee-acdf-4d18-8a33-3584799d7f18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b303d03-9006-47e9-8a1e-aaccc10fd741",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04027f12-1dc2-45be-b8dc-5ec23ba74f4a"
            }
          }
        ]
      },
      {
        "id": "16ceca06-83e3-47b2-a42d-36fc26981ae8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "60f5a4cb-1556-4e93-8580-29175f46d0a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73bf8539-c29a-45c6-80a9-978bc0b31fae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ef94f03-0074-4f77-a4a1-335ed1ac5ec7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f43c06-fc24-408c-b1b6-e0618229a411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2200c6-78af-4519-82a3-ad6cdaf0f312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cac47d-dcb5-414f-8e6e-0259d92b74e9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4381deb-7605-4a71-9ef1-a111753e4c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5ce291-717d-4ab4-877b-b4a5fdc6f96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ab92e6-0814-437e-bb74-1a3bd4eda001",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb27a076-e903-495d-bb0c-202db794c63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8a86d3-8ac1-41af-92a0-c3ecb087f032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddff30dd-665b-48ec-8148-3b48221c74d1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ee649b-2129-4f9d-922f-93a420e16927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910dbd4f-d947-49f3-bfe8-5bb82010f2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fa3dfa-aafe-4a02-aedd-a0cbd74c833a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f1a69f-4240-4c8d-a0ad-1eaada5ed2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d32557-4695-410b-b0d3-4867aed461c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94486b50-2153-4041-ac91-258c29e3a81d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d80bd6-5e6f-4f4b-9e15-a978f9aacd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e52332-c4fc-4160-a424-e9eabc492e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc63331-a7d4-41cf-a462-2d8127938bc0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bd723d-745f-4064-abb9-fe8fa5bac3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48669a9-06b8-422f-a313-a75fbece0108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3298fc-7613-4db4-b173-294292fd092f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f00fb60-eea6-4797-b4ff-aa6e3a1bb3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a3da51-309d-4274-ad46-a7ea4cdf6728",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895bdf2d-939c-44dd-af44-dabf9929a69e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b555d5d-8729-4530-877e-44cc3750abe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7412cd46-057a-485d-8ab0-a43034d7032a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa82c7a8-1d94-4e57-9677-bb7a214750b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d46a12-bcec-4579-90f2-f531a26c647a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ab261d-8556-40e5-8606-009df1323aec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106b9924-41b0-4323-b0c1-3fe25470ae88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119984e6-95b8-46e8-95e8-c4257e05e51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de286ce6-d72c-44bd-b14a-3f3d8ddd1ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad73667-3602-4fc0-9d96-4fe02b6678e0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0296fb37-d102-45ce-8a01-080ff24d19e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ff424b-8f6d-405a-9f06-c85b925fd8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b08d587-cd9b-46ab-9fe4-9039e1b70e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde83f0d-850c-44c9-a53e-c6e5cfd9719d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc22c30-dad3-4821-a510-497b8f45c2db",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82eb69d5-9c09-44c2-b159-399720f87b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02f3b3c-0b08-4197-994e-7f6a9db74caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74170ea7-89ee-4cc7-bad8-d44509ff8b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193e19a0-8b4e-4fbf-a69f-8afdb9971441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5409c248-6af3-4de6-badb-2470cc18bed9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd6491e-a5e1-4260-b1ac-a86e80a21233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e2802e-d516-4a16-a813-914a53edff5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bdd76a-2548-49a2-a959-2db7c43c55b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5d89d1-6ac5-4633-8731-4ededaf3b46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ebce2d-2965-4750-a468-8ff8f409caaa",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316f979a-805b-4ba6-8118-ee7f99597817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "009cca66-2d84-4a70-bcda-a878965b58a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25927cb4-edb6-4ccf-bb96-72c410fe4789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4cce14-d3e4-4689-99c8-4e2c2e804b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490a1dc2-f24d-465e-aea6-0faeef3b7f0a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6249ddd6-b162-4dae-a6f1-b18e9087f284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c13322f-639c-4a31-8f48-7cd3d1e13b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4caa09-0e4d-4e57-b9be-0b6f64384dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159a0a94-6e10-4319-8185-e19a7d6fbffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbc7d79-9e11-46fc-b423-60c5a140346a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98114b1-e289-452f-9d54-d4a395674e6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb6432f3-d310-4ba7-9115-1e16152e9a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd77cf7c-f4cc-43d0-916d-7ba2e9812bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6751a63-bb36-4da2-ab4e-26825eb1142f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ca6569-5767-4acd-8242-3d518b33b18e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68852cc-11a9-4b4e-a56a-c15a70b0ebf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5915884-b4e7-43c5-96ff-51706e8685dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29aa1294-9a7b-48c2-9fae-2e5a798031d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9768acab-15ac-43fa-a569-34649e78784d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a159d353-ce56-44ef-9265-19d23a21482f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27ce44a-554b-4a81-bd57-a047ab68f83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a219e5-48a8-4723-b85d-5b71f13472c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1de7d5-0fb9-4a62-8b19-ce32e8683c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3096d051-7c89-45e9-b5a2-a35b1d82781b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5537a3d3-6056-42a2-99d1-1e5a072da89b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b72252-9566-4f1c-916b-91505d419145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f3d394-899b-4403-9ec7-cb4a0ad9777a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4055d5a1-96dc-4a36-b8d7-ac4f0e0d23ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577360b4-4796-455b-9775-3a00362cfdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99455f7-8688-417a-ada8-38ca31c48f29",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8566a26c-53b5-415b-83e1-fae8a2dde829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ddf773-8683-465e-a699-71ca46bb0ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90bf0ee-51f4-4a2a-8c70-9a9ca8002ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd63331-c4f5-479d-8348-6c2e78ce0873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd28117-e83d-4e6c-8f64-391d78fa3e13",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b5681c-1c34-4956-8861-6747e5cd3529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bb940b-7217-42b4-8823-2cea8de1c2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08453c8e-54b4-4746-9202-dc4ddf0b00a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc75176d-8e45-4eb6-a94a-68c132dbb364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929008e8-8c14-4250-9935-a157e2fa78f0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406b3903-7d52-4d3c-b73c-71882963b22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68eb3926-af5d-496b-b909-3b7efd5afe96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768f423a-503d-4ed9-a070-277a1c460dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceab30b2-fb9e-49dd-9964-bcf7bdee51bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49a2976-e3fa-4f22-b9a2-cb0c1b2e4658",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3265b9d6-f164-4c4b-b050-4be59a0c037a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6734f2d-0cb0-4979-9de5-5294fb1d4a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a8761c-0ce1-4bef-86ab-e5e1655bbdda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32486a93-df9b-4d50-a040-7b4684d38991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cee70ad-efe0-4637-9663-8a97dbada2b2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d09d431-a56e-4aa1-9710-53cc58dec2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03dd5f1a-f6f9-4f93-ad98-7479214b3af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c68e50-3d5f-483e-8286-34ed2b38c6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6cf94b-0746-4405-b5ad-dfec185d9108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbf2f15-0f4a-4ea3-9a90-a5227af9a229",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b51e45d-e612-41fd-8dbb-ef7b65787628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3feb14-51fd-443f-8e77-53bf70954b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0adf6c3-ea53-4b08-b58b-cace852a335f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a523a72-153a-4e09-a00e-98a325d60bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2694ae93-297c-45e3-8269-93bdc8d5da7b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3be69a8-52c5-475c-9757-c30b43e0fc04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "865e8a30-1331-4ff5-b4b9-5612f3e40f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04647a99-4713-44ca-a060-a89be67a7059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c776a0-77a6-415a-a226-099dd4e54545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50d42c9-02b5-4720-86e6-5d400cf6d559",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6062b9ea-8f31-46db-9d73-ecbd998b7e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c184f7ae-a3a5-4f79-9d37-6d9279f81e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce3fb9b-9fb0-481b-a933-f7a1bba1ac55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730266dc-9134-4e7f-95ae-005bd4314292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35377154-d8c4-44e8-b602-537a0e308d05",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c212253-6fab-4833-85b8-385c1b8463e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e39c5b4-5315-4370-b59a-0d6158204642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d82f15-a72a-4a42-bc1c-1a37cbd5c4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6b0134-c541-4612-926a-a743a1b0df0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad0132f-4b22-4a96-8fbc-951614d5e66d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b3242a-c4b5-4d6f-88a4-e0fe69f61528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a463984-e9ec-45ea-9e92-1d54199d021a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0439ee-c6e7-4a08-8f4a-84aeced1b7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baac5319-28d7-4f7e-9b2b-7524c0e44be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcca435-4d7a-4840-9df7-d0d95ff26c20",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c05112-e076-496b-81c4-b102eb2d3ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "384e7879-1814-4cde-a928-297f7696bc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b8d7a8-884c-4e7f-8814-1feae1cb0a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779668b1-3704-4b5e-9afa-bbcdaec6d0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6197675a-5f54-4946-ba09-40a4a4cefe20",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfb0c21-2cb7-47a2-a2b4-2ce0dfc1bb35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4984d62-902a-43fb-8a68-d6c776de834f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e2075f-b466-4f79-9280-9353ce18ba14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b92108-b3ec-41fd-a9b8-0fc28f0b741d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c59a65a-808e-4cd7-9ef2-1cadb6cf6b2e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00b6e2b-1a87-4324-97d8-2e0cf3e474ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c91fd3-7906-4bc1-9666-acf43350d43e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d0b305-c2f4-42a6-aed6-4f60c7a0d6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2df4336-f247-472b-9377-8b40fe10de5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57c253e-eba5-4ff4-a08a-69a7ce4d49e1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcd6d34-1c59-481e-a0e7-fb136f0fe961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e09439-af52-4937-a098-748822ac59c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb7a607-45e2-4615-b690-6de2592d7936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880a16bf-9418-4518-a3f1-844696e103ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b7d894-2339-4e30-b8a5-70f6f4657564",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04cff0b-5b09-4955-b39f-87936f76b322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b91db13-a18c-4079-b668-1ea44433e0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba40170b-8867-4636-8513-70c2c82136d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8b1164-0782-4d33-b4d2-991faffd32dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0701e6f1-99ae-4b15-bb0f-9ab1fbb55338",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7541ee6-4bf1-4d98-823b-a33babb85b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c75cff-677d-4ccc-bfb5-f368c8ac5e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a27637-3842-49ec-b23a-a67e6aa3011b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edc2fba-dd75-4653-9874-84694837ae23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b716c1-a296-40a1-a635-4eb65fdf3db2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba076347-8212-44e2-ae8e-5e7d07c613ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50222b8b-4374-4b60-80eb-1d85d031e0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e400b520-ecd9-4cf5-a2d8-34438559ff36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8609d8-0338-4e32-af8c-467c2bd90b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6a7363-2ee5-4150-abe5-a65e1b143464",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2103d750-37e8-4507-9ed6-e05f9ebc22e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be331c12-e5dc-4ca0-b808-c3f56297848c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b0066a-c104-43a4-a866-3023686bdca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67120fd8-03ef-492e-afde-8fb5b32c5ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64009125-10ff-4601-9691-6c5426329c7f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc66630-1c0c-470a-9d89-81925fd0d184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446042b4-ff12-48ff-b74f-f538381e8820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da394883-d768-469c-b921-0d18a29f1290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9692dac4-fd3e-4b20-8ebf-35ccdeaa98d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37d4f4c-4cb4-4a07-9767-764832fc78ca",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09e97b7-9c6d-4f7f-a307-1989a055b533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcb6b56-bbf7-4a6b-9c4d-cd76d33a8fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7b1e33-46c7-48a5-a5c8-22a4b6e84acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b691d25-88a3-4719-8aba-eb409ed78c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca8669a-4977-432a-96d6-f1906072bad7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcff44d-4f5b-48f7-8095-f2c7ba23c973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02cccb32-e2af-4e34-920f-81f4086ec53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a578b5-39f3-4f2e-a56f-c262a0caec54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7b14eb-b155-4383-b5ff-047377a74c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5b5ae5-4422-40c9-aab2-8a7eb0cd2f71",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88221074-a51f-416f-ba15-70109e820715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd82d3f1-9dc9-42c3-8e99-cd813c554c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9530f7-3331-4026-bd0a-2878845d29db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3089153a-56f0-48f6-aafa-e290b5c49fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bb6eaf-433f-4bdf-8534-dc9c2e933711",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c0c355-04e0-4049-aeaf-9a55e9212f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cbe5c5-d104-4650-a0bc-ccf0bd2ddcbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbed8a80-32e5-4d8e-aba5-1f5f24ed78e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2accd011-4d39-4cb3-8bcb-88abd35d057c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df96127e-6cb0-4af9-9080-5dcfb1365634",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e351341d-cf75-41fb-b5bd-1a9399b0c12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9586fe30-8e61-4119-bab6-cb3105472d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc0c486-de67-476c-8fee-fb26622bcc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426ce8f0-3f7b-4592-a5b9-62ae9f4b02fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788b9d8f-e3e8-4a14-8ef4-26174959fdf0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2568ee22-ed04-4b64-9478-f0d65c29b2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1153081a-e475-4f4f-af5b-c63d2588f9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dfa12f-44c1-4247-a74a-852750c6a4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf3f2f6-ed2f-4768-9135-a12614c0be02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c514443a-5821-45c9-9cce-19a4b462f1dc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392d9523-5348-4f76-ad3a-3caa8ff3ee7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6e081d-6f7e-44ba-b3d3-57493b21c0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0fd1e3-3c9d-478e-bed7-6e65a1102cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816b1bb3-b5f1-45f6-a200-7d5625907286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1069b8-7621-4c9e-b81a-3a71b1b445ab",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab3c1e7-37b6-4529-ae9d-f8d11e144295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414b3a2e-28ad-4c12-8692-089b3f8ec748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "958dacfc-4c71-4423-8adc-20732547d49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6ad1d4-218e-4cef-aa89-98c72b9d8c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07ee474-8eb3-460d-8b34-38434aaa65c0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21677f70-8281-4f17-8c37-88c4e79cb0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d5a87b-3951-486b-ae50-5c2299d78782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c807b2-b43e-4393-a065-b94acc5eee69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dcf9f2-40fd-428d-b4d0-60c71d257753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8085be3-8db3-46a1-8e51-cd4c4ff47eea",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641d58e7-a10d-4bec-9074-bbbc6ff479e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe15694-49d6-47d3-9b19-4b3247123382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26554de-d355-407b-9d4b-7b9e9478a719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f4bf5c-d4c3-4531-80b9-a4e4d6dfb79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540c7493-dbb0-409d-8619-008ace40fc04",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0d3a75-c602-477c-8d04-dd30ea7bc7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931aed72-94bc-4d30-ab81-308da9f3a59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8e7804-37ff-418f-b4c0-ca22b094cc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5402afb1-7845-4052-81c9-222c4756e5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97c0cab-6113-4f7c-a7b5-1ae349b2ce69",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce9f461-bd00-43fb-aa17-078e256f641e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df37d97a-c1f7-48ef-a758-a6ac648e9d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7417226a-cbce-431b-8765-b6eb7377f105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e438ff-997c-4bc6-a5b4-165409ef5dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2850dea0-40c4-4faa-9858-16b0e17bc220",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1032d1e6-7ee3-4013-a430-6af808ac7110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67487560-5a78-413d-af26-bcd898d4408a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00505149-8cec-4245-9d7c-a6fcf624ab5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb30abb-6d48-4606-8d55-7da9f9ce0dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e13fa8-0a86-4a79-b881-1fa6ea98def9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7605609e-6ae4-4fc7-bd91-cfc407227dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c618c55-f6a6-4b6e-a2a0-17a9c151f73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1163440d-b1ad-4b71-8407-b8b62cddd22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd9033f-ad64-410f-8b5e-42b54834d8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201b0446-0afe-4a92-b4ea-f6b7298fef46",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7276d1e5-8daf-43d8-b3a8-3c77fc931d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa7b568-468b-406e-8b28-e59e3785cfc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095fb67a-5948-49b7-81db-97d30420eea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e105af-e9aa-4c56-8f5c-a9c1ebed13cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f693911d-ee79-400c-b341-fbbf61e2c25a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4898509-2a5e-4177-bf76-6f469ab32498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dd4266-69d0-48dd-9d7e-de294a025329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f96f55-52e2-43ee-a41c-d7da2b14fa5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c866946c-78eb-4036-b69f-4d80a3400083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67bd326-60e1-48cf-8846-2bbd0e460431",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073d1b78-4628-41f0-b35a-ab20e17bd59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d660de-8496-4883-b94a-15dfcf8255d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d4d929-7c83-4b1f-8402-75a45e687c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40dead9-2c70-4b0a-887a-22a04c4c7b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc55ae3d-b10e-4003-beed-379a76782ebb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0594988f-e98b-4754-8a18-b4ef6b7e2b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651d5bf6-7f15-48f1-ad84-3d299da97efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d842241-85cb-47ec-8910-40a028b819a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493474ba-0142-434d-88ab-269d905f08cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1460a6f-ba8c-46b5-aac8-d65763eb3d35",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6638376-12c6-48dc-b987-56ddda3b0208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527ba969-21e9-4a8f-b0a0-a4ddf442d5a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289ec751-753c-48a3-9ddc-afcbc96084ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8745685-ff00-4ccf-b255-e7bd3dbb02c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298a74ea-0e6b-4ce0-9e08-4bef921927fa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1915d2d-07fb-4e1f-829c-a2a18f9b9dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5dd613-b977-4b3b-95a4-24f57635fa3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c755e0db-ef12-475b-80ee-6690c98e6946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2518c2b7-9d7e-4a7e-9527-483790ac12cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb9db51-2a58-4eda-a8eb-b754b3533f50",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040905bf-0d88-4182-aac2-952a5b9f9df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cd8c0d-6c73-4aeb-b188-ef0423b53373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7b7e13-a9f1-47ad-a9af-f43a8353e620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e640ee-b303-410b-b9eb-7d43c5eab076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d78e426-f823-4135-8f1e-ec74b8efa279",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5762c7de-512e-452a-83a3-4cd62e758f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ceb41f-c1d6-4e7d-8820-836303eb37a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db9b5ca-4df8-4eca-9c92-39a806a0b7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34ea0d5-6d7b-46bb-88fb-7bdd6561b72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13ba1b1-8783-4dbf-b4b2-784bf587e386",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7143984a-df8e-4370-81bf-735718bde881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a707db1f-01b5-4741-bda3-476e26a67bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94ae0d0-e6ed-40bb-9bd9-11b6421494dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf54622-a1ab-4727-bcf9-3a68cc4e4962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60dee6d-6981-48fa-9fbf-62450af06701",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbb5424-9984-4817-bc66-8c7802c49565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68af894-5fe5-4f05-b112-83cc337b9e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf5d6b6-a37f-45ce-b582-403b393f02db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c7c527-1230-42d6-ba70-fd96b4d9ae35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9655175-9f61-41e4-b7aa-a3d3e8bb9810",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4831d954-bbbb-47f2-880f-c60c0968c622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d171280f-2b38-4c6f-b7bc-700ff3d583f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2443fc94-21f9-498e-b2c1-60da220d0fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4bdb69-8484-4cc0-a470-53d37a841bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343f800f-8a6a-45e7-a402-7d6cf100caf1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4dfdf9-3734-496d-bdf0-f3fbe4b91bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6bb3a2-045e-4231-9853-c26fe3bc38b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "416323ca-b491-4e66-937c-74bc9bd9e04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4682e396-152f-4dd0-8951-698d394d09eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32be9375-c9b9-48a1-bdf9-65fa7bf21f2c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183a70c2-d044-457f-b3ae-6ddd97c5e919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e695a8-079f-4bea-af83-658224997170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270a3d5a-5b81-49a2-849b-1a6cf819cea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1bab7e-18e3-481e-8124-ec228c1c33ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec0534d-757d-44fd-9a18-121941b081a9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea6f947-8795-404d-86ee-a38280736be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c2f86c-42c1-4e71-ae68-ce90395f6dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868259d2-ae73-4458-aaa2-c9249188f3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238e3185-a162-4992-8bbc-30e23de4f8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2d57ba-1be3-42be-9422-f532282ad63b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a87fb5d-f925-4e7e-a5f9-3ec0e80e649b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e6365df-8818-4c6e-867e-d3a6b9a6533a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4658636-04ca-4b7b-8cf8-ad27f0ecb028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b9f01b-7ca9-4d72-bb42-a68a5023afa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3854b49-ee63-4491-bc6c-f8e40a1ea3ac",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df91c2e-83ab-4363-a56a-d4727c6de23c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f31bbf92-ff2f-46bc-acdb-d833775f26bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f4c657-16b8-4f9a-9cc1-9c90aa3931e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fda287-8028-40aa-bff2-a3b5fa8f479a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc02a99-a3d8-4d0f-9e62-0d716e07a778",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af920b4-a65b-41c1-ba9b-38aa9eee424a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44363918-36df-49df-9110-002d8120a057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f899f2-f5bd-4466-8b49-390ac8b329ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6eeb61-2c7c-4d66-b459-d3b884fbf287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883cb51a-5875-4b86-b674-932e6d504dbc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edac4a70-1cb6-4f02-ad1f-641da6105d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dead1751-d229-427c-9951-a23de2861ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7e91c5-5fec-4356-9c09-452f8a4be7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42598b9c-199b-4bf0-b4ca-f13f68b69cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cb712b-1033-4e07-afa8-5cfd262e6ea6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd306c19-002c-4c3d-b9bb-129fffff4536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af455eec-26b9-4b76-8e0d-6c2d1991db28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454e1b56-aa12-4c86-8031-3bf1d011a1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1bf899-0933-47ee-a889-0fcddc4aaa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365dfc6b-f72a-4df8-b148-2edc6c87b4ae",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d7e1b6-e784-4d5e-b52c-eb15295b2d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ef383b8-1aa2-4dff-9505-1814a5306ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1a55a6-9cc5-4b2f-9ed0-dda94b4d48eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4cda41-99b6-4f94-8021-10cd0f3b5dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8fdeff-dc37-4522-b765-5460e66c7707",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35776d8f-abae-4180-875a-997f1398e113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329944ba-f15f-470d-96b0-9dbd37a3cc4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72b6364-e0b8-4632-a928-52b7675ec4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a4cfae-e15a-4f9d-a61d-21d49c231077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73393498-4df4-444a-ac72-ca64fb269b76",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90c41db-43b8-42fe-8b48-d127d0961869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64b49b85-3f81-43ed-9680-23aa53ba1205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1cf231-ab69-4445-bd7b-109e3fe8b797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6289a3a0-31f7-4570-be39-a0f67d70ad0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba458a69-1f79-4d96-be2d-934e6afb89c7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a30fc3-eb3b-4e19-a8c3-21ec115c824f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe290826-6e2d-436a-adcb-08d58ec7e3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f11910f-1618-41e1-beaa-519bc74243b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a24873-9b05-463c-89b4-7b92de7c1040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559b9283-6fe2-4ee1-b10a-5195843c05ef",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d3a123-0d45-4cea-bdbf-781f50bd17fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84e6f6f6-30d8-4c20-8056-79ca7be92977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e03dcf-b31b-4885-9961-c9fb42e97e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef3a2f2-2d1f-4f4e-a5d7-61335dfaf738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709fc1d6-0a6a-4e61-a358-4a03a031e193",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db03840-6d93-4eff-aa8e-d55422eb3594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3733cd-840a-4fc8-b995-74276b4729b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d356abb-6f79-4ee1-90f3-d5721b312da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e10e4c-45de-4684-84d6-c7adea7d2f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c9d3d8-7392-46cc-8179-589150126c5c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712ade07-3fc7-456b-8564-5caba6ba973c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56b7a6a-90f6-4fee-8156-7bfbcaf03fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b2f8b2-d7c9-4c4c-a1ae-5d5916d450ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d049cbb5-112c-44e1-9ca4-7a17e1dc8af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8686b369-7c1e-40f4-bddb-f6711c25fa6d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296c6ac7-480e-4ef0-b131-bdcaa1c48d68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0147445e-d1cb-46b0-9bd3-2e1cc968456d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70e818f-6073-4a67-b398-ad2fb055ad3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a217addf-c19d-4684-bcd4-2d3547237215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8349ed60-00ab-4287-9bec-411b1e473db4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73022c7b-79e3-4936-865f-8676e4c3c783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73c12ed-8097-4db0-b602-4d9a8964d5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236f4ac6-e3ee-4657-b25f-17eb833369fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ba166a-3b6c-45ca-8d86-7919b402034a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bb364c-ea0b-447b-a92f-fc023ca3e889",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78db261-3fe4-4c0d-8dd6-091c18d00a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ce3327-1809-4606-8b14-fafd682eafcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d9691a-3d4d-49a9-a676-1ff07c6d6b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6e22b9-e43c-42c3-a4eb-083e6b97abc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614725ee-db07-4402-ab1a-f1458b1ef6d6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf3097f-46ac-4e0d-a60f-5385af76a8fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832b6969-cba5-4a0b-8808-c39545682b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e823bf6-84fd-476f-88c5-44e821aa786b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151af26c-b0f2-491b-b477-442840f0b01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4168fbaa-3a67-4dbc-b77c-eae623aea3e7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db427b80-b6bc-4f27-a7df-d52aab5037a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a8f55d1-f5a0-401e-bf0e-5c57f257ecb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5222159a-29d0-4599-b6f6-90f7514d493c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24d96cb-0e63-4f02-b915-142e16d22527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b212ec18-4daa-44d1-8b24-ee2250323803",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e0952b-0eba-4b9b-9e98-488fc2619f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6d8fde-a144-4783-9669-0fb6737913ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed83e29-c704-485d-9fbb-3d75d59747ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648a8bdc-4933-4fc4-95bd-50bf19fd86e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d60fd81-f091-42bb-a22a-2a6e613e6124",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b8500d-3153-4d99-9443-26b540a78478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94cb45f4-77cc-4a8c-bfa1-8fcf3e37ed43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91b2422-30a8-41b2-8df4-9465c2743537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e858ce-c973-4dd1-b566-e801e8ab280e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5915de8c-87f7-41ab-ab15-21810db43368",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ffef47-0ca3-4291-af23-93e561c77179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54065135-749f-4640-854c-277019fed3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126b8849-9db8-4253-ad42-c3ac626b0989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a471636f-07d2-47df-bd9e-542002a5e785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711dd161-3460-429b-bf7d-a1651644f498",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f256bac0-389a-4c25-bcec-33c7d0f7bfe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c5c0679-347f-496b-84fc-bc14731cc8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec66c164-da05-4926-ae04-133b3d0c0e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227ac4ff-2b75-4db6-a303-e2d89573b448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe4e2a8-9f67-42ab-b6d4-c35f50f3f295",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5a4db2-e086-47d0-91f9-59f84e5660d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22e0e6af-722e-448d-8e85-d699601d99b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f8f603-52d5-4594-9eb7-78a153e15565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0975bb8-3fee-4fc0-a4e7-f94bd6ec71e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074291b0-d2f1-49ec-a289-682449a160ab",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e315925e-fd87-4572-a9b3-5aa4c8e81758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96db2667-0a75-421e-b1df-4902eae0be86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f219f016-6560-4c70-936a-9185ed2b32af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be3f0a4-5a7b-4ede-9e40-3e10ff297d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ce1480-72c5-4c68-8336-f992c23da412",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c704b3b-c580-497f-8d85-3acc4fa9d0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d411abf5-4f13-4270-bd9b-6b00da9647e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f1c4c8-2260-4df0-9dbe-36b626561c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbc8930-782b-46aa-bceb-9b0722be91db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f0427c-34a7-4f87-92f1-626bfe7f420e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e1a043-ee6a-4108-b965-042652db97d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e911e251-8c67-44aa-b400-f65d8d57fe8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdf0aa6-0865-49c1-9812-8e3335296bf9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03483857-db8e-435e-b38e-366d84b45af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca532a9-74f5-45ed-bed8-dd8a85ebd9fa",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7882b839-d825-46f2-bfb5-98464aafb881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89eb7f17-b167-4e80-a21b-f8bd88d83fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dec565d-7abf-4b40-9b72-6c4c396ce384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e517692-0543-40c5-88b5-2bda8825a4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e64bb6b-6c24-406d-8561-b872c8be0da8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774d54c7-48f6-4f96-b9c2-b653046d9c96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a68cbb-8d66-4f3a-bf82-9e686fbb40ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b146ef-a6c8-4b76-807e-463daf584ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ad6224-c705-4919-9d35-7446e60b2d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed94ac4c-21d6-4ae2-bed7-8bfeaadb5551",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c70e74-fb18-4f0d-8c6f-408fa8d05eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cce21af-8be2-439b-ad39-ede4a769293d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa03e02-b7a0-4a38-9968-78ddd00a1aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6476f04-5b7a-4713-9927-805f789e5c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09d6e1f-07ca-43b7-9acc-cc68baa096b7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2100661-6c72-4d26-b859-32e70c9e055b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0be8c836-2cba-4089-9110-e83077399257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbac3a6-76fd-4a73-af2c-04ea4c20a7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7cfb41e-da5c-43b7-b563-ab1ce28bffb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c037f605-64aa-41ea-8aec-a121f5a45e8a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5296d2a0-28db-4db3-9ac3-9b980ec152e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0226c20-7f4f-421e-920e-95324806e4c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ddfb01-4bd9-4a0f-9793-4e3bc8676173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9383d785-6300-4fb5-a355-9dbac6deb966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42132d8-6d37-41e6-a001-07efdbc403fd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52eac93b-3477-4ff0-b6ea-af4781239626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80883aa1-b9cc-4cd4-942c-ad7392926349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5db6e49-deb6-44e6-9497-109210074e21",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6116eb5a-dbf0-4621-b551-1c7b4c33db36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd126485-e470-41f2-9ce6-015f078c282b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c26974-b1e8-47c6-96bd-91d1e5eb1f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0195be15-c172-4085-99c1-4ed72a9d281e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f60e41-f0e8-44a9-89eb-00cc22d386fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5682d7f9-36fd-4856-a40d-256375fde62e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74d95310-77fc-477b-9951-85a2bee52eef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "472940ba-5ef0-40a4-9ab0-c1740d64f589"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6590b018-169a-492f-9264-f42d07637b22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e54cc1b-8d3e-4d0b-85df-719a73390267"
                    }
                  }
                ]
              },
              {
                "id": "361a63d4-db0d-4bb9-8f4d-f2c05eb0fea9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13a2e810-8a12-43c5-a364-a54cb257b622",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ea84da-7885-4325-b2c0-8c405b334fe7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9ba61886-97c8-485d-8601-b65433e3a2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cc0c3e-21de-411c-bbc9-47b582cc69e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f18a1a24-d71d-464c-a965-810f00a64a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eaaf70-7091-43c6-8733-218c29c30148",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24427bed-3149-4ef6-87f8-4cc39c6c6b44",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ab2c46c1-05d3-4ae7-8e1c-6939865141b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee287d0e-0195-40e5-9325-693314c19934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ffbc789-4f49-40ae-b451-b9a4f06ece2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b85deb0c-77b6-4c03-824c-6ce419da3232",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04e8296b-677f-4412-8761-fc2dddcf144c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7360f3cd-5775-45a5-8505-80fe74b7485b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81bd2ac6-4b76-4781-adad-8527ff90e4f7"
                    }
                  }
                ]
              },
              {
                "id": "b59aca62-8c99-4685-b630-f7a582f5867b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d21c413b-0b28-44f3-9251-b5ddb34eb530",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7cf259-5592-4b5a-a0ca-23a47cb666f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c4e3e075-bea6-4821-acce-4fd6b1592c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3980387f-76aa-4d9c-b160-12b15d0816eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dfc5e6-622d-4d7b-92bf-2f22ac19010b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d4e4b529-13e3-495c-9a3e-77f531ede500",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c180748d-5100-4350-a865-837f67f6809a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6e9aef0-7584-4a88-84bb-a10040a54e56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f9832b71-4760-492c-9950-c70d09227599"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bba23c5-bd8b-4b04-92e3-553647512c5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1893924e-73a2-4d85-8da5-49e91350a1fe"
                    }
                  }
                ]
              },
              {
                "id": "2f8d337a-a6af-4039-806c-4f6e359b84ed",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2422d25c-2fa0-4029-a669-b4786a509ca6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "683a6512-1a7a-4123-bc3f-0e571a3aa2f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9259ce07-38f0-406e-968c-f254134799e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f525b7b-a8b2-46e3-912c-4c83abc12117"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4ba9ce8-df6b-4e46-adf0-c114ce219cbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c87f34f1-58b1-47d3-8e18-4af95d19e829"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e81333d1-a46e-4663-b999-fc0a68db1dab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "232a5173-153a-44e7-8e9a-5fdce068a3be"
            }
          }
        ]
      },
      {
        "id": "87f5ab19-0355-479b-98d5-7b304d5860a5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "542a2ad6-fa74-4c1b-8a78-4ab457e191c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1e41e45-9b86-4e54-86cc-ca52c9e7ef87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20d5696e-c393-4b39-9fb7-08d091d5ec2d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4971efa-84ad-4502-96f4-0967b241b920",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "47c76dfb-78db-4eda-9d64-d51309d89772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdcf6b2-46a1-4831-a0a5-d3b69c8b8c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae49741d-a415-4eba-a49c-abf250b4275b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a014f4a7-151b-4573-ad8f-dc231e17502a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca7e720-8d85-4b35-a1f8-4d3e0542b2ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca60c712-5fcc-41d5-a500-fc22e790f372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a294ee4e-0432-4df6-8c58-8936329ffc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09ec22b0-12c8-4adb-9928-b6e6682ca156"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "608a5761-a411-469a-8585-cab38830767c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c87f93d-26ba-4716-a7e9-3e63de9a643c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc87afbb-0c6c-4e6f-93f7-629e7ab5b152",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52816c22-107c-4ad9-a54d-60040588a473"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76b135df-3978-40b8-aef8-48cf43b37025",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "47978700-6f68-4c09-b5d0-c057446ae926"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2160afaf-3f14-4b71-a949-e34488f6fc99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b7d16fc-d35c-4d4b-85b2-761e28a1d2ea"
            }
          }
        ]
      },
      {
        "id": "71dec683-7968-4f56-9e51-d5a6c3302973",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ab1213cd-1914-47d6-92b9-c100ea08ac6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a50ae14d-3088-4d90-9252-19143f05fb8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29110c2b-6788-42c5-bf74-cd27a90ab821",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a2ca15-f58a-47e4-a6dc-921efed58086",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8db6682-f72b-488d-b5cf-02a0206e41fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab441b85-f85f-4090-a335-877e23990ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daccfa16-d5aa-430e-aad5-08c71d13cdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dacff9-711d-42c2-a36e-99f6730d044c",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c28366-2ec2-4be9-a8b5-97491e0ceda4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "98f1f375-5f45-4691-aa37-c4960f103f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc23c28-e66c-4c98-9a41-cc0c65a19b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "138a26c8-099d-4148-9559-cf979f85ce53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "905a690d-3a24-48d2-a892-ff0a046be15f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0749471-44b8-4cd9-b44b-7e6af3d31dd8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c7e8629-5e45-4b1d-8759-f8e9a893fe67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "878fd0f4-f660-4ea8-a37f-396c3a6a4e75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91fca632-c519-4218-aef4-30365cd01a85",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e0e38424-3679-4c6d-a264-d61862685dd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73ba520a-45f7-4fc4-bea5-378297978968",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37beb1bf-8d11-4365-b411-90cfd4379238"
            }
          }
        ]
      },
      {
        "id": "942b0af1-049b-4020-9445-641277186400",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "659a04ee-2527-4c79-ae97-eb07d50b951e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0fe5a2f-4104-47cf-b197-11f7232f951c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "279b131c-106c-4362-bdf4-9b9ab763d146",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abebb80-150a-4ded-99a8-df3bbe765128",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82870f1e-ffd1-4f1f-b9e7-e6d0514a2fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b5f27e-b7a6-4482-a6ab-fa6133174424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de23c5a3-0302-4395-bca0-099e4579477f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90e4136-d0df-480d-ab49-f91c3c7b1cd4",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f229cb2-4ece-48e3-b232-e5085c6f10e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b35b1b63-e10d-45af-9cf4-3b766acb27a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31323fa-ab8a-4fbd-95da-cb63fac6720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30d1fd0c-8c88-4995-abbf-ac882ab61415"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d6b0e1c-7e25-445b-95df-bdeb0cfaf194",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82b3c212-170f-4e35-a119-d6a9b1412bfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "284498a0-e1dd-4d72-8417-fa3180370ea6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da191c69-105b-402f-8420-474ade5f8aea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5bb85a1-6df9-483d-9115-250b976438bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41b503be-0b46-4137-8056-4af1e477200c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c51d5526-1e9a-4489-b7d0-3e9c825ed79d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a41b9b0-35e8-4529-9ba6-f851eafa7cfc"
            }
          }
        ]
      },
      {
        "id": "6657fcb5-8c1a-45b1-ae1f-da2adcc511e7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5907112a-b67d-461d-a22a-03855e053ec0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cde3fab2-63b4-4568-9539-286fa80c7249",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "746fb9c0-4597-43ee-a9e9-103d20db1289",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e10f8029-a5c4-4e6b-a13b-35d0bccfa033",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08e33852-3fa4-4fa7-ba23-6f9c6580ccc6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 946.6230769230767,
      "responseMin": 21,
      "responseMax": 13207,
      "responseSd": 1219.392586907891,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682037367709,
      "completed": 1682037624820
    },
    "executions": [
      {
        "id": "4bc35efc-2c35-47a7-90bd-600e118cc540",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "73362d9e-7cbc-4318-9923-b1973c4217e8",
          "httpRequestId": "aaed14c8-9b41-4116-922c-0f593ee732fd"
        },
        "item": {
          "id": "4bc35efc-2c35-47a7-90bd-600e118cc540",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0abfc0df-3759-4048-a785-11cb1aeb9204",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "e2ad2afd-c0bf-43de-b20c-c3c54b990db3",
        "cursor": {
          "ref": "f6c13440-ee3d-429c-97ef-06db812260fc",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f38ee15b-24d1-4b43-bc2e-7432d7e857bf"
        },
        "item": {
          "id": "e2ad2afd-c0bf-43de-b20c-c3c54b990db3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "553db6c1-79b5-47b8-b152-fc787144553f",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "04b04256-2eb9-49a5-955a-2e46f11e4567",
        "cursor": {
          "ref": "5c3040ad-ca9c-496d-b16f-7c16f726b0bb",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f4511363-9af9-46e9-8591-dc862a578f54"
        },
        "item": {
          "id": "04b04256-2eb9-49a5-955a-2e46f11e4567",
          "name": "did_json"
        },
        "response": {
          "id": "ee8d5790-7e82-4493-a0c9-16d1c8b72156",
          "status": "OK",
          "code": 200,
          "responseTime": 1199,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5c0812-4de5-450e-a2b5-2a0f91724b8e",
        "cursor": {
          "ref": "a22dbc99-a988-4cfa-8d17-fabbe9bd3873",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4e79a59-c55d-4890-90c3-c332300bbc4f"
        },
        "item": {
          "id": "0c5c0812-4de5-450e-a2b5-2a0f91724b8e",
          "name": "did:invalid"
        },
        "response": {
          "id": "a208b0bf-fba9-4fa1-8733-44215c1e0cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1187,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5c0812-4de5-450e-a2b5-2a0f91724b8e",
        "cursor": {
          "ref": "a22dbc99-a988-4cfa-8d17-fabbe9bd3873",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d4e79a59-c55d-4890-90c3-c332300bbc4f"
        },
        "item": {
          "id": "0c5c0812-4de5-450e-a2b5-2a0f91724b8e",
          "name": "did:invalid"
        },
        "response": {
          "id": "a208b0bf-fba9-4fa1-8733-44215c1e0cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1187,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c613702-ff0e-4162-941f-c8f575412ed9",
        "cursor": {
          "ref": "d73e302b-0f45-4473-a82d-1b2fd1013d6e",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e767ae10-8729-4d54-8c72-50d79d4e01d5"
        },
        "item": {
          "id": "3c613702-ff0e-4162-941f-c8f575412ed9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fa917f29-f1c3-43d8-870d-94e025babc0a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 836,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a6f7c6-612f-4218-b9e9-d39007a3fd28",
        "cursor": {
          "ref": "c24edf54-b8d1-40ac-bdd4-bd9c854e816e",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d6c6b6fd-fc2c-4191-af77-c97654fa16e5"
        },
        "item": {
          "id": "f5a6f7c6-612f-4218-b9e9-d39007a3fd28",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5b9b973b-21e6-4354-a559-b48c5521879e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 744,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aae88d0-88a0-4f05-8ff8-801c23936534",
        "cursor": {
          "ref": "ca9630be-cccd-4bd5-9a03-d9ea1a783e17",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1309a066-52fc-4461-8491-a835384dd4f1"
        },
        "item": {
          "id": "0aae88d0-88a0-4f05-8ff8-801c23936534",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c5e1ffc0-22d1-4417-9af9-7e9991ad90fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca192ba2-8f51-4102-91d3-da1687b33204",
        "cursor": {
          "ref": "56b8a477-fa40-4d37-8b73-28c62579c409",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f5dca318-c8ac-4b6f-ab8a-01cfb7fa7028"
        },
        "item": {
          "id": "ca192ba2-8f51-4102-91d3-da1687b33204",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7ada0598-3dcf-4603-9695-baebbd7a9513",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 820,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca192ba2-8f51-4102-91d3-da1687b33204",
        "cursor": {
          "ref": "56b8a477-fa40-4d37-8b73-28c62579c409",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f5dca318-c8ac-4b6f-ab8a-01cfb7fa7028"
        },
        "item": {
          "id": "ca192ba2-8f51-4102-91d3-da1687b33204",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7ada0598-3dcf-4603-9695-baebbd7a9513",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 820,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ac9c73-f26f-4871-8b9e-25b790f36da3",
        "cursor": {
          "ref": "0a5d2ed8-6417-4574-972c-3825be8674db",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d9e90903-3109-4c29-9ba2-c1ae663fc7ec"
        },
        "item": {
          "id": "81ac9c73-f26f-4871-8b9e-25b790f36da3",
          "name": "identifiers"
        },
        "response": {
          "id": "c71f1238-361c-4969-b8fa-a5b8165bb7a9",
          "status": "OK",
          "code": 200,
          "responseTime": 1360,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53b0471-ecec-4d3e-add3-38de6c8825f1",
        "cursor": {
          "ref": "0755ea0b-6d37-463b-bdfb-6e90eab7d5aa",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba2caf6f-a4b8-4a3d-ba6c-bf3739e02db7"
        },
        "item": {
          "id": "c53b0471-ecec-4d3e-add3-38de6c8825f1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4ce74a28-9e30-438c-92fa-008786c46745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53b0471-ecec-4d3e-add3-38de6c8825f1",
        "cursor": {
          "ref": "0755ea0b-6d37-463b-bdfb-6e90eab7d5aa",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba2caf6f-a4b8-4a3d-ba6c-bf3739e02db7"
        },
        "item": {
          "id": "c53b0471-ecec-4d3e-add3-38de6c8825f1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4ce74a28-9e30-438c-92fa-008786c46745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e2ff22-4fbf-4814-8443-984dc4bf9c53",
        "cursor": {
          "ref": "cbc704fd-daef-47c6-a4f7-745215267965",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cbacf64d-db6d-4682-888e-86dec0e31ce4"
        },
        "item": {
          "id": "d7e2ff22-4fbf-4814-8443-984dc4bf9c53",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b52dcafd-9e29-4849-9453-393cb9971727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fddfef-90c6-40f5-8b23-c9aa8b88cddf",
        "cursor": {
          "ref": "635ceca6-e260-41c5-9561-751666ab0bc9",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cd6130d2-d25a-4d59-8a3c-784c244ef1c5"
        },
        "item": {
          "id": "c0fddfef-90c6-40f5-8b23-c9aa8b88cddf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5e6fa66c-c754-4ddf-8bd3-a36d178f71f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c827bc98-8c4c-4f6b-9d5d-aa826617b710",
        "cursor": {
          "ref": "e10010c5-db84-4157-9722-48c1417c14e5",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "df95e946-9494-4b00-b8d2-211cbd129847"
        },
        "item": {
          "id": "c827bc98-8c4c-4f6b-9d5d-aa826617b710",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3fa58463-5dba-4adf-9aa0-8019c620bb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1004,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988653c6-7183-43ca-832c-a1aece7d40b6",
        "cursor": {
          "ref": "92ff3810-a0f0-4b97-a4b6-e5f766d44f5c",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ab5f815a-d75b-49b9-9e87-d74a7d8c6295"
        },
        "item": {
          "id": "988653c6-7183-43ca-832c-a1aece7d40b6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "efdd3f85-0402-4df5-84d9-56beacab5808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1522,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42936b78-1519-4e5c-af10-4cf25f6c044a",
        "cursor": {
          "ref": "f5cb6b6e-cd06-4827-930a-d9fdfa97b0b6",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fbf3cd9f-5c2f-41a1-8429-c9a576720c4c"
        },
        "item": {
          "id": "42936b78-1519-4e5c-af10-4cf25f6c044a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "10e5a20c-413c-4c24-9fd3-ef290b29f6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1514,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e57e99e-060e-466f-9f14-34872f47bf81",
        "cursor": {
          "ref": "9983984c-5bb0-46c7-ac93-dabbe8a8d4f4",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d379214a-70d8-4476-8b33-a350ba3b3ad6"
        },
        "item": {
          "id": "7e57e99e-060e-466f-9f14-34872f47bf81",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b34f0411-0836-4444-956d-4274d635906b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838ab9fe-2261-48f8-93c4-16160870ecd1",
        "cursor": {
          "ref": "ce31e452-6cd9-4ec0-8de8-04b52c173f02",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cb9ebb9c-29c7-4ae9-9cb9-1412d86a05b3"
        },
        "item": {
          "id": "838ab9fe-2261-48f8-93c4-16160870ecd1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "850ed8fd-df8d-491f-a601-dbce9c74a46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320b74f4-aec4-44cf-aebb-1ac3f27e8701",
        "cursor": {
          "ref": "09d25b93-fcc5-4217-964a-316d531493ec",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "af0feb8d-3704-4cc6-a1db-478fbdc2e05d"
        },
        "item": {
          "id": "320b74f4-aec4-44cf-aebb-1ac3f27e8701",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2d0859c3-e64f-4597-8778-101e12077c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e59227-d4d6-444e-a660-37a121417406",
        "cursor": {
          "ref": "792388d9-a126-4d37-a026-e138000d4558",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6cdbabb7-f81b-4130-9634-6188dfd59489"
        },
        "item": {
          "id": "d2e59227-d4d6-444e-a660-37a121417406",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ee765d53-22e2-41aa-b87e-c2845ffbb1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8326d163-8d1b-408d-920e-f5373bcbf4a8",
        "cursor": {
          "ref": "79159c5b-32cf-4245-94ed-687f0d97245f",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1a02fb81-f456-412e-8d18-2049099efae4"
        },
        "item": {
          "id": "8326d163-8d1b-408d-920e-f5373bcbf4a8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4b72d468-ea7b-4d3d-8e5b-5a239e6eee3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92d3004-81fb-4e70-9e54-be24eef642c3",
        "cursor": {
          "ref": "4ab90df4-2fae-41c4-b4cf-affb07fcdcc0",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1aa1c3e4-9328-47e7-af66-dd38e0c70a5d"
        },
        "item": {
          "id": "c92d3004-81fb-4e70-9e54-be24eef642c3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "50fc412c-db05-46b1-9a55-fc07f119862d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244f2343-93cb-4cf9-a4d7-e1ad6d488061",
        "cursor": {
          "ref": "de87cd9c-8aea-4b89-9144-4591f383390e",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8bbc2837-5673-4003-856c-4527c3b3668c"
        },
        "item": {
          "id": "244f2343-93cb-4cf9-a4d7-e1ad6d488061",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d95bf0ca-115d-4f59-94b9-57f6edd21599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8e262d-527d-46c8-8d3f-0138e91852ff",
        "cursor": {
          "ref": "233ad0d0-b4d0-485e-9d69-18bd8849994a",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "25459c23-e60e-4be3-a759-8e1653e2c9c9"
        },
        "item": {
          "id": "6c8e262d-527d-46c8-8d3f-0138e91852ff",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9eaa74d2-62da-4dfd-b17f-c5e8a9f1031c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386de1b4-53c8-49db-bbe8-4be56cb036f2",
        "cursor": {
          "ref": "fb0fc535-d45f-4f0e-b782-d1159bfe04e5",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "39fb4653-4e24-49c1-b7f7-fa1013ace495"
        },
        "item": {
          "id": "386de1b4-53c8-49db-bbe8-4be56cb036f2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "984ce38d-bf52-4fe7-9807-f65119ecea39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccc3bd2-f28b-43c4-9626-38152b63060f",
        "cursor": {
          "ref": "fbbaa3c8-14a7-426d-a729-ccc5b1a74806",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e8e5b25a-a0ab-4c83-a4fc-fbaab78134a8"
        },
        "item": {
          "id": "6ccc3bd2-f28b-43c4-9626-38152b63060f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1452b0d2-09a8-4e70-91dd-ea8794dfe93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dfeceb-5ca5-48b8-97f8-829e58ddbc09",
        "cursor": {
          "ref": "a4a6f05b-d742-4aa4-97dc-85b24328561f",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fb78cdb9-7c5e-48ff-abaf-acc1b4ac2543"
        },
        "item": {
          "id": "40dfeceb-5ca5-48b8-97f8-829e58ddbc09",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7d1e3404-b495-478e-b0e9-0ccb633845b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643b46e6-b1e4-4e75-8b1d-0e9676438729",
        "cursor": {
          "ref": "8548fcba-f45c-49e6-b113-4e8501afc7ce",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ab901414-0727-4ab3-9a0a-bf66877355c4"
        },
        "item": {
          "id": "643b46e6-b1e4-4e75-8b1d-0e9676438729",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2627327f-26aa-402a-a405-b9c4faaf9c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a5f06f-0da3-47f8-8774-c5f373ef07f7",
        "cursor": {
          "ref": "c55c443e-422c-4da5-8edf-9df7dd2fc7e6",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4a08410f-c535-44a5-af76-a9e0ab484df2"
        },
        "item": {
          "id": "c2a5f06f-0da3-47f8-8774-c5f373ef07f7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d5508586-4231-4e74-acdf-d7888bf184ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6451cbf9-673a-48ea-bbeb-c9505870247d",
        "cursor": {
          "ref": "dda07448-5107-495e-aaaa-40d53ba52a8b",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1c6c75cc-f4ff-4490-8144-05ecfa45a9ac"
        },
        "item": {
          "id": "6451cbf9-673a-48ea-bbeb-c9505870247d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "aae0b303-c2ea-4cf7-aede-510867642481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a797fcc7-0a44-49cb-9ea6-68e19e63f07b",
        "cursor": {
          "ref": "29994596-1ca8-46ef-9cab-5043df8a6086",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6315e786-25a3-4af7-b0e5-90d1b6a86c6e"
        },
        "item": {
          "id": "a797fcc7-0a44-49cb-9ea6-68e19e63f07b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "188e3c45-ea19-4f44-8d0a-b29a858f7291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cbe97f-bdf7-4e53-804b-d3265275c9ca",
        "cursor": {
          "ref": "13c8705a-4b58-43bc-81f3-2b4f3fb46b47",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2f942383-b56d-465c-a8ca-a7d0ae4b6059"
        },
        "item": {
          "id": "c7cbe97f-bdf7-4e53-804b-d3265275c9ca",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "024e83ae-b2cc-422f-ac3e-1dcc3ff6455c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296cb7f5-da52-4d9c-8530-f9b32af4b2ca",
        "cursor": {
          "ref": "fbc1f1f8-da51-472a-bb21-538d7f4a4b47",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f62a8593-c6c0-41fe-a736-27f0d67c1888"
        },
        "item": {
          "id": "296cb7f5-da52-4d9c-8530-f9b32af4b2ca",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e92a7938-7d41-491f-945a-158b152ca9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22475e0-e305-4eda-9a02-bbbc072d6806",
        "cursor": {
          "ref": "9f034517-f95e-4bf2-9179-d09679e82b09",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e80fa61a-f1ed-4d68-a41d-cb7b502f559e"
        },
        "item": {
          "id": "b22475e0-e305-4eda-9a02-bbbc072d6806",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b723365d-6f9f-4f97-8357-38d9cb02e65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14106d21-00d5-435c-8102-44ed03074ba1",
        "cursor": {
          "ref": "295c0774-e9db-47ce-9632-3851166a3a53",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cfb58506-42db-4498-9716-b408b3eed97b"
        },
        "item": {
          "id": "14106d21-00d5-435c-8102-44ed03074ba1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aab877f8-9e7d-487f-be46-ca39bebdcef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f6e471-250d-4fbd-b913-1666d1af1ba4",
        "cursor": {
          "ref": "a6b82ef2-c7dc-4dc1-8985-ea7db8a565bd",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "794342d0-6c0a-44f5-a762-94d1c1f96bdb"
        },
        "item": {
          "id": "37f6e471-250d-4fbd-b913-1666d1af1ba4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fa6d3175-a77e-43e1-9be6-9c7bdd0fb8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61e5bf4-33d4-41da-a63c-083f2f4ca7f6",
        "cursor": {
          "ref": "0cc5208d-62b0-4891-8432-86e56bf42424",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "751dc976-a93d-4f1c-a489-b27f8500c605"
        },
        "item": {
          "id": "c61e5bf4-33d4-41da-a63c-083f2f4ca7f6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4951499c-da9b-4f13-98f7-ac3800d56a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a021e9-ed1e-4b4b-a5da-e0001575f79b",
        "cursor": {
          "ref": "5f82a8cc-4c9b-42c6-82ec-0b4999a3fba7",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "10e17e00-be26-4590-af5d-5e14e351533d"
        },
        "item": {
          "id": "14a021e9-ed1e-4b4b-a5da-e0001575f79b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "13b322d6-5bff-486a-967c-48ab5a26b17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6794548d-64aa-4678-8683-16e40ad9656c",
        "cursor": {
          "ref": "c3458b60-c8a9-40c6-b7ef-d1bfd006378b",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fe092993-4562-4b43-bbcd-929a9cc4195c"
        },
        "item": {
          "id": "6794548d-64aa-4678-8683-16e40ad9656c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ed114ae6-0868-401f-9c79-0c9d07026ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18da8827-884b-4b62-9408-fd03f05c9e44",
        "cursor": {
          "ref": "09d5abe8-aa50-48e3-a270-ec0ebbd99635",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dd94d963-39a8-439f-9eea-bded8f0165be"
        },
        "item": {
          "id": "18da8827-884b-4b62-9408-fd03f05c9e44",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "06508ce9-4dfb-480a-a6cc-77277000bad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7716ee86-f215-4de4-a8bc-cb3ae415f93c",
        "cursor": {
          "ref": "bcafadb5-6e04-4df0-841b-a9ae2cc926ce",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4d28ea67-d0e7-4d66-b600-805b3ccea328"
        },
        "item": {
          "id": "7716ee86-f215-4de4-a8bc-cb3ae415f93c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c4338116-3cc5-4e38-83ae-2afe2fd471d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c4ae5f-92e1-48a9-85f6-fb47399f1770",
        "cursor": {
          "ref": "8a727ae5-e5e8-4a1b-b09b-b83195208fb7",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4df53ff9-9bf8-4743-b2df-f846812c544c"
        },
        "item": {
          "id": "27c4ae5f-92e1-48a9-85f6-fb47399f1770",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "32ed2d3a-3635-4786-99c5-4c3dcc9049d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d679294-e9f7-4855-9865-add6e4b5df73",
        "cursor": {
          "ref": "9bfdc546-866f-44ab-8da1-88ed26f5ad6b",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dadbdd93-2e86-4790-9331-24a053133231"
        },
        "item": {
          "id": "1d679294-e9f7-4855-9865-add6e4b5df73",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5ad705fe-3e55-4a1b-ac16-0f9a7c67b307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1075,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3473e955-73e6-482d-a3ea-8fd1b4de0add",
        "cursor": {
          "ref": "93b84da5-e253-4f7c-afab-f706e2b9de99",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6842ad87-a0bf-477d-9ced-2552d533b81a"
        },
        "item": {
          "id": "3473e955-73e6-482d-a3ea-8fd1b4de0add",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "edc3cfda-7b02-46f2-916c-0d4274ca1150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1123,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aff391e-6720-4404-980f-a64c45a95eba",
        "cursor": {
          "ref": "cd165466-6535-4b92-b820-e26eaf653add",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f105fa78-9e80-45bb-9dec-189c1c359f04"
        },
        "item": {
          "id": "9aff391e-6720-4404-980f-a64c45a95eba",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e5ea5687-e057-4132-97dd-249adf93e8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1265,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086f59f0-5e15-4d77-b8c8-820a0a327ecb",
        "cursor": {
          "ref": "e82d3192-70c7-43f1-a817-efdeb9f1a975",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e4db7406-c224-4e74-9b48-84d32158538a"
        },
        "item": {
          "id": "086f59f0-5e15-4d77-b8c8-820a0a327ecb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "544c29df-75a7-4983-ac74-8266f1d2b818",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1146,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea96512-73a8-48ff-9517-2fbf22fd33b5",
        "cursor": {
          "ref": "04f3161f-0740-4ca7-a006-91a5ffdaa80b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "46529433-3d80-467b-9240-a6fe2125cc2c"
        },
        "item": {
          "id": "bea96512-73a8-48ff-9517-2fbf22fd33b5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3565c4fc-9066-489c-a3c0-544b92977d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ac2c70-fa37-4f59-9b6a-6526149a7c20",
        "cursor": {
          "ref": "512b9664-b000-4280-b8cf-a63eeedc9a16",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c11b386f-54eb-44ea-aff1-c62a55b36fee"
        },
        "item": {
          "id": "01ac2c70-fa37-4f59-9b6a-6526149a7c20",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7a8eaf93-d800-4115-a098-bdaf4a4ed9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1709,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee00d1c-ea43-41fd-8741-7e7cd63753c5",
        "cursor": {
          "ref": "f31410c6-6ce6-4578-9df6-0011d9b0abe8",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "062cf3c3-6b40-4ca4-84e8-736379d3bc43"
        },
        "item": {
          "id": "3ee00d1c-ea43-41fd-8741-7e7cd63753c5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ef52d8cb-d041-4055-8e14-6eca1803eb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1388,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2786de6-babe-4732-a634-4a9605b1ba66",
        "cursor": {
          "ref": "f1b5c30a-f675-424e-9c81-1c1f7d680724",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3ec2979b-e117-4620-bdac-91bb7f4c023e"
        },
        "item": {
          "id": "f2786de6-babe-4732-a634-4a9605b1ba66",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "33d17364-0c93-4f54-8820-8b5c97ef0f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1087,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac0a58e-f44c-41c6-8f2d-843b53b21205",
        "cursor": {
          "ref": "88e97b65-1396-4696-b589-a29006a65b0b",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "46ccba9f-97f7-4030-8670-563406fce91a"
        },
        "item": {
          "id": "3ac0a58e-f44c-41c6-8f2d-843b53b21205",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "88bd7a7c-2ee0-4f53-bd81-d4c5b58a4cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f878deaa-30e5-4f56-86dc-0c849964fbee",
        "cursor": {
          "ref": "6cd460ec-d6bb-4fb8-8545-5944ce1ff157",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b8ad975c-9884-4a92-9438-c5e359191b07"
        },
        "item": {
          "id": "f878deaa-30e5-4f56-86dc-0c849964fbee",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "030a006a-75dc-4641-9316-52a84c55c08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83545b04-da58-4fa0-834a-d7004305e2b5",
        "cursor": {
          "ref": "fd25aedf-35e0-414c-9e8a-f1f34e61dd4d",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "76eb7d73-0838-4211-a99c-77fb2bf55c76"
        },
        "item": {
          "id": "83545b04-da58-4fa0-834a-d7004305e2b5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dd1912b8-0103-4063-9fa6-dfbe61497159",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 886,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dd8d7f-a59e-433e-9d83-dd210ca14c23",
        "cursor": {
          "ref": "20b042f5-1a05-4ee0-8e35-891ba9a9bb2d",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2f7e3ba2-2ddb-4ac8-b68b-a71cb8f2d331"
        },
        "item": {
          "id": "b5dd8d7f-a59e-433e-9d83-dd210ca14c23",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a5c3625c-4f1e-48cd-84c4-2aeec4f54d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cb84de-b79d-4a72-88b4-5b9c11b1d199",
        "cursor": {
          "ref": "3834de25-44e1-4fe6-9ddc-6dba6c06c4a6",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "14a761e2-623d-49b1-95a0-f78f539e7e54"
        },
        "item": {
          "id": "51cb84de-b79d-4a72-88b4-5b9c11b1d199",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1e39b6c3-5ab7-4a65-b623-722d973a587e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361838d0-8d3d-465a-9de9-2f215ec6d2f3",
        "cursor": {
          "ref": "df2fc685-177d-4835-9b9a-bcf45529723b",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5a56ee44-15dd-4cb2-8705-bda6b2b16469"
        },
        "item": {
          "id": "361838d0-8d3d-465a-9de9-2f215ec6d2f3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ba9efca3-bd18-49a1-ac00-21f7f1815256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c4f168-4a45-47c0-8735-9dd4d610a656",
        "cursor": {
          "ref": "88e7893d-af22-4725-bd31-1701b7f5c399",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cbf318a8-f923-4372-9e03-a2e7f2a957bf"
        },
        "item": {
          "id": "91c4f168-4a45-47c0-8735-9dd4d610a656",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7f81dd20-ec19-4708-9f5d-b9b499039f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2024f4-d21b-4a85-80d7-6cfa03b784e5",
        "cursor": {
          "ref": "6c887935-4264-4d07-877b-9b24009dbdea",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3ec8ac17-47c4-45f2-8e94-565a1b40c78d"
        },
        "item": {
          "id": "4c2024f4-d21b-4a85-80d7-6cfa03b784e5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5b8c41c2-6d8d-48ac-8b8f-b4a6c76059e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936c7768-731e-459a-b1dd-4c52f195b46b",
        "cursor": {
          "ref": "6b39077a-f3b5-450b-8d9e-00fcbdbd6adb",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4a369eb5-eb80-4fb4-ad1e-49dbe7c139c6"
        },
        "item": {
          "id": "936c7768-731e-459a-b1dd-4c52f195b46b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b49e5483-eb6f-4a43-8d51-4732ed04beb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114728ac-8192-4ad8-8f09-a62b91e8d333",
        "cursor": {
          "ref": "e48923d7-922b-4112-a884-5ea92372808e",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8493a407-77c0-4fc1-9362-5f597a477be2"
        },
        "item": {
          "id": "114728ac-8192-4ad8-8f09-a62b91e8d333",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5ce8b631-f91f-4e24-8178-dc08281ed44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acb7d4d-15aa-484b-8305-732ce8b5a592",
        "cursor": {
          "ref": "a14fcdd2-dcf5-441b-8b59-000036846d0e",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6ff26ae8-209e-46bf-927a-e5366818ebf6"
        },
        "item": {
          "id": "2acb7d4d-15aa-484b-8305-732ce8b5a592",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "480b2889-7da1-42e9-977e-3090432e1d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d15377-a982-4dbc-b837-8e16b2805f5f",
        "cursor": {
          "ref": "5e158b05-a72f-4d3b-a4e1-783a351f11aa",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bf95ebbf-6148-4e4c-a87f-15a5ca7fe285"
        },
        "item": {
          "id": "a2d15377-a982-4dbc-b837-8e16b2805f5f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "95874304-8a90-4f03-b2a4-ab5a694fd530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c188803-5535-4834-b70a-43b558c709af",
        "cursor": {
          "ref": "358a6170-44de-416c-a0ac-591516b87d1f",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1d92b26e-1d6f-4f2e-b46b-b9f364a57ab5"
        },
        "item": {
          "id": "4c188803-5535-4834-b70a-43b558c709af",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4bbb4ea6-df41-40d9-b3df-f3376ca389c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e342bdf5-53b0-4db7-aabe-0f4091c98d55",
        "cursor": {
          "ref": "f621e08e-d9db-4ae6-abe2-dd6a3783851b",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7c5d5a63-527f-4765-acf3-a661b0892847"
        },
        "item": {
          "id": "e342bdf5-53b0-4db7-aabe-0f4091c98d55",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e96ff1d4-b563-4afd-a515-97021d300c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3d87bf-bf0c-4a7e-b752-a9c870a3b435",
        "cursor": {
          "ref": "af9299d8-3524-4572-8d32-37fe375614c6",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "18de0398-abea-4399-9775-b0c92bc329c7"
        },
        "item": {
          "id": "2f3d87bf-bf0c-4a7e-b752-a9c870a3b435",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "242b001b-4fb6-4304-a906-228f9cc3924a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4916228-26af-4b76-98ee-4644af50d85d",
        "cursor": {
          "ref": "4126ac1b-3603-4c2e-8fca-329e203b62d4",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8840af99-e4cb-49fc-aaa6-d0d4b995db6c"
        },
        "item": {
          "id": "e4916228-26af-4b76-98ee-4644af50d85d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d08a2b42-bf0c-433f-acc5-d9b224bc7b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1213,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34474afb-268e-4bf0-b609-5ca57db5c956",
        "cursor": {
          "ref": "91d028c0-7cf3-4033-ac44-d2f7995dd939",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e7a7db1a-1440-44f8-b28b-b288ec5c9911"
        },
        "item": {
          "id": "34474afb-268e-4bf0-b609-5ca57db5c956",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2c306d7b-f108-4b34-954d-67b42f2114fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1311,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0031f2-b570-4f28-8209-174b17e774ee",
        "cursor": {
          "ref": "7c09aa3b-cecb-4008-8eac-16ee5dcc72d8",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "90c76431-bdc4-4485-87f0-d358ec1b4602"
        },
        "item": {
          "id": "4b0031f2-b570-4f28-8209-174b17e774ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3b414736-c510-43b9-a5b7-737d05f0da58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1161,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee6b345-d8c6-404a-a12c-23389c732165",
        "cursor": {
          "ref": "2cc26f70-6409-435f-9ed8-8f52f18e81a0",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c3f4d8db-93ad-491e-a761-ba880725def6"
        },
        "item": {
          "id": "0ee6b345-d8c6-404a-a12c-23389c732165",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ae6fdefb-6177-4f7e-a5bb-dcede8f6af5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52813c59-3037-4202-9902-9dcbc232ee31",
        "cursor": {
          "ref": "f064bc98-c02e-4b5e-8c37-a75a081e488d",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ed90612f-2fb1-4fa9-a793-7c987d2363db"
        },
        "item": {
          "id": "52813c59-3037-4202-9902-9dcbc232ee31",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b750ce2e-463c-4a44-9598-cb10ce1e2171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbccd75e-6caf-46f7-991d-d15d81731d47",
        "cursor": {
          "ref": "b6a30fe9-235f-431c-a9f3-ee3cf3b74504",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5c3a0617-021e-48c7-be7a-ed571600da32"
        },
        "item": {
          "id": "cbccd75e-6caf-46f7-991d-d15d81731d47",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "238310b2-f394-4c52-9045-6e86acda9490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde7b8f8-add1-4cb5-a68f-b2c9baf8644c",
        "cursor": {
          "ref": "e8ec0662-39e0-491e-97db-ff322fed6beb",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4ecb4ee2-16cf-4c6b-aa25-89544eb050b6"
        },
        "item": {
          "id": "dde7b8f8-add1-4cb5-a68f-b2c9baf8644c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "23962bcb-5a65-44ce-aeac-2548530427eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8a0a0e-d45d-4d28-a8f6-9e4c1769679f",
        "cursor": {
          "ref": "9791bc96-ebaf-4011-9f33-94189894bd67",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "94ce8593-c3f2-433b-8c63-8fa659fbd98d"
        },
        "item": {
          "id": "1e8a0a0e-d45d-4d28-a8f6-9e4c1769679f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9550d4bf-b35d-4145-a306-a603305473f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a8c321-6578-46cb-8c69-a4a68ea4acf2",
        "cursor": {
          "ref": "aa85a3fc-9cc2-4abf-bd50-8f83c81d835e",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9a1f42f4-7909-49b5-95ef-38db7b839766"
        },
        "item": {
          "id": "f7a8c321-6578-46cb-8c69-a4a68ea4acf2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0de29592-5415-45f0-86d9-9238ef73d9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf50367d-1e98-4afa-9055-dbfa4c070693",
        "cursor": {
          "ref": "59a80698-7cfb-4f5c-b82b-4f0235253616",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8f3b2f5e-f8a3-4097-95f8-db8ee3a36aa0"
        },
        "item": {
          "id": "cf50367d-1e98-4afa-9055-dbfa4c070693",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3d92b8db-0dd8-491f-b474-0ca98555c8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1224d2a-023b-4cb3-85be-683ae63f77a7",
        "cursor": {
          "ref": "93e875eb-bf9c-446f-806f-3b76fe3786c1",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ce2d0c94-0674-40a4-bafa-833eeddf0a58"
        },
        "item": {
          "id": "d1224d2a-023b-4cb3-85be-683ae63f77a7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "582e4296-4423-42d0-99ef-fe35ec072f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1608b8-4719-4936-b350-27e03bca9dbc",
        "cursor": {
          "ref": "ae0b401c-bd75-4e87-8439-60fa8bb3415a",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "276f2509-e859-446c-9222-85c389ba5819"
        },
        "item": {
          "id": "fc1608b8-4719-4936-b350-27e03bca9dbc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2fd49da6-5d74-4118-b5d0-eb9bdad402f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88966b8c-047a-4219-a959-872f3ced934b",
        "cursor": {
          "ref": "63fafecf-7120-4e82-a7ef-0a64e520758d",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a155937e-dcf7-49af-a332-9b2be7df4786"
        },
        "item": {
          "id": "88966b8c-047a-4219-a959-872f3ced934b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "00e22c1b-9233-4d1b-9708-d59d4d32ed3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c31972-140e-499a-b1c6-9e075cdee2a6",
        "cursor": {
          "ref": "127ac77f-39dd-4b77-8a1f-678f4e107f18",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "53a55ef2-0d25-484d-a4b8-c9faec95bc9e"
        },
        "item": {
          "id": "91c31972-140e-499a-b1c6-9e075cdee2a6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3f586c30-d201-4c3a-b89f-f8393a33a1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0287fc0-a0c6-4a62-8649-a2fb69b6c428",
        "cursor": {
          "ref": "25fa09bd-5aab-45c7-9ed8-147e630550fa",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b42dee36-514e-4713-b874-d545614785ab"
        },
        "item": {
          "id": "c0287fc0-a0c6-4a62-8649-a2fb69b6c428",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2d08235b-0d02-4911-abc6-635ca5680a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfe815a-2850-4a8d-9ecd-539be28f2d95",
        "cursor": {
          "ref": "e07700b8-bb9b-47a3-8f2d-351ea4cb2d6a",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "313d105a-26ca-4985-a0db-580ec7522506"
        },
        "item": {
          "id": "2cfe815a-2850-4a8d-9ecd-539be28f2d95",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f685d522-36be-4a73-a536-5613d371d37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1f9f23-5a86-454c-b292-de29f8769ba2",
        "cursor": {
          "ref": "4d2c4e42-e356-4ad5-bafe-b1b9684ae0f4",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f0667cf1-8fbd-41e5-9078-4c52a46cb746"
        },
        "item": {
          "id": "5a1f9f23-5a86-454c-b292-de29f8769ba2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "322a7959-511b-4625-a790-ca41b3b9724c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653fc677-79fa-4b9f-9214-e938f4b42367",
        "cursor": {
          "ref": "0dd6ff1e-ffea-4bd1-a169-b6031746692d",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "69a1f28b-1cf4-4429-aac2-f8266c8e12b5"
        },
        "item": {
          "id": "653fc677-79fa-4b9f-9214-e938f4b42367",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5d2fba23-9ea7-493f-9f7e-593cb42ae1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d95cf57-2d87-4fb7-8420-0105a7bdc0d7",
        "cursor": {
          "ref": "98f20415-ab8b-497d-bc28-9907de4794bf",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f22d5aab-c655-4c23-bcb1-1251d6829904"
        },
        "item": {
          "id": "6d95cf57-2d87-4fb7-8420-0105a7bdc0d7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "572619c1-8bdd-4ce3-9e19-2070ead46f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d55ffed-507c-418e-a850-3d0b26662adf",
        "cursor": {
          "ref": "f4737159-3592-4163-bb2f-8deee367a209",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9a02ec38-3823-41c8-93bc-31e3cd9ecea5"
        },
        "item": {
          "id": "9d55ffed-507c-418e-a850-3d0b26662adf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "92c07cea-855a-4327-b08a-8ef0776cf4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308fd1e3-859c-417f-a283-270fe5df2a59",
        "cursor": {
          "ref": "5d2d200a-462e-4d17-92b8-d51fc60f3481",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "40b276f7-6770-45d4-9c48-20763250a22b"
        },
        "item": {
          "id": "308fd1e3-859c-417f-a283-270fe5df2a59",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "91c0dbb7-7993-4e64-9aa5-979a194147cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b12b2e-9da1-4293-ae68-79baa7397ec7",
        "cursor": {
          "ref": "837016a8-fa23-463c-b316-9c8edd5cde0f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "906eea2e-9cda-4f68-8000-5c98859bc604"
        },
        "item": {
          "id": "b7b12b2e-9da1-4293-ae68-79baa7397ec7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8a8108e5-21e9-48a6-ab3b-516fb5e8c47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a58ce0-048e-4c34-89f2-881708285746",
        "cursor": {
          "ref": "b73fa92d-bdad-407d-92c4-835e68a3d9da",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7b0049d2-a1a6-4b78-bd56-bbfbb68c1bfd"
        },
        "item": {
          "id": "81a58ce0-048e-4c34-89f2-881708285746",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "05b716ee-f4e1-4087-9943-9eadb04aa110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df596a4c-d21d-43de-8f4f-b1e84ddb9ed0",
        "cursor": {
          "ref": "c238bfc1-89f9-472a-a671-75749cebdbea",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3fffd8f9-263b-4fcf-aca7-8f312ab1efc3"
        },
        "item": {
          "id": "df596a4c-d21d-43de-8f4f-b1e84ddb9ed0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b851319a-73d7-41a4-a414-a56e212ac68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea7add1-402c-4dda-83c0-3439d7fde715",
        "cursor": {
          "ref": "2ac8857a-6562-4936-a78d-bbec1aa17bc9",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "220953c4-64e0-48d3-9e3c-75dc3a1561af"
        },
        "item": {
          "id": "0ea7add1-402c-4dda-83c0-3439d7fde715",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ab46f791-1e21-4932-b141-40cf32986479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc6247c-6ff4-4a1c-8e23-6bebdaf3a5a9",
        "cursor": {
          "ref": "dc48e98f-99ce-4bc4-b858-7bd581306e8d",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9142ef45-1985-4758-a7cb-b974012f3477"
        },
        "item": {
          "id": "bbc6247c-6ff4-4a1c-8e23-6bebdaf3a5a9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9f3865f7-4b70-48c1-9239-d85870efe8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb215348-0faa-4274-b7c7-e3a939f8c762",
        "cursor": {
          "ref": "ecbe9513-0778-44a6-b1f2-37703bc36777",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "df70974c-0c7c-45df-810e-92088b3bdf9c"
        },
        "item": {
          "id": "eb215348-0faa-4274-b7c7-e3a939f8c762",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "01a094d1-4667-4203-ab64-77558e79b206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d5cffc-bc73-4898-bb05-087aa44e7d5d",
        "cursor": {
          "ref": "e6c077b3-9c1c-4289-ac83-b3d0a2ffd789",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c0b01c01-9c9e-4f63-998f-d76d282ef5f9"
        },
        "item": {
          "id": "33d5cffc-bc73-4898-bb05-087aa44e7d5d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e691f2b5-ea30-4364-85f8-ef33d688070a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e56132b-0240-4f06-aec5-c0d223a4313d",
        "cursor": {
          "ref": "01ed4848-28d3-4794-bf27-0cc6ad350d4b",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4c2a90f0-3379-438c-9643-e1a20f546bc7"
        },
        "item": {
          "id": "4e56132b-0240-4f06-aec5-c0d223a4313d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cd213318-ffa0-463b-91c7-180babb0e05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1199,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42da181-6af7-484d-9538-7046deac37bf",
        "cursor": {
          "ref": "763681ee-cfa0-4324-ac08-8862c0b6eaf5",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a111d0ad-8683-43d2-9e49-78f691553209"
        },
        "item": {
          "id": "a42da181-6af7-484d-9538-7046deac37bf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "76c52543-473b-4112-8f60-76bb02aac70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1162,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bac9223-7348-4fc1-ba63-b63ff4b90a6e",
        "cursor": {
          "ref": "0bc79f39-b6e5-447b-8d21-feb40d4cfe62",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "92c3011d-5d46-401d-abc7-bc4dad9c99e2"
        },
        "item": {
          "id": "7bac9223-7348-4fc1-ba63-b63ff4b90a6e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "917c08e8-b523-46dd-b17d-38af809d5111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1330,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51e7d15-d5a4-4577-b9f0-6550273d6442",
        "cursor": {
          "ref": "06db5119-77f1-4f08-b229-44f5b2d13a65",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "83e3f955-0a38-4b51-b435-3c08889917ad"
        },
        "item": {
          "id": "e51e7d15-d5a4-4577-b9f0-6550273d6442",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "96d433a4-0635-4001-bd2f-ae035cadb484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce887ff-7706-450c-adb8-c561e3bff9ed",
        "cursor": {
          "ref": "83c59c16-9ee5-45f9-8551-f813f9f1e782",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "839dd789-9a8c-4107-a971-765d8fed4d37"
        },
        "item": {
          "id": "fce887ff-7706-450c-adb8-c561e3bff9ed",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6af08803-24ee-44d9-ae49-2e145c006bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bd2517-2a72-4083-8516-eb2c65fd1fb2",
        "cursor": {
          "ref": "c9545814-43b1-43a6-9846-7378a406651b",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a64327df-ca44-4285-910b-69976cf83587"
        },
        "item": {
          "id": "73bd2517-2a72-4083-8516-eb2c65fd1fb2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cc75a2d0-0ef7-4bc3-b452-61b0407ae5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffba6b33-4dd7-4de6-9a8d-1e610fc50443",
        "cursor": {
          "ref": "b129ddfb-7735-4d8b-b181-e8fcfecb6f86",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "333dffde-2cf7-46e6-b815-570f02ee5b08"
        },
        "item": {
          "id": "ffba6b33-4dd7-4de6-9a8d-1e610fc50443",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2ff341d6-d74f-4e4d-b97f-caf9fa05cbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63230119-c024-4d37-a502-1d142bde3f00",
        "cursor": {
          "ref": "f9e378a5-0939-4ab1-a58c-caa3de1b4660",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "38dddac7-f03d-42d4-9385-24570196c9b6"
        },
        "item": {
          "id": "63230119-c024-4d37-a502-1d142bde3f00",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "266e947b-e60f-4e98-8d80-ee85c6811832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e8d2e7-14e7-420c-9903-00dd9c0e2cb8",
        "cursor": {
          "ref": "ba910f42-5ff9-4e03-a31d-8c77e026d038",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "20d79717-6bb6-4b8e-897d-35940874e816"
        },
        "item": {
          "id": "f6e8d2e7-14e7-420c-9903-00dd9c0e2cb8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "037f1460-2fcf-48bb-bfed-61c18c78b8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e43125b-a9e1-45b2-a037-4b114b6ceae6",
        "cursor": {
          "ref": "702bd8b7-9b9e-43f5-a6ad-5ebcc8dbf49a",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b9383814-9795-4664-94cf-74c8b9f74ead"
        },
        "item": {
          "id": "9e43125b-a9e1-45b2-a037-4b114b6ceae6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "441c936e-b28f-4ab6-b7ff-fd562f4cac43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff5a34a-0f6b-4709-b103-55c2cc4d280c",
        "cursor": {
          "ref": "af290d19-b4c3-4618-80c2-6a7b8521bbc7",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aae2ebae-0a73-4eb9-89ce-e10d175e1569"
        },
        "item": {
          "id": "8ff5a34a-0f6b-4709-b103-55c2cc4d280c",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "2cedb87d-4336-4e93-a198-9e56ed28978f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 749,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d87f18-4749-441b-b12b-d4c176bf890c",
        "cursor": {
          "ref": "336574d6-414b-4955-b163-bec89abf0266",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c3b191e6-93fa-4b70-b89d-dca77ca099e0"
        },
        "item": {
          "id": "f8d87f18-4749-441b-b12b-d4c176bf890c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1f49dddc-2ded-4514-93dc-fab2a04cbd62",
          "status": "Created",
          "code": 201,
          "responseTime": 7663,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf37c56-6aff-4521-89a3-d1008c19f94f",
        "cursor": {
          "ref": "1564de06-8ad9-432a-8876-b5577a26e23a",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7ad932fc-cd70-43f3-b17d-fecc8277c79f"
        },
        "item": {
          "id": "ddf37c56-6aff-4521-89a3-d1008c19f94f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "25d6152d-f6c7-4c71-9907-b4e7d81b6b37",
          "status": "Created",
          "code": 201,
          "responseTime": 7104,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e547e522-1eab-4292-a1a5-f1bf07f1dcb7",
        "cursor": {
          "ref": "e8d5553e-211c-419e-ae24-e1f0d97516b1",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "15923863-762b-493a-924c-788d364a15ae"
        },
        "item": {
          "id": "e547e522-1eab-4292-a1a5-f1bf07f1dcb7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7b92b644-61e8-4e67-b263-f7600528d345",
          "status": "Created",
          "code": 201,
          "responseTime": 5927,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "239d2bc7-80f0-43c1-acc5-9a249004f8ee",
        "cursor": {
          "ref": "223ca49f-f067-4655-afa8-583af5f1d418",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a5bbe5d3-a2d6-4ff8-b7f9-73f4b22b2aa0"
        },
        "item": {
          "id": "239d2bc7-80f0-43c1-acc5-9a249004f8ee",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a2af43ee-44ee-4b1b-a8ae-3160d8059453",
          "status": "Created",
          "code": 201,
          "responseTime": 13207,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6b9e23-720e-40e1-bc90-4b125d8859b8",
        "cursor": {
          "ref": "e0a770c4-b8b3-4dbd-afdb-4f5eba4e703d",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "66b43771-d882-4136-bb63-e7a7260478d4"
        },
        "item": {
          "id": "8b6b9e23-720e-40e1-bc90-4b125d8859b8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7a836302-4f2e-4005-ab6e-4562bae1e7e1",
          "status": "Created",
          "code": 201,
          "responseTime": 7383,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "722cea57-72f3-4b71-a422-ab8989839959",
        "cursor": {
          "ref": "36efcef9-e3bd-4fa2-aac4-5acf9c8c608f",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b5b86eb2-ecc5-401a-8c63-4f62343fe387"
        },
        "item": {
          "id": "722cea57-72f3-4b71-a422-ab8989839959",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "34a82064-975f-4ae3-b2c1-bfe46428ea55",
          "status": "Created",
          "code": 201,
          "responseTime": 8487,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca2bd3c-7558-42be-9172-a32c463538fc",
        "cursor": {
          "ref": "c6f9024e-0393-4a59-ae73-4657d43b1bf6",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dffb6cef-03ba-4cfe-920e-6587accf94f0"
        },
        "item": {
          "id": "1ca2bd3c-7558-42be-9172-a32c463538fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "652e90da-0b2f-4f5d-9d28-86d627bf6e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca2bd3c-7558-42be-9172-a32c463538fc",
        "cursor": {
          "ref": "c6f9024e-0393-4a59-ae73-4657d43b1bf6",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dffb6cef-03ba-4cfe-920e-6587accf94f0"
        },
        "item": {
          "id": "1ca2bd3c-7558-42be-9172-a32c463538fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "652e90da-0b2f-4f5d-9d28-86d627bf6e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4020063f-6e3e-4710-b2ff-e48df4537c15",
        "cursor": {
          "ref": "c72e2b5d-1e5a-4419-bfb8-2477ce0ed040",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0ce6db32-dff1-4b2d-afe3-a414e0b70489"
        },
        "item": {
          "id": "4020063f-6e3e-4710-b2ff-e48df4537c15",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "10aec727-be50-4a1e-a3c7-74d3dda6d781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2404cf3b-7b87-4665-8a1c-a23771cd0700",
        "cursor": {
          "ref": "30360ea7-a530-43b7-ad79-352e2536deee",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b82ae03e-0be5-429d-9b3c-32468f638042"
        },
        "item": {
          "id": "2404cf3b-7b87-4665-8a1c-a23771cd0700",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "df6efe5a-5f1d-495e-903e-628cd492c0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d69a3c-6e10-4bd9-a1e0-d1af0b2110fa",
        "cursor": {
          "ref": "9848dcd7-f77b-4a7c-b103-ed9a60848b72",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "324d1724-189a-4ab4-8df8-91bb97170d3e"
        },
        "item": {
          "id": "12d69a3c-6e10-4bd9-a1e0-d1af0b2110fa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "adaeda38-18b9-4289-95fa-1b47c3d23928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a228c4f-782a-4eda-aebf-5b247cf01916",
        "cursor": {
          "ref": "ccf7ed6e-221e-4518-9f74-d3b64888e7ef",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d3bc75be-66dc-41e6-a731-c02985bd3d5d"
        },
        "item": {
          "id": "2a228c4f-782a-4eda-aebf-5b247cf01916",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a1249a8c-c471-41ac-ba30-b980da901de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab45541-ce1c-4b8c-a72d-57e7fff45045",
        "cursor": {
          "ref": "d55a71a3-538f-49ce-9140-e321ac5d7923",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8ff77c06-590a-4878-97b5-ff0840e19868"
        },
        "item": {
          "id": "6ab45541-ce1c-4b8c-a72d-57e7fff45045",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "acf78ca7-ed83-483f-9aba-2ab6973ee23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd81681-4b55-4861-ad05-023b673b3c7b",
        "cursor": {
          "ref": "3dfb709b-f541-4b18-bb80-a9fbb84274eb",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4a2634d9-73dc-4f5b-a3ae-15d2c989a343"
        },
        "item": {
          "id": "2bd81681-4b55-4861-ad05-023b673b3c7b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b29d2316-ab0f-495c-999a-9be14b754880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031a45dd-98d6-40a1-9883-bdf8cfd0a342",
        "cursor": {
          "ref": "1e1b4e88-59fe-4d6f-8fd3-0e23f8f4fc3f",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5854dfac-126c-4e55-b250-cf0f53c86789"
        },
        "item": {
          "id": "031a45dd-98d6-40a1-9883-bdf8cfd0a342",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5eeadc5c-f9cb-44db-a27e-efba654ec2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d713cc1b-6b7b-4345-acce-6d726653a5a3",
        "cursor": {
          "ref": "eb43907a-790b-4cea-95a5-7b5a1d3f3c78",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cbc9f12a-41e6-4db8-bd8a-e01eed6a0de3"
        },
        "item": {
          "id": "d713cc1b-6b7b-4345-acce-6d726653a5a3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "46880645-b258-407c-89ca-c423ebf654df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82fb4c7-a6cd-4e04-9623-fce8ed83ca13",
        "cursor": {
          "ref": "e3503bff-714d-478e-9597-f154782a4aa6",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "498202d8-f5d4-4b4c-b173-0bbd160c652e"
        },
        "item": {
          "id": "f82fb4c7-a6cd-4e04-9623-fce8ed83ca13",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "013ed9f6-7f1f-4532-a413-0266f28109ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12deeb86-4f68-424c-b1ed-faf57172af09",
        "cursor": {
          "ref": "035af4a0-0874-4c42-af11-e08b819e8a00",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "73661ee4-e0f2-4a5d-86b8-ba2bc38e2244"
        },
        "item": {
          "id": "12deeb86-4f68-424c-b1ed-faf57172af09",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8a67e4a5-f505-4262-b90a-01de8f477c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156a7262-b4d6-4b55-bcbc-83e7dcf14347",
        "cursor": {
          "ref": "b0e8429d-22bf-425d-98f9-32d0aa4c8370",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "799768f4-3e84-48a0-b63b-977754c9d79f"
        },
        "item": {
          "id": "156a7262-b4d6-4b55-bcbc-83e7dcf14347",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c79b90bd-3531-4f31-b0c9-9da8ff9a2f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcf1a0a-f133-46d4-a615-3fdbaf6a554a",
        "cursor": {
          "ref": "afe5f485-68d0-438c-ae9b-ec1b2de05e13",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ecab4236-3360-42ce-9e40-c8ee82f2fe0b"
        },
        "item": {
          "id": "bdcf1a0a-f133-46d4-a615-3fdbaf6a554a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d6b39219-5642-4e66-9b0b-e39d7b08bc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b12b969-4d95-4b81-addf-efbf146c3887",
        "cursor": {
          "ref": "96382778-8c7e-4e6d-877f-65d1422f9c33",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1122ec6d-72e9-4b1c-8a06-740eddd34a47"
        },
        "item": {
          "id": "7b12b969-4d95-4b81-addf-efbf146c3887",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f40bfcaa-db3c-4e0c-874c-c9d9b4196eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1187,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99363dd-14d7-4a34-8ab0-4191b12cb117",
        "cursor": {
          "ref": "ca3cec16-41e5-4a29-83c8-0155f57f8dec",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "32b0712d-f2a3-4a38-a4dc-dc36542b0900"
        },
        "item": {
          "id": "f99363dd-14d7-4a34-8ab0-4191b12cb117",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b2a33d7c-dd0d-40b4-9fc6-df7b9548d99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1157,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb85bb4c-d29e-4fbd-aa47-123d42f16e94",
        "cursor": {
          "ref": "af0dc699-9d6d-4571-96db-a6a56aa21c2b",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0808b3b0-2de4-450c-b672-4ad3b4a8a09c"
        },
        "item": {
          "id": "cb85bb4c-d29e-4fbd-aa47-123d42f16e94",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "995609c8-425a-49fa-a8b4-bb41e97b4dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1274,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d282592-fceb-4594-9432-2ee041e0ea07",
        "cursor": {
          "ref": "6dc31533-c398-4b72-b330-e1e60f5983ba",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8597e8c3-180b-4935-9151-4533067e4707"
        },
        "item": {
          "id": "2d282592-fceb-4594-9432-2ee041e0ea07",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "49a62044-a608-4b22-b416-fc0395160dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 983,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e0b27d-292a-44c7-b95d-250d822a5061",
        "cursor": {
          "ref": "615fc2ad-1b37-4ad8-a018-411fcfaab0a0",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "65591b40-3e07-43d2-a018-de6187fc3b4f"
        },
        "item": {
          "id": "01e0b27d-292a-44c7-b95d-250d822a5061",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ff9b9aa0-dc64-4c68-ae94-df7de3e9c4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d893256-4a93-4f6d-b4a1-a5587c6c2231",
        "cursor": {
          "ref": "15c222f0-fb6c-4c97-b6e5-5e78710282d4",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d4fa8f8e-6011-4e07-ab64-ac18aae4cd4c"
        },
        "item": {
          "id": "7d893256-4a93-4f6d-b4a1-a5587c6c2231",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ecf28d91-af28-44e8-a104-f7e709442fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fd7dab-50ac-4bd0-b381-e5a504e12a3f",
        "cursor": {
          "ref": "fb9d3843-607c-41f7-8161-18900678ee38",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ff73212c-e1f5-4848-beb3-2c9ed2099f5d"
        },
        "item": {
          "id": "13fd7dab-50ac-4bd0-b381-e5a504e12a3f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9f30bc62-ec2d-4e0d-bb78-3673e3d45e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01190577-80fa-44f3-9a5b-f4b316993a99",
        "cursor": {
          "ref": "8bdad17a-a96d-49e1-80ff-b4f17048da8b",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "987cf640-d4de-45f7-b686-25c7acd00c54"
        },
        "item": {
          "id": "01190577-80fa-44f3-9a5b-f4b316993a99",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3d6f8bb5-636f-47dc-82bb-4df1af664add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f732f803-f9cc-446e-aa8c-6dc01be5f8e5",
        "cursor": {
          "ref": "6e689b5b-8530-4ade-b788-b2a29b7f32df",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bfa4e5e8-30f1-413a-a090-64c1b435506a"
        },
        "item": {
          "id": "f732f803-f9cc-446e-aa8c-6dc01be5f8e5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e0bb6baa-e055-4303-8ab7-fbf1cf397920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84e5b3d-76d7-45b8-9dbb-9fe2d23dc94c",
        "cursor": {
          "ref": "eea277d8-0d9b-49dd-a2a7-4f799c3a5838",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8d1cf0a5-ba52-42ce-8256-0e2f6574d320"
        },
        "item": {
          "id": "b84e5b3d-76d7-45b8-9dbb-9fe2d23dc94c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a702b322-6932-459f-b6cc-8d24223eb446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5d3b07-6a7a-4022-b896-b546cc9e24cc",
        "cursor": {
          "ref": "d1aeb76b-7ba4-4ec3-9468-bde31da8f45b",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f7ca9989-3c2b-483d-9ac3-ac084ce60973"
        },
        "item": {
          "id": "1e5d3b07-6a7a-4022-b896-b546cc9e24cc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5d2c1074-016f-472e-9af3-78ba4fc4b29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35990b96-6a34-4ada-abfc-e690860d2877",
        "cursor": {
          "ref": "20859448-7220-48f3-8356-fc1ce78aac1e",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "abda37a1-56fa-48ee-a7e2-aeb82ca7ffdd"
        },
        "item": {
          "id": "35990b96-6a34-4ada-abfc-e690860d2877",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "09a5f4dc-9849-4779-8a8b-1c06d14e8afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fbfaf4-7782-47cf-9dfc-45ec7ec38c8c",
        "cursor": {
          "ref": "7169251b-4279-4713-97a2-5e1b3ce955c3",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2cd5fa41-2b75-4623-b222-c01c78a261b1"
        },
        "item": {
          "id": "d2fbfaf4-7782-47cf-9dfc-45ec7ec38c8c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "69a76a08-2e8f-4761-97a6-a823bf48e2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55b7afe-3c67-48ba-92ac-3c4024b16d09",
        "cursor": {
          "ref": "33375556-2fdb-4920-b57f-7a5f83d5f231",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "291f40f9-7f3f-4240-b6f4-0e4fa0204cf7"
        },
        "item": {
          "id": "a55b7afe-3c67-48ba-92ac-3c4024b16d09",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cdb30072-d37e-4ae3-9b02-82b9e1dd7adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f12e79-d1b0-4dc4-8097-7e173a5644d3",
        "cursor": {
          "ref": "bc6c15b0-1bf3-45e4-8428-aa4d8f98abf5",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "37011cd2-90fe-4796-88c1-ef4c4f8e82ab"
        },
        "item": {
          "id": "84f12e79-d1b0-4dc4-8097-7e173a5644d3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "06dbb774-a20d-4ebb-bc78-f4498e438fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c1c43c-528b-438d-9025-2862448a9ca3",
        "cursor": {
          "ref": "fcc19788-a7e3-4cdb-abf3-1983d480e019",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fdde6397-d4b4-43cf-9374-961406ee475f"
        },
        "item": {
          "id": "58c1c43c-528b-438d-9025-2862448a9ca3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "62f3e64e-c0d0-4135-8a17-a8a039c1bcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26fd946-f93e-411f-9067-86e94692f976",
        "cursor": {
          "ref": "7cbda159-1cb9-47a7-8d57-f5d45a58305b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5c02da4a-3116-4d32-9bf9-0f5266f49cf4"
        },
        "item": {
          "id": "c26fd946-f93e-411f-9067-86e94692f976",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d33a878d-a9c6-4d46-a48c-1e0a1ba39d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afb0992-b6a8-4717-8475-f198790ee714",
        "cursor": {
          "ref": "a8d0f547-5744-4b4f-a904-ce4d91d3e80b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cf3a9de9-a947-4c4c-8e71-5be388a57836"
        },
        "item": {
          "id": "6afb0992-b6a8-4717-8475-f198790ee714",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "290b5c07-98ac-41fe-a341-0625f869b1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54b5c36-888b-4a96-a9e4-3dc4ce6940e8",
        "cursor": {
          "ref": "3942d4de-ad43-40cc-b36c-5e99e17d249f",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b729e5cd-ade3-4a20-9d9d-ca6235fb41a9"
        },
        "item": {
          "id": "d54b5c36-888b-4a96-a9e4-3dc4ce6940e8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fb8c5cb5-4909-4423-a140-939b024374e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a830ad-8f38-45ff-9549-63fba8b66acc",
        "cursor": {
          "ref": "7302ef55-8fef-4fa2-9095-8e65faf1f0fe",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "773f9b7f-1c6b-48d3-917b-f05ee7fe64d3"
        },
        "item": {
          "id": "32a830ad-8f38-45ff-9549-63fba8b66acc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1a176905-1bf0-4129-af81-d000d7877f86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75a9fa2-b801-4f86-9b14-f24ae637eb83",
        "cursor": {
          "ref": "80540ce5-9c87-43ae-8ce3-5b4012b3729b",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "66ee5b4e-47ff-4adf-8585-03c22d24ea58"
        },
        "item": {
          "id": "c75a9fa2-b801-4f86-9b14-f24ae637eb83",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "69f43daf-6954-4969-9862-f2aec812c1ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 722,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef94f03-0074-4f77-a4a1-335ed1ac5ec7",
        "cursor": {
          "ref": "d2d7081f-18fb-4536-9ac1-c016ce936a01",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "045ebff1-0911-4f60-8221-0d25de232bf4"
        },
        "item": {
          "id": "4ef94f03-0074-4f77-a4a1-335ed1ac5ec7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2671b2b6-ef97-498e-b170-02f593af670c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef94f03-0074-4f77-a4a1-335ed1ac5ec7",
        "cursor": {
          "ref": "d2d7081f-18fb-4536-9ac1-c016ce936a01",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "045ebff1-0911-4f60-8221-0d25de232bf4"
        },
        "item": {
          "id": "4ef94f03-0074-4f77-a4a1-335ed1ac5ec7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2671b2b6-ef97-498e-b170-02f593af670c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cac47d-dcb5-414f-8e6e-0259d92b74e9",
        "cursor": {
          "ref": "080a4155-1dc4-4cb3-839d-c9678188f7e8",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "93c9d65e-012e-4a18-9a84-923a2f13a5b5"
        },
        "item": {
          "id": "35cac47d-dcb5-414f-8e6e-0259d92b74e9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f17aa613-1d73-49f4-9770-9680294ea22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ab92e6-0814-437e-bb74-1a3bd4eda001",
        "cursor": {
          "ref": "2028e8ee-0858-4e93-87fd-40099f96f780",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "856a1e07-0ccf-4273-941c-02c7ec69ad40"
        },
        "item": {
          "id": "22ab92e6-0814-437e-bb74-1a3bd4eda001",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "68ca220f-a654-4107-a4cb-16d7f1cc15d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddff30dd-665b-48ec-8148-3b48221c74d1",
        "cursor": {
          "ref": "372ff4cb-bf74-40ea-9a23-6a1584968563",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d26a8b6c-0df8-4057-81a0-22942d69ed70"
        },
        "item": {
          "id": "ddff30dd-665b-48ec-8148-3b48221c74d1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6b8d2206-11a6-4dec-88cd-2c2c66df2fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fa3dfa-aafe-4a02-aedd-a0cbd74c833a",
        "cursor": {
          "ref": "473fe7ab-994c-499c-b40a-577e7c2c8417",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "67c021fb-8441-45fd-b0a7-4b7ed890c5b7"
        },
        "item": {
          "id": "93fa3dfa-aafe-4a02-aedd-a0cbd74c833a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0bc9232d-22ce-43ad-b214-403a1f5bfbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94486b50-2153-4041-ac91-258c29e3a81d",
        "cursor": {
          "ref": "b8c67392-0ee0-4a20-987a-ca5814033b86",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c25fae02-538d-4d49-9f48-126ade089808"
        },
        "item": {
          "id": "94486b50-2153-4041-ac91-258c29e3a81d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4ca5335e-3a08-4b2a-b451-86ba7a677323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc63331-a7d4-41cf-a462-2d8127938bc0",
        "cursor": {
          "ref": "a66f3089-d068-4843-8eb7-6d09e5168b8f",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0f400ad1-f22a-486b-8d25-d9d13078ba4d"
        },
        "item": {
          "id": "8bc63331-a7d4-41cf-a462-2d8127938bc0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cfe03c77-a86a-437c-91c3-d3f735caf86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a3da51-309d-4274-ad46-a7ea4cdf6728",
        "cursor": {
          "ref": "732e852a-0cab-46cb-8b17-d0dca5fbb949",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4a9ecdec-0ecc-40a6-8630-32b05fa67cb0"
        },
        "item": {
          "id": "09a3da51-309d-4274-ad46-a7ea4cdf6728",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "04e766c3-ecff-4827-b263-308f17f6a4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d46a12-bcec-4579-90f2-f531a26c647a",
        "cursor": {
          "ref": "77bcbb7b-ee35-44f0-952e-2713e36a4d93",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ce29fe29-e0db-4d9b-a45f-e92f534980dc"
        },
        "item": {
          "id": "e6d46a12-bcec-4579-90f2-f531a26c647a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "30f84a88-26d1-439e-9458-298122ad4e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad73667-3602-4fc0-9d96-4fe02b6678e0",
        "cursor": {
          "ref": "ebe1c80f-e3ac-4309-84c6-ef3cd6e9d77d",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7e7a326c-1472-4fcb-ad8e-95467367e5c1"
        },
        "item": {
          "id": "5ad73667-3602-4fc0-9d96-4fe02b6678e0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "80518c0a-b8f8-4ca7-a264-5aef22ea2e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc22c30-dad3-4821-a510-497b8f45c2db",
        "cursor": {
          "ref": "a4dac499-71fb-40d1-b49e-c3ebc00d47ec",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9c872aec-6ed8-466e-a41e-b0d09164f9b0"
        },
        "item": {
          "id": "3cc22c30-dad3-4821-a510-497b8f45c2db",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ee4a87c1-e2fa-4cd2-801e-98667ca569c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5409c248-6af3-4de6-badb-2470cc18bed9",
        "cursor": {
          "ref": "bc679981-5540-4093-ab64-c461a23f7857",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4f145ce6-f56e-4fb2-b495-454e04fd834d"
        },
        "item": {
          "id": "5409c248-6af3-4de6-badb-2470cc18bed9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4efe7b84-5022-4744-ad6f-5b9d7283b937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ebce2d-2965-4750-a468-8ff8f409caaa",
        "cursor": {
          "ref": "3b04cddd-7e09-4f47-a1c8-c65b21b57a08",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6a770760-ed21-48c8-a827-0c43c2dc40fe"
        },
        "item": {
          "id": "d8ebce2d-2965-4750-a468-8ff8f409caaa",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3eb926ae-ca63-4b3f-b1a0-92649ea15ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1100,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490a1dc2-f24d-465e-aea6-0faeef3b7f0a",
        "cursor": {
          "ref": "82c6e8d9-682d-4957-895a-1d87bd976ced",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a1322735-235d-4fb2-9540-db73d527f9ff"
        },
        "item": {
          "id": "490a1dc2-f24d-465e-aea6-0faeef3b7f0a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d33ab4b1-a840-4c87-896d-5f030783fc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbc7d79-9e11-46fc-b423-60c5a140346a",
        "cursor": {
          "ref": "b7835364-ef83-46ef-86ab-cd86b13e59e2",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bd77e44e-1499-4a00-85ee-6dffbf180bf6"
        },
        "item": {
          "id": "4bbc7d79-9e11-46fc-b423-60c5a140346a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5fa6a4cf-96e0-47d3-b938-72d17a24e93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 886,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ca6569-5767-4acd-8242-3d518b33b18e",
        "cursor": {
          "ref": "d9c6ee4d-0add-4560-8db2-606027db0522",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9695aac0-e48d-4945-9c44-00593b0953a8"
        },
        "item": {
          "id": "91ca6569-5767-4acd-8242-3d518b33b18e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c03af497-98cd-47c1-bee7-6f1820e8bb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a159d353-ce56-44ef-9265-19d23a21482f",
        "cursor": {
          "ref": "33c54bcc-e6aa-4f90-8f96-d46de15e8c9e",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9c01aa33-d1e5-4aa6-a3af-2ba3a8beca99"
        },
        "item": {
          "id": "a159d353-ce56-44ef-9265-19d23a21482f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1ff94cdc-442d-4414-96f1-3cbe43c10020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5537a3d3-6056-42a2-99d1-1e5a072da89b",
        "cursor": {
          "ref": "57af84ae-f841-4b21-8400-5ad3d0296cc0",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eac85631-c129-4fd5-9d78-6bc645c5cb89"
        },
        "item": {
          "id": "5537a3d3-6056-42a2-99d1-1e5a072da89b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "573528eb-b168-42a8-a33a-b932ddc50e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99455f7-8688-417a-ada8-38ca31c48f29",
        "cursor": {
          "ref": "f048751a-48dd-448f-aae6-cb750cc1a691",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6e034e21-5361-4354-843c-bbc522f95d59"
        },
        "item": {
          "id": "c99455f7-8688-417a-ada8-38ca31c48f29",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "22c1b2ef-60bd-407f-bb8e-eae4199d502d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd28117-e83d-4e6c-8f64-391d78fa3e13",
        "cursor": {
          "ref": "886d1c45-1f05-4d6c-a650-7c8488659c6f",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5e618c5f-5abe-4566-bdf8-ae77f2476f2d"
        },
        "item": {
          "id": "6fd28117-e83d-4e6c-8f64-391d78fa3e13",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6d9924d3-9f50-434b-a298-3e65fb6c66ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929008e8-8c14-4250-9935-a157e2fa78f0",
        "cursor": {
          "ref": "4cf9328a-dc24-437f-81a0-9ebad97008fc",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2272bcd1-c0ff-48b7-91e8-f54ba44efdce"
        },
        "item": {
          "id": "929008e8-8c14-4250-9935-a157e2fa78f0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "401bf7ef-5e22-4c27-b88d-ac17795e5c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49a2976-e3fa-4f22-b9a2-cb0c1b2e4658",
        "cursor": {
          "ref": "7bf6c326-250f-40ae-9848-e587009a8848",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ff0c4aec-adc3-416e-99a2-9eabd17bc094"
        },
        "item": {
          "id": "f49a2976-e3fa-4f22-b9a2-cb0c1b2e4658",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0ef99106-5d87-498a-8954-d512eba0d269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cee70ad-efe0-4637-9663-8a97dbada2b2",
        "cursor": {
          "ref": "a0d27553-4cc9-4814-aca0-d97286cacbb4",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f26faa15-e145-4102-9980-e6b62a2b5f43"
        },
        "item": {
          "id": "6cee70ad-efe0-4637-9663-8a97dbada2b2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "88bdb341-e15c-49e0-a5fb-13b6ba9dcaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbf2f15-0f4a-4ea3-9a90-a5227af9a229",
        "cursor": {
          "ref": "9db56e23-4060-4552-ad0d-e91928f54db2",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "47db49f0-4f37-4395-aefb-702602157ac7"
        },
        "item": {
          "id": "ecbf2f15-0f4a-4ea3-9a90-a5227af9a229",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e019117c-262a-4f79-b869-891660fa60a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2694ae93-297c-45e3-8269-93bdc8d5da7b",
        "cursor": {
          "ref": "f992344a-ad6e-4e4d-b2bc-c0acbdccad74",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e51566ee-27a2-4e8b-b601-688287d0cf93"
        },
        "item": {
          "id": "2694ae93-297c-45e3-8269-93bdc8d5da7b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c0cc31a3-6f1c-4ac9-bd41-168aed841a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50d42c9-02b5-4720-86e6-5d400cf6d559",
        "cursor": {
          "ref": "59be158f-c3d2-490b-bdcb-d6c09ebfd769",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8c390a10-097f-4289-a0dd-46b08d09fe99"
        },
        "item": {
          "id": "d50d42c9-02b5-4720-86e6-5d400cf6d559",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7fb4f253-18c1-4c7f-8b5c-5ce45b3d7582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35377154-d8c4-44e8-b602-537a0e308d05",
        "cursor": {
          "ref": "719bd732-ba22-4472-85a2-32fb48b6ab87",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f0d88112-2105-4be5-bcfd-8f5b9f33e683"
        },
        "item": {
          "id": "35377154-d8c4-44e8-b602-537a0e308d05",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c675e677-6a9e-4a91-992b-baa308a53462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1368,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad0132f-4b22-4a96-8fbc-951614d5e66d",
        "cursor": {
          "ref": "c16ebd77-d34c-433f-9b94-30475daf1682",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8099d4d5-2ec2-4a29-a2d0-4483b0c7530d"
        },
        "item": {
          "id": "aad0132f-4b22-4a96-8fbc-951614d5e66d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bb099a44-1af4-4001-b4c2-5432aa1e1029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1114,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcca435-4d7a-4840-9df7-d0d95ff26c20",
        "cursor": {
          "ref": "1eb7fd69-cc58-4eb6-b40b-481508dea708",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3b1fa3f4-0024-4d5b-9fe5-df504805f5ef"
        },
        "item": {
          "id": "5bcca435-4d7a-4840-9df7-d0d95ff26c20",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "92bd459c-2f3a-4fc5-a71a-f349b4ec19b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 903,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6197675a-5f54-4946-ba09-40a4a4cefe20",
        "cursor": {
          "ref": "05ababe7-8d80-4e9e-afba-1aa035477cf6",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8a6d43e9-dd0a-420a-96ca-9c64ddd44cb4"
        },
        "item": {
          "id": "6197675a-5f54-4946-ba09-40a4a4cefe20",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "379d6217-cbcc-4690-a5cf-9018538e01c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c59a65a-808e-4cd7-9ef2-1cadb6cf6b2e",
        "cursor": {
          "ref": "86cb3ad9-893f-48e4-be12-7c77ae54cbcf",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d32ae4d3-7b35-484e-b33b-c151592ca96c"
        },
        "item": {
          "id": "1c59a65a-808e-4cd7-9ef2-1cadb6cf6b2e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e9f10187-cb81-47a7-a7a2-b8ce0fee0597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57c253e-eba5-4ff4-a08a-69a7ce4d49e1",
        "cursor": {
          "ref": "1b9c448b-a87a-47e5-b741-31cfd386ff90",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8e4a1c59-4d9a-48a2-9ee0-bd72737f9810"
        },
        "item": {
          "id": "e57c253e-eba5-4ff4-a08a-69a7ce4d49e1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4cd9399f-0087-42da-8000-c5bed6f94225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b7d894-2339-4e30-b8a5-70f6f4657564",
        "cursor": {
          "ref": "f9cc928f-64a7-4634-801a-253cd3903991",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d78b260c-58d2-4052-94e9-77cea173082f"
        },
        "item": {
          "id": "36b7d894-2339-4e30-b8a5-70f6f4657564",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "43dab4fc-f3b5-456c-b558-aa80e59c8eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0701e6f1-99ae-4b15-bb0f-9ab1fbb55338",
        "cursor": {
          "ref": "9d6dbaa7-a2b5-42fd-b5e1-ef97d946d7b4",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "83f14a2c-f92f-486d-a57c-a1bdcb042003"
        },
        "item": {
          "id": "0701e6f1-99ae-4b15-bb0f-9ab1fbb55338",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "11c4c2e1-5ad6-496c-868b-821e060fdce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b716c1-a296-40a1-a635-4eb65fdf3db2",
        "cursor": {
          "ref": "78d2f837-b0cb-40a7-83a8-356918c19531",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "650b5c5e-ecdd-4b1e-802b-2d39affe616b"
        },
        "item": {
          "id": "d1b716c1-a296-40a1-a635-4eb65fdf3db2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ee6a584a-753b-42b4-9bbd-d89d71caf404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6a7363-2ee5-4150-abe5-a65e1b143464",
        "cursor": {
          "ref": "56973cb1-3ef1-4274-99ce-600824c1fb97",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cb310a23-8eb2-40b6-8032-0f0e388c47b7"
        },
        "item": {
          "id": "dd6a7363-2ee5-4150-abe5-a65e1b143464",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "88851ff5-a018-4152-bd2f-4546396b91d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64009125-10ff-4601-9691-6c5426329c7f",
        "cursor": {
          "ref": "35480ee9-3dbc-405d-98ea-2c58c734dc40",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f0daa89c-34b6-4bc8-94e1-5e1caa9ad61a"
        },
        "item": {
          "id": "64009125-10ff-4601-9691-6c5426329c7f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "786898be-172b-4f2c-8f2f-600f0c4c21f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37d4f4c-4cb4-4a07-9767-764832fc78ca",
        "cursor": {
          "ref": "ab52b789-884e-4a41-b53f-5e8b58a4b1f0",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "119ce51e-ed41-495f-a5ee-20504d77f5b5"
        },
        "item": {
          "id": "c37d4f4c-4cb4-4a07-9767-764832fc78ca",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2fdad34e-daff-4020-ae4f-9e3377ccde0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca8669a-4977-432a-96d6-f1906072bad7",
        "cursor": {
          "ref": "4ce1e9d0-9a02-4cfe-b903-ccc3111edc99",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f6e40adb-44c0-44c0-ac42-4b2b7384a003"
        },
        "item": {
          "id": "2ca8669a-4977-432a-96d6-f1906072bad7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d286dc81-4913-4063-8fe8-164bf623ec4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5b5ae5-4422-40c9-aab2-8a7eb0cd2f71",
        "cursor": {
          "ref": "f5f37c56-8734-415c-a155-f1fc17d62897",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2400476e-3d9d-4e5c-9246-a3c627c7a611"
        },
        "item": {
          "id": "4d5b5ae5-4422-40c9-aab2-8a7eb0cd2f71",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1c0cebc5-9c0b-4595-8b08-418ae65eaaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bb6eaf-433f-4bdf-8534-dc9c2e933711",
        "cursor": {
          "ref": "8017e6fd-9e29-4af4-a29c-ef973e09544c",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0b4de1f1-83aa-4b3a-9d00-f3a53abfb6a9"
        },
        "item": {
          "id": "e6bb6eaf-433f-4bdf-8534-dc9c2e933711",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "82a907b8-01b2-4386-946b-c4d27ff3d719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df96127e-6cb0-4af9-9080-5dcfb1365634",
        "cursor": {
          "ref": "4360dd65-6200-43de-84b4-db4127e0a8a8",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3e99e689-a4e6-4736-88ae-65fab8235929"
        },
        "item": {
          "id": "df96127e-6cb0-4af9-9080-5dcfb1365634",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7f1c13d2-1a89-4736-af4a-89da2b47ac21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788b9d8f-e3e8-4a14-8ef4-26174959fdf0",
        "cursor": {
          "ref": "7fb6cdb3-63a3-4d68-b0dc-b757b18e1a4d",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a8960ee8-7ea9-472a-9add-4370e9329b43"
        },
        "item": {
          "id": "788b9d8f-e3e8-4a14-8ef4-26174959fdf0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d36a7e83-44ed-480f-b8e1-8f5027baf07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c514443a-5821-45c9-9cce-19a4b462f1dc",
        "cursor": {
          "ref": "f830fa5e-4e0c-4cd4-b902-3663513cd0aa",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fe137266-a26b-4945-9ae1-f70652f0d10f"
        },
        "item": {
          "id": "c514443a-5821-45c9-9cce-19a4b462f1dc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f2abeaef-e021-4d95-98d6-e9960d6c83e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1069b8-7621-4c9e-b81a-3a71b1b445ab",
        "cursor": {
          "ref": "2f2affea-0f51-4c23-b844-5b9dc8276d83",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0d2fe173-92ae-470b-982b-4a40d97c0dfe"
        },
        "item": {
          "id": "ac1069b8-7621-4c9e-b81a-3a71b1b445ab",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fc4e6b94-90e8-4138-89ad-ef04f21ed944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07ee474-8eb3-460d-8b34-38434aaa65c0",
        "cursor": {
          "ref": "4c1f6f97-60b8-4cfb-897b-42059a52e937",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "23306db2-c954-426c-922e-49484d8e34fb"
        },
        "item": {
          "id": "a07ee474-8eb3-460d-8b34-38434aaa65c0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cf3bf5ad-150b-4d40-bc01-c256089e088c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8085be3-8db3-46a1-8e51-cd4c4ff47eea",
        "cursor": {
          "ref": "77e59cd2-5503-4882-b8d7-2618e244c17e",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fd017e46-98f0-434b-9fa7-001af43e86bd"
        },
        "item": {
          "id": "b8085be3-8db3-46a1-8e51-cd4c4ff47eea",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a55ba110-95ed-449f-a129-1699b2a507d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540c7493-dbb0-409d-8619-008ace40fc04",
        "cursor": {
          "ref": "29ef9e65-62a4-4e19-b2ef-b07ea4ba1f08",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d7a4af40-feee-41d7-8e30-a1ddf57b2040"
        },
        "item": {
          "id": "540c7493-dbb0-409d-8619-008ace40fc04",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3261371e-3eb5-4cf2-9b0e-23642036ba21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97c0cab-6113-4f7c-a7b5-1ae349b2ce69",
        "cursor": {
          "ref": "04bccbee-e421-4560-8600-d599b76f69b4",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "aadaffa6-8e65-41f3-b23f-c329cc4f19f9"
        },
        "item": {
          "id": "b97c0cab-6113-4f7c-a7b5-1ae349b2ce69",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3d451d32-2a08-490c-82c5-c40afe5ccde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2850dea0-40c4-4faa-9858-16b0e17bc220",
        "cursor": {
          "ref": "2859bb34-e4e2-4e91-99a8-3458cae72da1",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7faea116-3a9f-44df-87c9-588b03e560a4"
        },
        "item": {
          "id": "2850dea0-40c4-4faa-9858-16b0e17bc220",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "efd981de-1445-4a10-ab9d-fd799ca305c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e13fa8-0a86-4a79-b881-1fa6ea98def9",
        "cursor": {
          "ref": "6d57cf12-e8b4-4279-989e-90b92b7a0c3d",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "90b607c7-5219-4981-acd7-32253be087df"
        },
        "item": {
          "id": "02e13fa8-0a86-4a79-b881-1fa6ea98def9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f9f07bf5-6c04-43d0-9440-24d3147c1a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201b0446-0afe-4a92-b4ea-f6b7298fef46",
        "cursor": {
          "ref": "0610cc42-a935-40ce-b9e1-9ecae5bac388",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5fa5ce13-0018-4555-881d-89aba7564c32"
        },
        "item": {
          "id": "201b0446-0afe-4a92-b4ea-f6b7298fef46",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "44ee4b28-9caa-4a93-9daa-9bbe804755d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f693911d-ee79-400c-b341-fbbf61e2c25a",
        "cursor": {
          "ref": "fed9f026-ee00-470a-a538-135174a6bc4f",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c7270d98-d237-4dd3-bd9a-c88df515ac94"
        },
        "item": {
          "id": "f693911d-ee79-400c-b341-fbbf61e2c25a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "871eb14e-4137-4baa-9322-ca15d9820edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67bd326-60e1-48cf-8846-2bbd0e460431",
        "cursor": {
          "ref": "b2a00053-ad5f-43f1-a320-ef16645d181b",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9aed0992-8ecc-4240-b15a-2c41b9835140"
        },
        "item": {
          "id": "f67bd326-60e1-48cf-8846-2bbd0e460431",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fdb1e800-eb85-4903-911b-2804a04ced81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc55ae3d-b10e-4003-beed-379a76782ebb",
        "cursor": {
          "ref": "5a8d7c1b-74a3-496d-a88f-01a090087bf8",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f3c7cc27-4953-46e7-b4be-e1b51bef855a"
        },
        "item": {
          "id": "dc55ae3d-b10e-4003-beed-379a76782ebb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9b671ee2-3b4c-425e-9c83-1b475037ea86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1460a6f-ba8c-46b5-aac8-d65763eb3d35",
        "cursor": {
          "ref": "1022c772-ab0c-4e4c-9de3-713a8df0b606",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a5a1f378-84e6-45cd-aa11-6b9d6c7fa32b"
        },
        "item": {
          "id": "e1460a6f-ba8c-46b5-aac8-d65763eb3d35",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8c2ecd16-487a-4502-918f-b57dd7776fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298a74ea-0e6b-4ce0-9e08-4bef921927fa",
        "cursor": {
          "ref": "12f1bb84-fb3f-4be5-b3d6-2b6b830d2941",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "694eeab7-07bf-42f5-9f2f-805fe1328845"
        },
        "item": {
          "id": "298a74ea-0e6b-4ce0-9e08-4bef921927fa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "18e0d5c7-1065-43b7-8867-64ef7f130a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb9db51-2a58-4eda-a8eb-b754b3533f50",
        "cursor": {
          "ref": "98427e16-2bdc-4dee-89a7-1decb1695a33",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a6cda88d-0883-4f10-ba65-b439d2ce676e"
        },
        "item": {
          "id": "8bb9db51-2a58-4eda-a8eb-b754b3533f50",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0243e920-0f67-4983-9c9c-62281cf05bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d78e426-f823-4135-8f1e-ec74b8efa279",
        "cursor": {
          "ref": "2b9bf6ba-b50d-420a-90a1-4f23686c820a",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bf053564-2bda-436d-aa50-5eea1122e013"
        },
        "item": {
          "id": "2d78e426-f823-4135-8f1e-ec74b8efa279",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6034e52c-df50-4eae-8731-40a3165d0356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13ba1b1-8783-4dbf-b4b2-784bf587e386",
        "cursor": {
          "ref": "febe650b-f7a5-48e8-9f25-b4eaeb023e2d",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ca3db956-18e7-4f70-b4ca-e7794f34583e"
        },
        "item": {
          "id": "d13ba1b1-8783-4dbf-b4b2-784bf587e386",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0b746d49-6235-4486-955f-d2a37f8f9bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60dee6d-6981-48fa-9fbf-62450af06701",
        "cursor": {
          "ref": "a4d67c4f-aa30-4c3b-9672-84cd6c4460c8",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "063ea559-a6be-447d-9cf4-d8290ce6ea25"
        },
        "item": {
          "id": "f60dee6d-6981-48fa-9fbf-62450af06701",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4d1ea0ab-a31a-43c1-a10c-9b9c46faf450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9655175-9f61-41e4-b7aa-a3d3e8bb9810",
        "cursor": {
          "ref": "7c185364-b5c6-42ba-8166-0cba9f368664",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "54d4e1d0-17c8-4a04-ba03-8a1ada2a6662"
        },
        "item": {
          "id": "a9655175-9f61-41e4-b7aa-a3d3e8bb9810",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ba5fcd48-c669-4067-bce4-1b9ca875317c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343f800f-8a6a-45e7-a402-7d6cf100caf1",
        "cursor": {
          "ref": "45f699cd-b5b3-47fe-9aef-0fcf697358d9",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ff0127d2-ce05-4ce0-9b72-ec7c0089c543"
        },
        "item": {
          "id": "343f800f-8a6a-45e7-a402-7d6cf100caf1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "42275e20-21f7-40fd-aa64-bdcac6f936a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1317,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32be9375-c9b9-48a1-bdf9-65fa7bf21f2c",
        "cursor": {
          "ref": "2f3a9dac-21d0-4fa5-9dd1-e2e02153a6bc",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6a31f49a-655b-45b7-a8a5-97f05c210a73"
        },
        "item": {
          "id": "32be9375-c9b9-48a1-bdf9-65fa7bf21f2c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bd1c20fa-5196-4b59-9dbe-0c7b1ec915c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1610,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec0534d-757d-44fd-9a18-121941b081a9",
        "cursor": {
          "ref": "37dd0be9-36fa-48c4-832b-4087eafef5fd",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4654c3d8-0eaf-45f4-a268-4e614e2ec95c"
        },
        "item": {
          "id": "fec0534d-757d-44fd-9a18-121941b081a9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f56a8303-c81d-44b0-a11c-f0daeef63ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1579,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2d57ba-1be3-42be-9422-f532282ad63b",
        "cursor": {
          "ref": "19c064f5-0d2c-41de-9e7a-9b38d2208e7f",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b537914f-6c66-48c6-bfff-44e6293cb35f"
        },
        "item": {
          "id": "eb2d57ba-1be3-42be-9422-f532282ad63b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3af94bfb-8cbf-4b88-b6e8-bc11756d85fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1231,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3854b49-ee63-4491-bc6c-f8e40a1ea3ac",
        "cursor": {
          "ref": "59795ebd-fe56-46a3-87bf-4e36f4dcb8b5",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "86da1729-910d-44a4-b37e-4c8d2332351c"
        },
        "item": {
          "id": "e3854b49-ee63-4491-bc6c-f8e40a1ea3ac",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "86b77145-fdaf-42d2-ab5f-bd31a98b1c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc02a99-a3d8-4d0f-9e62-0d716e07a778",
        "cursor": {
          "ref": "73330721-2196-461d-a8ee-6b2e90820c58",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1c1813d3-b32a-48d8-889e-16ce86a14ffa"
        },
        "item": {
          "id": "6cc02a99-a3d8-4d0f-9e62-0d716e07a778",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d5ed42a0-f07e-49cc-9a7a-f94e00228760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883cb51a-5875-4b86-b674-932e6d504dbc",
        "cursor": {
          "ref": "4ea290f1-f3ce-4686-94e1-381a73a5a525",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6c9b5146-11a0-4ab4-a5dd-eee72a9f3e1e"
        },
        "item": {
          "id": "883cb51a-5875-4b86-b674-932e6d504dbc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "81b88d82-0563-494d-9b07-595954c81012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1578,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cb712b-1033-4e07-afa8-5cfd262e6ea6",
        "cursor": {
          "ref": "f6c0a8eb-5cee-418c-bce5-28fb50f82834",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b86c8c64-4096-4f91-81d3-e30884e57397"
        },
        "item": {
          "id": "78cb712b-1033-4e07-afa8-5cfd262e6ea6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ed5eaaea-a300-40e7-9549-df4c9fc727a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1562,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365dfc6b-f72a-4df8-b148-2edc6c87b4ae",
        "cursor": {
          "ref": "1cdb9247-9b2a-4a09-833f-5568a5995bbd",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "38e56d46-33b5-461b-8577-38df49a53f97"
        },
        "item": {
          "id": "365dfc6b-f72a-4df8-b148-2edc6c87b4ae",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7bac7bb2-58bd-4902-afa9-6b8b58245815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1825,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8fdeff-dc37-4522-b765-5460e66c7707",
        "cursor": {
          "ref": "e4836131-dec4-4015-96fd-b36fd006a5de",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "20e26503-1cc8-411d-a90c-9990070a2241"
        },
        "item": {
          "id": "dd8fdeff-dc37-4522-b765-5460e66c7707",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9be52409-9b3e-4528-88dc-21c739cf6c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73393498-4df4-444a-ac72-ca64fb269b76",
        "cursor": {
          "ref": "cbf4c326-e969-48c1-b667-b56d62fa1b7c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ebd80831-f43a-4a54-b954-6c0c010843d8"
        },
        "item": {
          "id": "73393498-4df4-444a-ac72-ca64fb269b76",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "42b8954c-a337-4efd-af49-fb04464e6d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba458a69-1f79-4d96-be2d-934e6afb89c7",
        "cursor": {
          "ref": "9b0ecf9e-aca6-41ca-8201-01d8fa6e233e",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0706642d-2a9c-4d96-b478-7c348d28a104"
        },
        "item": {
          "id": "ba458a69-1f79-4d96-be2d-934e6afb89c7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "89f04808-60c2-4ce9-93b6-043204bbf7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559b9283-6fe2-4ee1-b10a-5195843c05ef",
        "cursor": {
          "ref": "572c1b8b-e8c0-4b14-91d7-360806ae5cd3",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c43d019e-69c5-48e1-aa99-eb3825f01cf6"
        },
        "item": {
          "id": "559b9283-6fe2-4ee1-b10a-5195843c05ef",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cd906488-fe8d-4621-be78-16d88d0f5404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709fc1d6-0a6a-4e61-a358-4a03a031e193",
        "cursor": {
          "ref": "d047433c-7678-4bba-8460-3b0970c9b97b",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ae1207d9-7123-4843-864c-d7ba561e7126"
        },
        "item": {
          "id": "709fc1d6-0a6a-4e61-a358-4a03a031e193",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3b5f6d43-5441-46e3-80ff-52fabeff9d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c9d3d8-7392-46cc-8179-589150126c5c",
        "cursor": {
          "ref": "1a383a12-e3ba-475f-a8e2-58705f91e9d6",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b83bf545-5665-4f73-b1de-da14fb04f02b"
        },
        "item": {
          "id": "f6c9d3d8-7392-46cc-8179-589150126c5c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f8c90889-8b66-43b5-b3a4-c66dca52b591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8686b369-7c1e-40f4-bddb-f6711c25fa6d",
        "cursor": {
          "ref": "68ead51b-52f7-4e83-8602-bb1811a83df4",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e941a98c-01cb-4c35-98be-a42a2959cabb"
        },
        "item": {
          "id": "8686b369-7c1e-40f4-bddb-f6711c25fa6d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a14024cd-d6cb-41f6-ad83-562a7bcb8135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8349ed60-00ab-4287-9bec-411b1e473db4",
        "cursor": {
          "ref": "d70f5978-970e-4663-ac53-3cbbc3b95674",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "da980a8d-cc5e-402c-94ed-6b08ebf7e0d8"
        },
        "item": {
          "id": "8349ed60-00ab-4287-9bec-411b1e473db4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4033501c-8541-4dd3-818c-84081b006b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bb364c-ea0b-447b-a92f-fc023ca3e889",
        "cursor": {
          "ref": "729cc37a-181a-4474-b319-d0fdf2ad50fb",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1316537b-0dcf-4921-8e0e-d4a2eaa140e9"
        },
        "item": {
          "id": "e2bb364c-ea0b-447b-a92f-fc023ca3e889",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c194d6f6-066c-46fb-8ccd-4281e1562197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614725ee-db07-4402-ab1a-f1458b1ef6d6",
        "cursor": {
          "ref": "ebe48e54-0970-4f95-9f9e-310a7275ec06",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "46525cf7-83b0-436d-9375-728fcf9845e0"
        },
        "item": {
          "id": "614725ee-db07-4402-ab1a-f1458b1ef6d6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "28b7d4f0-c26a-45bc-bc5d-245b98a9a8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4168fbaa-3a67-4dbc-b77c-eae623aea3e7",
        "cursor": {
          "ref": "347e155d-b21b-4010-8988-50387966bb83",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0280e4d6-af58-4139-af0d-081ba96961fa"
        },
        "item": {
          "id": "4168fbaa-3a67-4dbc-b77c-eae623aea3e7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c371e91a-81a2-4f0d-9b8d-84e8b86f5ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b212ec18-4daa-44d1-8b24-ee2250323803",
        "cursor": {
          "ref": "c935b8f1-8fba-45ab-bb01-28c2d8eb925a",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "59d6df4b-a52f-4676-9655-32078ff40019"
        },
        "item": {
          "id": "b212ec18-4daa-44d1-8b24-ee2250323803",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "613e6508-0c1e-43d4-8dd5-a47fe5be324e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d60fd81-f091-42bb-a22a-2a6e613e6124",
        "cursor": {
          "ref": "a21a5d99-389f-4bed-aa8a-c06bbab44316",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "762c055c-fe45-4e45-b726-004828f89498"
        },
        "item": {
          "id": "9d60fd81-f091-42bb-a22a-2a6e613e6124",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ddaec973-8b3b-4909-b0b0-8b3a2c11012c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5915de8c-87f7-41ab-ab15-21810db43368",
        "cursor": {
          "ref": "c75a3184-8589-4fbf-a147-36f1e935b55b",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9cd7147b-1475-4d93-ae18-2e94390ee2d4"
        },
        "item": {
          "id": "5915de8c-87f7-41ab-ab15-21810db43368",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "384cbd9e-39e9-43cb-b53b-c1c6c9f2d57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711dd161-3460-429b-bf7d-a1651644f498",
        "cursor": {
          "ref": "6dde7629-e102-4909-9b91-e23aa239d146",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4d078995-0eb2-4a5a-8674-fe348f46d7af"
        },
        "item": {
          "id": "711dd161-3460-429b-bf7d-a1651644f498",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0cb6b96e-4ac8-4d4c-942c-9914a565d699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe4e2a8-9f67-42ab-b6d4-c35f50f3f295",
        "cursor": {
          "ref": "110a7ff8-5c42-45d9-92e2-38df19fa799d",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "535853d4-d56d-4c05-80fd-df3abe87f20c"
        },
        "item": {
          "id": "cbe4e2a8-9f67-42ab-b6d4-c35f50f3f295",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "78368ff9-eeb3-4ae7-acac-1430a1fd78ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074291b0-d2f1-49ec-a289-682449a160ab",
        "cursor": {
          "ref": "9161d7c7-8640-4ebf-be8f-b1c927e6d7c1",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a34f3ac3-44aa-4b3e-9bf7-00a5a8895331"
        },
        "item": {
          "id": "074291b0-d2f1-49ec-a289-682449a160ab",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1211cf97-b278-4b32-af62-be9b3744dc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1003,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ce1480-72c5-4c68-8336-f992c23da412",
        "cursor": {
          "ref": "a2e72b6d-5eda-4dcd-81b1-0514596857d5",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d83db1e7-6eae-40ae-bf9c-29b472af02f8"
        },
        "item": {
          "id": "78ce1480-72c5-4c68-8336-f992c23da412",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1aa3cf2e-df59-4d96-86ab-d977eef81627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 983,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f0427c-34a7-4f87-92f1-626bfe7f420e",
        "cursor": {
          "ref": "5259c1ee-3cc6-4bc0-bb31-7ac05342863f",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "16e48daa-14fb-47f5-826b-58c4fbc313e7"
        },
        "item": {
          "id": "05f0427c-34a7-4f87-92f1-626bfe7f420e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "613e90e7-42cc-4919-9777-97a523019b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca532a9-74f5-45ed-bed8-dd8a85ebd9fa",
        "cursor": {
          "ref": "8067abb3-22d5-456f-9182-e8f7b59f1839",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "eb6dccec-707c-4dee-89e3-c91645ea02db"
        },
        "item": {
          "id": "eca532a9-74f5-45ed-bed8-dd8a85ebd9fa",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e93b18be-f044-47ab-aff4-53309cc4f8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e64bb6b-6c24-406d-8561-b872c8be0da8",
        "cursor": {
          "ref": "2702d3ce-51bc-4c36-8dc5-53137bf0f775",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f6f47b6f-ebef-4696-b7d3-b7ead011a6c4"
        },
        "item": {
          "id": "0e64bb6b-6c24-406d-8561-b872c8be0da8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "02880514-68bd-40ab-b61c-35ac3868830a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed94ac4c-21d6-4ae2-bed7-8bfeaadb5551",
        "cursor": {
          "ref": "acc7a111-aa4d-4af2-94ef-46fade4a7390",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b1388876-3c33-443d-9e4d-82116f1c1079"
        },
        "item": {
          "id": "ed94ac4c-21d6-4ae2-bed7-8bfeaadb5551",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "70ca18d1-6954-47be-b9be-7fe7812da595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09d6e1f-07ca-43b7-9acc-cc68baa096b7",
        "cursor": {
          "ref": "a47f623a-5190-4c7b-829e-5b6d5d5088fa",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a83f7484-3834-45d0-b3a9-6447f4c29e21"
        },
        "item": {
          "id": "b09d6e1f-07ca-43b7-9acc-cc68baa096b7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b721ec44-ce74-406e-ace7-239bae964f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c037f605-64aa-41ea-8aec-a121f5a45e8a",
        "cursor": {
          "ref": "d8d05ab1-8a26-4a67-907c-793bfdb60154",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b446888e-0344-4c43-81df-f83c43f46609"
        },
        "item": {
          "id": "c037f605-64aa-41ea-8aec-a121f5a45e8a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "85eb377f-4973-45bb-a177-ac44607e4723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42132d8-6d37-41e6-a001-07efdbc403fd",
        "cursor": {
          "ref": "4fae3ffb-c1ac-48a4-ac71-5f4c954d079b",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e5632e5f-e0d2-4271-ad33-0f0eb03700ed"
        },
        "item": {
          "id": "f42132d8-6d37-41e6-a001-07efdbc403fd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9dcb300d-4d4f-4987-a104-f08714874c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd126485-e470-41f2-9ce6-015f078c282b",
        "cursor": {
          "ref": "98b9f579-93bf-4823-879e-10b0d00df1cc",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "60324faf-9c38-418c-b49f-aa28c50c5eff"
        },
        "item": {
          "id": "fd126485-e470-41f2-9ce6-015f078c282b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "240b1e3d-2725-4b23-8fd8-083f4d96f6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a2e810-8a12-43c5-a364-a54cb257b622",
        "cursor": {
          "ref": "0e9f56e9-d31a-4f48-96f0-9a450b8a7cc9",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "32f2c892-230a-44e8-b363-57f0d95bd781"
        },
        "item": {
          "id": "13a2e810-8a12-43c5-a364-a54cb257b622",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c10b53ce-2a20-4c42-a6f0-c94d95184d65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eaaf70-7091-43c6-8733-218c29c30148",
        "cursor": {
          "ref": "5aaf12b1-67cb-4d46-9032-0f342f0b587b",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "53367bc9-cc25-40c9-b7f2-cbad8a8bfaa8"
        },
        "item": {
          "id": "72eaaf70-7091-43c6-8733-218c29c30148",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "55b70046-5e05-4ae4-ad74-9830573a817d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 716,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21c413b-0b28-44f3-9251-b5ddb34eb530",
        "cursor": {
          "ref": "20bc943e-7257-4d0e-a038-9b39575138e8",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8da96f4a-d38d-4c83-8535-ae679d282f44"
        },
        "item": {
          "id": "d21c413b-0b28-44f3-9251-b5ddb34eb530",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "47399b2c-7dd4-4c10-9ea3-9971a7ddf247",
          "status": "OK",
          "code": 200,
          "responseTime": 617,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c180748d-5100-4350-a865-837f67f6809a",
        "cursor": {
          "ref": "956830b7-ec6d-43a4-b29f-fcdfd0e18f32",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1b9b57fa-66dc-41d0-a71d-bd8e50eb780b"
        },
        "item": {
          "id": "c180748d-5100-4350-a865-837f67f6809a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9481644d-3726-4ec0-b3ab-6a6ce96fd499",
          "status": "OK",
          "code": 200,
          "responseTime": 2237,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8d337a-a6af-4039-806c-4f6e359b84ed",
        "cursor": {
          "ref": "08bf4848-7682-47c6-9510-d94e8f56ee29",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "74fbdfa9-e73f-4e32-98f7-6312272bb9c5"
        },
        "item": {
          "id": "2f8d337a-a6af-4039-806c-4f6e359b84ed",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dd6059b0-4c15-4b4c-882d-64a0b79d9d49",
          "status": "OK",
          "code": 200,
          "responseTime": 1950,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d5696e-c393-4b39-9fb7-08d091d5ec2d",
        "cursor": {
          "ref": "426f7b5b-914a-4b3c-92cc-65013bc6f85a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "de3035e7-04eb-48bb-8646-280d020c16c4"
        },
        "item": {
          "id": "20d5696e-c393-4b39-9fb7-08d091d5ec2d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4fc5735e-95f2-487e-b01e-c158b303bd55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d5696e-c393-4b39-9fb7-08d091d5ec2d",
        "cursor": {
          "ref": "426f7b5b-914a-4b3c-92cc-65013bc6f85a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "de3035e7-04eb-48bb-8646-280d020c16c4"
        },
        "item": {
          "id": "20d5696e-c393-4b39-9fb7-08d091d5ec2d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4fc5735e-95f2-487e-b01e-c158b303bd55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d5696e-c393-4b39-9fb7-08d091d5ec2d",
        "cursor": {
          "ref": "426f7b5b-914a-4b3c-92cc-65013bc6f85a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "de3035e7-04eb-48bb-8646-280d020c16c4"
        },
        "item": {
          "id": "20d5696e-c393-4b39-9fb7-08d091d5ec2d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4fc5735e-95f2-487e-b01e-c158b303bd55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a014f4a7-151b-4573-ad8f-dc231e17502a",
        "cursor": {
          "ref": "a367f85a-7721-4580-afcc-d910c26c8e11",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bdbc97a6-e40e-452d-8bb0-07ecb22306c5"
        },
        "item": {
          "id": "a014f4a7-151b-4573-ad8f-dc231e17502a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c9d9e8e3-b414-46ea-862f-639841efb056",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 546,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29110c2b-6788-42c5-bf74-cd27a90ab821",
        "cursor": {
          "ref": "4753fa03-f70b-4d27-9cc7-baa419f8a336",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "db77dc27-86a1-4f32-baf5-85055de61b6b"
        },
        "item": {
          "id": "29110c2b-6788-42c5-bf74-cd27a90ab821",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "494582cc-46e9-4125-9d09-ea568a4aee1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29110c2b-6788-42c5-bf74-cd27a90ab821",
        "cursor": {
          "ref": "4753fa03-f70b-4d27-9cc7-baa419f8a336",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "db77dc27-86a1-4f32-baf5-85055de61b6b"
        },
        "item": {
          "id": "29110c2b-6788-42c5-bf74-cd27a90ab821",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "494582cc-46e9-4125-9d09-ea568a4aee1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dacff9-711d-42c2-a36e-99f6730d044c",
        "cursor": {
          "ref": "0e4bba0a-b74a-456a-9a1c-5de30906ae34",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "da7ca390-888b-4e4c-89ad-2db4f6929515"
        },
        "item": {
          "id": "c1dacff9-711d-42c2-a36e-99f6730d044c",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ba2f445f-cdd4-47c5-bc01-70cad1860225",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 823,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279b131c-106c-4362-bdf4-9b9ab763d146",
        "cursor": {
          "ref": "17ca7cae-d121-4fa2-89c9-c89af1507836",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f66d3d56-f9cf-4807-8c10-f316c49fab9d"
        },
        "item": {
          "id": "279b131c-106c-4362-bdf4-9b9ab763d146",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1a908cb9-c231-4099-8214-bf86e8994757",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279b131c-106c-4362-bdf4-9b9ab763d146",
        "cursor": {
          "ref": "17ca7cae-d121-4fa2-89c9-c89af1507836",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f66d3d56-f9cf-4807-8c10-f316c49fab9d"
        },
        "item": {
          "id": "279b131c-106c-4362-bdf4-9b9ab763d146",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1a908cb9-c231-4099-8214-bf86e8994757",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90e4136-d0df-480d-ab49-f91c3c7b1cd4",
        "cursor": {
          "ref": "26f08767-7df3-4392-a868-10224e82cb6b",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1262a4e4-d8e7-49d2-8787-020f4ee8e7e7"
        },
        "item": {
          "id": "e90e4136-d0df-480d-ab49-f91c3c7b1cd4",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "245ededd-7e94-4da9-9afb-263cf0dd46a0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 817,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}