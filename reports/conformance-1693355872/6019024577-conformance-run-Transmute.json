{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c6828642-492a-477e-9997-84e111183904",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1acb1f83-bd50-4ddf-b089-263f714dc26f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f486eda-38af-4b11-862c-7826e4377a38",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e021e060-89ac-4b73-a04c-7a60b3800042"
                }
              }
            ]
          },
          {
            "id": "ee81b935-669f-4141-b017-2a280157f7c8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac498eea-68dc-4576-bfdb-22f03fb37c34",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ab400ac0-dfdd-4565-99e5-7fa81dbefee3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2159d538-779a-4b84-b96f-f4a9160b3587",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2544d720-1884-4eec-a5c8-49b324ee1b1f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6fef6aa5-b5fa-4ef1-a94a-c77eb9f7ed7d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4375b6f6-30ac-443b-84ff-5d5b10989cd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13975499-7f64-46a1-a0fd-cfa6ef20667a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1516d202-9feb-43ff-80f0-b9c86113319a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5eb42701-857c-41b8-bfd8-c23a97d0d36d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9c35f510-c8b7-4f45-9b09-7d157c3163b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70586741-f1d2-43e9-a913-19dc241e1b51"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4b43f82-aeaa-4b43-a98c-0b92c04bc17c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "baa78465-9bff-4e1d-9082-cfabf2f32df6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48b97080-4ce6-4fda-94c2-b2d9398ec0b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2beacb09-efcd-4dfb-a9d6-0bde7a7205b1"
            }
          }
        ]
      },
      {
        "id": "9e7347a9-6fdd-4984-8d84-729030379327",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4983e346-1d3e-4e6a-9027-6db625e6fea5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1911439-48aa-46c4-b7ce-13e3a86080e0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "22d1a3cd-f7b0-4810-a365-bcf22fbb61ba",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a2dff8-b6f8-4f9e-a167-4df8db2ce8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba05026f-5bde-4f72-b6e9-aad0b71eebed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df0da01-776e-4657-ac14-f65688e187b9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eede47f5-18f7-4931-b339-82ef14be0ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3355a3fc-b8e3-4b54-b009-1eccd3cb3241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2739da57-b253-4ffe-9bf2-913778395b8a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d741d16c-30b0-4fe4-a589-5a94279ccdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d6f2556-77ea-42c2-9136-6602ae0a32e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d272f084-29d0-429a-a040-60500c699941",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8736879b-5e59-4077-a6fa-8ef80ded8879",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7db3733-ab2d-443c-b38a-13a7adff730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73895186-ebd4-435c-ba84-3332e1ade0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f47441-4ba1-4dbd-9cc6-1db65e25f4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbf1412-d78c-4825-99ea-4a05978efcee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1ca4af8f-2cb9-4a86-ae67-591fb6149697",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7622ce9a-372c-4ce7-bd8f-d9eda0d58649",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea631794-f9b4-47f4-b185-70b84ac76df9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1616b96d-dace-485a-a5be-14a934c40345"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa24ed73-c278-4d22-843d-a67617c9ac8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f3059ddd-61e7-4c2a-8869-ba399e30a09f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ba8cb10-b922-4bca-bb66-10620264a276",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa2d3461-96c0-463f-960e-16bf7a6a4f17"
            }
          }
        ]
      },
      {
        "id": "7452735d-66f0-4ac1-9272-b118ade9abb6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "362421ec-c7c5-4984-8758-cf505b8d0cd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "763418f7-9402-4e0a-a623-058aaf52e77c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b70061a8-9927-4c45-8319-4271b5c3d285",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31482ee5-e526-49ac-9531-6089df0b8e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0628e3b-39ce-4e9b-9e6e-e314db6e40ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6816ddc3-b508-4686-8f4f-fc8b2015f24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4924500-080d-40a1-bfff-f33baaec06d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a118f5b0-b2f8-4016-ab05-3b98eb92de92",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25799c1a-7cfb-48e3-a8ba-43de1cf7adbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ec2f84-d20b-48f5-aac8-a55e5d957a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9084583-866d-4f5a-bfb4-670132196e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddf0a1b3-a38a-413d-bf85-639b3c215ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dba628-78ff-4b6b-aa30-dd35ef687884",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4831705-ea69-4d75-bd62-0dad220f7e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789d383e-1e9e-4d5f-850d-52d9f644cb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21d8645-f9b9-4e12-8020-f4218f886703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95ed6ba4-3c7e-49ea-9aab-31ac8d692625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9beacc6e-bbcd-4fdc-95c7-f957fdf70498",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ffc12c-436e-478e-b94c-ff690c4f78f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8384e12a-b00b-4e05-a6c2-9da92e86d153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bbdc05-d5d0-4dbb-94fd-f4c8fe2b801b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b58943ad-9049-4e5c-afcd-17f1eb995b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f6b114-3e7e-46c6-8aab-0f76f12762cd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6986d0-5d71-4f87-ac0e-00b3b1f81c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c99074-6c5e-4e45-9782-d501bd048df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42e6132-8976-4956-ab7f-60f831aedf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0510187f-8b27-41cc-8a95-de9f748d4ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c7c29a-4792-42dc-8bb5-6aa38c857c04",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f527a0-384a-44eb-a691-a4f7f2660500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab727ba-6375-42ef-a12a-2f8610bfc15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f92432-475d-4f63-bb22-48ccbba5f635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f0c73c7-0068-4eb0-8fc4-c3a522301df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfafdc0-dd47-4c6d-b8ce-b6866aad74bc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d2a530-c4e8-4cda-962c-00cbbf42c428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee68f4a0-62b8-4571-b225-8b31f967b9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c442d6ad-806a-4c70-90d6-40d1daec6a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f5d6608-cca7-4482-bf35-6790eca090ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5796c083-c495-41af-9be5-e5716ed6a152",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738f9f69-1a8b-4ea5-b2ae-160f5a47800f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe20f1e-3952-4706-b5e0-860252eb250d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed73fd5-7e97-4ee4-9393-9b736d145cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "986677a4-4d07-4c94-89c1-c63b1611cd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d7a608-c626-4469-839a-5a7f9539f7a2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7c4d8d-c628-4801-9871-b9781259905f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff3de20-6b7a-47b3-93c4-3c3249c2c0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbda924-a603-411f-bafc-d5b885ca2569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cf7915b-c42c-42f5-b30c-8855fc62b84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532a50d3-9ac1-452c-8d87-cac4beea2441",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8f1277-c2a3-4315-ae4e-30f818a4aadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c726d2-bfc7-4d4a-87a1-1d19ae008e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bde2d5-f676-4c8a-8413-9e3cb08f523d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23de23e3-f6ea-494f-b704-6a5922753de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fe81b1-05c5-4d61-bbf2-f265d44d47fe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7aaf0c8-d5b1-42f8-bfb0-d148ee509605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14d0295-d747-44f9-b4fe-5462caee8a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cb4fdd-dd0a-4fc3-ac60-88c19622bf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc84bc14-cc60-4505-b1c9-41b209dd38cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a63fd4d-c439-4c93-970f-722d64225b92",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2149ed12-c63d-43eb-b1ca-b2e9b36a8932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dc05a8-1b14-4afc-bbaa-2147b9fc8ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4836b6a8-5452-4ff4-b9cf-d1629fed9d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb4521de-6442-4d67-b73d-da765d72d1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cf22e9-9b87-4a1c-baaa-ad08b42d8d09",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39bd40a-98fc-4077-8f0e-f1eeb97170e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870565f4-4da1-4946-b684-2fd1e789b871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5614d5fd-46cb-47a2-a55a-94c6b6db9f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f3baf87-31c4-4e12-896c-80cd917e1581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04be7806-7b33-44db-bafa-5b6b21d82f04",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c9a077-2076-4ac9-a3b7-ba4a7d090e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea16f8e4-79ce-44df-a49a-8d602071c48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d09253a-6169-4b7d-8d01-f627ba573b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf7b4466-fb46-4600-8dea-0b5fa125b5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7ce380-f6fd-4b11-8cdb-0dbdd2a8320e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ac0e0b-b3fb-4c5b-9c91-095a7a7f814c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5739fa-4c80-4ca8-a352-683859746b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63fb474-e468-4de0-bce4-9555ee3db9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1a3c4f9-01c2-487a-8e11-184118ff31e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155c822f-4dd4-4a1d-82d2-8a7a3940529d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f782f8cf-95d3-45e3-89e6-db0cec5079bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63385a1-1ccb-43b2-af5f-eb9a94342bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d91a44f-09bc-46bc-9e1e-88dd37bee0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d4df273-f011-49d6-8b67-87c2b28ae616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9706dd-f4b8-4c3c-b311-6412480eedb9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550034b7-920c-45cb-b7d7-ab9d1d1edf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296b2f5d-b383-4975-9cb8-5792f86bc175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef092f0d-5c1f-403d-9d5c-8c6ca5017f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e35d156-bcd1-4f8e-8dbb-d3d05293dc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee0b43a-0de7-412d-99d3-ae11dfdbcb07",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762f8e54-a590-4978-9e2d-bc170279acb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35faccec-74ed-4db7-872c-a9413fbfc3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c5ede5-0a8b-4de8-9259-a5cb70daa823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "81e7b472-0be9-4dbf-9072-9f06985df896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e2ada8-3133-4c76-abfe-70437b1c56be",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98e542e-db8e-4f4c-b622-077370d19131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51b137b-ecc7-4812-ae44-8378e467d171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652fdf56-da32-4efb-97f9-69d673eb793f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6324aa8f-2734-44a5-b99d-686af38810ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e341f88-5109-451f-8c38-41c990d1e29f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2871f478-19c9-4b02-b488-465fb3859eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beafd729-d3e8-4922-b787-bf5c0d4b09b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a15ed2f-ef03-4efe-aa90-2146f5e29052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27c936fe-9ece-49b2-b699-f18c4b9bbaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5a69ed-9b12-4aa4-be87-9761c5c747cd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0248d9-2f0c-4007-a08c-16c5c9029ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ec505e-62ed-416c-968f-02ef4c0e3c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e63b7c-185b-4f37-b4fb-b136657b352f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce85360a-42d3-48fc-8d94-fa176a8871d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8f1ac9-061e-43b0-ae3a-c7e6fd0fed40",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532a3da6-0659-458b-a582-0bc315f72afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb2806e-ec38-4ee8-8bee-fa54140efb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932e0266-e04a-484e-9902-0300d68f91cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f18a8205-2522-4b85-8ccd-5b117d7a60b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a63c13-2958-4c95-bc22-0501fae6b72a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29042c10-ae22-4d9a-b7e2-e79382990312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc8cf99-5b57-4b68-aea1-f7983c63d1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46344b79-b288-4a1e-9b6b-ae72e7c6492c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "536672e1-d9de-4dfb-9752-f491483d333f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054e2de9-51d3-49c6-aaba-a3857e87bbb2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd54aefb-4440-4e71-ad99-afed2280c5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26bf02e-a429-4b28-9ebe-a37f4581dd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc608db-e856-45c8-b721-9a41cf47f145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4efe591e-67da-4d31-afa5-89b0d860665c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b16956-11f1-4ae6-8cd3-4d6c95f0652d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407b7e70-3e38-4784-aee8-c47595fa0d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6ca9b4-9f0b-40f0-a4c2-edb78e496f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95542ab-c05c-4424-bfaf-ee2d7023e8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "807a5f4f-2dcf-48d4-a890-ebe6ac7c5b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b66749-0569-4f8d-8585-e225b594312e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f637611a-4afe-4ca8-b421-7c0881308d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104889c8-12e5-41dc-aa38-56be5dd1017f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefaae5c-b5eb-462f-bfd7-e54cdf2b7ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2ab21a-c670-43c9-b4b8-0170418c8daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539ff878-8417-45cc-9a64-02ad49b2a878",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d590d93f-d8da-49e1-bd10-a858149cee58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42f59e2-bd7d-42cc-b382-3ba43a513882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e0b82e-a0b3-4ceb-b9a3-ff7f5b82ba65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4c539b-6396-4bfd-8f0b-5a7542c6e5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988a29d1-2d98-4071-9f0b-fbe2d2bbad2a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f8670d-4f41-4580-b860-64594ff82e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b35878-0922-48d8-a482-ea3c4ad66f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053bd3d7-2270-4750-898f-d3a58ab1cd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8fa503-7cac-4875-8bc3-0c1f720ea1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eafa423-a62f-4eab-95b8-23dccb2cd199",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bafb19-e8ab-46b0-a054-5718854b0059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1387e0d-e303-4e02-9c72-97a5f5088a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e70c857-c8c9-4312-b44e-53e80bf49848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5681c368-2157-4493-9622-2aaee9005ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969a06a0-7f3f-4d7a-a331-e5f7d3fe0ac3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d7dc0d-4722-48b8-ada8-19fd52908ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d06695-1807-4148-9642-82969b952106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da60dcd-c92d-45c1-a738-32d779b8027b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a631c5f-1cec-4bf4-81d9-bc4b816127db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17fbd41-8d85-44f9-b884-1ba8f6090ce5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3359864-fdd7-455f-b8c0-6004df48e371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713ac4e4-6c7b-4287-ab52-1d9518e5aafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b2cf1a-0e03-4e40-882b-bdd59d076459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "854bdf93-6ef7-4dfd-a565-2fd3dc99bbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558de691-ec05-4c72-97d3-df5719f1a76b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7926be9-99c8-400f-bf62-267b80bb69ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a98d34-9561-4607-bb6a-95a5c20923fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c243c5-25ef-4121-8a23-3a68bf6b7657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbabaff-151f-415b-89f2-3fc283ce5ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b943c56e-1429-4250-808a-050dcc63e57f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4aeda97-badd-48cd-983b-85119a2aa093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ac7782-c71e-462c-ab21-029f4a023e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03eb06a-f873-4e39-9ca9-d6f3af9f4477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecab105-0e0d-42eb-9d14-cd7bab2d2823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed57c9f-d4eb-43ee-b70e-f21de58fa29c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0227e2db-dc71-46a1-80e9-7320581dd71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8310c4-8c63-4373-89db-2aa705a694d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ad0822-9abd-4c7c-876e-84ab77276539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23bed134-6fba-4f69-a895-640d3f10b859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16daf131-a1f6-4d17-bb7d-521fad5075b9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7082b3-89bd-4ed4-876e-14582fdd46f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02a38a9-e4b6-46c6-9d0a-97bd3a2c8bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e01977a-085f-4db3-9b56-76dc2a669297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "99fb189d-0b29-4e9e-837c-50ad4e9c5a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bb07df-ef56-4b8b-9ef7-865238c1fad0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a965617-2bfd-46a6-942e-a2d0fa254252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "762c97b4-eecb-474c-aae1-d44dacc46296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc88fb4-e05c-45c6-aa1d-0ef1484237a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15e86d52-5d11-49c4-be10-291d441b2353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf4da15-f04f-42a6-af3a-e78a1b05a9d4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e368b495-9f96-4e64-9b2c-7a22a8603712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99fe4b9-a012-47c5-8cd3-141080f21b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2879d331-5437-4038-996b-c2bab981ffd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28440740-63b3-493e-b364-c4657fe83470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8a9515-3b9c-4b5d-b262-38a4d53c42cc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc949c74-f3bd-42c2-9cfc-067c9e22f7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17d09fc-55d3-42f9-b2b0-002762e8c9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d60cd8-ca38-4577-9e91-d89b56085d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1db1f926-cfbf-4903-b35a-126369768158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fee396-7357-4fc3-9da8-7aea28a9466a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b33ab1-66f9-4c01-a95f-494e6104c666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3827635-bc40-4e5a-8adb-9338536d4ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c587adbb-6253-47e0-a410-1b39c25bf5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b28ac90c-b228-4310-b98b-c31c257a3922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c96055-36fc-4aa6-b3d5-9335d7b31adb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe76b45b-1998-469e-86ad-682d822fe832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367b355d-d717-4003-b040-2ec821d65523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e415c719-1918-4ca6-9f5b-c3afb3f11821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d15c40da-6ebd-4ce2-863a-5c9c76bdedd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1483ab38-eb93-4652-9d8f-8b8882e49970",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba05b1e-c0f9-4dc7-b9f8-5c423458d6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea16558-89b7-4b64-92e9-9fee3452ef42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb57b10-a881-4063-9471-129fe5ca5c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2baada8-500a-4240-89ce-8b374cc6871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c21cda-2bfb-41c1-9e08-efce7053701f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf97234-254f-4e70-a18e-d8f6a18a463a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3097dac2-d676-4853-96e9-a8488f295e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e916648d-e45e-4bf6-9312-cde500295833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd012c4-c2af-4a6c-b2e7-99289c4c4fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e86a36-7004-49c5-bd6f-61041c04dd70",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8843b6c0-aa22-486c-b205-e661bc2263a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bda453-8c2b-403e-91a8-e202f8bff1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327285f5-157f-45aa-a6b2-45aff6a82818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7012e1ad-d660-4b72-8f50-5818ba4fa56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa972d7-e752-42df-8522-3e8830bc8b1d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4b0b26-e037-4434-9cde-0e740e8552a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4040cd-8f08-4d95-b775-600cec8b9062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b1e242-18e1-445c-944f-0829446005fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d460924-1f31-4338-bc26-409125b30a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ce9a93-48f1-4410-8eec-740e3decf7e8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1657a147-d0c3-4dcf-9974-8bd0245c83cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46f5b18-eab3-4767-813f-578b0ba7136e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167796d2-52c5-4446-bd8f-38eb5e37484e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd429f0a-cace-42ec-a548-485d777c83de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7b4222-f5ec-42af-b06b-5c5dcd6141bb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dde848-f7e6-4762-9603-8b996413e875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d90afa-e726-4430-8654-b81fef57d4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b56157-e405-4c63-af3e-c790d099d56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f83fd6c-ece4-403d-9ebe-823ba7007809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2264b8a-d251-4ddb-8d20-36bed51722df",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d68a8f2-136c-483e-a226-ff626c23288c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db74ae4-0f9a-4bbb-bb4e-b6bf9f474600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34948c1-82f4-4b69-8966-c0fd757a1764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ebc895f-77c5-497c-bf6d-233d06fecab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02907f6-2616-40c4-9b16-387ae18155c8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1e7c83-2e94-442b-80cd-521115f08c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76b8b49-26ce-42bc-9a97-447ea4fc0bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b3c1a6-a7be-44c0-a0c0-26c953790529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6967cdd1-75fe-424b-936b-14c24a8ccad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a03be85-1679-49b4-88b3-82fdf989b21b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742e45af-7e71-401e-8563-7356ea535014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511ecc48-3e70-43b0-93b7-704953ac1344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f7cd1d-a0b2-4750-8d38-834e8655482b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2baea3c1-e49c-4c44-8413-5ee510c3da70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef6f886-1975-4242-ac67-2a4b9d698c3c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57b0c3b-e4df-436d-b2eb-1c3887cecceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ff09bf-ef1b-4766-b2ad-c6daf827d536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe36662-10ee-4922-8bb5-0cc1227997e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08ae174d-6224-4651-ae74-8f206a7489e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3081b654-2442-4dce-a93e-0bbb124e07e9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211881b6-06e3-4698-a343-fee056c4c016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c18bd9-db8b-4326-9e77-b28cee3d7f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e03ccb8-0a00-4e08-b32a-4c272cdef7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "64249117-1176-41fd-9253-47b91bdc41af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80563688-1e17-46ee-9bb0-baae333715e3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7499d00-fcc1-4357-871f-61ad5609ac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857cb8e6-6551-4a25-8ff9-c3f0cd0216ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3316f8-b805-496f-8fc4-6c0cd91c371f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0c1e5d-ebf5-4fb5-8edc-905930c36b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db80af98-6682-48b7-8a1f-da92dd9e4fc0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f704334c-658c-4cc5-9f72-1453d5aec0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049a5862-d2fd-4d2b-b295-6993f6ad9029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f459c028-a1aa-40a1-926e-70dae37a6287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6666c3d-d069-4a48-9818-fb8c0683cd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65663010-3f74-46ce-8f78-d54a8fa6701a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f762bc98-8b97-446c-90b8-ed084fbbd21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41384e54-7d0f-4c0b-876f-5b099aee3bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4604f291-d5c0-416a-ad33-a095386131d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8689245-84fc-450b-bf54-7569e6829597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09300104-d656-49d9-bb33-dd98d1f7a30a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c94dee0-831b-4846-8119-ed5fc41c9833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fd62fd-286d-422f-ab4c-a22d4fcd311e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b879ceae-8623-4d03-b330-9e5128393dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6dd712-3376-462a-a53a-13daa8d0f191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d20cd5a-72c8-4897-86d8-4ea5be0f6284",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c957ef19-ad8c-42ab-8d3a-a965e8fbffd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e145675e-7b7c-46ef-a78c-bffeb4034850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb7d0ef-531e-47f0-8c29-d4bdd9f65e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "125e4c2a-1f41-4851-9bb2-baf58336ef58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1411bc6-1f1d-4089-920c-5f66a944f870",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c52879-5d1a-44da-ad42-e64be66b112e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd095ea-8886-474d-b968-ede9f53e5f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a9d054-2613-45d7-8593-5a235bc9f7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "92c64183-f6c5-4520-badd-58332189edaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1be92f7-69b3-43f4-90f3-193b01902053",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6e72aa-1f31-4ff7-9136-efc04a946b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1518cc65-158c-41cd-a3c2-05e8f7f1778a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28ed9f4-e817-4b77-8e9e-466968f4a624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd29a30b-77f8-4429-ad67-3a095728c6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166edc68-f114-408e-bd71-3f725e43dcbd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742bc360-a2f3-467c-98ad-785e2f8e2de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ddfaa9-c160-4785-af53-b568f79fb468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9930baaf-adc2-416a-9314-b37f35d6ed90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae53ce45-4fc9-4101-a10a-31f6941a4002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe5c969-1961-4228-8b02-30db9439d843",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fc4061-ad23-4e72-92d8-01bdc8b3b271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcc3596-7cbb-4004-9e1e-46459a54b24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5815fd-2c7d-4c63-b2eb-d3fd2d37d5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e15b95df-feb4-47b7-b957-3c2814f2a2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53224d78-8649-4dfe-b81e-f7dc0c3939f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690411ae-a4fe-48c0-b578-fc8e5ba395d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb124804-36e0-4bb6-ad9d-c6d4135eac54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa09b90f-d599-48cc-8b6e-2751227cd456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "018cb51d-6646-4eb9-a0fe-3a2259c599c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8250fa8d-e07a-4dd7-ba0e-a0eb19640184",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beceebb4-bf41-4b8c-a555-27723de3313f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ba2d6e-3716-4813-9e4b-d391f6ab6add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d6d02f-9832-4fde-9b17-41445832713c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc3e7bd-cd45-4ae2-a2b6-1508db9ff02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d448b05-e006-479d-8342-dd82d06f4010",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef16045-0037-4cee-9b97-a81e33cad181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1158daee-19dd-4e3b-b1c6-cedab8abcfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9741470b-99fc-4b72-b1c6-892981567ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4a415e-9f73-4e6f-bcd8-6b3eff427838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94e8e7d-9fb5-4a9a-a011-04b750bcb188",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c56d1c-980e-4219-a267-4ab2390d576d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d22c232-bd92-4fd3-8908-ac5c7d1e0436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7662925e-b4fb-448c-8bc6-244b0c1ab21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86fe1ad4-264e-4609-a516-d34d0bc08399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caf6fd8-b841-4ad7-881f-45f9c956f95a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da1116c-85a7-4471-819e-29dc2332c664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa6d39f-7c5f-4dfd-be98-7e9b0c942fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b214e3d2-08e9-4678-b3df-cb97e7d7de8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06590e76-806c-421f-8c47-4496624ad946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd591f04-d104-43a7-8779-e7fec340701b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2075eba-477c-446e-b9e4-b478008ade17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f61386d-06c4-4974-9558-b8ddc9bf91cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3310cc35-26e3-4a73-8827-f320f8a7f194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "096947b1-fcee-4a0c-8f6e-45867096bb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d2ce3f-8c42-4b65-bb53-e0afd121bc7b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d616b063-290a-4863-8a23-768871599830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd56925f-90be-4fb8-b672-fa84f37733b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae9ce20-ce1f-45ea-96f1-d0e4d9e1aaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e03083af-e508-48f5-a0b6-273a50c452ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1ddaf8-46cf-4cff-9101-7d803178ec0a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4395b9c-6304-40ae-8acd-9014c3e6e8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b59e622-8345-4fd0-886b-cd4996b056a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8795ff59-f8eb-4888-9330-90f971a9f199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d66745e5-70a2-4c1a-a3cb-acf622d5408b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70b9f5d-8d3a-4b24-80d5-81763969ba62",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2be25a7-4a14-40f8-8389-ad85f2fc9c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fa958c-6469-408b-9e9f-25297a738f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a769049-23d4-468e-9217-504e5d57db55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df4e76c-60b4-4087-8439-b4a49ad37abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757d5d75-8de8-4845-b2af-6f9d4e230037",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c428701-c037-4e1d-bee0-c6b9e571c86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832cb93a-81c6-4078-a905-8eab5ea5c6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc47954-1ea5-412e-9d90-632e8af71989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62592378-7c53-42ed-80ae-6f54f8355b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c1e7dc-575c-4ee2-abbd-d21ba33c7155",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d368fcc6-da09-42b3-9077-d9aea7b1e9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5db8ada-0152-4836-adb2-22ac41c88180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff047e5-7d39-4783-888f-0e74ac987ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93c9bc05-937f-47fb-917c-90e872555e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d0db46-2cfe-49dc-8988-ed4c1a3803ed",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef74dd2a-7f1b-45ae-83f9-5d80a1ac28a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edb15df-3bbf-483a-a14e-9282172a3def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2b09de-ec32-4382-a535-06bc2c027f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d72fff5-d92c-454f-a747-08d2096c6bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b972a88c-05f2-4845-831a-9c1b9148ede8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d368e33-4879-478f-97e7-f014e7eff939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfde9fd1-f562-4af1-bb3d-8d130a62730d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f80c4e-8aa8-4221-8292-a993cf7f1f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d473fb05-e07c-4220-b276-feead5304907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2403b105-e529-4457-a7e8-8ec429597a2c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396d9b84-d8cb-4795-b0c2-430dea2fb043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe8387b-960d-4ffc-ba5c-b7c1219a8b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374d5c41-abde-4469-9b54-3852c931aa3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d275816-bcac-446c-a178-3ec81bda716b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bd0f4e-4b9b-499d-8fa6-f2f5a25a3045",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a0dec4-22bb-42ee-a42e-89fdf5109728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5547ecbf-cf86-4e1d-ad21-ba3fd03f95ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2c9c09-d0b7-4524-b500-264da2101d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "acffbfe0-ef7d-4e3f-b891-7e5652011f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac65acfc-5429-4951-999e-dd4614cc11e8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3a3c17-c3fa-4940-b186-9c8f10fff3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537e116d-a614-4163-8e08-b9cf19cd893d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a0a0d2-a74e-4daa-9940-070d5c902e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "640324cd-2a86-4ec6-99e6-bdae0b8256be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b9540f-704c-42ff-bba5-c15c3359d848",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148baddb-aa63-4e91-b2ea-87f09e15f315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccb2dfb-9697-492b-86e8-655c9f23dc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72b4a14-8eb7-47a7-8e36-cb94a9de33df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b4d3e3-1ef9-4917-9f09-f0e0ea1fd5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58766481-8d0b-49e2-996d-27471dc35c8d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53623c46-93d4-47dd-ade9-95174c019b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c572d33-6da3-45ea-a322-96194e57eac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc53b84-40cc-4f10-a51d-531cd04fdfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "462b597f-c530-4ecd-b0f8-48914563d6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce58b8d6-ab80-401a-9d50-d6d5e9432d09",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8494cf74-fe15-41a7-b89d-b75353f69e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9449dbf-594a-4954-b6b3-8ee5c6bae6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a4311d-49e0-4cb6-980f-619876220cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7a28ad-0a94-4b01-9187-02b255c13b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44a9b62-eb67-4acc-8f96-b917c55b5d4a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2107d3a3-8ed5-4e75-be98-5e093aa50559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8916d91d-7e69-4a3a-a9b3-adc71d62ece1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e329480-8f1c-4784-bb73-c1ea140e4169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07ff8a65-ab70-404c-90c9-d59ca6f46da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cf05c2-db49-4e68-a615-40d3f2caaf02",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68f53e5-8bb3-4f20-a092-89e79715f936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9732fe-9d1e-4450-beeb-2069f99ea574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09943745-6168-465b-8c67-3adaf7660f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "284f196d-523b-45f6-ae82-352bb0f50eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dbaefc-4ab9-4bb1-9c53-f358bf0a93bf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d4b896-d49b-4b68-863c-83b7289242b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f92f295-bf81-49de-8e68-ed2029578901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41b30d1-98a0-4020-93d1-350fa1fc0f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d86b7a7-c160-480c-8fa7-594703339b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1905e2d9-b68d-45b3-a2a4-ae23ae9d7672",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c1192d-cbc1-4b9a-a90e-33b76364d824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56398f69-a30a-49f3-a9f6-cfb5b369be47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3168b99-e9ec-425f-b1a9-8d36b5b12796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22f72ad3-e8cb-42bd-86f5-1d0744c75910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb8ca14-10be-4f91-a247-323878e8914c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcda8e5-2ed4-4d2c-8138-2a996c68820d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410455e3-ed8f-4135-b301-184831540309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43341859-5e9b-496c-a7d3-5b7c7a6c8392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e403b9c0-4645-4b6d-ac04-91e1de213c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edbc9bb-6307-42cd-b22e-d8476745b4b3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c8d0a7-663d-4431-b0e4-001af23fbe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528ba233-550f-4675-ac09-68e5bc36c9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854dd26c-c406-4a64-b712-0171245dcb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66758291-91e0-4a62-a649-b03d4ba71601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c425d99-da1d-4d62-a302-84addd013b0e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2def91-547b-463f-ba29-90ed8dd4ea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3abad2-977c-4365-89f3-9c42e55fb7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2597ee-41e3-4702-ab9a-2d095cbf157e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97bd2ce3-ff94-4b1d-a064-12d17b2a190b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c9fdea-cb04-4f61-b169-a5baaa91a074",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700a1f8b-08f5-4f8a-8458-c066ca63d180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afcd396-0d64-4c98-8936-e9ebf2e83fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fb2fdf-4710-4ee3-ae4d-1060ac8bc8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bca7c566-9df9-40f5-9956-6015ffa9d82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d83de2-71f0-4658-92a7-f81359fa1fdf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46db75a9-473e-47dc-87c6-83faf36e5efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a710503-23d3-4d0a-b8eb-d95dc7889103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff4f2c2-ec55-4b02-a86f-c549010fd3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd36f665-88b4-4178-8519-0aa39fdc1925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47213d3f-1920-437c-ad36-42fee98a6bdc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924cff69-7075-4215-bcbd-e50bc13ff0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e73f4f8-617d-4450-8fc2-a5b13b02139f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2030ce-724a-4b9f-b12c-057ce9353492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "69e38366-561d-49b4-a710-bd028e527403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33080e96-f042-4601-9928-36c1ec3dcdbe",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dc578d-7ecd-46f6-933d-fe85e89118c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f2de6a-ad17-47f3-a3d0-6db851befaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f977e81e-ce5d-4e09-bd1e-bed10babd811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a38d9e-9d46-4f90-9a8c-726f67ff710a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931be5e3-8ed3-4659-925f-b265bfe90b05",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e207b9-7e6a-4b5b-809c-75a0cc5cf1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b56f08-5a55-4c9c-aedc-b5294b478e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f65eea8-e873-4620-8b5a-420c81466cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1b2f0a-6db2-4e33-b484-5060159412b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fa9e19-7592-4690-8f23-d7597cb3c382",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e9b50f-c0ae-4c9e-9b35-2cd8ce0affdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "08f0e38e-612f-47d7-a182-41ed2a303684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18866935-753f-4664-a59d-989e5273bc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab718abc-64b0-4386-8be5-e04544670612"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2413ab5e-7613-4ef3-9f4b-803dd64b7f52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfb4e3aa-0499-4c34-ad66-ca71f3b3ac8c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764900ca-3088-4269-b540-dd69412b060b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7aa57a9-cefd-40bc-98e6-7d093a9b9de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64301613-65f0-4a26-981a-b0f46a5586ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89c38e3f-1843-4803-b2a8-b0f9c044909d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "047d10a6-8ece-4b07-91e8-21d567831f32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e21f6972-aaf7-46a2-8090-2ed8e5d46434"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbb16d8e-c744-44c1-9ee8-e47760b69a33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e22a361-66c8-4c91-9f7c-eec7ea2354cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5fd02c18-4915-4d77-91f5-bd897053f8f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c478bde0-2d7f-4647-bed9-875e66582aaa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "30ac69dd-d4e9-42b0-9e6a-1ced7be19f1f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f44c74b-b315-4b70-943f-3c6994579f53"
                }
              }
            ]
          },
          {
            "id": "010a93f3-889b-4523-a729-6492d921e839",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1415acff-4ce8-4421-8acf-e2a13603e48f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07cd787f-e810-4697-aff5-59ddcb277dab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e486f88-ef11-4bf2-9601-10171dc3f1fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbc33a3b-3156-441b-ae99-202c50c3d522",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56f42049-09e6-40ab-99f7-b3442fb3f7d9"
                    }
                  }
                ]
              },
              {
                "id": "f8a0d9ff-a379-4f46-8156-40457f8d9328",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e634ff9-b56b-4bae-a045-bb86514adab4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e7f379f-ea16-464b-8aaa-4b40d0b4529f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4d41249-94f4-4310-8d34-9ee13aa45e52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "276ec422-7bfe-43e2-b58d-f5a17474d9bb"
                    }
                  }
                ]
              },
              {
                "id": "9b94a23e-4679-451b-9747-1759c7a33812",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6f23d13-6bd0-4b95-8937-eef0c4ffe1dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79ab8a81-0f21-428b-94a3-7640caaeecef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cb56dd6-9bae-4909-b2c9-4908a55e8682",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "96dc8163-e328-4987-abdb-e3fce070c5a5"
                    }
                  }
                ]
              },
              {
                "id": "fb086e34-f9de-4893-9a42-d6a4e9eb9ace",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "307fc396-cb38-43dd-9b8e-d89d222cef40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c16c0272-09bc-4fac-838e-4080e90266e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3526bb24-b447-4011-9230-13f874d006d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7df064b0-63a3-4dd9-b242-9f1ed50acdda"
                    }
                  }
                ]
              },
              {
                "id": "b60b4c8c-6ae3-43fa-934b-2e7a4ca09b70",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f192b32c-456e-4db9-8188-cab2f3ef7890",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99d70106-e568-4ca8-bf40-6486bac677b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1154df49-2347-49b5-924d-fe993400f51e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "96b164a4-0b16-4b7f-b3f2-0388277ad0c5"
                    }
                  }
                ]
              },
              {
                "id": "28aaf8fb-8bf2-4d50-b048-b1942e8010d7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a8164b3-1501-44fc-8eaa-f74ece2135a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d78a62e2-4034-41cb-91c4-82adc5f0cc7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "650c7dd4-2752-4410-b52c-7e436805ee10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a9f0823-3410-441a-b24f-3ced74d4f752"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35dc52fc-4f93-468c-b853-6c0a10692464",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e15906bd-8b1c-4478-9f83-3ef530a913fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4f15f847-e894-4b87-b032-dde02848d75f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e999814-b610-47b3-b82d-de46eb622f10"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4a51716-b2e8-4930-9fea-72a50a9c2646",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e3ec71e9-fd0a-45dd-bd55-6092d9710b07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efd3399b-9f90-44cb-a934-c9abca501d20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b48abfe-428e-48bc-af02-2d7986f68757"
            }
          }
        ]
      },
      {
        "id": "a956e7ba-db65-47d5-8793-a06146586772",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "603dc8d1-4b08-495c-ba3b-aec892c23d52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8cb0b15-d007-4cf4-a524-7264a374dbad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "322ca785-80b6-4dce-b995-c2bc0be9ac4b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f15feac-8efa-47c8-aadc-0c968765af23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749be440-407b-499b-89f9-5f4e13d7f78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4237e111-d13c-4252-9fc1-b7bf45f362a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b58d5140-c564-42e1-89cf-66ba8ee323f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddd0059-0380-4085-87a5-d562f5b07023",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6b6bd4-84c6-49d5-a455-2f84c72213b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56affc11-903e-4a36-aec2-8fc5197a53c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b342267-1175-44ec-b40d-3e08110a5c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cee61f-0edc-44a0-be11-8f61928e4563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789f0f20-e84b-41a1-b7de-911831a20846",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66df2a1d-d522-44c8-834b-385ce3517791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c043b870-57fc-4dde-aca8-7282ef7c8b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf189b50-3f14-4764-a59d-0086e0ccdd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0fbfbf-087d-4613-9d37-59322f75ba7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84b36c9-d280-4c50-8ca3-80ee59dc607c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb285b9-e8bb-407e-ae91-d176b01cfb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1f7194-4796-452f-945b-bd8c157fb2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38785a9f-d29c-4ca2-8a85-410f7572e3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bba07768-762a-4869-987f-b82227e43a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d784e370-d420-4461-8954-69041d4a9737",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d39988-c362-4467-85ce-79d964bb939b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7004b63d-1c0c-4779-a972-2ac2a468abfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a17bcb7-8987-4329-9ed0-f46fe1316d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f0f827-8010-44c9-aba1-4ee02045822d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3317ef78-5cfd-4a30-be20-fec144527879",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e559d74-1ff6-4a07-bb09-669af33edffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2884b81e-bfd3-4191-b2d8-6a93e48dee3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8d4869-5b38-46ac-b9ef-a92401f8bfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a13ac085-d1c9-4a41-bf75-07680322ba94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac632c6e-adee-483d-91af-95f54bb85e62",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba2714f-3650-4963-be5b-254282e2bdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d81f707-fc87-4f74-959d-dd64b590c4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e3dfa-c646-4565-9c7e-564050060aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cddbd7fe-e993-4294-9470-36652341ae16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48391027-e1dc-4770-9996-81d227428596",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c450f19-b991-4534-bd91-0241c1988064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bd01ea-9fac-45bd-a551-04a0004ef6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1258277-d636-42c4-a523-049c17e4d00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8766a3-2084-4da7-8d0f-02ec5d12ecf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41541c3-9a65-447e-b56e-d881f6b74f14",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab113c2-6de8-4642-83e7-5361623d048b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c738e946-3ca7-416e-bd80-9046b0933a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d8c4de-3844-417f-a698-73f836d4457a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a945b32c-9a23-4440-ae96-16a90615e706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cb6ddd-8056-4ca2-b6a9-ea5cf4020302",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b012bd-7120-4edb-9b91-ef7d8d743a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a52c70-7ccd-4304-9668-dd3fca9ef35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8848c02-f5e0-41f6-866b-9ae24a983364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6138aa0c-2969-483e-bbdb-ed764dff6217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89e4729-5db2-48ea-be4e-a4366f477841",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d34b81-63d0-46ec-ab27-7226241023fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9b10df-5e55-47e4-8dda-e43dea7a8b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3f4fcf-667f-4854-b6f6-b6facefeec01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "18e23607-1e51-4e90-bd44-ecf31803d023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3a31e7-2c90-44b3-98a3-0c51b5e432c1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ef1f63-a8b6-4668-8dab-6bfc706a8a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83b3b1c-badd-497c-99c0-0810f3163298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa528098-9fb9-4bdf-83fb-b0da26209299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4129ef6b-e2f2-49d1-9362-c8956e763cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b362117-916e-4242-a959-7eeb78732021",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e56529-3a90-4498-a780-c0bac3dfb9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dae45d-9458-41ac-bc97-7c0e4cf07e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc30e555-fb99-46f4-a6b0-f164754da480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3227650-434e-4f0e-a8de-7b01bd10e729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa72c28f-96fb-495a-84ef-bdad77d16331",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad95ccfc-a5ac-4dff-8232-0557105f9f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2311d83-e3b0-40ec-9934-8c0e7ed834d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3149f9-688c-4f8b-9ada-b9d0fc97ea3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f0dbcd-e8c1-43b7-900a-300072d04f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038b99c1-159a-4e59-83cb-5a33719016a5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f9539f-f1ed-401b-9888-b5ed9168883a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0044d568-84e7-452f-b9a3-94700d7283cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c80118-8f12-40c8-8254-fd2e1d1cfab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4af4d2-5d9b-489f-b60d-f0aaa2d02577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c13b903-0df5-4f1c-bc65-9ed10567e607",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ecbdf1-5751-4b23-b88e-979383edb38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b2c899-a98a-4eac-935b-d53c7f1c6005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5cadbd-0800-4814-8164-8a9fe3b63567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4990c7fd-531d-4fd1-af77-c1eb2309e821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b44aea2-c198-48b9-a76f-f5b8ab26b144",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64979c6c-2cab-4884-bcf4-ed458ee4aa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b25234e-cfc8-46b7-82e9-3e4cdc5b27be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cc663a-a647-4aa0-97b0-614262bf5809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d45584-1088-412f-aee7-12e8b0f75baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d3d8e4-7d0d-471e-8dc4-cb210f937fa1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164843fd-c9ca-4d74-a2cd-7680ceff7f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa948186-d708-4575-bf98-62ba94bdd069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e2d0ca-02b7-4612-8a50-077dc79b3627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd9b47a-8802-400f-a64b-e78c63095baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c71bde6-4a1d-45f9-bf8f-45a869442b5a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3216a21-b690-4579-ba07-1cc5850db33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f75e1b-8c07-4da2-8e73-a7d9b6a4f942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3063300f-5310-4043-8e8e-0db01b19bda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90effebd-e5d9-46b3-8c65-1dce18675ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e05f8f5-b8f1-4126-8b96-8f7c3751ab0c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5960aab9-6d61-404f-87ba-a84a7133956d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a467631a-7cd1-4ff2-b954-30e71c1a96cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88457f24-11fc-4715-8186-419c225b9dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af48cdc-ffc5-48a7-917c-e0eddc65b40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea1fc3b-007c-456f-8c50-406dfe77e882",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c4a08a-f8a6-43cd-9dbb-3b09b86c8b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fb3bb1-96cd-4abf-b254-4d6d96097c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b8c25c-c8ba-4ed8-bff5-8a7c7e5fa35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc9e736-6f0e-4e60-b9fb-3f5cc7fcdedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb357710-02eb-424d-b8f8-a2839232e037",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36d43cc-efa7-489e-b75f-f141b660742f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f77fd18-1c3f-4353-b821-1db14ebb69e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cd3f42-f49a-45d8-9bcf-8603062b4b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc727ad4-3648-4940-8268-85a7a98f2d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d37d8b-265a-4228-9a41-7e572ca0701d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9fe017-ba4a-4e42-b002-68f9e3f20499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b69c39d-17ad-4f11-ba0e-cf01b0c16cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84be140e-544d-4335-b6f7-69f228e4f038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1803b6ab-c094-4472-a9c4-e88685062df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51210635-eb3c-4b9a-804b-2224560d1e99",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3ba4d9-56f4-4584-873e-d32a56da1f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293d5f02-9cbc-4a39-af60-64b5043fcb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feed34e-f1e7-4ef7-9395-6727eac0d15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae540f3d-75ac-4a26-9f9c-b240cd1426a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d2bca0-80be-4b2c-9c17-e78609d3edb3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f74d37-6c72-4587-8c8a-87f8e9d42b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94f2bd9-aa25-448c-9359-596a5de0f893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb8c7bd-2a9c-42b0-85a4-2272113e2c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e025e97d-07da-4979-9d6f-df4511f898e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8743a29-5538-4c73-ab03-86dbb4b6b94a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfd48a0-55b5-4848-bdcf-61190aca26b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aee3c69-73d2-4619-bcdf-35a293919ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37df15b5-bc89-477c-bf1f-f4a5c0dce358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57a1582a-f690-492d-806c-7e3170d6bb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c266a372-abcb-46be-9044-b9557f52c5a7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7085a5-a584-4615-8a74-b21e16032c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cada74-fe2a-4c56-9839-dcdcd6c27e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e8c752-ce83-4faa-85d3-acad3ad4f4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ad9947-99a1-4927-8021-63f3dc69ada5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd7bf19-d474-4954-8be7-7a069d0f1f46",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1038deb-4ace-4152-a43b-641d33de1b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ef4c77-4071-4cb6-865a-7e0c5e031d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e8b8dd-efd9-4314-8652-f574c4dfedef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9595ecec-6e1d-4c62-af83-70d07c18b6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6a92a5-4d2a-48b2-a203-13f077bca30e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ecea42-b7f9-412e-9b04-0ca246752ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70f5c9a-abea-46c0-9dde-e6d6d09885e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8701e7bf-2da7-4a6a-8bd3-9da102428fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7559d4-1ddc-4e08-a523-52206451774d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61d4502-d3bc-4c83-bbb0-f5feee25986f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25a5a2b-9dc8-4800-81cc-4f01a51091cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7529482e-7045-4169-bfe1-0f2010c8ffc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cedd00-65d6-4bac-aab0-875b5f2dee8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bcce28-3b3f-44b3-95fd-c7c7f9a330c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ad1eb8-9591-4f42-ac5a-63be78c89768",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ba23cc-46e5-4a81-9d77-7c21043655e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32130bd4-1e21-40b9-a036-948224a9fc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f961ea23-ed40-4af5-98dd-f08268c8052f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01e3af78-f743-4a6f-af0e-12ed07baabcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b605c26-76c4-47aa-abc5-68ebd9f34a87",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bc7c8f-9a33-42fd-b063-519c724d0a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e84826-1636-4beb-99c0-654a929906b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f9c16e-cfca-480a-b3f2-b0b7decbcb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01dda916-07bb-44c8-a85e-5c3dfeaf9719"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "851f4d2c-3686-4eaf-b8ae-56e459d2cf8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccf5aaa2-bbd2-4c64-a1da-005fcffa23fd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3be848-3135-46f9-9180-8b11f829a5cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9a1613-2a55-45f8-88f2-a7821f2caf44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22ff594-42ff-4d6d-83d1-d5ed38b4eff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea6d6dbb-2c42-49cb-908c-3f7bdb0345fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d83e849c-a52e-4ea3-b1f3-c2eea1798d9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a5d8122-be02-4077-a899-e25822fc009e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a8cacda-6fda-44a0-8a7a-a742faefcec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6538df25-13b7-4d4b-8bae-94dd552ef8af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6005f6c8-ba25-42c8-9044-c217167c253c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "341dcce0-2830-437c-9085-18a22da955e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f075fad1-fb57-41ed-9597-76628c4bde07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6254f95b-a3c3-4f19-ab3f-09fdf1d98238"
            }
          }
        ]
      },
      {
        "id": "02ed5d7e-881a-4014-b320-c269db6ed414",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3fcf9e76-b6c3-4833-9116-ebae04066605",
            "name": "Negative Testing",
            "item": [
              {
                "id": "031ffb0d-81c4-479f-a61f-0de2108bdd06",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "963093d3-6fec-441c-8069-a5b25b10eb6a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee6e9be-7187-429a-b65a-1b0452f24fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac26af37-cdb8-4010-afbe-5b96926cfff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9111849a-bdad-45c7-8218-71d69bd15c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "24d745c0-13f8-4949-b722-9e2e72f83dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b7a0ef-df71-4bb2-a17e-59a488a18377",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50de63e-10fc-4fd7-933e-5e9f0f66e656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf4a872-aa67-48e1-b017-cd9fbca1485d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d034e76-ee12-4488-ac43-96f2816ed4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4412380f-3f16-441f-a0a0-7e1779f1f2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4468b285-1ca7-46fb-a330-14cd8b2ef089",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84639411-3275-4917-b12c-1d50cac6a755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca802540-7c05-45fd-938b-024ec05e3a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf75be4-c583-4846-aa61-f36aeb4a4520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd45bcc-afca-40aa-b232-91b20eaa8130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b90d7c-485e-4729-b5ae-7acfe4eecf10",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39482bd6-f563-47d6-b0f1-46f479e7d735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e49cf4-7236-4425-aa2f-a6812ddb04c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a67950-075f-41d2-81db-5ac64420a70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8a438e-e781-488b-a520-6a2d94fa82f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f2f98e-9e18-4ca2-a9ef-c5b2af94b26a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c2ffbf-59e2-469a-a586-9e155b0d28f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1422e85-48ab-4811-b71c-6645fb0a67d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bfc7fb-0554-4de1-8e40-486789a1e459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52f880db-85f2-4487-967b-7c24dc55c087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba18489-db88-429b-813e-3ffcc7b506ca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8c0e0e-e565-47ae-97f8-ae8b48327be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b54655b-0f76-4ff7-ac56-7aaea29afbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adb22df-702d-4fef-aee9-af51c7df1d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e81845-5b22-4a51-b4ca-00a91fbad2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df012cc-ae3d-447a-902d-400d4dccf108",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae6f807-020d-4508-ba2f-4bd7ad624c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b9706a-9a31-4189-b2e2-0f82fb0c491f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219b8ad0-2682-4435-a2e2-d4606d387857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dab5559d-8086-4488-a133-6a75d584439e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb52ce8-6023-4dc5-87bb-5e0c10236d06",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954e8cd0-1b4a-4a77-a5d6-df8c474a86df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84800bb1-84e5-491d-82f9-721576480f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4314dfc2-a1d7-4544-aa01-06d7ff2954fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed10e41b-508f-4cb0-a100-dc6924716d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34b3a32-3d68-4cac-9cca-6b9d55050448",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1168902f-50f1-44e8-8adb-0b6ec5b73752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b071f3a7-b31d-40ad-b8d6-b988a962375c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e8e823-dba4-47ae-b109-b7c6cd7138f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4afce321-dfcc-46cb-a29a-b0bf35d9e269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1d1626-77da-43ef-a12f-8d5ed237742a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0947eb37-aadf-42ab-84fa-ae7f5ad5ff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f46edc1-d558-4385-a3e1-7dc8687170f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267afa12-55eb-4636-9b45-971104717ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "570c7169-cfd0-437b-b8ee-c4b8f512cc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1376c55a-01d6-4649-88eb-308cd175c402",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04535bd0-1ca5-40ea-9fd4-2fa47f0a2450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04568e90-d15e-42c8-a845-1231e4431533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b129f743-c23c-46e0-abb9-44469fe98f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4f312bc3-4f16-42ad-8234-f1c25b15ea47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e0a68b-30cd-430d-afba-ef5015bf5150",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e806938-f740-4580-ab3d-f32bf02fb718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0468c2e0-6d0c-4c96-a9bd-d295799dc5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10058918-4eeb-41a4-ad66-1099290296a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9510c043-e2e8-4ad5-a0aa-c2e03bc93e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83127ca4-5e47-42f9-9ca6-ececf51568be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b29c42-4a0b-4f9f-b2a9-2a01b1a885c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15721055-5668-4967-9aa2-f7d4bab49b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b35256-400b-480d-a034-e7c38e7ef983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9066695-ca7b-4b8c-945a-07128cf35f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b036284c-4f8e-4b66-80f5-ee2de36daea7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0637640a-1853-4868-b764-0e42435b2fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823cfbd2-1445-4b1d-a885-0f38554771d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd46fbcd-c8e4-4071-a291-8c09af2f4f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b96138c-a200-4ada-b313-3b3b7272997e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f15a8d-912c-4000-9b83-3a6c9d4c6f85",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35946a7-b396-446a-a954-f9cb86dc5424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1117cb8b-8e1a-4206-82f8-07066aace7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8735d8-8fa1-4e24-84cb-653f570363fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a43313-0f1e-48bc-af0e-f8d0a979ef60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc4abf2-a179-42c3-807b-43f5f62cc586",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a74c76-aa3e-4dad-95a6-55c9df24460d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf09f95e-97b3-4f8c-b83e-833fa7b68d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145f226b-7b1d-4eb0-bf39-59764578145d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "27acb126-2841-4ebb-8532-84104364a786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ce4f02-979b-4cb0-90ed-7d6c483e519d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80730825-cb75-4c77-8f79-d0c8d730ed81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdf8332-b002-45a7-bbcf-96d336f7a11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7ba553-8cd1-4241-bb7e-b930abbf7017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3628a184-7268-49ac-9d96-06f0c6eab67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95929699-ff54-46d2-a38b-9285c4895fc3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc379523-629b-4b6b-874f-49f374816e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf84bfa3-d19a-4269-aa57-b90c2fb2df69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8454de19-edd2-41ec-ada2-a6cb177b148d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "96f474ab-8b00-4007-8a09-81e63d234216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba94c0d-417a-43cc-aadd-928cd449684d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407de542-4423-449c-a510-02227cb33db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4f8626-b2fe-4cc6-b8ff-d76bd63361eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8445ab3f-838a-4239-8637-392b61465661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed454f7-e2ea-4fda-b66d-2ea97774d6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549b1f8c-d593-44d8-bad6-60e5f4dd0ef2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fd34b3-8434-4adb-9eb7-891c5876659e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a611a9c-f686-40d4-99bd-27e9dcef6d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713810bd-de2e-48ac-b7ca-de869a8af107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b0f499-b7dc-4c98-8c7b-c5531e7b056b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d001afb8-2f36-450a-9088-b113ff4da516",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038ab7c5-8e66-43c9-a4de-3779ef1a1c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d36f638-5128-42b5-bbf1-9afec65f1ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6f7a01-af24-4f0b-9815-69a30bdf3e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a58b2b0-f0b6-4a3d-8cec-d5b515f1ffa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b439b95c-1a41-48b9-8d9a-67ae31614bb3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45729ac7-e019-4b35-b54f-f22dae5dd846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d86b947-f0cf-40c5-8ce9-01446bdb5aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d056d1-18d8-49d4-8bfa-f33e16b4fdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1287cca8-4e85-4c32-8d7f-874065bac9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66de711c-044d-4131-921d-2c0288b7683f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd2057b-c57e-405a-83a6-ec90489742ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00b72b1-4a5a-4508-8b4d-b63461f0549f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b572cdde-69df-4b2a-ad0b-a622d872cdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15fd8fdf-0b5b-4f92-a6a8-6e00360806a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83871ae6-f1d1-4e2b-844d-aa4df8b74d6d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b23804f-0ce3-40bb-a1ae-c1c6e6c95d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acead8d4-1992-436b-92a2-5a30cf6a9f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca5f073-1d31-4717-b98f-40e6b8b895bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ba091e-1b12-4dbd-a297-4870a39de07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62775588-19f3-4674-93e8-0d5e90e80444",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae4a7b9-4563-45b3-be4a-74e920da84dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b39173-a6b7-4c5e-9655-21cf6d946523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c6d00c-4ba7-429d-96fa-0a05ce40333f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9516efa6-5a0a-414c-bd8b-ce51c7d1ea7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d217203-0fcf-4672-8c61-5dacc01f5dbb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ed2dba-8c25-4062-892c-4658c0df3777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0bca68-05dd-41f4-b763-56ca001cd616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e16be0-f38c-4efd-bc1e-d8e34a6d4218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "018b2854-27da-4d0e-bcc2-5b6a16490244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf9dfe1-5da9-461c-917a-e22e2b3a8ecf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9593b6c6-95dc-4179-a052-221eb0065d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60a859b-e2b0-4e53-aab5-a6bad7180e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab6afbc-7d34-4caf-bf71-285a7e718a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6121cb64-a2e7-47d0-a5c9-44c2c3683efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858ffcdc-8d9a-4601-985c-2762e0682ea5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddadc40-ab78-4dc7-b8d1-a89fef6d7c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e12814e-2a80-4fb0-b3eb-873ad49cba0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8a4c52-2d01-45e3-9bce-33b22a1ec905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4569bc24-e01e-4659-adcd-46907e4eaa14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9b62a5-638c-4532-9437-0652f2ec5255",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae0876a-d32d-444c-82ac-4cfbe309c253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222c35c5-e298-4abe-a97d-7242272c9aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31910f02-4431-4c52-9d00-7118b661322f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea38e1e-0672-4b13-bcb6-33a41c46589d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf50d770-4a8f-458c-905a-80b445e3a8c8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839ef30f-5b4e-4dcb-b317-c03b0b7e3491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef957310-f9b9-4b04-bd46-b452b7789d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcd18ac-5cb0-4d6e-ae9a-0ea3b1631022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6807bd-e550-4756-92e1-3573f78ee2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b6f162-abd4-4943-8f2e-447fda3854ca",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec591992-d417-4687-928d-4e6cd115dff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c0ea73-37e4-4f76-bf83-4065d781d283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a71ae9a-45b1-49d8-9c1b-cfa0897f5065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67952c4d-68ed-4658-8e97-1f043a2ca8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9610ae-0458-468e-91c1-58005de58b85",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bc71f5-889f-41f0-9606-7d2a2099d6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed446fb-5744-4cee-a55c-b09fecb585dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa424ea-6e6b-4cf9-809a-d9d56086d224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2429beea-ef9a-4e09-85a5-17951603fa14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40306ca0-47bf-4e2e-85ad-aec1e38a5395",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be820ff8-462d-4fed-995a-7cabc72b6b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca14566e-4232-4b85-a62c-d5a75ebcf6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42a7f01-794f-4b40-b26f-6892a0b1237b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c751f3e-82a0-460d-97e2-e44ebfa51539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b03398-28c2-4998-973c-841a2d78a4a7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909ebd80-9e7f-411e-bad1-1131beb3a7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4ddc12-ea92-4520-9631-b1923a400252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4327896f-6e17-45b1-acc7-6f0e86bcfdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa30eca-99e6-47fb-a997-9ccdb03dfd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440286ed-d826-4515-98cf-cafc766b8bbf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc6120b-3a18-43ce-adc3-44e7658d67ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02b4cee-b859-47ac-a1ff-5db0a97a0173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3753d389-cf8a-4e2f-9ebb-c1d685fc80d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a15bcb-0840-4cf6-a216-57294760592b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffa85ed-a4c4-4061-8a64-46857780855e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123ac705-ef35-4592-9a2f-e797a96d97d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744d5d21-f629-47ee-be9c-b52839465e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100aa963-1a03-4cd2-9864-2464592580d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ea3832-9731-4f52-adb3-a385f0103557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24e5a0a-549f-4a8b-9e71-4e1cf39c1461",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dc1a75-c15d-45f9-8098-608d522c3bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c47e262-1f4c-4555-81ff-c3f1a95c8ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0905b8-efc0-4d16-b68b-60fb73a97d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e118c0fc-3e65-4431-afbe-ff6747e86478"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac7dee07-045b-4b2c-a8d9-5968528f6ecf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7976b919-f84f-4e72-8457-e5cf9e64d8ca",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3054300a-cd71-4cd5-88f9-e224814e7153",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cb26f635-c1ec-423b-9a26-13bf1d8ba773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5a3045-86be-4900-b289-892ff21574af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64e48ab2-ba07-4d5d-a4b9-f3b745f28a94"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "294abd6d-3c6f-4fb1-bb67-80f5104c6841",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8635b6d2-4755-4b92-9959-1d2ee526029c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c710a41-b27c-4837-9cd8-d00f25c38547",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cbbd7e6-0eea-4c78-9a34-c4c892dcecc7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03cce68e-759c-4b7d-b2f5-46b305a34abe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d534c4e3-12e9-4c6a-ba27-2aeb6cc11446"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9c49ebb-b495-4be3-b702-477d8d07fe01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97a56285-903c-4623-8bf8-9bdb7133e892"
            }
          }
        ]
      },
      {
        "id": "8103e4df-e0c0-4279-a1bb-215372166011",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "73ab8c62-3278-4874-8925-6702a85c1d07",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52c7e390-19d2-4646-bbb4-f4a8f9437dab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b4937458-c9c6-456d-82c3-942741d0d125",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a88064-383a-4801-99fe-2198377e1518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12aed92-8e65-451e-ad80-349444368d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bfb43d-06da-4e33-9315-a855e63573a9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11a49d7-f92f-42b4-8fa7-fe12716a4441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abcdcdd-ba49-4ee0-bedc-e1c88ae70c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b574e709-cd4d-4188-b8e2-848897799457",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308b0712-2ce4-49d8-835a-87f4d1cf6bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd855c3-e957-4399-a9b6-0310bca4e49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0b42a9-18e2-48c5-96bc-099fee0d6af4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4123f168-17ed-431c-bb6d-72b4d62df054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0090b92b-e5aa-4f6e-aed2-1c09cbf58814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be76fe11-65cc-4254-9f34-0db9c1d27280",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b79d16-e2dc-4e29-9a51-5e3c6c6acf27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb0d3b5-6bc5-47bb-8a98-931b9ae43881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972bcee0-45fe-42aa-a5ed-9909b245745c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6000318-f628-4e44-9ba1-5a36ffea9ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3eb4b25-a027-4237-811b-066e9c1e3603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981d1f0a-91ff-4384-9822-ea7f553ae563",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ba9c54-03f7-4e30-a039-3c2f3753fe0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8beacb8-e7a7-485c-a06a-504f8820768f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49520ccf-9554-43f3-a87e-521e60547e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717abf10-e6a5-4955-a5d2-fdf8610dc717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cef971-e49f-4307-be45-301867ba7469",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5bf7c3-5f7f-4e36-8193-6f91d1f52497",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc4dc261-aa76-46de-8dcb-3edb99b371a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1facb9a-0d43-4118-9198-2573d46f0d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a2fd57-0d0a-4386-abbb-f7a7e47c939a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b654737-e181-45a3-970e-5773ad0ea0de",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4ec88c-26a2-4648-ac1f-b62741324bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c837d35-b0f5-4088-b1fe-fb6fa1b6c4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799c335d-002a-497e-9e46-06ca836be401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1277f5-6ac2-4729-9d41-a48df26e210a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9692ad3-ac0d-490f-be03-09b4a7a9d693",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250be12a-5368-4d60-82a4-4a95be765d43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9b1cc3d-c735-4c3b-bef9-95cde50bbb3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9f7ce9-0628-447f-9c7b-5efdd9f0f782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86065b49-8779-49a2-ac2a-0cce94483d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59071da7-2fa6-4045-8a2c-b5eaaa7e92b3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca85c6a8-13a6-4a88-82bb-05140b62c7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52383f3-e612-433d-8b6f-8462acd0db25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443e7ab7-bdd5-4ab5-b1ce-bcb9f042dc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2e5072-ed4c-4761-b50a-648f3d549268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cda71e-0713-42df-9ab1-1bf2569891c6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ab69d1-3757-48b6-aad9-278c224890e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae3cc74-c3ef-4f54-9be1-5cb97f10e61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd24ab39-8ef3-481f-b4d6-3987e57e5939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed90eac5-d972-40fe-8e5a-4a4c86ecaf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53c47b0-b9e2-4ae2-95cc-df1b27aea42e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37a61db-3108-4101-b702-d9ae3b37fd03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b35b5c3-c6b4-464c-b6b4-832b335107d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13f4ade-5af0-425b-b187-e9b1fba21dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39e7467-33d2-4578-9aed-9394f80f1ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e47363f-4df3-4ed0-bf43-d962ac3170eb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d4de4e-99d4-43cd-8e1a-95705942a260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c1ceb3-2d86-4442-b8a9-93d3adc4cfaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd053700-df23-4443-9ad1-4786407e2807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e54bb25-22dd-49b8-8213-01c956c6fe41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2c42e2-698d-4233-8c56-7da809ec5eb4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92131b2c-7cab-4acd-beb6-bd7cb6620b60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c294c24-a845-4b77-8a7e-6bc768da0da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58526c5-fd39-44cf-aff6-5e2c3de26378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11245704-8634-46f8-ad67-5e6633ffb8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8411eeb2-fd09-462f-8d94-a895eae3804c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927b09b5-81a5-44f1-ab49-a12a0259783d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f936c74e-d54d-4dda-a6d9-e2c1c134c0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468d8208-904f-4f25-8ed6-bc7fc5d24f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e3a0f5-7b11-419b-89c7-0a8ac07f8435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503582bc-a5ed-414f-857a-4d3d60db46a7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb1c25d-ba3d-4c0e-b1d1-8f4a356b8376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989f5077-5983-41c5-838d-d0e378a320b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14afaf80-1b05-4a62-b782-f9d13a2f35c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303e814e-4e88-46cb-b755-8d22aee56464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376f2203-5636-48a5-9ee0-fae9870bf0bc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f639bf5b-1b64-457e-aac0-1988af1b317b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c5fb65-f2e8-448e-9b79-01522c2c6a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d582af52-3234-4e4b-8beb-cb643e9d0573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26676103-1542-4d1d-bd1e-bfd6154ad01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d67c10-a44e-4673-8787-c98903d2d7d5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6745a3b-71b3-4f18-8539-464175e88708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b694c5e3-66f2-44fd-a433-2591f9935536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42da2c3-a8d1-4deb-b775-1cdee2348dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ac12fb-d528-45f4-a5a0-0410f96ca8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c77291-1812-4e40-a689-47e394dbf3cf",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f64ad6-8e8e-4b6d-a296-9e3ff4a65b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf8becf-d4ff-45ce-ae70-f3dae7e7125f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda3c2ea-bf3d-4a2a-ae86-61fa29ab562f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a22914-53f8-42b3-af56-fea72faf5e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08251323-3e79-4e64-b7b2-88ba2c1c804d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351a0519-7bb5-4f05-9223-ed6319864790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d2a3ee-de56-4728-9bdf-0886bc878255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc815af-077e-4137-bb5d-7dd7a844b287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422afcdc-5bae-4484-b4d4-57c5af1e69d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9296c7e-c635-4ac1-97f2-7241ac25ad6a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3661ab90-319e-402a-a0c7-d7bd4fd38ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e82951-f825-4c69-a8d1-7c9b206a3b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613b3864-735b-44eb-b713-316bddf905ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e16c90d-15f4-4eab-9866-f59e73e2826d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a65d98f-7b2c-4991-b5ea-a58c64859a2c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e427496-f5b5-4142-b589-8f2cb3bbcd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69dd2336-6f85-4a23-b109-60741b50b158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755ac232-a2fb-4b2d-bf06-e7906bfaf9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47244783-f5d4-4d16-9942-a94c815cf559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa5b5e3-a898-43f6-9255-d9e06088967a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3cc7b9-5ca6-48ac-839f-cd1157b27f9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e69bc6a-c8f1-4de9-b78f-8b2dc9b2f417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f428b7bd-a04a-4b15-8fbe-ef2b011e96a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86b42a2-e0f4-49ca-88f1-470e0f8d8420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb3e413-5721-4217-8213-dd60809f06e3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903dda2f-0b82-4dd3-a7af-e213ab00fbaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9d59c42-7f7b-4b13-b850-25ec687df28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3bbbf8-41cf-4522-ad3b-73259e908403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e56ff5-d0a9-406b-8c67-9645b0c7277f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a467c3f-c379-42af-a04a-ccae5d4f7bcd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7f8e15-cfad-40d9-b428-0555a8384764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd86cca5-2e29-439c-9b87-bdaa46afcdc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3df0871-1c50-430b-995f-5823280606e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a8580b-2103-4920-ac71-ef16390b3070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70375098-adc2-4e9d-b0e8-d79a78843849",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f2a33a-f3c5-423a-afe9-ab06ee26e247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fecab7da-4bac-41d8-9135-b0b98ebf7760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dee73d-5243-4a17-9906-f75e01ded330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fabd78-fffa-4c82-a69d-ceb704bd03b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afc5059-d822-4145-8378-9c797abf7c36",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ed731d-59e8-44a3-8b76-893309205eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3214ba-07ad-4f0e-81bf-4dab271b7e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e393ff6-633b-4eea-90e8-1852e521f612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0314b56d-4997-4e42-b901-c9ff3b53fa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f65833-3a4c-42cc-84e3-e17a65847edb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f67ddd-0c75-4a61-93ac-029321a93aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da59e735-e09b-46c2-9bc7-e12027a3f63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd4995a-1948-4ec1-bf22-9d85797ed530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86ec13a-3486-433f-8250-38676e7f29bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caafa27e-a2c1-4eca-a890-1b99e473b488",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9c4367-be77-44bf-951d-9c6e972e102e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8820a47b-6f4a-414a-8c93-eb5f21a4c8e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b7cb37-ac1b-4e17-b3aa-b745b97f7d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d5b4be-587e-4ad6-bb21-b9f97e4162ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ac8be6-d564-4204-bde2-665824d1de09",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c411c3-b890-4162-b37a-4e63cf783c6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "def253db-ff6a-4f97-ac82-53ca7e781a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0782969f-eed2-4f1b-9241-90a9f87cbb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fed130-872a-400e-82c8-1425f0f7694b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450d78fb-54c0-47d1-8d9c-12d92b860504",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278acdb5-1846-451a-82f3-adfe6e0f2c22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfd35013-3067-4b19-9506-b0bbc958b29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fee463c-8fac-442e-8c30-2bb67c6d7527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbeaf666-dd50-4129-8ad1-de2efe1d0569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03fd1b1-9f6d-419d-9b3c-7ea13997ff84",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff0557d-68b6-4a6d-bef5-6c949c5f9643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e79c1d-c967-427c-b098-cc2f1be468a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164e5e3a-7c93-4916-94e1-8f883a89a79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9703c8ab-45e4-4438-94e1-05478675185c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86719fce-0d9a-4935-a724-357facfcddbd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550d1c31-2709-4052-bedb-37a15acaa1ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3014fe0b-aed1-4d96-a65a-7bc92509562d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c957b2d6-c0e4-4231-8814-731dfe22f450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1936f5c3-69a5-4add-9755-eef0aee8c045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1723e063-36b3-4aec-abc2-51e34c5a78af",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eea583-67f0-4bb0-937a-8ad8f70fd0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cbd82d-fb9f-4689-a944-4b56b00acba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a51e8d-9466-4494-8bea-0f7ec1ce73fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7981a9-6541-45b8-8f25-bc1c1c57849a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90662953-24c2-4b45-9cc2-a06cd9b65689",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2067e020-4f3a-4d5f-9e53-7050c6348887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb75204-6af6-4c87-9d73-a882ecef9c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f0cd63-6890-4b50-aed9-f8e9c5bcd446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4e0a35-f5b6-4532-80e1-4d982969b71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8faeb4-1582-43e1-95f3-aee2ac75d5f0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbfce11-0f6c-4dc3-9bc8-cc75d09727a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceac9d8b-c22f-4fb6-a9e6-7377010ab417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659b088c-d6f4-46a5-91c7-6e6169dd284f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de283d3b-d7d9-4072-846c-b5ebdf157bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c85127b-5bd8-4e4e-843e-7d02dc2a80b1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da15cfd6-904b-4cd2-b1fa-53b7d8fbd9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f247f97-5927-41f6-bbd7-6aa6bd51b8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777a0eeb-e67a-433a-b187-bc936706f5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68615501-321b-472f-9aa7-860432c5c20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dde0f1-0d06-4818-b33a-e3f51fca31e0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfe942d-98a2-4708-85a1-b129127d642c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0367dfc7-f51c-4916-9e20-bbeeab898ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d3810a-b774-451a-b5b1-09be6ce12dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04758c02-337c-447e-963e-b7ac4c3daf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075e64c4-17bd-4205-87cc-a661326e3e10",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05210b7e-ccee-4827-9841-a8865560234d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9775bb70-bb89-43eb-9db7-d260adc47031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533ac4f8-f220-4fc1-8fe7-2a69213ee6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0b38d2-af3b-4f09-b06a-f566890ccf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8068d03d-7d63-4d83-8f64-2440a983a1d0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183ea496-1ac4-4198-9e3c-2084008eae52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8df5e2f-41f5-401e-91a1-ba1c24cf4170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a280095b-e45c-4caa-93bf-83a738f064b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af127e6-b4ae-4979-8349-6168f7524aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d72ab5-2af7-4739-8967-d9c9aeeb2c4b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded10d3a-c858-4eaf-af32-5ecd41cb1727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e63042-4863-4447-9a2d-f8ea147275af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce745cc5-a87f-4297-877e-4268e4030e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effade7e-38f7-4c90-80ed-61325142ccc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b35e5d3-dce9-40ea-8283-7b3ce6106b6c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7141e9b8-7d96-4f7c-8106-2f3f7e242509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa098b35-99ed-401e-81ed-3a232b5b7cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66fd454-772f-4492-b857-1cd0529a67dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e8699a-bd3f-45c2-b79d-36bac284bc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec65d64-1e2e-4d6d-add6-3b85b7292f0d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e00714d-b3b6-4d8f-9b47-7ba9561af07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d71b2e-91aa-48c6-92fa-c59d6c530150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9e3591-82ef-4561-a28b-a62eaf5a031d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e92936e-d7f0-4531-ba46-8ab02611496a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c31d67-03e9-4bca-ac19-88234245d628",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0a4398-d479-41a9-976d-ada79ae09610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac68f7c-561d-46e3-9063-44272ffc9742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdfcf14-f48e-461f-8192-e38b8dcd7540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500c75cd-9c8c-41c1-a517-e49c22a9014e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9daeca2-346a-45b0-893c-6f98dafd986c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a494e04-3525-4810-a13e-ec79f603d3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65f3866-80d0-477d-8d64-7936d1ab8770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba251079-de2c-4a1b-9a13-36344c65d8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05eb13b6-7066-4e72-aaba-8702b2c27cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42463075-ef1c-4d7f-88fd-27fb3c7dd90e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447e42e8-bbc7-42b0-bc2b-2550ad87648b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1a2128-5276-46cd-9256-553bc405d893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6eb574-e292-4aa9-8a2b-fc4e40f2259b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b557db-34f9-431e-b3ad-59a06dccc14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b7f034-6631-482e-bcb9-37379b211c56",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6564be2b-600b-4b2f-9624-e74b7f66e11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e65a589-805e-42dc-91db-4813c4a7966e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff89b65f-c565-40df-a396-2d52292c16b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d9bddb-6d8d-40f5-87f5-7e2c028c8c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40191871-dc66-41df-b1b2-161f1a9e43e3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9654b8-ab04-4306-8259-77fce2519152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de63d4c9-d04e-482c-9a87-96af4b5cc1f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9087cd29-2833-4971-950a-e97cb427b5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657f9710-632a-43fc-916e-9f9d7a7ff4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35059b1c-e263-40fc-936e-b9e10d8b294d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2c2373-47bc-4981-a1c4-41a2aae87569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73db3521-be22-4955-9afc-530c6872fc84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47196dff-f62d-4aa5-b24d-428ee49cb4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c475685f-a59f-41ff-b39b-6d139bbff999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9a4c99-b5e9-4080-92d1-322369d184ce",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64d967b-3dcf-4803-9490-47db5265b4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b88335-c71d-47ae-97a5-d218d480fdee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f932c9-4f34-4fe3-868c-2539b10db04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ded969-4647-4f01-94bd-8a2bad111720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a7fbc1-e7ae-466a-99e5-74aa0bfb2e3d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48115098-44a2-43c3-a078-9bad08c7af65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e953aa11-2487-4cdc-9b49-edeb36a0f003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cefff17-310b-40fa-a772-9706beb067b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73230b00-f31e-4016-833e-278ec2e468e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ca9d82-8884-48bc-8d86-3a7b979fef7b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3a71f4-1e41-4425-abbf-d6484a03785e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667098f2-0b69-4adb-9461-d81d77d509df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89843cf1-51d5-460b-891b-b3913492598a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131a5f83-3986-447d-a128-2004a3c4cdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe32cb2-5291-456c-83c6-ba5bcca076ed",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5a1cf2-e4c1-4179-8b15-08d1577f39f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538b8022-6e66-4c72-89a9-46f1198bfeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d353fe-0c18-4143-956d-cf9324289e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718daa8a-784f-4e9a-987b-183f6bc20b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da92658c-b484-4b3d-b920-403af3833be7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8917b5-5fe1-4ab5-a28f-3364097079b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8ed1b4-1d1a-4fe7-aec6-86261b4e0651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2d93ad-3348-4eb5-b616-fa32bdbd4b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f1c426-247e-4127-9bfa-f300ec5f85eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1788fcd-d0d9-4ce5-bbf2-20bcf676b615",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903e44f5-f430-412d-b5f5-963b2afc7d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5badb02-1a35-4d8e-967d-04d88d3d491c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f12b4a2-704e-4649-a52b-4b10305d0bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b2c1b9-b7b9-4d39-94dd-a439832a34a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e540440-f74a-4b8c-96d7-c70d341912e9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c8e3ac-10af-4232-a7dc-9bc29c08c20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2568a33c-5dec-49c0-9c61-219d0efe1898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7182f33-73ab-4fa9-948f-9add4d42b423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8193466a-95a5-4f89-b7b0-eecc8cb64e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e38ba4a-9188-4f97-99b6-51e7aff3ff99",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb553ee8-379d-499c-9b94-68dae9d364cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b73cc5-6df7-4e5b-a630-e2f3769e88f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "becc91cf-72c3-494d-9a7f-c832778f2770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4a4e77-a349-4db6-aa35-8aeb50881505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa898b2-84a1-431e-b33a-bff235364977",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6d8cf7-8826-4354-a234-882fd9bb568c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01d41e8-a656-43be-8ca6-5fba194abe5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa5359e-b0b8-4bf9-bd22-7820410d86fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fef193c-f30b-4140-9ec9-cf45d762846d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2191381c-5a1e-4e1a-b2c8-8ea35d0c91be",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e1ac95-b9f5-4ea3-8aa5-4e0be5154f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69acd9e3-2663-4aaf-86c0-6488281ece05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fc4846-54dc-45c8-8e65-025b742e5915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8d151f-8271-426e-943a-87fdca568906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7aca33-a57c-443a-8166-120618b25ded",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2554a93a-4438-4e47-b382-0799c8208ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94323bb-08f7-45ca-ab2b-73ae03a68df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79057b5a-c3bd-4c29-b36d-2ac437acacb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a150fc1-0491-451e-83ac-19f6619e6d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2455b1e5-c9c6-43cc-ad9f-3bb36192ee01",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab346131-cfaf-49ed-929c-2453d8a071b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11fd254d-21e2-4fa3-86bb-0d1dd874a9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ef428d-ef91-432e-93e1-e3e7a2115f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12eae17-6f93-4d14-8585-36ba863eaf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77e4bfd-a393-46d7-a714-cb89a2bdd5d6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dcf43f-6d2d-4c0b-9818-c4b689332104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f0f18d-aabd-484a-ae3b-32da21ae64fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6034b0c1-2e7e-4214-90c6-5778a9c99674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd353075-396d-4fa3-94af-2b88e35f0a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260883a1-a4f5-4c28-b404-f854587dc34c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c39dde4-8555-4d50-846d-d9397522fe89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b69aa024-34ef-4882-8278-3df5aacde1fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0301c466-c0ab-4964-aca1-6342cb048e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c48476-0f0a-4d82-a98a-cfd05c57608f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ace5880-001d-4102-8fc9-589a8a3598ed",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e0b795-5f73-4c4b-87b7-892793b0f698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e10086-28fc-4e5e-a79b-7c8de2293eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fd4830-707f-4e7f-be1c-12554b068ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d076fcd0-8ef7-4392-9744-c57837962b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c855c561-eeb1-464f-bce6-a27723df592e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e317fff9-ad07-4ccb-a570-34b7ce7aafb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fadafb07-8c78-46f0-ba6c-ed487988bc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c88d75-7b8c-4984-a3d3-17b9cb116815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99114d07-65a8-4547-b43d-43b70b3fe5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0fba23-6e18-44b0-b0ff-55d34a49c935",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd782f9-11b4-461b-818a-7851df945ec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7c6f4c-d87d-4841-8b08-0f72190ce2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fa76f6-1265-4ea9-ad16-54139a78c624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c854db7-c70b-4e1d-b808-21af1da6188a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a3144d-fdde-4c71-932a-e8b72c938576",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade1c39d-337b-48da-8879-588e441c9f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8609b72c-a3f4-4374-bc55-6ae563e58eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969b799b-94a0-4cff-85cf-05d3838e7276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0344f03a-7265-4a55-a5b3-e0d2b2b31545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef3490b-10b2-4b9d-96ec-35f429ade867",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138f0e8f-2277-4178-a1d7-3357de9bb091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce60986-5a30-4f4d-ad58-67f08faff069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030ed1af-9dca-4c83-aafd-8aa5e3749d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db402f7-6687-42ed-84bd-8f929e117874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae358a8c-2b75-425a-b6c3-38283d974ee4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1383c8c-260d-4343-a6c7-0f48954c6f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2b51da8-7222-4b08-8bde-d184bb4b3d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc841ca6-dc4b-44f2-85fa-49c68f2d6588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff766419-48ec-418c-81c5-cbf2e0f1603b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc790ce-8247-4542-810c-fa2a89a7ead6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792d8a4e-d334-4838-b5c2-7ec1322255be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e0ad0dc-66c8-4093-a451-76cad35e2ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bca2ac-5d17-46bf-8e26-a75e0240cbd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d06554-14ff-4462-a61c-f72ba764371b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1718e5b-e4be-48a1-b217-4ea2bf9ff705",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc34b23-1ffa-4ce2-a588-8b4546a972ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75fc068a-e74c-44a9-a4c7-1314283e2b19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5694b202-ed7c-4b32-b644-ce15115ad688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57522886-1989-42b1-af67-8bfb154372c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c94c928-14e1-4452-8122-878a79544f54",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8ed2ae-b9c6-4853-bb6f-ff45c0a6e3d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba8b591b-b295-45a4-af5e-7d65d526c5d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18311d63-98aa-4f2a-9602-81a4aab52c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c31fd4e-4a66-4f48-85d0-d4ff81ba50f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a18f0b6-a9fd-4e07-b62e-392921e99f2f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc19a18-b99b-4372-b2ba-a06c69800590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f9628da-8fa7-430c-ad06-26fad2b65a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321c8d48-a6cf-48be-8fee-b42ff4db5d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14c64d0-9ba0-4c5e-91e5-e37f5f7e42dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787b6ed6-490c-48d9-8fb9-790004a550b9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bd8c93-57be-4077-a669-07124dfe5ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36fa1835-17f8-4d89-bdef-7139a8e2abe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8f0e59-e444-4266-ab82-7cec0e4d625d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db143ac-ca55-468a-bd0e-6c322813d3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a76d1d-d199-40c8-9d59-5c96a881e8d9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ae8ed8-4ffa-4ae2-9a2e-c1867f5013f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "821e2d5c-efbd-4c25-9211-95f2751d2b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a9ea10-7a75-4739-9c44-fc3b9f911c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f41ed7-8ebb-4218-96bf-ca58ebfd698d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1075621-c124-47e8-9b0c-a3bde1e9c0ce",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ae5c8a-60b9-4601-b814-33e0bea9e969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11af04c1-bf78-4a30-8c52-38a729980802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6512de-b3c9-4f13-867d-f7f2596bb97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93699caa-41c7-446c-814b-40d4992ecced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1c7d4e-1dcb-4cec-b95a-9a8af85b5a50",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e22aad-6151-45a0-a5f9-1350583d3a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b10b4487-b64d-427a-8be4-48f511164296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e92dfd2-cb3b-46e5-88fa-3bf380ff1e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382c04a5-3c5b-4088-aab8-b6065a9dafa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a55945-ff9a-4491-a4a2-94d5672c0233",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4449eb3e-e104-44db-8584-8dbdf34388c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65396cb9-bb9a-44d7-be8e-50d108992a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce00ec4c-ef0c-4e3f-98a7-090e8639c076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c7ede8-c9fa-46e9-ace7-dee1b66e0175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442f043f-68df-4089-9c7d-8467f809bd73",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a69637-3187-4df0-af86-b021df7285ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85a7876d-7ad0-40c3-84de-a902a54bde2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804efda3-61c2-4c84-b8b6-519959412ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7a59cb-c897-4842-aa61-ff627477ed5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4423da90-7cf9-4f66-8dc1-c77d996fb8f6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c16153-2bed-4b43-89bb-35270c89f7b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934732b9-8866-4be3-926f-c5da2ab3cb22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c1027f-2ffe-4970-9a45-75262c6193d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb889d7-529c-4985-bf82-e7d92fdce17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f839a22-d813-480b-8b43-edfa74b2e074",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8ddf49-e703-4f17-9604-c67a1d9ae91a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eebe8b4c-5d66-4402-a56d-ef159b0e69a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16e0013-903e-4977-bc3f-65e4151bc95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee8ddb0-cd84-479f-aaed-a12d60506ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31057ca-bf36-44c1-832e-eb494981a31c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b21b91-95d7-4993-b25b-15086f0e571a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccce5cb1-6b61-4476-aa9a-9a04258bd923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02c2ac0-e3f6-41a9-b5d2-9221dc49566d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc9153f-3ab2-4bc9-9319-abf3917e1f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba3b345-fb08-4571-8a75-d6890b3fda40",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dedc56-83e6-471a-8db3-d92e774b69d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce84ef95-751d-497f-b6f8-c9145cfe7869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29203a93-ec0a-4926-977d-7dcc9c43785a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02a05ff-7c90-4765-9d0e-65017bae2114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473e6553-9021-4333-8c28-9a2cac44505a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f34d5c-37a5-4361-a836-67e2553de49b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdab3620-e059-48c5-8636-336c75a6aaa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf1fbd7-3ab4-4c24-ac93-f09ef7d66597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48559a3d-7f2b-490a-99a2-0311e51bf64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec9948c-e0d8-4862-99a5-74b1a9108004",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50626c9f-31ce-459a-a6a4-ae262b7ba359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a61ab26-08d8-499a-a6ed-76465c2f3ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1e737a-d3dc-4a79-8cc4-4f1550da5f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27dc8b3c-2793-4ec8-9ca3-affb7339b73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a01a48-c882-45b2-87c5-c5dfca79a309",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62adbed3-d3e3-44ce-ad09-e22bc9926748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2705621f-6149-470a-9093-a283aebd4b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e440369b-5f7c-45d7-98a9-30865ca78306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a1cbb0-5fbd-4e13-bcbb-17fc81019460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfcb6fa-f4b6-41c9-815d-52b66cbf631c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0ac0bf-f5e5-41e7-8a80-479241cfef45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d21bb3eb-6c7b-4764-9b31-4f03579d952f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf17ee0-df80-4838-9a77-5b06001f91d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09afe92a-36f7-4b2b-b442-1d89661e0195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5495a088-595b-49d6-94d9-e629fc5f7221",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5965627d-e10e-48cb-b44a-e4e26c8196fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da0d89b-d336-4ef2-aac8-a0308d30fa6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba356a83-9518-4a02-a25c-96e3c7fb6c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266e5a28-2a8a-4b33-8aa0-9ffe02928447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46930c45-e1c9-42a8-b30a-f4bf6144a7ed",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d622c807-80b5-405a-88e3-6820f0cb1a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06ff151-7682-4ee9-aa3c-b2d54922ccbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f47700-568e-49ae-83d9-9202c2b3efb9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a67d52d-fccb-4399-b35f-5df7c5ef1aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2545f8-e53b-4e60-a320-48da149531c7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d86f15-b475-41f1-a372-37e5f17154e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ba6e27-fafc-4206-b990-f0a9ca6648b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37d8e57-873d-456b-8f18-42357c87ae7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8575f67-6202-44bd-9a3f-6976a4f1c111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833031ea-0161-4445-9598-e129a9717a84",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5af9bf-58d9-4f60-a386-29259787eb48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc49083-c017-4307-8bd3-a5915171225a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cbbee1-5c55-4323-b601-b845a0939b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a86623-011a-446a-b535-1e2e614e7c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ce23eb-50a8-4159-950e-8bb022ba357c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d158094-a4ac-46d5-87de-3dc0c024f69b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b52f729-8378-46ea-8d59-4e11a92eb3fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bb940f-6fe7-4030-8e79-491183f692c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ded957-22f0-49ff-9115-abf1d3823797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7891d062-a57b-4f10-8f18-76f8add710d2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1987b229-5ca4-4fb8-8d11-11ca64eb1f2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42dd12f3-8858-427f-b9df-fe774ebea0c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070a771a-7be1-4655-ad33-edba19004035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4147f1c3-d601-481b-b320-3701eb16dc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b138fd46-14b7-4622-a935-e7d40a8485d5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9c8230-3912-459b-a546-d838e34d1c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cffc00c-5ecc-4464-a247-415ffa6ee0e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d80107b-bee8-42f9-9ac3-444616187630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e67a0de-fc5a-4cfa-a9f6-dd5905701faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f747ef3f-eb5e-4058-9aa0-429ae02880ad",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b27cefd-46d3-4ab7-8208-96da0719d1c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c8c82fb-efd7-44af-9f35-d242ac390785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808f9efc-53fb-43d5-aef5-f1ab116c4038",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d29496-f2fb-4433-90bc-467ba080b943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707e8241-fefd-4140-81b5-1fbb681a7297",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13806287-872c-4b06-a46a-b51a546f52d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce23f95-4220-4c06-ae91-7301015be3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cef1b85-519b-47cc-bb10-0662730be931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d1acac-0606-4b79-a6b5-4d2d50ad751b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "289cae05-d139-47d5-b3af-eb65095d1553",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbab5d8e-7ab1-4fb5-9796-4ea442318804"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "225852d2-d200-4ba2-a3fb-a486d2978d8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c3862c1-d1f8-4fee-a73c-5105c48608e9"
                    }
                  }
                ]
              },
              {
                "id": "dce146ba-b294-47c7-81a9-34bdfc82b169",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43ee666f-5552-4201-a916-b05d6b7a46e5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66232f6-63b5-4ede-a8b0-1a64400a44ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c256c7e9-0f4e-47aa-be6d-028197e5b215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b84c6c0-691c-4ad9-96ac-576060ef6fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32fac068-c962-4b66-964e-3ca5a3e52b22"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6e889f4-575b-4b00-a70d-11c30f508fd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db9f6120-f9cd-4316-b635-fa3d45066a82"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e3042ac-6ccc-442c-b138-343a2a4fe824",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f92821a5-31d0-4e9b-b80d-d28ef48a22fd"
                    }
                  }
                ]
              },
              {
                "id": "35023588-48fb-43db-8f7e-7931e5875677",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "061167a6-14f6-493d-96d6-ef359e310b01",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f28f9ec-d53e-4a3f-872c-df58ff4b681d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c422c785-3e02-4e62-8c6c-0ec45b329698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123cfc2c-5c20-4f54-853f-c5a701977402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52b2bcd-31d4-4322-b884-8f517ca09954"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a592b992-13c6-47a2-befd-d360065321c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "39ed0fa8-74d4-4c37-a13c-dcdc00ae7d43",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61c7fb11-a17b-422d-a9e0-cd9baff519ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6fe08747-1e80-4963-aa09-d03542ff913b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b70cb10f-19f5-407d-a411-3277a85b8706",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13e9d1db-b6f8-4236-a503-4323be538cb1"
                    }
                  }
                ]
              },
              {
                "id": "ab061a9d-d7a2-4ddf-8ee2-60a903c2e9e6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bc22669-4ca7-4aeb-a64e-ad5dfa8e0b65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "02d6c12a-0fcb-42a2-8c8d-4d7a44267f71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89b34f4e-be05-4bb9-8a08-a36885cd23ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ef43fc8-3658-47e3-a13f-4bf229df364b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e51f7efd-3cc8-438d-8a98-91a08a114cd8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7f3a8e37-878b-4a97-a56b-bcb7aa0d1154"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f207c825-43cc-4f4e-a9c8-2d01618fccb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c4a8f27-9d38-4f46-9e93-dd7ba5af8f20"
            }
          }
        ]
      },
      {
        "id": "90267b29-60ae-432c-a458-6bdf89a05b34",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "69c22d54-7bc3-4f05-be74-9657eee32153",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5088852-5cc2-4e72-8b89-b16504235a57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f1118d7-cacd-4de1-b859-c570d45c9e62",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfbb8c3-988f-48a7-b107-54266bff2ac6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "98b69536-ebcb-4b00-86a2-fcab57f6e958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9fd39f-26ed-442e-88b7-6a0308f05781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e18ce21-cdd9-4f72-b960-b5d54ed60ab4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f24b00f-2c5b-4e7b-bad3-0367e662eed4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11fb4113-02b1-4ae4-840f-3892d3d65a19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43d6fdec-4cf7-4a9e-84b8-d8f0a0a6a98f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ba5f338-cb4b-4754-931d-3d0e98b8760b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0fad2df-e13f-4b74-8010-9d0c01822ba4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8469675a-8dec-425c-8b3f-28b3cbd87471"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb0473fd-224c-4a15-87b3-84babdfcbca2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef4e4876-5eff-4841-bb9c-7fb78840c636"
            }
          }
        ]
      },
      {
        "id": "a6b64649-db23-447d-88f7-cbc74d5484e5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4ccc41a2-7f4b-4ee5-800e-99a96ff96cf3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd2d7cca-45de-44a6-95db-b725c9e7f298",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86ba52af-e51b-48be-bb9f-4f88f10f29cc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597b8034-1796-4fee-9501-c592a980bf68",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c30852d1-f53e-42ed-a7c9-429a770eab25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfb1f18-3315-46f9-90e1-ab751bba359f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e017d97-b72d-4cdd-a40a-5b02d0310638"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "946cbabe-a7f0-4ed5-b705-4599d06c5822",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eee82830-11f9-42ce-ac54-06ecac472da9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b47e129-46bc-4d28-9805-d1349acdb9bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0543d2cd-c821-484a-9356-e96fe341c6b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b226f67b-7866-4ad0-b3d1-78332134131d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b953c8bf-6772-40da-b789-0d210ca9a654"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9dd7a8f-16ef-41fe-a1e2-2f48419648d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db913a3f-92f4-4b55-a7f5-3b8d41d69218"
            }
          }
        ]
      },
      {
        "id": "bfde69fe-c0ef-4ed3-a4ca-c5d421c751e6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c80a0371-c45c-446b-9c89-cb0c88ddb92f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b3d4f73-7df8-430c-bac0-c3eeb5690862",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3702ec4f-2e7f-4795-95d0-39ea9ff24f84",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6572618e-d8e9-46f7-a0f8-fe819e0acb5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b395ad1-2133-49d3-9f8e-3b1c7d2b7cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fe1d07-652a-459e-bf62-c6579f0cac9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2352987a-decd-47fe-ac8a-8ae44fb3754e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32db2178-fb73-4db6-b864-7ab267b17748",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fca2306-e767-4994-bfd4-0c4e896dd893"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0448d5a-45c3-4db2-9184-c95673f4bce6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ae62a2c-8264-46b5-beb7-9a7e62d653aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2776de57-80dd-4298-85d8-bebc21b9d6dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0012667-2070-4c48-a09d-ebf407b4a4bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21efd589-9cdf-4878-9c27-ec5788ec1a1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68beee4c-d478-4c43-bbf0-822197cf6959"
            }
          }
        ]
      },
      {
        "id": "b1c279b0-78a0-40c6-b35f-e92b1b5ccde6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f032091-7280-4147-915f-9f6e6290c86a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d91904e6-71fa-43c4-927a-aabe3677c877",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c4897f9f-1ac0-439d-8db6-2ba78cc5cc0f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87cca4d4-d41f-4a4c-8000-342d0bee4065",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77a83983-1e05-4d82-8a60-b20d3a515d49",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 320.193661971831,
      "responseMin": 12,
      "responseMax": 7652,
      "responseSd": 907.2233841965649,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693355550409,
      "completed": 1693355653704
    },
    "executions": [
      {
        "id": "1acb1f83-bd50-4ddf-b089-263f714dc26f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cad6e995-0785-49c6-ae15-1ce05ef2127e",
          "httpRequestId": "43bff295-d7bb-4a0e-b7f7-afb9a2f348db"
        },
        "item": {
          "id": "1acb1f83-bd50-4ddf-b089-263f714dc26f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "47865d25-a68d-4777-a6b6-f108a06a4539",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "ee81b935-669f-4141-b017-2a280157f7c8",
        "cursor": {
          "ref": "925960a9-f722-4ab9-aeea-9b93536537db",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b252fec9-9205-4c95-9114-92a4cb814da8"
        },
        "item": {
          "id": "ee81b935-669f-4141-b017-2a280157f7c8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f665612e-b456-4310-9a25-7b72c4c59d4b",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "6fef6aa5-b5fa-4ef1-a94a-c77eb9f7ed7d",
        "cursor": {
          "ref": "2e4268d7-b406-4f49-a51f-38fffc641083",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a835d978-b34c-458d-8633-4ef1e7d7074c"
        },
        "item": {
          "id": "6fef6aa5-b5fa-4ef1-a94a-c77eb9f7ed7d",
          "name": "did_json"
        },
        "response": {
          "id": "6f7a0a93-805a-4ef2-bdbe-b433850849fb",
          "status": "OK",
          "code": 200,
          "responseTime": 1233,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d1a3cd-f7b0-4810-a365-bcf22fbb61ba",
        "cursor": {
          "ref": "1aa4bee0-109c-4f32-ac7b-7c23e956c364",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9e944688-ef66-41da-967f-c5edcdf17f09"
        },
        "item": {
          "id": "22d1a3cd-f7b0-4810-a365-bcf22fbb61ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d73a6bd-5687-4041-b860-fdf6ff5adc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d1a3cd-f7b0-4810-a365-bcf22fbb61ba",
        "cursor": {
          "ref": "1aa4bee0-109c-4f32-ac7b-7c23e956c364",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9e944688-ef66-41da-967f-c5edcdf17f09"
        },
        "item": {
          "id": "22d1a3cd-f7b0-4810-a365-bcf22fbb61ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d73a6bd-5687-4041-b860-fdf6ff5adc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df0da01-776e-4657-ac14-f65688e187b9",
        "cursor": {
          "ref": "230fcae9-80cc-4c5c-9acf-228912dd4576",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "343d9152-e917-4ec4-90ad-531495817911"
        },
        "item": {
          "id": "4df0da01-776e-4657-ac14-f65688e187b9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "13c483af-ed28-4a4f-93f7-c9cb0574bb92",
          "status": "Not Found",
          "code": 404,
          "responseTime": 302,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2739da57-b253-4ffe-9bf2-913778395b8a",
        "cursor": {
          "ref": "af86b312-ad14-47dd-9c5a-989469b29857",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "304451f9-7def-4ed6-bc38-14792c9387d8"
        },
        "item": {
          "id": "2739da57-b253-4ffe-9bf2-913778395b8a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "08744358-37bd-4c9e-97c0-7111c02e5ac7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 317,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8736879b-5e59-4077-a6fa-8ef80ded8879",
        "cursor": {
          "ref": "d378d6a9-dab0-40a7-8080-62866c32bb09",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "78f5cfb4-aed3-4bed-85b2-8e05d5458315"
        },
        "item": {
          "id": "8736879b-5e59-4077-a6fa-8ef80ded8879",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "985b0c73-7a74-4d78-a932-ff95e4644c0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7622ce9a-372c-4ce7-bd8f-d9eda0d58649",
        "cursor": {
          "ref": "7330fe09-7ce1-4aea-8f0f-10a0b3a7075e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e0bcaea5-4c09-4b71-869e-f583b495808e"
        },
        "item": {
          "id": "7622ce9a-372c-4ce7-bd8f-d9eda0d58649",
          "name": "identifiers"
        },
        "response": {
          "id": "843b682d-002a-47bd-bfd1-4a314abee218",
          "status": "OK",
          "code": 200,
          "responseTime": 1160,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70061a8-9927-4c45-8319-4271b5c3d285",
        "cursor": {
          "ref": "bee7364d-b97d-498c-bd5c-30b1299668d0",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "adcb6108-04cb-4d41-8f0b-31f6231fa9bf"
        },
        "item": {
          "id": "b70061a8-9927-4c45-8319-4271b5c3d285",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "724ea0c0-53f1-4340-bc24-d7bc67aea9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a118f5b0-b2f8-4016-ab05-3b98eb92de92",
        "cursor": {
          "ref": "0bb2f3fb-2caf-4f7a-a5e0-d635ca10b7f2",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "029ad096-c591-4e83-8cf6-a3cc06b42318"
        },
        "item": {
          "id": "a118f5b0-b2f8-4016-ab05-3b98eb92de92",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "72d452af-84d9-4d51-b5a0-7612a7915f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dba628-78ff-4b6b-aa30-dd35ef687884",
        "cursor": {
          "ref": "5dfe7668-c854-437b-a474-2813f1e89500",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1ca7320c-90ec-450a-945a-7be05f36c3c1"
        },
        "item": {
          "id": "29dba628-78ff-4b6b-aa30-dd35ef687884",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4e857721-7495-45d3-86c6-b71ad39b65a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9beacc6e-bbcd-4fdc-95c7-f957fdf70498",
        "cursor": {
          "ref": "4c280471-b13a-40ce-8dd6-5cb4df519e6c",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4861ec83-21da-470d-82d0-2a784a280881"
        },
        "item": {
          "id": "9beacc6e-bbcd-4fdc-95c7-f957fdf70498",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "98175149-2260-4958-a17a-c8d0002a2336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f6b114-3e7e-46c6-8aab-0f76f12762cd",
        "cursor": {
          "ref": "d2d119c7-b52c-4f9a-b9d3-6893fc848e82",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a411e128-3b4b-45ba-9056-04784bf1e33c"
        },
        "item": {
          "id": "09f6b114-3e7e-46c6-8aab-0f76f12762cd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bdbdcd54-c28d-4077-a462-e8c5869b8307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c7c29a-4792-42dc-8bb5-6aa38c857c04",
        "cursor": {
          "ref": "148ed73c-47f2-4f6c-aed3-f26856191f08",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cb6126cc-cb59-4b24-a5e7-2296e22d8fc8"
        },
        "item": {
          "id": "83c7c29a-4792-42dc-8bb5-6aa38c857c04",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3971ab1a-f19d-4224-b477-60aac8542333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfafdc0-dd47-4c6d-b8ce-b6866aad74bc",
        "cursor": {
          "ref": "8093588f-f90b-43a7-8432-c63a7da3aa3a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f295a47e-4543-40bb-807e-d92342585aec"
        },
        "item": {
          "id": "0cfafdc0-dd47-4c6d-b8ce-b6866aad74bc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e893916b-813c-4623-abf3-4cd3a9b83956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5796c083-c495-41af-9be5-e5716ed6a152",
        "cursor": {
          "ref": "9c6d1576-e685-487c-b230-866df41d8d2d",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c9f54dc2-179b-45b7-b089-270bdb306bd5"
        },
        "item": {
          "id": "5796c083-c495-41af-9be5-e5716ed6a152",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "03903f8d-38d5-4cce-b3a2-aa0c78d4f87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d7a608-c626-4469-839a-5a7f9539f7a2",
        "cursor": {
          "ref": "a48d0805-b4da-4a12-95b1-510d9e908c36",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0e3f8760-dea5-4db3-aaf0-cc259716a113"
        },
        "item": {
          "id": "30d7a608-c626-4469-839a-5a7f9539f7a2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6fa2085b-6a9c-497d-bd2c-1d7dc23e3a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532a50d3-9ac1-452c-8d87-cac4beea2441",
        "cursor": {
          "ref": "deb7d1dd-e837-4203-905c-db43bc94512a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6018d5f3-466e-437e-9c64-34866a60641a"
        },
        "item": {
          "id": "532a50d3-9ac1-452c-8d87-cac4beea2441",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0f5bcd15-0adc-4b30-b366-0f17c5fe6ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fe81b1-05c5-4d61-bbf2-f265d44d47fe",
        "cursor": {
          "ref": "669ac7f6-c27c-4179-aeed-37fd988b2ca6",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2d567c80-51d4-452e-a2cf-bc5fc36c581b"
        },
        "item": {
          "id": "d1fe81b1-05c5-4d61-bbf2-f265d44d47fe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1df34cf6-01fb-4566-9110-b4e77cb85c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a63fd4d-c439-4c93-970f-722d64225b92",
        "cursor": {
          "ref": "effda9a1-7d76-452d-8a5e-9532b0efacc7",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6d92f0e0-31f1-494e-9a84-4e69cb47ed08"
        },
        "item": {
          "id": "9a63fd4d-c439-4c93-970f-722d64225b92",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "44a48e2d-276c-4dac-9fa8-e449988f7669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cf22e9-9b87-4a1c-baaa-ad08b42d8d09",
        "cursor": {
          "ref": "59ccaca7-8956-43c0-99dd-e7218cb491ac",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bc12691b-b920-4d55-8b3f-8f825943f97d"
        },
        "item": {
          "id": "87cf22e9-9b87-4a1c-baaa-ad08b42d8d09",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8263f498-f63a-436f-a782-f53a2fe2e189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04be7806-7b33-44db-bafa-5b6b21d82f04",
        "cursor": {
          "ref": "c0d9c584-e103-40b1-95d9-63552320b4a5",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "69931f99-a865-42af-9d9e-e1ce67aa4b88"
        },
        "item": {
          "id": "04be7806-7b33-44db-bafa-5b6b21d82f04",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d0b4009f-dfeb-4996-b15a-eb2e9d746693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7ce380-f6fd-4b11-8cdb-0dbdd2a8320e",
        "cursor": {
          "ref": "54854902-f705-4e15-8f59-1bc8a275f77e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "87d0b8d5-bdd7-47f3-93e0-28cb4dcd71f7"
        },
        "item": {
          "id": "bb7ce380-f6fd-4b11-8cdb-0dbdd2a8320e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e65b8c81-e2c0-4b19-b23f-16343e81fb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155c822f-4dd4-4a1d-82d2-8a7a3940529d",
        "cursor": {
          "ref": "d5c8fa12-ecb6-44e9-8898-e1d6f727b55c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0c3b24a1-3948-4397-b995-13e26b2041e0"
        },
        "item": {
          "id": "155c822f-4dd4-4a1d-82d2-8a7a3940529d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9dc85b05-b7ae-45ff-993c-67458a2a0360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9706dd-f4b8-4c3c-b311-6412480eedb9",
        "cursor": {
          "ref": "e80c2825-f978-4eba-affe-ca89329c229b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c456621a-3959-4a17-9cb4-f78d88263834"
        },
        "item": {
          "id": "3b9706dd-f4b8-4c3c-b311-6412480eedb9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7746c149-a2f2-419e-836b-26a8d857c93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee0b43a-0de7-412d-99d3-ae11dfdbcb07",
        "cursor": {
          "ref": "1e204fa4-c9fa-4042-9447-87d3108eb90c",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7f8af0f1-7de9-45ca-a769-82d26cc642c8"
        },
        "item": {
          "id": "bee0b43a-0de7-412d-99d3-ae11dfdbcb07",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f760d428-be2b-4cdd-8039-4fadef8a384f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e2ada8-3133-4c76-abfe-70437b1c56be",
        "cursor": {
          "ref": "9d52cc68-2ef6-46e3-9d14-d43aad3c5a35",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7b5bc3bb-eae6-4d34-bdea-5707f06feeac"
        },
        "item": {
          "id": "a5e2ada8-3133-4c76-abfe-70437b1c56be",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2e1406c9-539d-485d-9f51-c4e6a51837c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e341f88-5109-451f-8c38-41c990d1e29f",
        "cursor": {
          "ref": "b826a91b-235c-425f-bf8d-a7011f912cad",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bd7f2165-d5bf-48c3-836d-b4c2a8913673"
        },
        "item": {
          "id": "6e341f88-5109-451f-8c38-41c990d1e29f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "87ee2196-2669-44c2-9391-79ff0076b9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5a69ed-9b12-4aa4-be87-9761c5c747cd",
        "cursor": {
          "ref": "644bb57b-f7df-432a-9163-c8839ef6fd53",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "10a8bf72-b0d2-4e80-9c56-13fe8eb5c9d1"
        },
        "item": {
          "id": "aa5a69ed-9b12-4aa4-be87-9761c5c747cd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0861e7d7-3ab3-4db3-b173-c5905ba781d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8f1ac9-061e-43b0-ae3a-c7e6fd0fed40",
        "cursor": {
          "ref": "f5b2fdbb-7a5a-413c-8909-ac4814402e8c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "430a7524-08cd-49be-b7f8-954c00b40aa6"
        },
        "item": {
          "id": "ef8f1ac9-061e-43b0-ae3a-c7e6fd0fed40",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0b2aee25-3a0c-45a6-a37e-2d50afda8655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a63c13-2958-4c95-bc22-0501fae6b72a",
        "cursor": {
          "ref": "f7e4a5ca-3a43-4d25-934f-6d9e4ef74b25",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c984d5f7-5b7f-482e-9616-6424eaa6174c"
        },
        "item": {
          "id": "45a63c13-2958-4c95-bc22-0501fae6b72a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a7627041-a805-423c-8c55-a4cd46ef82a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054e2de9-51d3-49c6-aaba-a3857e87bbb2",
        "cursor": {
          "ref": "6ddecf8d-7eb1-4df2-8829-3ab33444e916",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5c5298cb-8ced-4fca-b0aa-2615e6c4ddbd"
        },
        "item": {
          "id": "054e2de9-51d3-49c6-aaba-a3857e87bbb2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "188c508a-3d54-4b26-93a1-2a34c3687c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b16956-11f1-4ae6-8cd3-4d6c95f0652d",
        "cursor": {
          "ref": "d1ccd494-a696-4b41-bc5e-962a355e3145",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "92e6d5f1-f67d-43e5-94a8-4f22ea42eb53"
        },
        "item": {
          "id": "44b16956-11f1-4ae6-8cd3-4d6c95f0652d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ce7c381a-96f5-4847-b796-f597e2f4663c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b66749-0569-4f8d-8585-e225b594312e",
        "cursor": {
          "ref": "e7613956-a306-4f9d-b678-4f74a7c22afc",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2416faad-b3d6-4ecd-9aeb-7bdd5e05f058"
        },
        "item": {
          "id": "f3b66749-0569-4f8d-8585-e225b594312e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0a4ee510-a958-401a-afa6-dc809d4f77e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539ff878-8417-45cc-9a64-02ad49b2a878",
        "cursor": {
          "ref": "283250a7-3735-4e88-a6df-fe33e5c582c4",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "47611fc5-c994-4d16-9ff1-dee423e3c066"
        },
        "item": {
          "id": "539ff878-8417-45cc-9a64-02ad49b2a878",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bb680e69-98eb-4b4a-9b05-f5d5cb7a045c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988a29d1-2d98-4071-9f0b-fbe2d2bbad2a",
        "cursor": {
          "ref": "61548016-61e0-4cb7-ba9d-3624ab6e0ab7",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1a420269-0229-4f2c-a124-a484d0ff2c5b"
        },
        "item": {
          "id": "988a29d1-2d98-4071-9f0b-fbe2d2bbad2a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "370b0ae5-1049-46b3-b757-0ded5632830e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eafa423-a62f-4eab-95b8-23dccb2cd199",
        "cursor": {
          "ref": "08889034-d6d7-45da-a38b-91814e083941",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "94e9a6e3-0c91-4923-a42c-a20db0b4a982"
        },
        "item": {
          "id": "6eafa423-a62f-4eab-95b8-23dccb2cd199",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0f5a7559-7ed0-4bfd-9a4a-cdc33d887af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969a06a0-7f3f-4d7a-a331-e5f7d3fe0ac3",
        "cursor": {
          "ref": "d3c5854a-3176-4cb3-8244-590962fc808d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ba3ec015-3b18-4b99-91ef-bd8bf8552cc5"
        },
        "item": {
          "id": "969a06a0-7f3f-4d7a-a331-e5f7d3fe0ac3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1f359ac8-1c2d-487d-9ea4-0b6f432bc3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17fbd41-8d85-44f9-b884-1ba8f6090ce5",
        "cursor": {
          "ref": "a0a31c41-3c1b-41e6-9754-8dcdfe9200e2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "30d9c85d-5ed8-4849-9856-9a82f2343432"
        },
        "item": {
          "id": "d17fbd41-8d85-44f9-b884-1ba8f6090ce5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "983f9e72-f79f-473e-a01c-5fc71ae18175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558de691-ec05-4c72-97d3-df5719f1a76b",
        "cursor": {
          "ref": "cd82c22c-a556-4fb1-80d4-377e45631903",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2faf2dd7-1e4f-49a3-a3d8-44f81d818590"
        },
        "item": {
          "id": "558de691-ec05-4c72-97d3-df5719f1a76b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8e458712-a74a-433a-8342-ce0ffa2ac5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b943c56e-1429-4250-808a-050dcc63e57f",
        "cursor": {
          "ref": "19ed80d4-d1c3-4fc5-acc2-a5130c3d48c3",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "297c2fe3-50ae-4f14-81df-a3fcc7a065a8"
        },
        "item": {
          "id": "b943c56e-1429-4250-808a-050dcc63e57f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0307d6ad-45ac-49cf-ad47-7089119a2248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed57c9f-d4eb-43ee-b70e-f21de58fa29c",
        "cursor": {
          "ref": "ecca58d4-67ac-4a36-a675-e99b90f94fe6",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f4063ecf-ec36-442d-aafd-8fabb206f4f3"
        },
        "item": {
          "id": "bed57c9f-d4eb-43ee-b70e-f21de58fa29c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "59d3b992-5146-4943-bc26-c24ff79a94e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16daf131-a1f6-4d17-bb7d-521fad5075b9",
        "cursor": {
          "ref": "e82a163c-5299-4bde-a68c-d8ac0c3bef2c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4cb815bd-fe9b-4d50-ab86-f2492070f2f9"
        },
        "item": {
          "id": "16daf131-a1f6-4d17-bb7d-521fad5075b9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "022f6fdc-dc65-4ee6-85a5-8d0b4191c703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bb07df-ef56-4b8b-9ef7-865238c1fad0",
        "cursor": {
          "ref": "bdc3e3fa-7183-4891-858e-5aefe339e678",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c9a37436-7acf-440b-84a3-e21ca56a0840"
        },
        "item": {
          "id": "c0bb07df-ef56-4b8b-9ef7-865238c1fad0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "25f94161-9fce-418b-8c06-dba635888edd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 597,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf4da15-f04f-42a6-af3a-e78a1b05a9d4",
        "cursor": {
          "ref": "e49e47c5-dfbe-4402-a600-856c36b810e9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f1d4127a-d234-454b-9c4b-ec3dd968d762"
        },
        "item": {
          "id": "bcf4da15-f04f-42a6-af3a-e78a1b05a9d4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "385db632-19dc-4d84-8ae1-00604cf7fa95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8a9515-3b9c-4b5d-b262-38a4d53c42cc",
        "cursor": {
          "ref": "9b4eb623-6d71-4018-bbef-3ba219449511",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "18d942be-035d-4cfb-9d3a-257dc071e587"
        },
        "item": {
          "id": "bb8a9515-3b9c-4b5d-b262-38a4d53c42cc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0e065128-bf1c-4c4d-b4ec-00715e45dce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fee396-7357-4fc3-9da8-7aea28a9466a",
        "cursor": {
          "ref": "21da7a7e-5f26-4d8a-80ec-221cdf4eeaf5",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ca3ae726-95ca-4b44-957a-6153510ee353"
        },
        "item": {
          "id": "67fee396-7357-4fc3-9da8-7aea28a9466a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bbac41a3-9af7-456a-a27c-278f7e2a8558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c96055-36fc-4aa6-b3d5-9335d7b31adb",
        "cursor": {
          "ref": "da5e7cde-0f9e-4ad2-abe7-e5b12ae15155",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "37797707-51f0-4064-86e3-56608565be76"
        },
        "item": {
          "id": "29c96055-36fc-4aa6-b3d5-9335d7b31adb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1c44638c-b137-420c-a89d-72efbd69bb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1483ab38-eb93-4652-9d8f-8b8882e49970",
        "cursor": {
          "ref": "31927070-a228-4827-bd80-c24a9b703e3a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c071c642-e693-4e1c-b89b-97d9a0af3c75"
        },
        "item": {
          "id": "1483ab38-eb93-4652-9d8f-8b8882e49970",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ef524698-4bf0-4015-9dbd-ffefee9ddccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c21cda-2bfb-41c1-9e08-efce7053701f",
        "cursor": {
          "ref": "6a259829-71a9-4a95-80c7-f32c89dc610c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ff07730f-6027-482b-ba84-d563c1206cc3"
        },
        "item": {
          "id": "c0c21cda-2bfb-41c1-9e08-efce7053701f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "57f053f8-31e0-487e-89c5-5167c56bcdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e86a36-7004-49c5-bd6f-61041c04dd70",
        "cursor": {
          "ref": "1993e049-48a2-4cb1-8b0a-ee356dc3b7d0",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e68a45c0-4563-481f-adef-aafa692ea649"
        },
        "item": {
          "id": "98e86a36-7004-49c5-bd6f-61041c04dd70",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7ea8f634-80cd-4e0c-b3f5-7e556f78a2be",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 588,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa972d7-e752-42df-8522-3e8830bc8b1d",
        "cursor": {
          "ref": "f71931ca-ccbc-4210-abeb-9d8853832a33",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4afc2577-54ae-4851-aaf6-eed51c253e9c"
        },
        "item": {
          "id": "9aa972d7-e752-42df-8522-3e8830bc8b1d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "20ec8566-3b07-49d7-94c6-7e6dacf44a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ce9a93-48f1-4410-8eec-740e3decf7e8",
        "cursor": {
          "ref": "f9c4338a-a6d3-490a-84e7-8a7751a496f3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d20a3f7c-3c77-49ec-89cd-fc58902f564d"
        },
        "item": {
          "id": "71ce9a93-48f1-4410-8eec-740e3decf7e8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6d0b0f26-01f9-4d31-ad75-2573d17298c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7b4222-f5ec-42af-b06b-5c5dcd6141bb",
        "cursor": {
          "ref": "ff4a2835-8391-4066-a7e9-61fe261633b0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "88b1d8fb-b217-4a78-9f1a-a59484bdfa3e"
        },
        "item": {
          "id": "fa7b4222-f5ec-42af-b06b-5c5dcd6141bb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c02f818d-0fad-4443-aca2-983067cb25b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2264b8a-d251-4ddb-8d20-36bed51722df",
        "cursor": {
          "ref": "121f19e7-d8f9-4bf7-823d-9a27fa7ff9bb",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "39153266-758c-47c0-b8b0-64b2dc837cc2"
        },
        "item": {
          "id": "d2264b8a-d251-4ddb-8d20-36bed51722df",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "55d99e72-3f9c-4fc6-9192-83f1bfdf8971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02907f6-2616-40c4-9b16-387ae18155c8",
        "cursor": {
          "ref": "d1cb8394-664e-4b76-9453-9f5da9f3ad27",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "95436c83-4cab-493f-8d1b-59dc3afc828b"
        },
        "item": {
          "id": "d02907f6-2616-40c4-9b16-387ae18155c8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "54ff5b0a-5b10-4537-a2d6-6065fe3e2431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a03be85-1679-49b4-88b3-82fdf989b21b",
        "cursor": {
          "ref": "eb0e2bba-46b6-4020-b0c5-617d2313cc89",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8b4b1386-a381-4cda-9e9f-b98126badec2"
        },
        "item": {
          "id": "2a03be85-1679-49b4-88b3-82fdf989b21b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b2e3a7ce-8b90-416a-919f-92efd1f064d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef6f886-1975-4242-ac67-2a4b9d698c3c",
        "cursor": {
          "ref": "99c762c4-e1d6-4238-bcd9-6892d39fa231",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c4967f51-dfa9-47e2-88dc-3ca977c52ba0"
        },
        "item": {
          "id": "bef6f886-1975-4242-ac67-2a4b9d698c3c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ffe2d1c1-23e2-42d8-ad82-e8c4563aed42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3081b654-2442-4dce-a93e-0bbb124e07e9",
        "cursor": {
          "ref": "b951c152-64b5-45b6-b400-20de6027f2c3",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "396c6d0f-600d-498d-9f94-c30253eba97f"
        },
        "item": {
          "id": "3081b654-2442-4dce-a93e-0bbb124e07e9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6f1a13c7-3ed6-4370-9cc6-7d59ead30d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80563688-1e17-46ee-9bb0-baae333715e3",
        "cursor": {
          "ref": "c918db90-e73b-436d-879e-bab80a3f079c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f975d00f-4f48-4b58-9ac7-e08841d2ed2f"
        },
        "item": {
          "id": "80563688-1e17-46ee-9bb0-baae333715e3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4357a93f-326c-4fe1-b9b6-9930a495167f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db80af98-6682-48b7-8a1f-da92dd9e4fc0",
        "cursor": {
          "ref": "91e909ed-c3aa-4a88-a3ef-6953c498f95d",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6780d01a-c417-46fb-8f16-d2ec150c5c58"
        },
        "item": {
          "id": "db80af98-6682-48b7-8a1f-da92dd9e4fc0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "91fb95ea-b958-4ada-a73c-bc6a4f2c1717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65663010-3f74-46ce-8f78-d54a8fa6701a",
        "cursor": {
          "ref": "2c53deb0-6e8d-462a-8d20-fac2e1fd64d8",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ae6d7a1a-b350-473b-83d3-0b8e2f045d62"
        },
        "item": {
          "id": "65663010-3f74-46ce-8f78-d54a8fa6701a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "340b5cea-68c6-4b27-8c70-90a3f5364288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09300104-d656-49d9-bb33-dd98d1f7a30a",
        "cursor": {
          "ref": "e3982fac-8fb2-4bd1-8373-4d896e7e3604",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3342ede3-beba-4db4-836d-52385b657d03"
        },
        "item": {
          "id": "09300104-d656-49d9-bb33-dd98d1f7a30a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7fcdd88e-783e-4262-81e6-8a3025d9fc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d20cd5a-72c8-4897-86d8-4ea5be0f6284",
        "cursor": {
          "ref": "e33fcdab-f2a7-46aa-b55e-d9f299433c85",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c2b357b7-4aaf-46f2-9bbd-e0436c49eb79"
        },
        "item": {
          "id": "0d20cd5a-72c8-4897-86d8-4ea5be0f6284",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b94d6a67-c6c1-4bbe-a9e7-ef746b51540e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1411bc6-1f1d-4089-920c-5f66a944f870",
        "cursor": {
          "ref": "689aee77-15ad-4d57-af16-09c316a3b28a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4d88dab8-f67c-4ac8-b558-d00ee1db9b19"
        },
        "item": {
          "id": "c1411bc6-1f1d-4089-920c-5f66a944f870",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3094e71a-f0aa-4055-b3db-e2d70eeed561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1be92f7-69b3-43f4-90f3-193b01902053",
        "cursor": {
          "ref": "30e196d4-e6b9-4d30-a4c7-b7eb6568cf20",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f587b594-a791-4627-9560-a063647a4e64"
        },
        "item": {
          "id": "f1be92f7-69b3-43f4-90f3-193b01902053",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "848408b1-e9d3-47d6-9513-2ae7f0b660c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166edc68-f114-408e-bd71-3f725e43dcbd",
        "cursor": {
          "ref": "6e14ad13-c576-46b8-87cf-ecc0d71310dd",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "04c87e0a-4bab-4c76-97b9-9dd5a2384276"
        },
        "item": {
          "id": "166edc68-f114-408e-bd71-3f725e43dcbd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f45b1a65-0de6-447b-80d9-ef2d5dc8fe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe5c969-1961-4228-8b02-30db9439d843",
        "cursor": {
          "ref": "5438d643-0620-42d0-9231-9a6728cddf95",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "311bf7b3-0dd8-4ad0-adee-57ddd01066f8"
        },
        "item": {
          "id": "cbe5c969-1961-4228-8b02-30db9439d843",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a5cf6428-f074-4a01-ba15-78452d857c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53224d78-8649-4dfe-b81e-f7dc0c3939f4",
        "cursor": {
          "ref": "402fa95c-0b0a-4f8f-9e2d-2f6d1693fb42",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e6e5d6b4-3474-4b3b-b839-a6bd247690bd"
        },
        "item": {
          "id": "53224d78-8649-4dfe-b81e-f7dc0c3939f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "137c4a12-e9a2-44bc-a09f-b2fee669048b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8250fa8d-e07a-4dd7-ba0e-a0eb19640184",
        "cursor": {
          "ref": "0d8a3562-b54b-400a-8366-22929fb41080",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "119a336f-7558-4333-a77b-395f423bc762"
        },
        "item": {
          "id": "8250fa8d-e07a-4dd7-ba0e-a0eb19640184",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e0c6b391-b59e-47c8-93d1-82c1d63bf768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d448b05-e006-479d-8342-dd82d06f4010",
        "cursor": {
          "ref": "76589c9f-cc86-44fb-b5fd-d8ffb4142efe",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "04cc2dc4-2924-465c-b6d7-e24479fa07fb"
        },
        "item": {
          "id": "2d448b05-e006-479d-8342-dd82d06f4010",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ebc1e4f6-734b-4f14-b010-0e252f0e52c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94e8e7d-9fb5-4a9a-a011-04b750bcb188",
        "cursor": {
          "ref": "1b3c71b7-e2d3-4a09-9e41-3529e9b39827",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ecedf7a2-84e7-4ef0-a41e-2f5bad2288c6"
        },
        "item": {
          "id": "c94e8e7d-9fb5-4a9a-a011-04b750bcb188",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5b2ecbe3-8967-40b3-807f-fe63354a9212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caf6fd8-b841-4ad7-881f-45f9c956f95a",
        "cursor": {
          "ref": "fd0894c6-e8a5-4d75-aa7e-88d4e8e0c7a8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a207022b-b53f-4b2d-9e34-e045a23e9a96"
        },
        "item": {
          "id": "9caf6fd8-b841-4ad7-881f-45f9c956f95a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d95daad2-28a1-4722-aecb-0846a81376a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd591f04-d104-43a7-8779-e7fec340701b",
        "cursor": {
          "ref": "baa93af3-2829-4e10-92a3-2d414f78d29b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "23107712-5abb-463f-9bd2-efc7c2b8f1a1"
        },
        "item": {
          "id": "bd591f04-d104-43a7-8779-e7fec340701b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "db86c637-fabd-47fb-a07d-745d4f51bcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d2ce3f-8c42-4b65-bb53-e0afd121bc7b",
        "cursor": {
          "ref": "c30b0b4d-1a1d-4ff7-a227-68377aa66577",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "67f8d004-8c3c-4a9b-8736-aecd296dc7ca"
        },
        "item": {
          "id": "61d2ce3f-8c42-4b65-bb53-e0afd121bc7b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "245a2e0a-3a02-43c2-85aa-76bbc7692a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1ddaf8-46cf-4cff-9101-7d803178ec0a",
        "cursor": {
          "ref": "c888636a-bd76-4af1-ad1b-3d740a624660",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7783c071-0615-4481-8049-b34a0fb9a1f9"
        },
        "item": {
          "id": "5f1ddaf8-46cf-4cff-9101-7d803178ec0a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ebfa8bdb-a8e0-4c3d-93f4-20ec7140f294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70b9f5d-8d3a-4b24-80d5-81763969ba62",
        "cursor": {
          "ref": "279dd5aa-3101-4dba-abb1-aaae9e37cbdd",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bc5262da-ef0c-4e70-80d3-29755c5776f0"
        },
        "item": {
          "id": "c70b9f5d-8d3a-4b24-80d5-81763969ba62",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fe2f37ef-2983-4e17-bd19-f8c790aad6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757d5d75-8de8-4845-b2af-6f9d4e230037",
        "cursor": {
          "ref": "e2fe1cbf-8c25-4bb2-bac6-b945a8d3edf2",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ba5d6477-7ea3-491c-80a1-efa63cf2c966"
        },
        "item": {
          "id": "757d5d75-8de8-4845-b2af-6f9d4e230037",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "33c38570-a18f-4110-9c16-ef35f724be7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c1e7dc-575c-4ee2-abbd-d21ba33c7155",
        "cursor": {
          "ref": "447dffb6-a6a3-4f54-ad7c-11f85f228574",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a557af47-e6b1-44b2-acaf-1e1a8cdf3932"
        },
        "item": {
          "id": "49c1e7dc-575c-4ee2-abbd-d21ba33c7155",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "68bdcfde-2fc4-41df-99c6-bc6d342be372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d0db46-2cfe-49dc-8988-ed4c1a3803ed",
        "cursor": {
          "ref": "b89113a7-4584-4b9a-af76-96b5b28254f9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5270a0e2-d185-425c-91d3-a93825b300dc"
        },
        "item": {
          "id": "24d0db46-2cfe-49dc-8988-ed4c1a3803ed",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "54f39c70-3d1e-4565-9e50-6578fae9d3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b972a88c-05f2-4845-831a-9c1b9148ede8",
        "cursor": {
          "ref": "7790a396-7647-4e52-810d-2a3e56fcfa7a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "df9f91cc-a4d0-4860-9342-9636405d7dfc"
        },
        "item": {
          "id": "b972a88c-05f2-4845-831a-9c1b9148ede8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "70c91cdd-6fb4-4d42-b3f3-437a17cc99f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2403b105-e529-4457-a7e8-8ec429597a2c",
        "cursor": {
          "ref": "82b0e5fe-1807-486d-8dd1-2086e6543bde",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cee6b963-de6e-419c-b06c-23c0b62f2392"
        },
        "item": {
          "id": "2403b105-e529-4457-a7e8-8ec429597a2c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "40d3fd62-096b-4d8d-933e-71789556c164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bd0f4e-4b9b-499d-8fa6-f2f5a25a3045",
        "cursor": {
          "ref": "07faf496-51ae-42a5-81e6-7ae6395a1943",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5a1b4e40-8c81-4643-bbce-84532e5d1463"
        },
        "item": {
          "id": "92bd0f4e-4b9b-499d-8fa6-f2f5a25a3045",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "372b2725-e661-43e7-ae5d-06606c774ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac65acfc-5429-4951-999e-dd4614cc11e8",
        "cursor": {
          "ref": "15202f9f-ba3d-4bdd-840e-538504bb6bb0",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "be32330f-0fbe-4459-a12c-bdcc58ed5262"
        },
        "item": {
          "id": "ac65acfc-5429-4951-999e-dd4614cc11e8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9cebc823-d447-4e69-99f2-9798ecd78270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b9540f-704c-42ff-bba5-c15c3359d848",
        "cursor": {
          "ref": "6bc43ffc-d925-437c-9ab3-31253197b051",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "725f0fbb-91a8-4d0a-b529-0e3590ea232f"
        },
        "item": {
          "id": "f1b9540f-704c-42ff-bba5-c15c3359d848",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "647d4788-8211-46ca-8cfc-8594674f4e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58766481-8d0b-49e2-996d-27471dc35c8d",
        "cursor": {
          "ref": "7f5f6b72-9799-4b53-bb8b-a3147876f624",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c2dcdf74-6bc8-4789-9923-41a78c4a2fa6"
        },
        "item": {
          "id": "58766481-8d0b-49e2-996d-27471dc35c8d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "95c9ca90-0359-45be-95f5-c9468e7e2f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce58b8d6-ab80-401a-9d50-d6d5e9432d09",
        "cursor": {
          "ref": "62b6632c-886f-4b49-a75e-bb63828aa308",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fe0c2bdf-784a-48e7-9bac-90a7d350b1fc"
        },
        "item": {
          "id": "ce58b8d6-ab80-401a-9d50-d6d5e9432d09",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "70e9089c-8512-44a1-ad1b-3dababed2be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44a9b62-eb67-4acc-8f96-b917c55b5d4a",
        "cursor": {
          "ref": "17668002-cdfe-4cbe-8321-04988bd90045",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "210aca48-de00-41de-9693-81321aae7e97"
        },
        "item": {
          "id": "d44a9b62-eb67-4acc-8f96-b917c55b5d4a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5a70d319-08ad-4259-8def-73bd157acdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cf05c2-db49-4e68-a615-40d3f2caaf02",
        "cursor": {
          "ref": "79a4d906-f317-4c45-9aac-6cf9de4b900d",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6dcce80e-49a2-4e8e-9f6f-fcb26406c0e6"
        },
        "item": {
          "id": "a1cf05c2-db49-4e68-a615-40d3f2caaf02",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8848e24f-a804-4a49-a13b-ea23fdf19a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dbaefc-4ab9-4bb1-9c53-f358bf0a93bf",
        "cursor": {
          "ref": "20139265-43f9-4518-8bb6-0791827a3adc",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3995276a-92b4-43f5-b633-99e562ccd034"
        },
        "item": {
          "id": "50dbaefc-4ab9-4bb1-9c53-f358bf0a93bf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "08ccd1a0-0966-40ce-939f-f6b25c9ad324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1905e2d9-b68d-45b3-a2a4-ae23ae9d7672",
        "cursor": {
          "ref": "c27bd084-29a6-4dc0-8ec6-e9e76098f4ee",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b98aeb05-6a98-47ca-9de6-386ed61b7b6a"
        },
        "item": {
          "id": "1905e2d9-b68d-45b3-a2a4-ae23ae9d7672",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "202e7fca-4f62-4a3e-95b2-0f09785a5da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb8ca14-10be-4f91-a247-323878e8914c",
        "cursor": {
          "ref": "a38183b3-ad83-4871-b9ca-ecb6003600e7",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5b7df782-592c-4fa6-8c50-fc2fa75cecf3"
        },
        "item": {
          "id": "abb8ca14-10be-4f91-a247-323878e8914c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2fb10439-71b4-4947-bc30-80f3bbcd6406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edbc9bb-6307-42cd-b22e-d8476745b4b3",
        "cursor": {
          "ref": "f31ba945-3ecf-4863-88be-b2bff69abb66",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "971981f4-9393-4e25-9b31-b9b1e534e023"
        },
        "item": {
          "id": "1edbc9bb-6307-42cd-b22e-d8476745b4b3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f8f76c70-75f0-49d9-a530-65377c2dbc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c425d99-da1d-4d62-a302-84addd013b0e",
        "cursor": {
          "ref": "f93487fe-9c0b-424a-af78-05b9e74d39b6",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "39cc39a4-d64d-4e07-9be7-6c16f6dfe99a"
        },
        "item": {
          "id": "4c425d99-da1d-4d62-a302-84addd013b0e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ccf82c0b-019b-406d-878d-0b325e7e64aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c9fdea-cb04-4f61-b169-a5baaa91a074",
        "cursor": {
          "ref": "dd6d2d02-fdb2-4e82-9718-0a94a392ee0f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5f51ff4b-e648-4a5a-a01b-642675b47dfa"
        },
        "item": {
          "id": "d4c9fdea-cb04-4f61-b169-a5baaa91a074",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3457fb5d-96ea-41a5-a9b0-15b1e3e9a9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d83de2-71f0-4658-92a7-f81359fa1fdf",
        "cursor": {
          "ref": "97ab76e6-f2fc-4ea5-8b4d-32fd81c49a6d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bf9d943d-d816-482f-892b-47437ca99af7"
        },
        "item": {
          "id": "74d83de2-71f0-4658-92a7-f81359fa1fdf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "db8789ee-f72a-434c-bbe8-3679081fd35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47213d3f-1920-437c-ad36-42fee98a6bdc",
        "cursor": {
          "ref": "dc465989-480a-4231-9e49-876821e5ed53",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6b515aae-a125-4991-9fc0-651256f65646"
        },
        "item": {
          "id": "47213d3f-1920-437c-ad36-42fee98a6bdc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7fe39383-fc4b-43d5-ac55-28c18bf27598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33080e96-f042-4601-9928-36c1ec3dcdbe",
        "cursor": {
          "ref": "9813b9a9-518b-43ab-bd64-03e0311706c7",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7cc481c6-1fed-45aa-9681-27818d5efe87"
        },
        "item": {
          "id": "33080e96-f042-4601-9928-36c1ec3dcdbe",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cbe8481a-8f36-4381-926c-3e7ea6e922e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931be5e3-8ed3-4659-925f-b265bfe90b05",
        "cursor": {
          "ref": "59bb8967-2385-446c-9e0b-f4db89335f3e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "447ee7d9-236a-451a-b852-2cb124276fb6"
        },
        "item": {
          "id": "931be5e3-8ed3-4659-925f-b265bfe90b05",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1fd0faed-eb42-470e-96bf-2d7eeb4bf57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fa9e19-7592-4690-8f23-d7597cb3c382",
        "cursor": {
          "ref": "7bee2580-8d2b-462a-8760-54a333e9fb22",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a8ac9139-7030-48d8-b1eb-b420f4425e34"
        },
        "item": {
          "id": "98fa9e19-7592-4690-8f23-d7597cb3c382",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5fa60212-c9e1-4b9f-9912-892b0a020b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb4e3aa-0499-4c34-ad66-ca71f3b3ac8c",
        "cursor": {
          "ref": "5702680c-b308-40e7-91e2-b797ba1e3152",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b1c49c8b-50a8-4d8b-b28a-7f110058b145"
        },
        "item": {
          "id": "bfb4e3aa-0499-4c34-ad66-ca71f3b3ac8c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "63ace213-97dd-4803-81cc-4fb2094eea71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1415acff-4ce8-4421-8acf-e2a13603e48f",
        "cursor": {
          "ref": "01802230-953a-45f3-8de8-4d48a92b44bb",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e0d59866-9579-4f2d-8ac4-59d3af398f4f"
        },
        "item": {
          "id": "1415acff-4ce8-4421-8acf-e2a13603e48f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e23f8bcb-1929-4069-9d46-b4098237ea0d",
          "status": "Created",
          "code": 201,
          "responseTime": 6684,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a0d9ff-a379-4f46-8156-40457f8d9328",
        "cursor": {
          "ref": "92985194-cc27-49e2-8ebd-34a642b116bb",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1e0d55c7-0756-4b9e-905e-040422db57c0"
        },
        "item": {
          "id": "f8a0d9ff-a379-4f46-8156-40457f8d9328",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fb9065f2-59db-4df5-a3b5-69fa3cda57dc",
          "status": "Created",
          "code": 201,
          "responseTime": 6457,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b94a23e-4679-451b-9747-1759c7a33812",
        "cursor": {
          "ref": "65c49263-77aa-4dce-b914-85cf142a8e3e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "36753c28-23b1-44d0-becd-67b262b7d749"
        },
        "item": {
          "id": "9b94a23e-4679-451b-9747-1759c7a33812",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "39f6721f-1316-4a05-bdda-df24667e7ab9",
          "status": "Created",
          "code": 201,
          "responseTime": 7652,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb086e34-f9de-4893-9a42-d6a4e9eb9ace",
        "cursor": {
          "ref": "232b9542-b544-48e7-b722-2df0dde79450",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "118ee7f1-2e46-4426-a0ee-2456cd4cac48"
        },
        "item": {
          "id": "fb086e34-f9de-4893-9a42-d6a4e9eb9ace",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6975673a-5976-4385-960c-1b5ecfe37b07",
          "status": "Created",
          "code": 201,
          "responseTime": 6768,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60b4c8c-6ae3-43fa-934b-2e7a4ca09b70",
        "cursor": {
          "ref": "0b427619-0b88-4bda-9013-243603a9ced4",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "12f90e33-29e2-48ca-914f-1c94c270a9ee"
        },
        "item": {
          "id": "b60b4c8c-6ae3-43fa-934b-2e7a4ca09b70",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "31de4daa-c1e8-437a-ae4e-4b7aaf5988aa",
          "status": "Created",
          "code": 201,
          "responseTime": 7059,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aaf8fb-8bf2-4d50-b048-b1942e8010d7",
        "cursor": {
          "ref": "b512425a-9d08-46cb-9d0c-0eba7c542163",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "34d4e74f-a0a0-4fee-8f08-95c040d16c48"
        },
        "item": {
          "id": "28aaf8fb-8bf2-4d50-b048-b1942e8010d7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d7aa8985-dc82-4f69-8060-e0c64896938c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "322ca785-80b6-4dce-b995-c2bc0be9ac4b",
        "cursor": {
          "ref": "857aa548-3b47-420a-b39e-cfed810cfde2",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "482b201e-2db1-4304-afdf-94efc6f0354e"
        },
        "item": {
          "id": "322ca785-80b6-4dce-b995-c2bc0be9ac4b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "da62c39b-a0a8-42e5-ac72-6bbe2578629e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddd0059-0380-4085-87a5-d562f5b07023",
        "cursor": {
          "ref": "f9cf9ff4-461b-48d2-9f50-64c98333602d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b51514d5-650b-477f-958b-3a3a7c38cba3"
        },
        "item": {
          "id": "2ddd0059-0380-4085-87a5-d562f5b07023",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "63891367-c399-49d0-a069-367b22c56af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789f0f20-e84b-41a1-b7de-911831a20846",
        "cursor": {
          "ref": "3646b279-400e-43d9-9f75-65518badae63",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8dbf1653-bd67-494b-b209-7927ae6c4c6b"
        },
        "item": {
          "id": "789f0f20-e84b-41a1-b7de-911831a20846",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2a587a74-9862-4020-9d7f-381eac712c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84b36c9-d280-4c50-8ca3-80ee59dc607c",
        "cursor": {
          "ref": "536eff1e-facf-4beb-8a93-779a778ea3cc",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "286eb7ee-6cd6-495c-b7e2-20bd551df58c"
        },
        "item": {
          "id": "e84b36c9-d280-4c50-8ca3-80ee59dc607c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2f343a4b-6057-4c5b-8f3e-11f15f0c9971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d784e370-d420-4461-8954-69041d4a9737",
        "cursor": {
          "ref": "b0fd011c-b246-445d-87fb-4704bc5e7795",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "05f6301a-3084-44b6-879a-b7c3be5b977c"
        },
        "item": {
          "id": "d784e370-d420-4461-8954-69041d4a9737",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6bc6f0fa-3f1c-4ad9-98b8-8f5cd227a2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3317ef78-5cfd-4a30-be20-fec144527879",
        "cursor": {
          "ref": "51a59b1c-f4f7-4ca9-9921-e3a66bd7950f",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ecfc29da-116e-47bd-a037-f13d5fb07d39"
        },
        "item": {
          "id": "3317ef78-5cfd-4a30-be20-fec144527879",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ba622fca-a3dd-446d-a2d5-04cf571f3c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac632c6e-adee-483d-91af-95f54bb85e62",
        "cursor": {
          "ref": "99f6ab8e-418a-4875-98cf-f2cd6485c6b7",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0eb768a1-3dc6-430f-9867-b40bd45bb144"
        },
        "item": {
          "id": "ac632c6e-adee-483d-91af-95f54bb85e62",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b3fcf459-2e42-4844-8c72-a4c3c962a937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48391027-e1dc-4770-9996-81d227428596",
        "cursor": {
          "ref": "38f462b6-8152-44f8-83e6-77d9a549ba0f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2df6612e-7157-49e4-b2ff-4524c1d2d971"
        },
        "item": {
          "id": "48391027-e1dc-4770-9996-81d227428596",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "added918-d581-4a46-aae4-50b1dacc4700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41541c3-9a65-447e-b56e-d881f6b74f14",
        "cursor": {
          "ref": "9e6199fc-43e3-4355-a393-8b1cfb3743fe",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "eddce830-bf73-467f-8ecd-1dce74c76e74"
        },
        "item": {
          "id": "a41541c3-9a65-447e-b56e-d881f6b74f14",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "33cd3342-cd95-4a3b-a408-50032a77dbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cb6ddd-8056-4ca2-b6a9-ea5cf4020302",
        "cursor": {
          "ref": "32ed264a-2ff8-4462-b4c5-093750fdaebc",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c057b9a1-8bce-43e6-9b86-533159b5e8f9"
        },
        "item": {
          "id": "32cb6ddd-8056-4ca2-b6a9-ea5cf4020302",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "27ad4cc3-a625-4fff-b50f-3ffc9237070c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89e4729-5db2-48ea-be4e-a4366f477841",
        "cursor": {
          "ref": "cf53c7a1-d98a-48d9-b4df-513ca796d932",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "be4c09f2-ac52-4875-bb88-44e5a8f21e11"
        },
        "item": {
          "id": "b89e4729-5db2-48ea-be4e-a4366f477841",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9752ae30-7494-41d9-aad0-e36e85ad9a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3a31e7-2c90-44b3-98a3-0c51b5e432c1",
        "cursor": {
          "ref": "5e2b6127-8236-493c-821d-cf64acd7af7e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b4d15048-ef32-4285-ab78-95036a9c0081"
        },
        "item": {
          "id": "9c3a31e7-2c90-44b3-98a3-0c51b5e432c1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f8003cf5-8838-465c-9528-503c4c65fe3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b362117-916e-4242-a959-7eeb78732021",
        "cursor": {
          "ref": "6c572523-692e-4f3f-b357-9e20cb199d46",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a699765f-4e22-48ee-80e4-2d15febfaede"
        },
        "item": {
          "id": "1b362117-916e-4242-a959-7eeb78732021",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "32367069-23dd-4111-9889-747ad4cad543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa72c28f-96fb-495a-84ef-bdad77d16331",
        "cursor": {
          "ref": "e19c9718-79f7-4e22-94c1-6ae826237ac3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0292b85a-f75a-4d39-a0a0-416d67a9485c"
        },
        "item": {
          "id": "aa72c28f-96fb-495a-84ef-bdad77d16331",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "76d40468-e3f6-403f-8d3a-bad6e47a6a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038b99c1-159a-4e59-83cb-5a33719016a5",
        "cursor": {
          "ref": "37daba5b-3bfa-4d51-8f3f-9cda473bedda",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7d613f88-1769-48c7-b0af-7150f5e708ed"
        },
        "item": {
          "id": "038b99c1-159a-4e59-83cb-5a33719016a5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c88e6c8b-d6a3-4701-bf63-ed5fe77912ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c13b903-0df5-4f1c-bc65-9ed10567e607",
        "cursor": {
          "ref": "9c5fa310-e425-42fb-acf9-70affafd86de",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4f5c497c-5a9d-47fe-a247-27bd3378dc01"
        },
        "item": {
          "id": "1c13b903-0df5-4f1c-bc65-9ed10567e607",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bcb6b832-c88b-4524-b777-0e1226df5b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b44aea2-c198-48b9-a76f-f5b8ab26b144",
        "cursor": {
          "ref": "8fe23780-66d2-4c45-8950-fa674d28eeae",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e42abf21-462d-40df-a5dc-f87fff2c4e34"
        },
        "item": {
          "id": "7b44aea2-c198-48b9-a76f-f5b8ab26b144",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "72ba67de-2d0c-4724-a8a9-5bcc1d0a361f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d3d8e4-7d0d-471e-8dc4-cb210f937fa1",
        "cursor": {
          "ref": "01bfc11a-51ba-4543-bcdd-1ed436aabc4f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b949bd79-7e76-4218-ae49-f425a64a169c"
        },
        "item": {
          "id": "50d3d8e4-7d0d-471e-8dc4-cb210f937fa1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b48fd039-56d8-41a0-b04e-936b85dcb7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c71bde6-4a1d-45f9-bf8f-45a869442b5a",
        "cursor": {
          "ref": "b2b7a613-af58-43e2-80a7-b14286011ab5",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ad25b90a-05e2-46ba-acd3-afa97199b13a"
        },
        "item": {
          "id": "9c71bde6-4a1d-45f9-bf8f-45a869442b5a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dbb99dc2-d515-4e7e-b2f8-4db33bbea7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e05f8f5-b8f1-4126-8b96-8f7c3751ab0c",
        "cursor": {
          "ref": "635ee40d-0951-425c-86ba-0ecc119cd44c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "178b8a7f-82d3-4a17-9638-4a7fde106bc4"
        },
        "item": {
          "id": "0e05f8f5-b8f1-4126-8b96-8f7c3751ab0c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e6e61ffc-408b-4eb2-817c-cee87d1622bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea1fc3b-007c-456f-8c50-406dfe77e882",
        "cursor": {
          "ref": "cc0a945f-7050-4c5a-b0ef-2ead28f88916",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "07f820ea-077a-4e48-8ae1-cebf45865640"
        },
        "item": {
          "id": "bea1fc3b-007c-456f-8c50-406dfe77e882",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c6fe5ae3-7d6e-4c1b-99a1-8ec4d344fba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb357710-02eb-424d-b8f8-a2839232e037",
        "cursor": {
          "ref": "d5fae0b7-368b-4c77-b817-3e51fb118115",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d480e7cd-b4bf-4f57-8661-6c62ab77f220"
        },
        "item": {
          "id": "fb357710-02eb-424d-b8f8-a2839232e037",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cf770e8c-4e0b-47a3-99eb-b21ae155d7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d37d8b-265a-4228-9a41-7e572ca0701d",
        "cursor": {
          "ref": "590d8d20-a6d0-4018-bd40-43fc490053d2",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0e9d7be5-090f-42ac-83b9-3945cf9c478f"
        },
        "item": {
          "id": "09d37d8b-265a-4228-9a41-7e572ca0701d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "85939032-268b-424a-93eb-ad2faf226c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51210635-eb3c-4b9a-804b-2224560d1e99",
        "cursor": {
          "ref": "05f22eec-7d58-498a-ba75-5b34f57291a6",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "075db2d8-6e78-43e0-ad1f-6c843e087d8c"
        },
        "item": {
          "id": "51210635-eb3c-4b9a-804b-2224560d1e99",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4c70c41d-b303-482a-aae2-e22d9f7d3f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d2bca0-80be-4b2c-9c17-e78609d3edb3",
        "cursor": {
          "ref": "6860d09d-6081-4e82-8162-4ee7b5dda050",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "03d48b83-b2c9-4f8d-8daf-28bae8480fcf"
        },
        "item": {
          "id": "d8d2bca0-80be-4b2c-9c17-e78609d3edb3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d74cd39e-494e-43aa-841e-e8ee0779a0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8743a29-5538-4c73-ab03-86dbb4b6b94a",
        "cursor": {
          "ref": "5c29c31d-7338-4e0d-a44c-625cd22964ba",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f82d7a9d-e7dd-4ce7-920c-12e1023ca11a"
        },
        "item": {
          "id": "c8743a29-5538-4c73-ab03-86dbb4b6b94a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e470e27c-f296-4c09-9426-ce9e0756814a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c266a372-abcb-46be-9044-b9557f52c5a7",
        "cursor": {
          "ref": "03aeed26-f87e-435d-a483-6b95ff7f5001",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "44feaa71-ed99-420f-8e7f-9e7432c2aa38"
        },
        "item": {
          "id": "c266a372-abcb-46be-9044-b9557f52c5a7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cc306a9b-32a3-4287-a63a-0f0ac4c345eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd7bf19-d474-4954-8be7-7a069d0f1f46",
        "cursor": {
          "ref": "1eb1a701-fbe5-4372-b9e2-698071124158",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "50fb6bfc-1894-43c6-899b-3890ae2dde34"
        },
        "item": {
          "id": "9cd7bf19-d474-4954-8be7-7a069d0f1f46",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "37e94267-3191-47f2-903a-7b343676f21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6a92a5-4d2a-48b2-a203-13f077bca30e",
        "cursor": {
          "ref": "560e7a58-03a9-4c98-9174-7aba985e66a6",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fdd9c7a4-eab0-4ee9-bd5a-eacb89209e0b"
        },
        "item": {
          "id": "9c6a92a5-4d2a-48b2-a203-13f077bca30e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "98878141-e1fe-431d-9a75-4008b1c195ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61d4502-d3bc-4c83-bbb0-f5feee25986f",
        "cursor": {
          "ref": "f4775ffa-3b23-4761-a79e-f938de872247",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2b029507-619f-4d8c-90db-54b49879966e"
        },
        "item": {
          "id": "a61d4502-d3bc-4c83-bbb0-f5feee25986f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ba79a87f-c2b6-4771-b767-ff48a63bf427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ad1eb8-9591-4f42-ac5a-63be78c89768",
        "cursor": {
          "ref": "f264963e-f3f5-4ee1-ba59-3520766f5b2a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "923f2ae4-483d-4e29-89bd-cfc2431a1f01"
        },
        "item": {
          "id": "b5ad1eb8-9591-4f42-ac5a-63be78c89768",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "008a6a1b-2085-458e-b306-bf8088c07a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b605c26-76c4-47aa-abc5-68ebd9f34a87",
        "cursor": {
          "ref": "302b7754-71cc-4fbf-b93a-fe81f82cdbe4",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5c6937f2-cdc8-485d-b555-84e7c4f87250"
        },
        "item": {
          "id": "0b605c26-76c4-47aa-abc5-68ebd9f34a87",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b329d915-517d-45eb-aff4-58e8b7135c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf5aaa2-bbd2-4c64-a1da-005fcffa23fd",
        "cursor": {
          "ref": "1153af51-abbb-4857-b30c-93d19d751b19",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5c7db0e9-177b-4c2a-8365-869323582788"
        },
        "item": {
          "id": "ccf5aaa2-bbd2-4c64-a1da-005fcffa23fd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c376cd54-d2ea-458f-88b3-c75171faa444",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963093d3-6fec-441c-8069-a5b25b10eb6a",
        "cursor": {
          "ref": "a0619284-6782-473b-a729-66f5e34ee629",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "45fbca79-3f2e-491f-849b-297f8ad8a9b4"
        },
        "item": {
          "id": "963093d3-6fec-441c-8069-a5b25b10eb6a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5d835ae6-88b8-4ece-8db8-3a8a5b78bea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b7a0ef-df71-4bb2-a17e-59a488a18377",
        "cursor": {
          "ref": "a577c24c-5523-4c03-9ddc-07a3c0e3f187",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0ce312cb-aedc-40b8-b118-d30ad17f637e"
        },
        "item": {
          "id": "b0b7a0ef-df71-4bb2-a17e-59a488a18377",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7f0f84a6-8be8-40a1-982f-9b1882f8095d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4468b285-1ca7-46fb-a330-14cd8b2ef089",
        "cursor": {
          "ref": "9bbe8a66-679f-4c4e-b770-ce9255dcd4b4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f2673769-27c2-4aaa-b17c-0ce815e29a26"
        },
        "item": {
          "id": "4468b285-1ca7-46fb-a330-14cd8b2ef089",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7cb09a3b-1e19-4926-adc7-0316e94e2752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b90d7c-485e-4729-b5ae-7acfe4eecf10",
        "cursor": {
          "ref": "5442dbcf-46bb-4ba0-ad39-2d0f82563e74",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6eab799a-e7bd-4a79-82ea-7226c9870210"
        },
        "item": {
          "id": "e1b90d7c-485e-4729-b5ae-7acfe4eecf10",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "af57c5c7-9215-481a-bfbb-a7a3a976927c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f2f98e-9e18-4ca2-a9ef-c5b2af94b26a",
        "cursor": {
          "ref": "b84edfe4-4527-47e6-b0b3-e2029a3b061b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9378210e-9e36-4ad9-a96e-f31731559a78"
        },
        "item": {
          "id": "62f2f98e-9e18-4ca2-a9ef-c5b2af94b26a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cc0db7fa-5cf2-4f45-bd37-ff1d2505c54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba18489-db88-429b-813e-3ffcc7b506ca",
        "cursor": {
          "ref": "1975dbaa-efd2-451c-b26e-bfc9e780eb75",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "764a29d4-afe6-4539-8019-fbc656bc04e0"
        },
        "item": {
          "id": "fba18489-db88-429b-813e-3ffcc7b506ca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d126a4b1-2a80-40eb-96e6-85137520a382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df012cc-ae3d-447a-902d-400d4dccf108",
        "cursor": {
          "ref": "4315c061-c35a-4bc0-a665-c80a9ae02264",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cf1d367b-c268-465e-bac7-e5a59032d2eb"
        },
        "item": {
          "id": "1df012cc-ae3d-447a-902d-400d4dccf108",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "14845bd8-8120-4a36-96b6-8cd125bde75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb52ce8-6023-4dc5-87bb-5e0c10236d06",
        "cursor": {
          "ref": "efe3bb3a-3c73-422d-9741-927e2285fa02",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "38ed90be-0f60-4cec-9c16-e8181312d5f2"
        },
        "item": {
          "id": "6bb52ce8-6023-4dc5-87bb-5e0c10236d06",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d0ab93c3-01c4-4ecb-9b49-3cd29520eb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34b3a32-3d68-4cac-9cca-6b9d55050448",
        "cursor": {
          "ref": "b5034c14-b325-436e-a858-cc3e1839174f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4947860c-6492-45c7-a4b4-e2b234d97189"
        },
        "item": {
          "id": "a34b3a32-3d68-4cac-9cca-6b9d55050448",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c7709779-2a0f-451e-89d7-9f1f0bf37975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1d1626-77da-43ef-a12f-8d5ed237742a",
        "cursor": {
          "ref": "5e084e8c-68de-4d86-aa81-c833eab4b886",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bc725a6e-b14a-4271-9d79-932c030adf8e"
        },
        "item": {
          "id": "0b1d1626-77da-43ef-a12f-8d5ed237742a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5252c9c3-8750-4816-a42d-dffccba43e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1376c55a-01d6-4649-88eb-308cd175c402",
        "cursor": {
          "ref": "6d8f8de1-5862-4ea0-828d-2aa01b95f826",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "428a4b79-72aa-4ff4-9324-3829cb55db11"
        },
        "item": {
          "id": "1376c55a-01d6-4649-88eb-308cd175c402",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "de443627-c2a0-4a39-aace-a3d37d3b519c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e0a68b-30cd-430d-afba-ef5015bf5150",
        "cursor": {
          "ref": "83170583-15ee-4753-9b21-dbdc986cb84a",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bb47fcb2-652e-4fb3-9441-86415b4013a3"
        },
        "item": {
          "id": "10e0a68b-30cd-430d-afba-ef5015bf5150",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1af17da8-8bdb-40d9-a336-9897cb73ee92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83127ca4-5e47-42f9-9ca6-ececf51568be",
        "cursor": {
          "ref": "1211d6cc-15a3-4266-bf66-efafb8809dd7",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f3e929d0-1cdf-422f-980e-da73e2644b95"
        },
        "item": {
          "id": "83127ca4-5e47-42f9-9ca6-ececf51568be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "85ee15a7-2665-4e8b-a92b-5b2fece8918b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b036284c-4f8e-4b66-80f5-ee2de36daea7",
        "cursor": {
          "ref": "7fc8b307-1b6f-4e3a-800a-d42ba39aaba9",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "695798b5-5849-495d-af9f-73ca3498bca8"
        },
        "item": {
          "id": "b036284c-4f8e-4b66-80f5-ee2de36daea7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bc0b8410-bc1b-4af0-ab8a-e7ea573aa38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f15a8d-912c-4000-9b83-3a6c9d4c6f85",
        "cursor": {
          "ref": "1aa92344-949f-4967-9ff6-7456b357585f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7afc6d0f-cfa0-4aa8-9ac3-b6d171d4871e"
        },
        "item": {
          "id": "d1f15a8d-912c-4000-9b83-3a6c9d4c6f85",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f29cb481-aa43-4a38-bff0-f89492310705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc4abf2-a179-42c3-807b-43f5f62cc586",
        "cursor": {
          "ref": "e79a3287-744f-4661-b713-0e6a077a7a84",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a16760a3-236c-4233-9900-b2e980f4976e"
        },
        "item": {
          "id": "4dc4abf2-a179-42c3-807b-43f5f62cc586",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6c208e74-4497-4468-a5f0-4d891f08871e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ce4f02-979b-4cb0-90ed-7d6c483e519d",
        "cursor": {
          "ref": "735ca530-e762-4f61-9b11-42429175c772",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "dd9ed8ef-0cee-4da2-8cc8-8a38264b7dc0"
        },
        "item": {
          "id": "39ce4f02-979b-4cb0-90ed-7d6c483e519d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b02b8919-7269-4226-8ed8-d4ff7648b689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95929699-ff54-46d2-a38b-9285c4895fc3",
        "cursor": {
          "ref": "b98282cb-4fd6-485b-83f5-8f40bf0d881b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "09ac514f-caab-4a3b-bff6-7487bc51e2d5"
        },
        "item": {
          "id": "95929699-ff54-46d2-a38b-9285c4895fc3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f4a8b2db-e72b-4fcb-9018-96f534ec06ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba94c0d-417a-43cc-aadd-928cd449684d",
        "cursor": {
          "ref": "4c32e32f-2ac8-4042-a620-6d89dd562713",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "92da4615-a1e3-4e1b-b3bb-74e7fc6e7949"
        },
        "item": {
          "id": "9ba94c0d-417a-43cc-aadd-928cd449684d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e441292c-44ce-43ea-907d-97e4e1bb7119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549b1f8c-d593-44d8-bad6-60e5f4dd0ef2",
        "cursor": {
          "ref": "1e62d19a-7c67-49fb-b030-69c0f0e78d47",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f0806847-6f70-496a-89ac-c8ee16a7627b"
        },
        "item": {
          "id": "549b1f8c-d593-44d8-bad6-60e5f4dd0ef2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "da3d9950-4b33-41c4-9687-dd2ce152e1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d001afb8-2f36-450a-9088-b113ff4da516",
        "cursor": {
          "ref": "33a7f8f5-4588-448d-83ed-b973855daf9c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e3f576c7-798f-4295-a943-dc8b225420d7"
        },
        "item": {
          "id": "d001afb8-2f36-450a-9088-b113ff4da516",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "34cb5b25-1c81-4ec5-ba96-2fe0a4ff7bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b439b95c-1a41-48b9-8d9a-67ae31614bb3",
        "cursor": {
          "ref": "6f2d861c-efcd-4eaf-9190-c4ab49c67c01",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b66c630f-51c1-4ad8-bd2a-17f5a4a47168"
        },
        "item": {
          "id": "b439b95c-1a41-48b9-8d9a-67ae31614bb3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "407c56cf-890f-45b8-afb2-810ea5fe0356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66de711c-044d-4131-921d-2c0288b7683f",
        "cursor": {
          "ref": "499a948c-a613-4fce-b667-6c87fc1b39eb",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "88ef8879-b1e6-4997-abaf-6ddfdc9a58ad"
        },
        "item": {
          "id": "66de711c-044d-4131-921d-2c0288b7683f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f7523601-1096-424a-8259-8b93b37ebec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83871ae6-f1d1-4e2b-844d-aa4df8b74d6d",
        "cursor": {
          "ref": "8d6d28cc-5dd9-44d5-a7ba-628cce778fba",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cb4abbfb-a2a1-48d9-9dba-cb1f6fce0242"
        },
        "item": {
          "id": "83871ae6-f1d1-4e2b-844d-aa4df8b74d6d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c1dbd69e-71c7-4609-a0f1-ed63e2ddf092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62775588-19f3-4674-93e8-0d5e90e80444",
        "cursor": {
          "ref": "b78ad8a9-a9b9-4df1-ba65-647a0d15a97b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5e482c4a-a7be-480f-b77e-00c24a6dec75"
        },
        "item": {
          "id": "62775588-19f3-4674-93e8-0d5e90e80444",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f6400600-5c8c-4754-aabb-d482c6073ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d217203-0fcf-4672-8c61-5dacc01f5dbb",
        "cursor": {
          "ref": "f03d511e-45a5-485e-892e-42258ad17a86",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ea5ae0c7-4cf4-4322-8915-f492b4b4f7d3"
        },
        "item": {
          "id": "2d217203-0fcf-4672-8c61-5dacc01f5dbb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2d18188e-a1ea-44f7-90cc-1dd4f61bbe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf9dfe1-5da9-461c-917a-e22e2b3a8ecf",
        "cursor": {
          "ref": "21e5bfc1-d781-4e44-ba38-c8930a4d6889",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d29e8286-173f-4ec7-985a-0e7fc253636c"
        },
        "item": {
          "id": "fdf9dfe1-5da9-461c-917a-e22e2b3a8ecf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8af94ee9-6e8f-4336-b720-21fcaea07ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858ffcdc-8d9a-4601-985c-2762e0682ea5",
        "cursor": {
          "ref": "82005171-1030-43ec-b4a5-363ae414064d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fe3ecc6f-98d3-432e-a3a7-6973ff6a10b1"
        },
        "item": {
          "id": "858ffcdc-8d9a-4601-985c-2762e0682ea5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eda26492-806a-476a-81dd-cfa4effbe02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9b62a5-638c-4532-9437-0652f2ec5255",
        "cursor": {
          "ref": "4c82bad3-9322-48d9-a323-f5ae57c8aed0",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c33322ff-9e00-4764-9355-df4f90e189d8"
        },
        "item": {
          "id": "bc9b62a5-638c-4532-9437-0652f2ec5255",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2377297f-ab43-41cb-b79e-63616a379d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf50d770-4a8f-458c-905a-80b445e3a8c8",
        "cursor": {
          "ref": "4b8b18dc-94b8-4034-8ac3-b588d36c007f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9638e464-7de6-43c2-9c01-b3b734bf8305"
        },
        "item": {
          "id": "bf50d770-4a8f-458c-905a-80b445e3a8c8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1438abf3-81de-4f18-a70b-5122f8f96c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b6f162-abd4-4943-8f2e-447fda3854ca",
        "cursor": {
          "ref": "d45b5730-f472-4a0a-bba2-5419b1bae1d9",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5bae79f6-ca6a-43ef-b579-c958ce308522"
        },
        "item": {
          "id": "34b6f162-abd4-4943-8f2e-447fda3854ca",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "69281d4c-03a8-4650-af5e-384ddfd3958a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9610ae-0458-468e-91c1-58005de58b85",
        "cursor": {
          "ref": "30ea389d-32fd-4563-8ee7-e63f944f8d83",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9364c828-8ee7-449d-8066-374f838d6b14"
        },
        "item": {
          "id": "dc9610ae-0458-468e-91c1-58005de58b85",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "277674cb-1495-4abe-ae44-024d0b8928f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40306ca0-47bf-4e2e-85ad-aec1e38a5395",
        "cursor": {
          "ref": "2bd72f0f-57b2-45a4-8510-b99deb123adf",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4dc5668d-e32d-4a6c-b8ba-39026826e3a4"
        },
        "item": {
          "id": "40306ca0-47bf-4e2e-85ad-aec1e38a5395",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e1010265-e7ea-414c-91f3-a9cd0597f1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b03398-28c2-4998-973c-841a2d78a4a7",
        "cursor": {
          "ref": "47b352e2-5131-4fbb-8415-1b5f92c7aef2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d8499a0d-9d11-4549-995d-cc775b81c2ac"
        },
        "item": {
          "id": "e3b03398-28c2-4998-973c-841a2d78a4a7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "860ec1f0-a466-4a12-b22f-dcce843f0a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440286ed-d826-4515-98cf-cafc766b8bbf",
        "cursor": {
          "ref": "18f2a811-bd54-4352-b29a-3801dde4f4c3",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "daee8e76-dd51-4635-979b-76f2a117472c"
        },
        "item": {
          "id": "440286ed-d826-4515-98cf-cafc766b8bbf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fd4824e3-95cf-4686-ad6c-801852e295e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffa85ed-a4c4-4061-8a64-46857780855e",
        "cursor": {
          "ref": "981f443c-1263-48aa-99c6-2de009e096e1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e785f6b6-b87a-4515-bdc5-5285f1fd72c0"
        },
        "item": {
          "id": "1ffa85ed-a4c4-4061-8a64-46857780855e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ffa1d750-cca8-42ea-9974-45fbf5be4c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24e5a0a-549f-4a8b-9e71-4e1cf39c1461",
        "cursor": {
          "ref": "f3412718-660f-44b6-ac73-4663a90d548b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "24e2de12-fe60-4011-bd99-63dbcee12802"
        },
        "item": {
          "id": "e24e5a0a-549f-4a8b-9e71-4e1cf39c1461",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "21579ba6-4b41-4baa-899d-b6cd81be1a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7976b919-f84f-4e72-8457-e5cf9e64d8ca",
        "cursor": {
          "ref": "d63fef46-9b25-4d4b-bc9d-b8edd3cdadd1",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c2ec9137-a12b-4274-9d89-3029ce8767c4"
        },
        "item": {
          "id": "7976b919-f84f-4e72-8457-e5cf9e64d8ca",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "802ca765-e1a4-46e6-8d29-ebd5fb64b12f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4937458-c9c6-456d-82c3-942741d0d125",
        "cursor": {
          "ref": "9cd6caa5-5440-41fc-85d8-6c300937ca64",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "437158a2-3d17-41fb-98a6-672fd8cbff93"
        },
        "item": {
          "id": "b4937458-c9c6-456d-82c3-942741d0d125",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "653e7b69-908d-44be-8f96-959c87ec337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bfb43d-06da-4e33-9315-a855e63573a9",
        "cursor": {
          "ref": "a6842d87-cef9-4a1d-908d-a5347576622e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "df095709-7e22-4563-88f8-f9f661a8d98d"
        },
        "item": {
          "id": "34bfb43d-06da-4e33-9315-a855e63573a9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "16866667-2c5b-4981-9c93-338da45713be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b574e709-cd4d-4188-b8e2-848897799457",
        "cursor": {
          "ref": "9b8e2bc7-9c9e-4e4b-90f7-2b46e0127ada",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2f3bfe5f-b430-4370-b265-65243a7a85bb"
        },
        "item": {
          "id": "b574e709-cd4d-4188-b8e2-848897799457",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "40295d8e-6ea1-40fa-a324-f6a72b8703f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0b42a9-18e2-48c5-96bc-099fee0d6af4",
        "cursor": {
          "ref": "765da201-8b0c-4124-8437-e6431c141510",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "08708979-9cf1-4a28-9dca-ad5cb5820d2a"
        },
        "item": {
          "id": "5f0b42a9-18e2-48c5-96bc-099fee0d6af4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f2c32243-9ab4-40ef-a3c2-584e7c094329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be76fe11-65cc-4254-9f34-0db9c1d27280",
        "cursor": {
          "ref": "f3eb8207-f51a-402b-9d57-1a2ab52b9e44",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f6c2fe14-a0ae-40f5-8d64-4f61c2fb8279"
        },
        "item": {
          "id": "be76fe11-65cc-4254-9f34-0db9c1d27280",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "28783632-2ed3-43cf-adcc-e0f736b5241f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972bcee0-45fe-42aa-a5ed-9909b245745c",
        "cursor": {
          "ref": "64890667-6bff-48f7-9673-04f233aafa9e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3b836a96-8169-42ee-872a-b2cc13a3d94e"
        },
        "item": {
          "id": "972bcee0-45fe-42aa-a5ed-9909b245745c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f8a3b796-5c37-45cf-9619-e2b778db7d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981d1f0a-91ff-4384-9822-ea7f553ae563",
        "cursor": {
          "ref": "d40b37a1-c252-4a19-b05b-5405aa4f05e1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c02088fb-8e4c-4349-b9e9-fc451c459912"
        },
        "item": {
          "id": "981d1f0a-91ff-4384-9822-ea7f553ae563",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4f903f33-e0ab-4772-9f6a-8770001687b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cef971-e49f-4307-be45-301867ba7469",
        "cursor": {
          "ref": "df9abd45-d41d-4923-afd1-57fb1425dec1",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "02da6661-a02b-4687-aaf2-11507d55d6b4"
        },
        "item": {
          "id": "b6cef971-e49f-4307-be45-301867ba7469",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bfa8a5a1-6403-4da8-8bd6-ec5e5c3643a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b654737-e181-45a3-970e-5773ad0ea0de",
        "cursor": {
          "ref": "19373f73-3676-48dd-91e4-2c7958c1158b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "edbc9f2b-8b9b-4d67-b9ea-468e1caa2b79"
        },
        "item": {
          "id": "1b654737-e181-45a3-970e-5773ad0ea0de",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9d94077e-ee8d-41dc-8efd-9801b02f526d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9692ad3-ac0d-490f-be03-09b4a7a9d693",
        "cursor": {
          "ref": "3dc61d45-e6f4-47ce-82f4-9eaa086ed8f0",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "07881948-a119-4c72-b9b0-4e0621bc8694"
        },
        "item": {
          "id": "a9692ad3-ac0d-490f-be03-09b4a7a9d693",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d5e34138-bc29-4203-882b-3093b5a851a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59071da7-2fa6-4045-8a2c-b5eaaa7e92b3",
        "cursor": {
          "ref": "1b63cd63-27f3-40a0-b2ed-0d76e56a824e",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "24898735-4a46-45c2-80cd-2a2a9c9aca7e"
        },
        "item": {
          "id": "59071da7-2fa6-4045-8a2c-b5eaaa7e92b3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cb121dad-f25b-4ed0-a7ef-ce952acd3912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cda71e-0713-42df-9ab1-1bf2569891c6",
        "cursor": {
          "ref": "08d55d75-3905-46fb-9e72-98af569516d4",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "690ce78f-8362-486c-be22-91f40c42987d"
        },
        "item": {
          "id": "a5cda71e-0713-42df-9ab1-1bf2569891c6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2fc69c18-6d92-4bdd-b5bb-5a15d8f0e84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53c47b0-b9e2-4ae2-95cc-df1b27aea42e",
        "cursor": {
          "ref": "756bc984-b598-4204-84f1-37329b2be9e5",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "77bf1b5a-457e-4383-ad09-f32485c3ef4c"
        },
        "item": {
          "id": "f53c47b0-b9e2-4ae2-95cc-df1b27aea42e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a8a84dd6-5d12-4fc0-8e53-fdf0d01332a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e47363f-4df3-4ed0-bf43-d962ac3170eb",
        "cursor": {
          "ref": "a8b50b07-1c53-4d6d-92d7-c57860d4c88e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "576ff105-42b6-479c-aa5e-a4617a631cc6"
        },
        "item": {
          "id": "1e47363f-4df3-4ed0-bf43-d962ac3170eb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "492cd811-4889-4d35-8761-5f9033eb5eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2c42e2-698d-4233-8c56-7da809ec5eb4",
        "cursor": {
          "ref": "c78b6c26-48b7-487c-858e-87cfc3a11c9e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f23c073d-072c-4a18-b74e-e935e1847b08"
        },
        "item": {
          "id": "fa2c42e2-698d-4233-8c56-7da809ec5eb4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "48c44305-072f-4206-bc4d-463dfb5751be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8411eeb2-fd09-462f-8d94-a895eae3804c",
        "cursor": {
          "ref": "287a958b-61b9-4d22-9b74-26c707ac986d",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7734056c-1908-4069-a63c-29f1f2a3a531"
        },
        "item": {
          "id": "8411eeb2-fd09-462f-8d94-a895eae3804c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "11d7fd68-e054-4dcf-b362-77cd3d77af82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503582bc-a5ed-414f-857a-4d3d60db46a7",
        "cursor": {
          "ref": "188b6895-2931-4d50-93f1-a02d71b7235f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "60621814-f488-4a67-b034-b9473c44836a"
        },
        "item": {
          "id": "503582bc-a5ed-414f-857a-4d3d60db46a7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a7b87a55-fb77-46a0-a9e2-6416232daf38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376f2203-5636-48a5-9ee0-fae9870bf0bc",
        "cursor": {
          "ref": "94f5e7ad-1f2d-4e38-bbe1-85ef1c4aeb37",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cb45007a-81ba-4de1-aa83-a50f4e394d1a"
        },
        "item": {
          "id": "376f2203-5636-48a5-9ee0-fae9870bf0bc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a619ed1c-88be-4924-a8e4-ef3d1a8ec4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d67c10-a44e-4673-8787-c98903d2d7d5",
        "cursor": {
          "ref": "8365964c-958f-4764-ab51-ef7df55de315",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dbb18e57-58a0-4273-9cd1-307d40e337cd"
        },
        "item": {
          "id": "a5d67c10-a44e-4673-8787-c98903d2d7d5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f68dd4d8-7c00-40be-80eb-7543a3b77b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c77291-1812-4e40-a689-47e394dbf3cf",
        "cursor": {
          "ref": "10affe13-4f02-45a1-b05b-93e899e318e5",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2a4eb867-124d-4a85-a5d9-c2379f5ee806"
        },
        "item": {
          "id": "35c77291-1812-4e40-a689-47e394dbf3cf",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "11572749-d53b-4c63-bacd-9e162755ddbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08251323-3e79-4e64-b7b2-88ba2c1c804d",
        "cursor": {
          "ref": "9dbb17cb-ddcb-4e7d-9cc5-73dc1a0339f8",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b61ff5b6-8e75-4b7e-897f-0cd3b087d7b3"
        },
        "item": {
          "id": "08251323-3e79-4e64-b7b2-88ba2c1c804d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "77548de2-9ac7-48b7-891e-83c88061be11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9296c7e-c635-4ac1-97f2-7241ac25ad6a",
        "cursor": {
          "ref": "6b8a9ea7-fd1d-40e6-b710-19f47141d353",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "24945bac-5109-4ad5-88d0-cafd4eca1312"
        },
        "item": {
          "id": "a9296c7e-c635-4ac1-97f2-7241ac25ad6a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1be3de62-c3b5-4631-8069-7d50234ed3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a65d98f-7b2c-4991-b5ea-a58c64859a2c",
        "cursor": {
          "ref": "653eb7ec-acab-4d67-99dd-7a4a85afcc81",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1d6cc14a-bc93-4839-b57f-e338fa2726e2"
        },
        "item": {
          "id": "6a65d98f-7b2c-4991-b5ea-a58c64859a2c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3704af25-211e-440c-8bc9-dbd5467eb4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa5b5e3-a898-43f6-9255-d9e06088967a",
        "cursor": {
          "ref": "705079ce-21f2-4750-9664-309b43674e06",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e6b06f51-3a81-4369-bfbb-654345f84f05"
        },
        "item": {
          "id": "caa5b5e3-a898-43f6-9255-d9e06088967a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f297c3ad-f0ae-4c7a-9130-ad649cd8c098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb3e413-5721-4217-8213-dd60809f06e3",
        "cursor": {
          "ref": "51166fe5-eb0d-4ca0-bb49-440f8f8336c9",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "43bcea3a-e825-4dd2-b25c-6be1467b0e5a"
        },
        "item": {
          "id": "5fb3e413-5721-4217-8213-dd60809f06e3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8f856edc-6ab5-4e04-be93-fb0121851f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a467c3f-c379-42af-a04a-ccae5d4f7bcd",
        "cursor": {
          "ref": "dcd5a4f2-4f33-42e3-a236-a59a18919405",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "40eac1b8-f033-4f86-b3b7-bc515d318dc8"
        },
        "item": {
          "id": "9a467c3f-c379-42af-a04a-ccae5d4f7bcd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7e1ad8b0-e31a-4560-b3d6-baaf8ac04025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70375098-adc2-4e9d-b0e8-d79a78843849",
        "cursor": {
          "ref": "fd3d7d8b-83a0-4fdb-b226-656fcb4992ee",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "65149933-60c9-4c0d-9410-16daf6a37ac5"
        },
        "item": {
          "id": "70375098-adc2-4e9d-b0e8-d79a78843849",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ffb39094-18be-43bd-92c0-d19c06f9a814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afc5059-d822-4145-8378-9c797abf7c36",
        "cursor": {
          "ref": "51925e45-f5ea-4b2c-90dd-10284d7fce79",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "517aba5b-db8e-47f8-b998-50b7fed34752"
        },
        "item": {
          "id": "5afc5059-d822-4145-8378-9c797abf7c36",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1153d792-ce9a-4b9b-b27f-934f5bcfd625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f65833-3a4c-42cc-84e3-e17a65847edb",
        "cursor": {
          "ref": "0055d3f5-69a7-4036-880e-ca86f933b09a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7cd79f94-5439-40c7-92c1-19e2eab5eab3"
        },
        "item": {
          "id": "c0f65833-3a4c-42cc-84e3-e17a65847edb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d772acdf-6b26-4c79-a402-fead76e81de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caafa27e-a2c1-4eca-a890-1b99e473b488",
        "cursor": {
          "ref": "300266de-4abd-4604-97fc-ba3936e38dd5",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0858aba1-9acb-4bdb-a5e8-7db2d2570a33"
        },
        "item": {
          "id": "caafa27e-a2c1-4eca-a890-1b99e473b488",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "baa085e6-da8c-4b38-acc0-92027b82cbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ac8be6-d564-4204-bde2-665824d1de09",
        "cursor": {
          "ref": "11abb7ec-cb9e-4b06-8929-ec2be988a54b",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e7ae8de4-a039-4ed4-9a9b-91db2d52294f"
        },
        "item": {
          "id": "93ac8be6-d564-4204-bde2-665824d1de09",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c7671bcf-9cef-4344-9795-6bd0f69524a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450d78fb-54c0-47d1-8d9c-12d92b860504",
        "cursor": {
          "ref": "080aabc9-21c0-4e1b-b5e4-7b3ff2012e4b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7b705cb9-1003-4621-a17d-9758bad777a8"
        },
        "item": {
          "id": "450d78fb-54c0-47d1-8d9c-12d92b860504",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "68f057c7-8fda-404b-9a4e-e37c9ac30438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03fd1b1-9f6d-419d-9b3c-7ea13997ff84",
        "cursor": {
          "ref": "e7087608-f586-4bcf-b5cd-8a963b1f37a2",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8d3e4225-d2dd-445a-b168-a869e2268ab9"
        },
        "item": {
          "id": "b03fd1b1-9f6d-419d-9b3c-7ea13997ff84",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "71711656-aee8-4b11-b7ea-7603421c60e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86719fce-0d9a-4935-a724-357facfcddbd",
        "cursor": {
          "ref": "1753ee86-4a8d-42a1-a2bc-16f696a024f8",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e586f657-a7f5-4b8c-889e-e68c9575cbda"
        },
        "item": {
          "id": "86719fce-0d9a-4935-a724-357facfcddbd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a5174ac9-2f84-427b-9a92-563fa1ab1dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1723e063-36b3-4aec-abc2-51e34c5a78af",
        "cursor": {
          "ref": "1c563ecc-a37f-4b44-ba4d-372fe9125a3a",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "88e20800-e28b-4dc5-83c1-264f860e92b1"
        },
        "item": {
          "id": "1723e063-36b3-4aec-abc2-51e34c5a78af",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c782234f-9604-4b87-b810-fbb05168513d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90662953-24c2-4b45-9cc2-a06cd9b65689",
        "cursor": {
          "ref": "7ff164bd-d012-40bf-bc5b-19028295e819",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d1a115b1-eae3-441f-bd01-3252a5ba3d46"
        },
        "item": {
          "id": "90662953-24c2-4b45-9cc2-a06cd9b65689",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5cf81a49-5a36-400e-b959-a2079cb8a303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8faeb4-1582-43e1-95f3-aee2ac75d5f0",
        "cursor": {
          "ref": "099588df-10e6-4b9a-bab0-52e7bb2e0ec2",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e1f2cc04-284d-4a13-8b78-e30ad4f1af57"
        },
        "item": {
          "id": "be8faeb4-1582-43e1-95f3-aee2ac75d5f0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9979d491-e39d-4967-838a-5c9e7e355ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c85127b-5bd8-4e4e-843e-7d02dc2a80b1",
        "cursor": {
          "ref": "4f9a3a34-9131-4b56-8953-ba9c52a34d27",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "39c33529-039a-4c2b-9520-ce71b4521f6a"
        },
        "item": {
          "id": "1c85127b-5bd8-4e4e-843e-7d02dc2a80b1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5ba769b2-461b-4f7b-9fd2-f04d08c5f707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dde0f1-0d06-4818-b33a-e3f51fca31e0",
        "cursor": {
          "ref": "66f33ee5-aff9-4b50-a27d-e6ce6eeb69c7",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "aa8843c2-108f-4e8d-b62a-42b2c74defd0"
        },
        "item": {
          "id": "87dde0f1-0d06-4818-b33a-e3f51fca31e0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d8bc3e88-5fda-4ec3-8d37-b911b739a955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075e64c4-17bd-4205-87cc-a661326e3e10",
        "cursor": {
          "ref": "add18f24-3608-43bd-b7e0-3935d8c4be9d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a7d3409a-f985-4925-8225-4c46fe6661c4"
        },
        "item": {
          "id": "075e64c4-17bd-4205-87cc-a661326e3e10",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e58d7ec8-ec0a-4f4d-a115-a11f3bf71bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8068d03d-7d63-4d83-8f64-2440a983a1d0",
        "cursor": {
          "ref": "5e169289-6b60-44f8-9798-5640ce29d3e9",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4fad27b9-0738-49d0-b8f3-a2f5235dbc81"
        },
        "item": {
          "id": "8068d03d-7d63-4d83-8f64-2440a983a1d0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d4374270-f388-45af-bd92-f4b244b9fedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d72ab5-2af7-4739-8967-d9c9aeeb2c4b",
        "cursor": {
          "ref": "8f457d59-13e3-427f-89c0-d39e8f3585c6",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e3ed934b-7a3c-4668-b329-1eebc8f27c82"
        },
        "item": {
          "id": "48d72ab5-2af7-4739-8967-d9c9aeeb2c4b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "90239baa-36aa-42ef-ab37-61a8379e7ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b35e5d3-dce9-40ea-8283-7b3ce6106b6c",
        "cursor": {
          "ref": "a3dae950-bdf3-4104-bd58-2b7e010ea9e3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ee116008-1cb4-450f-bc9f-c3a13b303638"
        },
        "item": {
          "id": "1b35e5d3-dce9-40ea-8283-7b3ce6106b6c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8dcb41e2-a66d-4f92-bbc9-491f462830e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec65d64-1e2e-4d6d-add6-3b85b7292f0d",
        "cursor": {
          "ref": "7f9ee75a-d5fa-4d86-95fe-f4238aef0d09",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6dc44883-cc17-457c-af43-53dc2793857b"
        },
        "item": {
          "id": "5ec65d64-1e2e-4d6d-add6-3b85b7292f0d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b162396c-959d-44d8-9dca-a66ee23f7b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c31d67-03e9-4bca-ac19-88234245d628",
        "cursor": {
          "ref": "b1a5d9f7-739f-4d47-9db4-ff9086ec2bb7",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9662b1af-8ef1-43cb-bfec-15802cd6dd6f"
        },
        "item": {
          "id": "b9c31d67-03e9-4bca-ac19-88234245d628",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0a975a5b-b430-4ea9-933b-58c2db5b8576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9daeca2-346a-45b0-893c-6f98dafd986c",
        "cursor": {
          "ref": "9c719890-4b5e-4e64-8f3f-247c8afda1ce",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "773a811f-596d-4d03-ad33-5bcf46a8f1f3"
        },
        "item": {
          "id": "a9daeca2-346a-45b0-893c-6f98dafd986c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "869fb3be-fac2-49e4-8c30-d56c236afd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42463075-ef1c-4d7f-88fd-27fb3c7dd90e",
        "cursor": {
          "ref": "3883b435-6906-4e32-881b-1cfbc0f67782",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "75d625d8-f681-47af-8350-c518d72d0831"
        },
        "item": {
          "id": "42463075-ef1c-4d7f-88fd-27fb3c7dd90e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ec54df43-0943-4080-b798-0c8024cdfac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b7f034-6631-482e-bcb9-37379b211c56",
        "cursor": {
          "ref": "b5ebd111-7397-4c24-b74f-2ce6ed135cda",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "36f93cd2-a10f-4998-ad1d-50c4ebafc325"
        },
        "item": {
          "id": "a3b7f034-6631-482e-bcb9-37379b211c56",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8b4efc8d-3a6c-40f1-9dee-ae15609f5422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40191871-dc66-41df-b1b2-161f1a9e43e3",
        "cursor": {
          "ref": "611af36e-3954-4c69-b9fc-a2cfb7366622",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "891e9b53-22f0-42c9-bd60-228541a42bef"
        },
        "item": {
          "id": "40191871-dc66-41df-b1b2-161f1a9e43e3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7880a989-1545-450e-a3a6-90108280c24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35059b1c-e263-40fc-936e-b9e10d8b294d",
        "cursor": {
          "ref": "91e12ecf-3c39-4b87-8066-f55b5db24d8d",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "412bd73d-cbe4-4732-8be9-db933c713472"
        },
        "item": {
          "id": "35059b1c-e263-40fc-936e-b9e10d8b294d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "39a15776-d073-49d0-9240-53e915dac18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9a4c99-b5e9-4080-92d1-322369d184ce",
        "cursor": {
          "ref": "30afe6d5-4075-45f6-8932-9d32f61c2894",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6ae48a73-189b-440e-bb7a-91ac442001b7"
        },
        "item": {
          "id": "9e9a4c99-b5e9-4080-92d1-322369d184ce",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ba432818-ddba-43a7-94d9-866fe292c863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a7fbc1-e7ae-466a-99e5-74aa0bfb2e3d",
        "cursor": {
          "ref": "c61786a5-7bd1-47ce-b39f-f4b6ddd0b17e",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "55733060-28e6-4937-92b5-4d8fce2e09cb"
        },
        "item": {
          "id": "88a7fbc1-e7ae-466a-99e5-74aa0bfb2e3d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c3f1497a-d234-466d-ab4a-204b3999291c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ca9d82-8884-48bc-8d86-3a7b979fef7b",
        "cursor": {
          "ref": "f6edce05-0322-4957-8b23-95401ec2ec1f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d6e65865-b8be-4121-ad0e-e08aad3c738d"
        },
        "item": {
          "id": "26ca9d82-8884-48bc-8d86-3a7b979fef7b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7c64496f-6b6d-4505-baf7-d94fba8f3ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe32cb2-5291-456c-83c6-ba5bcca076ed",
        "cursor": {
          "ref": "bde494a1-ba86-4703-a27b-ff00ebe26240",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fe8fe34b-6663-4d8e-8f52-524be25d1631"
        },
        "item": {
          "id": "2fe32cb2-5291-456c-83c6-ba5bcca076ed",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "31da440a-5ebe-4f73-ab0e-8247e073a78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da92658c-b484-4b3d-b920-403af3833be7",
        "cursor": {
          "ref": "022a324b-102e-41dc-87d3-07b1af1ca5c7",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "97b772b0-8c12-482e-b585-6937a12faf44"
        },
        "item": {
          "id": "da92658c-b484-4b3d-b920-403af3833be7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a28f3175-715b-4817-a371-227fb0898cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1788fcd-d0d9-4ce5-bbf2-20bcf676b615",
        "cursor": {
          "ref": "4bac21c1-074c-47a4-9ea2-af21075db9ca",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a80eb7b0-85d6-453c-9418-2577d08e0831"
        },
        "item": {
          "id": "c1788fcd-d0d9-4ce5-bbf2-20bcf676b615",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "034e5570-b297-4fbc-812e-55bd11d33924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e540440-f74a-4b8c-96d7-c70d341912e9",
        "cursor": {
          "ref": "e52ff8fa-2b23-4651-982a-a90282352c9a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6f79a818-21d9-4e0e-ac27-ed4fa8b69a3f"
        },
        "item": {
          "id": "8e540440-f74a-4b8c-96d7-c70d341912e9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "378721d3-1f7b-4b34-beb7-b8bfc40feba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e38ba4a-9188-4f97-99b6-51e7aff3ff99",
        "cursor": {
          "ref": "297d703a-9c9b-4fc6-a310-20cf6eb14ea1",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0d420878-f68b-4c41-be71-d90c26b0dd23"
        },
        "item": {
          "id": "1e38ba4a-9188-4f97-99b6-51e7aff3ff99",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b8902e73-3fc8-4672-9f5e-7e6a7a624866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa898b2-84a1-431e-b33a-bff235364977",
        "cursor": {
          "ref": "fa29f210-a321-4ffa-9534-999b9d54b9e4",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d9bdaad5-d343-4c20-b4f9-782082abab03"
        },
        "item": {
          "id": "cfa898b2-84a1-431e-b33a-bff235364977",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "216f834e-cc40-42d6-a896-a09f551ba8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2191381c-5a1e-4e1a-b2c8-8ea35d0c91be",
        "cursor": {
          "ref": "643acc93-ae32-4ac7-a124-91396eebfd38",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ba61ba9e-0db9-4dcc-9a2f-1ae69f93d2ce"
        },
        "item": {
          "id": "2191381c-5a1e-4e1a-b2c8-8ea35d0c91be",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0920581e-0b3a-468f-885d-449811dc794e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7aca33-a57c-443a-8166-120618b25ded",
        "cursor": {
          "ref": "dfda3d51-a926-4a76-81b9-14bfd4f1696f",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "480aefab-a60b-45cc-8d06-2bb1ef1b055d"
        },
        "item": {
          "id": "5c7aca33-a57c-443a-8166-120618b25ded",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "67dcc9f6-a913-4395-8783-bf17cdb1845e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2455b1e5-c9c6-43cc-ad9f-3bb36192ee01",
        "cursor": {
          "ref": "9edf3b37-abe3-4f60-a6f5-ad8562193152",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "24796ec9-be00-4317-81fd-a603c9f866d4"
        },
        "item": {
          "id": "2455b1e5-c9c6-43cc-ad9f-3bb36192ee01",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b4a42773-993c-450e-a267-eb0c944141f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77e4bfd-a393-46d7-a714-cb89a2bdd5d6",
        "cursor": {
          "ref": "af4e043c-45ef-4e51-b615-9469a61a341b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9eeab33a-7c42-427c-9922-c10aa584077f"
        },
        "item": {
          "id": "b77e4bfd-a393-46d7-a714-cb89a2bdd5d6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ede7e8ef-9763-4ec9-aaf3-58faa545704b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260883a1-a4f5-4c28-b404-f854587dc34c",
        "cursor": {
          "ref": "07e86153-1c31-4c38-af9b-3cbcee2bb61a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "75978f8b-8028-4c9a-a58d-b3099d85f6a1"
        },
        "item": {
          "id": "260883a1-a4f5-4c28-b404-f854587dc34c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6db30f03-ca23-4693-8b52-f2233c0a6b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ace5880-001d-4102-8fc9-589a8a3598ed",
        "cursor": {
          "ref": "9aea2d8d-b6d9-4bbc-8dca-20369314cdb1",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fee6c9a0-13e5-4fd5-97df-7d112f939e91"
        },
        "item": {
          "id": "7ace5880-001d-4102-8fc9-589a8a3598ed",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "90843309-52fa-4a9b-b39c-70a86abddadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c855c561-eeb1-464f-bce6-a27723df592e",
        "cursor": {
          "ref": "6514523c-a6c3-4df3-9202-470fa17820f8",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a80f1927-39e7-44fc-bd74-e9974433bc86"
        },
        "item": {
          "id": "c855c561-eeb1-464f-bce6-a27723df592e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d3c88883-e0dd-4791-a932-bda1c87eacee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0fba23-6e18-44b0-b0ff-55d34a49c935",
        "cursor": {
          "ref": "d9d6bc3b-45a8-4d70-b141-9105b157a79f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "15db2b91-65e8-485a-bb53-3d6b33c83f4c"
        },
        "item": {
          "id": "ed0fba23-6e18-44b0-b0ff-55d34a49c935",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "be04f36d-d3ab-4eb7-8540-46088e5376b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a3144d-fdde-4c71-932a-e8b72c938576",
        "cursor": {
          "ref": "4ca097d6-81fe-4087-a0cf-20056b22a78b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f18e26aa-46e9-49e4-9d0c-630a6cf43064"
        },
        "item": {
          "id": "97a3144d-fdde-4c71-932a-e8b72c938576",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6149adfe-ffe1-47d2-919c-bf758007bee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef3490b-10b2-4b9d-96ec-35f429ade867",
        "cursor": {
          "ref": "87135638-8097-4471-a285-624ccc45a9d2",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7baf35b4-b6b3-4870-92ce-a7a9eacd17d8"
        },
        "item": {
          "id": "bef3490b-10b2-4b9d-96ec-35f429ade867",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "70dac35b-1124-4587-bbd7-3413cc9530c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae358a8c-2b75-425a-b6c3-38283d974ee4",
        "cursor": {
          "ref": "deabbe81-80c0-47e4-b617-fc4bee390be0",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5e0ed377-8be2-4bd7-b86c-c99e7e344a86"
        },
        "item": {
          "id": "ae358a8c-2b75-425a-b6c3-38283d974ee4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d886a1dc-b84c-4ef9-aac3-4beaf54e6a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc790ce-8247-4542-810c-fa2a89a7ead6",
        "cursor": {
          "ref": "ed365e32-79fe-4a96-a98f-f4e5e0e1b056",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d22c87c5-d248-4132-bb73-7b470850fa02"
        },
        "item": {
          "id": "ffc790ce-8247-4542-810c-fa2a89a7ead6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "48874566-36b6-40f0-b209-216b83f5c383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1718e5b-e4be-48a1-b217-4ea2bf9ff705",
        "cursor": {
          "ref": "bf427a8f-d71a-428c-af40-076554c7b455",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "33db09a6-20d1-406f-ab4d-d2879745918e"
        },
        "item": {
          "id": "a1718e5b-e4be-48a1-b217-4ea2bf9ff705",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "41f173b4-6fa4-4fdc-927c-d1c236ce39a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c94c928-14e1-4452-8122-878a79544f54",
        "cursor": {
          "ref": "79387d53-b44a-46e6-ae8c-53717f3fa435",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "47ef7a55-efc9-4808-a9f2-a215504c7133"
        },
        "item": {
          "id": "7c94c928-14e1-4452-8122-878a79544f54",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dbe5db62-f847-461b-b495-53b2a09e756b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a18f0b6-a9fd-4e07-b62e-392921e99f2f",
        "cursor": {
          "ref": "78747377-82db-4e51-901f-c7ab0856d8fd",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f081d117-72e5-4e6b-9190-e49d0cb42e77"
        },
        "item": {
          "id": "3a18f0b6-a9fd-4e07-b62e-392921e99f2f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "24db5c55-004b-4e7a-9335-891d5b05ab77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787b6ed6-490c-48d9-8fb9-790004a550b9",
        "cursor": {
          "ref": "9cad40af-4e49-4970-aa42-b197ca03fd23",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2ce16f2f-88e8-4a75-853c-81f79c4e602b"
        },
        "item": {
          "id": "787b6ed6-490c-48d9-8fb9-790004a550b9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "26641575-68a2-490a-b44b-183b5be3da34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a76d1d-d199-40c8-9d59-5c96a881e8d9",
        "cursor": {
          "ref": "0c19b450-795d-4187-9186-bed0a7df3fd7",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "91a7f495-26b9-4e3e-bd41-2a6512133d6a"
        },
        "item": {
          "id": "11a76d1d-d199-40c8-9d59-5c96a881e8d9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b9258cf1-1acb-444e-8860-aebc52036099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1075621-c124-47e8-9b0c-a3bde1e9c0ce",
        "cursor": {
          "ref": "009657fd-e9ba-4959-b158-2f8c3b10a1e4",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1ce6f736-60a8-440a-b137-86efe39254d8"
        },
        "item": {
          "id": "c1075621-c124-47e8-9b0c-a3bde1e9c0ce",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2d7000e1-975c-4900-8873-004b1d54575d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1c7d4e-1dcb-4cec-b95a-9a8af85b5a50",
        "cursor": {
          "ref": "2198245e-5849-4e98-b7b6-bc4ed520d7b9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "78efbc55-d32c-42fc-b5b6-7499a4fda2d1"
        },
        "item": {
          "id": "fd1c7d4e-1dcb-4cec-b95a-9a8af85b5a50",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7027ba15-c9c0-4ff5-b2e2-aa4333d38ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a55945-ff9a-4491-a4a2-94d5672c0233",
        "cursor": {
          "ref": "db44fbdb-4496-45df-90f1-6404106e66f5",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "07a664c6-f839-4010-9719-5faac006a90e"
        },
        "item": {
          "id": "02a55945-ff9a-4491-a4a2-94d5672c0233",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9ebe8935-ea3d-4b07-b7fc-e261551ce4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442f043f-68df-4089-9c7d-8467f809bd73",
        "cursor": {
          "ref": "78e9ddab-eea3-48b3-b139-bf8772b63c87",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "24a0f077-a451-412f-8811-530ed561901a"
        },
        "item": {
          "id": "442f043f-68df-4089-9c7d-8467f809bd73",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2fca3a5e-f2fb-4bf4-824d-5cec767b7634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4423da90-7cf9-4f66-8dc1-c77d996fb8f6",
        "cursor": {
          "ref": "d61f6af0-f5cb-4ca7-8d1b-e75b5ed47081",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "29b94d99-f56e-4f9d-87ec-4b421aea8a61"
        },
        "item": {
          "id": "4423da90-7cf9-4f66-8dc1-c77d996fb8f6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cb4dda8c-73f6-459d-8a68-cda11dc86141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f839a22-d813-480b-8b43-edfa74b2e074",
        "cursor": {
          "ref": "7fefe319-86b6-4f43-82ee-3a64cec4a4e3",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2d7dbb44-907e-4f7e-8f38-1f816ad8ec0e"
        },
        "item": {
          "id": "2f839a22-d813-480b-8b43-edfa74b2e074",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6ddfb527-bef6-426e-8f1d-e62e9f46ea83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31057ca-bf36-44c1-832e-eb494981a31c",
        "cursor": {
          "ref": "a4aee6f8-1786-4b63-83cf-3852b7375ea3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6aaea786-9737-4149-9401-239a569b0b7d"
        },
        "item": {
          "id": "f31057ca-bf36-44c1-832e-eb494981a31c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "62ba94a3-7771-42e0-ac5a-ab8cf30b2c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba3b345-fb08-4571-8a75-d6890b3fda40",
        "cursor": {
          "ref": "35a4c34e-4169-4f50-8470-ec0688227790",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3eb9d1dd-cb83-41bd-88b8-231bf626e156"
        },
        "item": {
          "id": "8ba3b345-fb08-4571-8a75-d6890b3fda40",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6f4362c0-d8d1-4129-a25f-9ba222820b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473e6553-9021-4333-8c28-9a2cac44505a",
        "cursor": {
          "ref": "da4c6f87-3a81-40e1-9be4-8b0198f4f194",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7109279c-30b9-43ee-bef8-636db7c7d322"
        },
        "item": {
          "id": "473e6553-9021-4333-8c28-9a2cac44505a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d738c43a-b1fc-4cdb-b2e7-4612d16df9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec9948c-e0d8-4862-99a5-74b1a9108004",
        "cursor": {
          "ref": "385cd94f-9a3c-48ca-a699-c4755e80125d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "16ba4869-452b-4208-b407-99321d34c6da"
        },
        "item": {
          "id": "5ec9948c-e0d8-4862-99a5-74b1a9108004",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "94022ecb-f4d2-4de8-8d0f-21f4746f65f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a01a48-c882-45b2-87c5-c5dfca79a309",
        "cursor": {
          "ref": "f1f729d0-0a18-4ae7-b09a-cbebe916f1f3",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1f561805-a917-4346-ae7c-957d5646b73f"
        },
        "item": {
          "id": "82a01a48-c882-45b2-87c5-c5dfca79a309",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4231f1e1-5eb8-4626-9607-df11101cbe95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfcb6fa-f4b6-41c9-815d-52b66cbf631c",
        "cursor": {
          "ref": "e6c105e4-3ea2-4008-a0b9-541ba81b4a6a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f0cafc4a-c33a-4a42-919e-ee9b76873b5a"
        },
        "item": {
          "id": "adfcb6fa-f4b6-41c9-815d-52b66cbf631c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "03ae859a-2bfa-4a04-9d6b-8e0bd15d47da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5495a088-595b-49d6-94d9-e629fc5f7221",
        "cursor": {
          "ref": "3ecfcd69-b074-434d-9d76-b9b4cd876f93",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6061820a-a609-4c86-a4d4-0046ae0bf960"
        },
        "item": {
          "id": "5495a088-595b-49d6-94d9-e629fc5f7221",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "deb9697f-f887-441e-8b4c-93f1d23f5c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46930c45-e1c9-42a8-b30a-f4bf6144a7ed",
        "cursor": {
          "ref": "79cd7365-cb40-4840-95e4-dd622073327e",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "27167937-ce6b-4737-8df9-1dbfffbefe8a"
        },
        "item": {
          "id": "46930c45-e1c9-42a8-b30a-f4bf6144a7ed",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f04db990-0c60-4bf3-b2a4-9931c36d5802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2545f8-e53b-4e60-a320-48da149531c7",
        "cursor": {
          "ref": "b423ea69-80ea-4fce-b474-e9507c15e360",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "87850a64-37a5-4679-bf33-58ba19afe10e"
        },
        "item": {
          "id": "fc2545f8-e53b-4e60-a320-48da149531c7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1b8029b0-fafc-4feb-b920-c4aa8975b333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833031ea-0161-4445-9598-e129a9717a84",
        "cursor": {
          "ref": "ae9c57e3-29ce-48be-9aa5-8ae8de638cd1",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4ae9fa4a-151d-4b5c-be48-553c440e4702"
        },
        "item": {
          "id": "833031ea-0161-4445-9598-e129a9717a84",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "19b2ba3b-7a7f-4ff7-9165-63880facb89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce23eb-50a8-4159-950e-8bb022ba357c",
        "cursor": {
          "ref": "f418029c-d877-4d37-a497-452880cdcd5e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "89d78257-3be5-4fd1-9a9b-154229bfba3d"
        },
        "item": {
          "id": "79ce23eb-50a8-4159-950e-8bb022ba357c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "804bb0e4-1fbc-4f60-98bd-038db2f7d95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7891d062-a57b-4f10-8f18-76f8add710d2",
        "cursor": {
          "ref": "7eb2c343-8397-4bf4-ba4b-02a1507bc526",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c17eb47e-0117-4b32-8274-6ebc29cc5a9c"
        },
        "item": {
          "id": "7891d062-a57b-4f10-8f18-76f8add710d2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "916e6f41-0b19-46f3-a633-f47858196992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b138fd46-14b7-4622-a935-e7d40a8485d5",
        "cursor": {
          "ref": "7c2b2169-5faa-4d78-940a-61d1206e5b3d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "52f76d3f-32f2-4f5f-90e2-3bed3c2c2295"
        },
        "item": {
          "id": "b138fd46-14b7-4622-a935-e7d40a8485d5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "762ab9d2-b935-4b65-a5eb-4d912b4150fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f747ef3f-eb5e-4058-9aa0-429ae02880ad",
        "cursor": {
          "ref": "2ce8854b-2a30-4f17-98a0-862508394f3d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "598c9a11-7fcf-4dcf-b5eb-b839b1d082d5"
        },
        "item": {
          "id": "f747ef3f-eb5e-4058-9aa0-429ae02880ad",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "421b1b4b-cb10-4ca7-9c2f-d565e74d8746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707e8241-fefd-4140-81b5-1fbb681a7297",
        "cursor": {
          "ref": "17dfd01c-85c7-4073-8d56-e2152fde14d3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7eabd4fc-f508-4e32-bcfc-e312561885ac"
        },
        "item": {
          "id": "707e8241-fefd-4140-81b5-1fbb681a7297",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a881de07-5325-4dff-b4c1-cfeb3347045f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ee666f-5552-4201-a916-b05d6b7a46e5",
        "cursor": {
          "ref": "cff83500-9279-44e2-9f9f-1064e1ad3c20",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5f306e6c-71e9-439c-a93c-04211ee7e5c6"
        },
        "item": {
          "id": "43ee666f-5552-4201-a916-b05d6b7a46e5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "11ead00f-1cef-4303-a0b8-abfb91241fe8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061167a6-14f6-493d-96d6-ef359e310b01",
        "cursor": {
          "ref": "f2456e45-88a9-41b8-bec4-9bfee1dd7378",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a882dbed-b551-4a74-94d2-d473dc973c7b"
        },
        "item": {
          "id": "061167a6-14f6-493d-96d6-ef359e310b01",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7620bf93-bb3c-4ad6-b5ad-fcacdb2693d3",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ed0fa8-74d4-4c37-a13c-dcdc00ae7d43",
        "cursor": {
          "ref": "fe81e03a-175d-4284-9fc4-37e701404e4f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8ad2dfca-33d1-45a0-8aef-6a8934a44a16"
        },
        "item": {
          "id": "39ed0fa8-74d4-4c37-a13c-dcdc00ae7d43",
          "name": "credentials_verify"
        },
        "response": {
          "id": "45a6daec-98cc-4164-a28a-5f01692ae5b6",
          "status": "OK",
          "code": 200,
          "responseTime": 1821,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab061a9d-d7a2-4ddf-8ee2-60a903c2e9e6",
        "cursor": {
          "ref": "a400062f-63cd-429c-b326-f85685270a99",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9782c540-6124-4342-b91d-adb6c2d870be"
        },
        "item": {
          "id": "ab061a9d-d7a2-4ddf-8ee2-60a903c2e9e6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "63db867f-b1bc-44a0-8a50-cac941f63ae9",
          "status": "OK",
          "code": 200,
          "responseTime": 1781,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1118d7-cacd-4de1-b859-c570d45c9e62",
        "cursor": {
          "ref": "16a0a38e-d4d2-4aba-8a57-dc06770152f2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "99b147f3-485b-4f8a-ba83-b097f7e6128e"
        },
        "item": {
          "id": "5f1118d7-cacd-4de1-b859-c570d45c9e62",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b536cb15-0713-411d-9296-38a02276c584",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1118d7-cacd-4de1-b859-c570d45c9e62",
        "cursor": {
          "ref": "16a0a38e-d4d2-4aba-8a57-dc06770152f2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "99b147f3-485b-4f8a-ba83-b097f7e6128e"
        },
        "item": {
          "id": "5f1118d7-cacd-4de1-b859-c570d45c9e62",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b536cb15-0713-411d-9296-38a02276c584",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ba52af-e51b-48be-bb9f-4f88f10f29cc",
        "cursor": {
          "ref": "d0b2db48-e714-4809-8865-2c4c2e9863ad",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d487c6a7-9574-49b2-9595-01f23e1f70c0"
        },
        "item": {
          "id": "86ba52af-e51b-48be-bb9f-4f88f10f29cc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "31e2bdb0-eeb7-4dd9-821c-f70ef38c43e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3702ec4f-2e7f-4795-95d0-39ea9ff24f84",
        "cursor": {
          "ref": "930ac96f-3696-4a23-a2e6-282c04aec6d4",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2f81aaca-60e6-452a-b62c-0be4db82c2b5"
        },
        "item": {
          "id": "3702ec4f-2e7f-4795-95d0-39ea9ff24f84",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "17e74301-4c2a-4e69-99c4-40a7e7514a57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}